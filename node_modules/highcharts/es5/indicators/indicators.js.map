{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2021 Pawel Fus, Sebastian Bochan\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/indicators', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/SMA/SMAIndicator.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Chart, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var LineSeries = SeriesRegistry.seriesTypes.line;\n        var addEvent = U.addEvent, fireEvent = U.fireEvent, error = U.error, extend = U.extend, isArray = U.isArray, merge = U.merge, pick = U.pick, splat = U.splat;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SMA series type.\n         *\n         * @private\n         */\n        var SMAIndicator = /** @class */ (function (_super) {\n            __extends(SMAIndicator, _super);\n            function SMAIndicator() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.dataEventsToUnbind = void 0;\n                _this.linkedParent = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.destroy = function () {\n                this.dataEventsToUnbind.forEach(function (unbinder) {\n                    unbinder();\n                });\n                _super.prototype.destroy.apply(this, arguments);\n            };\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.getName = function () {\n                var params = [];\n                var name = this.name;\n                if (!name) {\n                    (this.nameComponents || []).forEach(function (component, index) {\n                        params.push(this.options.params[component] +\n                            pick(this.nameSuffixes[index], ''));\n                    }, this);\n                    name = (this.nameBase || this.type.toUpperCase()) +\n                        (this.nameComponents ? ' (' + params.join(', ') + ')' : '');\n                }\n                return name;\n            };\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.getValues = function (series, params) {\n                var period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal.length, SMA = [], xData = [], yData = [];\n                var i, index = -1, range = 0, SMAPoint, sum = 0;\n                if (xVal.length < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                while (range < period - 1) {\n                    sum += index < 0 ? yVal[range] : yVal[range][index];\n                    range++;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = range; i < yValLen; i++) {\n                    sum += index < 0 ? yVal[i] : yVal[i][index];\n                    SMAPoint = [xVal[i], sum / period];\n                    SMA.push(SMAPoint);\n                    xData.push(SMAPoint[0]);\n                    yData.push(SMAPoint[1]);\n                    sum -= (index < 0 ?\n                        yVal[i - range] :\n                        yVal[i - range][index]);\n                }\n                return {\n                    values: SMA,\n                    xData: xData,\n                    yData: yData\n                };\n            };\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.init = function (chart, options) {\n                var indicator = this;\n                _super.prototype.init.call(indicator, chart, options);\n                // Only after series are linked indicator can be processed.\n                var linkedSeriesUnbiner = addEvent(Chart, 'afterLinkSeries', function (_a) {\n                    var isUpdating = _a.isUpdating;\n                    // #18643 indicator shouldn't recalculate\n                    // values while series updating.\n                    if (isUpdating) {\n                        return;\n                    }\n                    var hasEvents = !!indicator.dataEventsToUnbind.length;\n                    if (indicator.linkedParent) {\n                        if (!hasEvents) {\n                            // No matter which indicator, always recalculate after\n                            // updating the data.\n                            indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent, 'updatedData', function () {\n                                indicator.recalculateValues();\n                            }));\n                            // Some indicators (like VBP) requires an additional\n                            // event (afterSetExtremes) to properly show the data.\n                            if (indicator.calculateOn.xAxis) {\n                                indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent.xAxis, indicator.calculateOn.xAxis, function () {\n                                    indicator.recalculateValues();\n                                }));\n                            }\n                        }\n                        // Most indicators are being calculated on chart's init.\n                        if (indicator.calculateOn.chart === 'init') {\n                            if (!indicator.processedYData) {\n                                indicator.recalculateValues();\n                            }\n                        }\n                        else if (!hasEvents) {\n                            // Some indicators (like VBP) has to recalculate their\n                            // values after other chart's events (render).\n                            var unbinder_1 = addEvent(indicator.chart, indicator.calculateOn.chart, function () {\n                                indicator.recalculateValues();\n                                // Call this just once.\n                                unbinder_1();\n                            });\n                        }\n                    }\n                    else {\n                        return error('Series ' +\n                            indicator.options.linkedTo +\n                            ' not found! Check `linkedTo`.', false, chart);\n                    }\n                }, {\n                    order: 0\n                });\n                // Make sure we find series which is a base for an indicator\n                // chart.linkSeries();\n                indicator.dataEventsToUnbind = [];\n                indicator.eventsToUnbind.push(linkedSeriesUnbiner);\n            };\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.recalculateValues = function () {\n                var croppedDataValues = [], indicator = this, oldData = indicator.points || [], oldDataLength = (indicator.xData || []).length, emptySet = {\n                    values: [],\n                    xData: [],\n                    yData: []\n                };\n                var overwriteData = true, oldFirstPointIndex, oldLastPointIndex, croppedData, min, max, i;\n                // Updating an indicator with redraw=false may destroy data.\n                // If there will be a following update for the parent series,\n                // we will try to access Series object without any properties\n                // (except for prototyped ones). This is what happens\n                // for example when using Axis.setDataGrouping(). See #16670\n                var processedData = indicator.linkedParent.options &&\n                    indicator.linkedParent.yData && // #18176, #18177 indicators should\n                    indicator.linkedParent.yData.length ? // work with empty dataset\n                    (indicator.getValues(indicator.linkedParent, indicator.options.params) || emptySet) : emptySet;\n                // We need to update points to reflect changes in all,\n                // x and y's, values. However, do it only for non-grouped\n                // data - grouping does it for us (#8572)\n                if (oldDataLength &&\n                    !indicator.hasGroupedData &&\n                    indicator.visible &&\n                    indicator.points) {\n                    // When data is cropped update only avaliable points (#9493)\n                    if (indicator.cropped) {\n                        if (indicator.xAxis) {\n                            min = indicator.xAxis.min;\n                            max = indicator.xAxis.max;\n                        }\n                        croppedData = indicator.cropData(processedData.xData, processedData.yData, min, max);\n                        for (i = 0; i < croppedData.xData.length; i++) {\n                            // (#10774)\n                            croppedDataValues.push([\n                                croppedData.xData[i]\n                            ].concat(splat(croppedData.yData[i])));\n                        }\n                        oldFirstPointIndex = processedData.xData.indexOf(indicator.xData[0]);\n                        oldLastPointIndex = processedData.xData.indexOf(indicator.xData[indicator.xData.length - 1]);\n                        // Check if indicator points should be shifted (#8572)\n                        if (oldFirstPointIndex === -1 &&\n                            oldLastPointIndex === processedData.xData.length - 2) {\n                            if (croppedDataValues[0][0] === oldData[0].x) {\n                                croppedDataValues.shift();\n                            }\n                        }\n                        indicator.updateData(croppedDataValues);\n                    }\n                    else if (indicator.updateAllPoints || // #18710\n                        // Omit addPoint() and removePoint() cases\n                        processedData.xData.length !== oldDataLength - 1 &&\n                            processedData.xData.length !== oldDataLength + 1) {\n                        overwriteData = false;\n                        indicator.updateData(processedData.values);\n                    }\n                }\n                if (overwriteData) {\n                    indicator.xData = processedData.xData;\n                    indicator.yData = processedData.yData;\n                    indicator.options.data = processedData.values;\n                }\n                // Removal of processedXData property is required because on\n                // first translate processedXData array is empty\n                if (indicator.calculateOn.xAxis && indicator.processedXData) {\n                    delete indicator.processedXData;\n                    indicator.isDirty = true;\n                    indicator.redraw();\n                }\n                indicator.isDirtyData = !!indicator.linkedSeries.length;\n                fireEvent(indicator, 'updatedData'); // #18689\n            };\n            /**\n             * @private\n             */\n            SMAIndicator.prototype.processData = function () {\n                var series = this, compareToMain = series.options.compareToMain, linkedParent = series.linkedParent;\n                _super.prototype.processData.apply(series, arguments);\n                if (series.dataModify &&\n                    linkedParent &&\n                    linkedParent.dataModify &&\n                    linkedParent.dataModify.compareValue &&\n                    compareToMain) {\n                    series.dataModify.compareValue =\n                        linkedParent.dataModify.compareValue;\n                }\n                return;\n            };\n            /**\n             * The parameter allows setting line series type and use OHLC indicators.\n             * Data in OHLC format is required.\n             *\n             * @sample {highstock} stock/indicators/use-ohlc-data\n             *         Use OHLC data format to plot line chart\n             *\n             * @type      {boolean}\n             * @product   highstock\n             * @apioption plotOptions.line.useOhlcData\n             */\n            /**\n             * Simple moving average indicator (SMA). This series requires `linkedTo`\n             * option to be set.\n             *\n             * @sample stock/indicators/sma\n             *         Simple moving average indicator\n             *\n             * @extends      plotOptions.line\n             * @since        6.0.0\n             * @excluding    allAreas, colorAxis, dragDrop, joinBy, keys,\n             *               navigatorOptions, pointInterval, pointIntervalUnit,\n             *               pointPlacement, pointRange, pointStart, showInNavigator,\n             *               stacking, useOhlcData\n             * @product      highstock\n             * @requires     stock/indicators/indicators\n             * @optionparent plotOptions.sma\n             */\n            SMAIndicator.defaultOptions = merge(LineSeries.defaultOptions, {\n                /**\n                 * The name of the series as shown in the legend, tooltip etc. If not\n                 * set, it will be based on a technical indicator type and default\n                 * params.\n                 *\n                 * @type {string}\n                 */\n                name: void 0,\n                tooltip: {\n                    /**\n                     * Number of decimals in indicator series.\n                     */\n                    valueDecimals: 4\n                },\n                /**\n                 * The main series ID that indicator will be based on. Required for this\n                 * indicator.\n                 *\n                 * @type {string}\n                 */\n                linkedTo: void 0,\n                /**\n                 * Whether to compare indicator to the main series values\n                 * or indicator values.\n                 *\n                 * @sample {highstock} stock/plotoptions/series-comparetomain/\n                 *         Difference between comparing SMA values to the main series\n                 *         and its own values.\n                 *\n                 * @type {boolean}\n                 */\n                compareToMain: false,\n                /**\n                 * Paramters used in calculation of regression series' points.\n                 */\n                params: {\n                    /**\n                     * The point index which indicator calculations will base. For\n                     * example using OHLC data, index=2 means the indicator will be\n                     * calculated using Low values.\n                     */\n                    index: 3,\n                    /**\n                     * The base period for indicator calculations. This is the number of\n                     * data points which are taken into account for the indicator\n                     * calculations.\n                     */\n                    period: 14\n                }\n            });\n            return SMAIndicator;\n        }(LineSeries));\n        extend(SMAIndicator.prototype, {\n            calculateOn: {\n                chart: 'init'\n            },\n            hasDerivedData: true,\n            nameComponents: ['period'],\n            nameSuffixes: [],\n            useCommonDataGrouping: true\n        });\n        SeriesRegistry.registerSeriesType('sma', SMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `SMA` series. If the [type](#series.sma.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.sma\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL, useOhlcData\n         * @requires  stock/indicators/indicators\n         * @apioption series.sma\n         */\n        (''); // adds doclet above to the transpiled file\n\n        return SMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/EMA/EMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var SMAIndicator = SeriesRegistry.seriesTypes.sma;\n        var correctFloat = U.correctFloat, isArray = U.isArray, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The EMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ema\n         *\n         * @augments Highcharts.Series\n         */\n        var EMAIndicator = /** @class */ (function (_super) {\n            __extends(EMAIndicator, _super);\n            function EMAIndicator() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            EMAIndicator.prototype.accumulatePeriodPoints = function (period, index, yVal) {\n                var sum = 0, i = 0, y = 0;\n                while (i < period) {\n                    y = index < 0 ? yVal[i] : yVal[i][index];\n                    sum = sum + y;\n                    i++;\n                }\n                return sum;\n            };\n            EMAIndicator.prototype.calculateEma = function (xVal, yVal, i, EMApercent, calEMA, index, SMA) {\n                var x = xVal[i - 1], yValue = index < 0 ?\n                    yVal[i - 1] :\n                    yVal[i - 1][index], y = typeof calEMA === 'undefined' ?\n                    SMA : correctFloat((yValue * EMApercent) +\n                    (calEMA * (1 - EMApercent)));\n                return [x, y];\n            };\n            EMAIndicator.prototype.getValues = function (series, params) {\n                var period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, EMApercent = 2 / (period + 1), EMA = [], xData = [], yData = [];\n                var calEMA, EMAPoint, i, index = -1, sum = 0, SMA = 0;\n                // Check period, if bigger than points length, skip\n                if (yValLen < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                sum = this.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                SMA = sum / period;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 1; i++) {\n                    EMAPoint = this.calculateEma(xVal, yVal, i, EMApercent, calEMA, index, SMA);\n                    EMA.push(EMAPoint);\n                    xData.push(EMAPoint[0]);\n                    yData.push(EMAPoint[1]);\n                    calEMA = EMAPoint[1];\n                }\n                return {\n                    values: EMA,\n                    xData: xData,\n                    yData: yData\n                };\n            };\n            /**\n             * Exponential moving average indicator (EMA). This series requires the\n             * `linkedTo` option to be set.\n             *\n             * @sample stock/indicators/ema\n             * Exponential moving average indicator\n             *\n             * @extends      plotOptions.sma\n             * @since        6.0.0\n             * @product      highstock\n             * @requires     stock/indicators/indicators\n             * @optionparent plotOptions.ema\n             */\n            EMAIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n                params: {\n                    /**\n                     * The point index which indicator calculations will base. For\n                     * example using OHLC data, index=2 means the indicator will be\n                     * calculated using Low values.\n                     *\n                     * By default index value used to be set to 0. Since\n                     * Highcharts Stock 7 by default index is set to 3\n                     * which means that the ema indicator will be\n                     * calculated using Close values.\n                     */\n                    index: 3,\n                    period: 9 // @merge 14 in v6.2\n                }\n            });\n            return EMAIndicator;\n        }(SMAIndicator));\n        SeriesRegistry.registerSeriesType('ema', EMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `EMA` series. If the [type](#series.ema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ema\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @apioption series.ema\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return EMAIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/indicators.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","Chart","SeriesRegistry","U","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","LineSeries","seriesTypes","line","addEvent","fireEvent","error","extend","isArray","merge","pick","splat","SMAIndicator","_super","_this","arguments","data","dataEventsToUnbind","linkedParent","options","points","destroy","forEach","unbinder","getName","params","name","nameComponents","component","index","push","nameSuffixes","nameBase","type","toUpperCase","join","getValues","series","i","SMAPoint","period","xVal","xData","yVal","yData","yValLen","length","SMA","range","sum","values","init","chart","indicator","linkedSeriesUnbiner","_a","isUpdating","hasEvents","linkedTo","recalculateValues","calculateOn","xAxis","processedYData","unbinder_1","order","eventsToUnbind","oldFirstPointIndex","oldLastPointIndex","croppedData","min","max","croppedDataValues","oldData","oldDataLength","overwriteData","processedData","hasGroupedData","visible","cropped","cropData","concat","indexOf","x","shift","updateData","updateAllPoints","processedXData","isDirty","redraw","isDirtyData","linkedSeries","processData","compareToMain","dataModify","compareValue","defaultOptions","tooltip","valueDecimals","hasDerivedData","useCommonDataGrouping","registerSeriesType","sma","correctFloat","EMAIndicator","accumulatePeriodPoints","calculateEma","EMApercent","calEMA","yValue","EMAPoint","EMA"],"mappings":"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"}