{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2021 Pawe≈Ç Fus\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/stochastic', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/ArrayUtilities.js', [], function () {\n        /**\n         *\n         *  (c) 2010-2021 Pawel Fus & Daniel Studencki\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get extremes of array filled by OHLC data.\n         *\n         * @private\n         *\n         * @param {Array<Array<number>>} arr\n         * Array of OHLC points (arrays).\n         *\n         * @param {number} minIndex\n         * Index of \"low\" value in point array.\n         *\n         * @param {number} maxIndex\n         * Index of \"high\" value in point array.\n         *\n         * @return {Array<number,number>}\n         * Returns array with min and max value.\n         */\n        function getArrayExtremes(arr, minIndex, maxIndex) {\n            return arr.reduce(function (prev, target) { return [\n                Math.min(prev[0], target[minIndex]),\n                Math.max(prev[1], target[maxIndex])\n            ]; }, [Number.MAX_VALUE, -Number.MAX_VALUE]);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ArrayUtilities = {\n            getArrayExtremes: getArrayExtremes\n        };\n\n        return ArrayUtilities;\n    });\n    _registerModule(_modules, 'Stock/Indicators/MultipleLinesComposition.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2021 Wojciech Chmiel\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var smaProto = SeriesRegistry.seriesTypes.sma.prototype;\n        var defined = U.defined, error = U.error, merge = U.merge;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var MultipleLinesComposition;\n        (function (MultipleLinesComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n            *\n            *  Constants\n            *\n            * */\n            var composedMembers = [];\n            /**\n             * Additional lines DOCS names. Elements of linesApiNames array should\n             * be consistent with DOCS line names defined in your implementation.\n             * Notice that linesApiNames should have decreased amount of elements\n             * relative to pointArrayMap (without pointValKey).\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            var linesApiNames = ['bottomLine'];\n            /**\n             * Lines ids. Required to plot appropriate amount of lines.\n             * Notice that pointArrayMap should have more elements than\n             * linesApiNames, because it contains main line and additional lines ids.\n             * Also it should be consistent with amount of lines calculated in\n             * getValues method from your implementation.\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            var pointArrayMap = ['top', 'bottom'];\n            /**\n             * Names of the lines, bewteen which the area should be plotted.\n             * If the drawing of the area should\n             * be disabled for some indicators, leave this option as an empty array.\n             * Names should be the same as the names in the pointArrayMap.\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            var areaLinesNames = ['top'];\n            /**\n             * Main line id.\n             *\n             * @private\n             * @type {string}\n             */\n            var pointValKey = 'top';\n            /* *\n            *\n            *  Functions\n            *\n            * */\n            /**\n             * Composition useful for all indicators that have more than one line.\n             * Compose it with your implementation where you will provide the\n             * `getValues` method appropriate to your indicator and `pointArrayMap`,\n             * `pointValKey`, `linesApiNames` properties. Notice that `pointArrayMap`\n             * should be consistent with the amount of lines calculated in the\n             * `getValues` method.\n             *\n             * @private\n             */\n            function compose(IndicatorClass) {\n                if (U.pushUnique(composedMembers, IndicatorClass)) {\n                    var proto = IndicatorClass.prototype;\n                    proto.linesApiNames = (proto.linesApiNames ||\n                        linesApiNames.slice());\n                    proto.pointArrayMap = (proto.pointArrayMap ||\n                        pointArrayMap.slice());\n                    proto.pointValKey = (proto.pointValKey ||\n                        pointValKey);\n                    proto.areaLinesNames = (proto.areaLinesNames ||\n                        areaLinesNames.slice());\n                    proto.drawGraph = indicatorDrawGraph;\n                    proto.getGraphPath = indicatorGetGraphPath;\n                    proto.toYData = indicatorToYData;\n                    proto.translate = indicatorTranslate;\n                }\n                return IndicatorClass;\n            }\n            MultipleLinesComposition.compose = compose;\n            /**\n             * Generate the API name of the line\n             *\n             * @private\n             * @param propertyName name of the line\n             */\n            function getLineName(propertyName) {\n                return ('plot' +\n                    propertyName.charAt(0).toUpperCase() +\n                    propertyName.slice(1));\n            }\n            /**\n             * Create translatedLines Collection based on pointArrayMap.\n             *\n             * @private\n             * @param {string} [excludedValue]\n             *        Main line id\n             * @return {Array<string>}\n             *         Returns translated lines names without excluded value.\n             */\n            function getTranslatedLinesNames(indicator, excludedValue) {\n                var translatedLines = [];\n                (indicator.pointArrayMap || []).forEach(function (propertyName) {\n                    if (propertyName !== excludedValue) {\n                        translatedLines.push(getLineName(propertyName));\n                    }\n                });\n                return translatedLines;\n            }\n            /**\n             * Draw main and additional lines.\n             *\n             * @private\n             */\n            function indicatorDrawGraph() {\n                var indicator = this, pointValKey = indicator.pointValKey, linesApiNames = indicator.linesApiNames, areaLinesNames = indicator.areaLinesNames, mainLinePoints = indicator.points, mainLineOptions = indicator.options, mainLinePath = indicator.graph, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, \n                // additional lines point place holders:\n                secondaryLines = [], secondaryLinesNames = getTranslatedLinesNames(indicator, pointValKey);\n                var pointsLength = mainLinePoints.length, point;\n                // Generate points for additional lines:\n                secondaryLinesNames.forEach(function (plotLine, index) {\n                    // create additional lines point place holders\n                    secondaryLines[index] = [];\n                    while (pointsLength--) {\n                        point = mainLinePoints[pointsLength];\n                        secondaryLines[index].push({\n                            x: point.x,\n                            plotX: point.plotX,\n                            plotY: point[plotLine],\n                            isNull: !defined(point[plotLine])\n                        });\n                    }\n                    pointsLength = mainLinePoints.length;\n                });\n                // Modify options and generate area fill:\n                if (indicator.userOptions.fillColor && areaLinesNames.length) {\n                    var index = secondaryLinesNames.indexOf(getLineName(areaLinesNames[0])), secondLinePoints = secondaryLines[index], firstLinePoints = areaLinesNames.length === 1 ?\n                        mainLinePoints :\n                        secondaryLines[secondaryLinesNames.indexOf(getLineName(areaLinesNames[1]))], originalColor = indicator.color;\n                    indicator.points = firstLinePoints;\n                    indicator.nextPoints = secondLinePoints;\n                    indicator.color = indicator.userOptions.fillColor;\n                    indicator.options = merge(mainLinePoints, gappedExtend);\n                    indicator.graph = indicator.area;\n                    indicator.fillGraph = true;\n                    smaProto.drawGraph.call(indicator);\n                    indicator.area = indicator.graph;\n                    // Clean temporary properties:\n                    delete indicator.nextPoints;\n                    delete indicator.fillGraph;\n                    indicator.color = originalColor;\n                }\n                // Modify options and generate additional lines:\n                linesApiNames.forEach(function (lineName, i) {\n                    if (secondaryLines[i]) {\n                        indicator.points = secondaryLines[i];\n                        if (mainLineOptions[lineName]) {\n                            indicator.options = merge(mainLineOptions[lineName].styles, gappedExtend);\n                        }\n                        else {\n                            error('Error: \"There is no ' + lineName +\n                                ' in DOCS options declared. Check if linesApiNames' +\n                                ' are consistent with your DOCS line names.\"');\n                        }\n                        indicator.graph = indicator['graph' + lineName];\n                        smaProto.drawGraph.call(indicator);\n                        // Now save lines:\n                        indicator['graph' + lineName] = indicator.graph;\n                    }\n                    else {\n                        error('Error: \"' + lineName + ' doesn\\'t have equivalent ' +\n                            'in pointArrayMap. To many elements in linesApiNames ' +\n                            'relative to pointArrayMap.\"');\n                    }\n                });\n                // Restore options and draw a main line:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.graph = mainLinePath;\n                smaProto.drawGraph.call(indicator);\n            }\n            /**\n             * Create the path based on points provided as argument.\n             * If indicator.nextPoints option is defined, create the areaFill.\n             *\n             * @private\n             * @param points Points on which the path should be created\n             */\n            function indicatorGetGraphPath(points) {\n                var areaPath, path = [], higherAreaPath = [];\n                points = points || this.points;\n                // Render Span\n                if (this.fillGraph && this.nextPoints) {\n                    areaPath = smaProto.getGraphPath.call(this, this.nextPoints);\n                    if (areaPath && areaPath.length) {\n                        areaPath[0][0] = 'L';\n                        path = smaProto.getGraphPath.call(this, points);\n                        higherAreaPath = areaPath.slice(0, path.length);\n                        // Reverse points, so that the areaFill will start from the end:\n                        for (var i = higherAreaPath.length - 1; i >= 0; i--) {\n                            path.push(higherAreaPath[i]);\n                        }\n                    }\n                }\n                else {\n                    path = smaProto.getGraphPath.apply(this, arguments);\n                }\n                return path;\n            }\n            /**\n             * @private\n             * @param {Highcharts.Point} point\n             *        Indicator point\n             * @return {Array<number>}\n             *         Returns point Y value for all lines\n             */\n            function indicatorToYData(point) {\n                var pointColl = [];\n                (this.pointArrayMap || []).forEach(function (propertyName) {\n                    pointColl.push(point[propertyName]);\n                });\n                return pointColl;\n            }\n            /**\n             * Add lines plot pixel values.\n             *\n             * @private\n             */\n            function indicatorTranslate() {\n                var _this = this;\n                var pointArrayMap = this.pointArrayMap;\n                var LinesNames = [], value;\n                LinesNames = getTranslatedLinesNames(this);\n                smaProto.translate.apply(this, arguments);\n                this.points.forEach(function (point) {\n                    pointArrayMap.forEach(function (propertyName, i) {\n                        value = point[propertyName];\n                        // If the modifier, like for example compare exists,\n                        // modified the original value by that method, #15867.\n                        if (_this.dataModify) {\n                            value = _this.dataModify.modifyValue(value);\n                        }\n                        if (value !== null) {\n                            point[LinesNames[i]] = _this.yAxis.toPixels(value, true);\n                        }\n                    });\n                });\n            }\n        })(MultipleLinesComposition || (MultipleLinesComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return MultipleLinesComposition;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Stochastic/StochasticIndicator.js', [_modules['Stock/Indicators/ArrayUtilities.js'], _modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AU, MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var SMAIndicator = SeriesRegistry.seriesTypes.sma;\n        var extend = U.extend, isArray = U.isArray, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Stochastic series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.stochastic\n         *\n         * @augments Highcharts.Series\n         */\n        var StochasticIndicator = /** @class */ (function (_super) {\n            __extends(StochasticIndicator, _super);\n            function StochasticIndicator() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            StochasticIndicator.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    smoothedLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            };\n            StochasticIndicator.prototype.getValues = function (series, params) {\n                var periodK = params.periods[0], periodD = params.periods[1], xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-%K, 2-%D\n                SO = [], xData = [], yData = [], close = 3, low = 2, high = 1;\n                var slicedY, CL, HL, LL, K, D = null, points, extremes, i;\n                // Stochastic requires close value\n                if (yValLen < periodK ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // If the value of initial points is constant, wait until it changes\n                // to calculate correct Stochastic values\n                var constantValues = true, j = 0;\n                // For a N-period, we start from N-1 point, to calculate Nth point\n                // That is why we later need to comprehend slice() elements list\n                // with (+1)\n                for (i = periodK - 1; i < yValLen; i++) {\n                    slicedY = yVal.slice(i - periodK + 1, i + 1);\n                    // Calculate %K\n                    extremes = AU.getArrayExtremes(slicedY, low, high);\n                    LL = extremes[0]; // Lowest low in %K periods\n                    CL = yVal[i][close] - LL;\n                    HL = extremes[1] - LL;\n                    K = CL / HL * 100;\n                    if (isNaN(K) && constantValues) {\n                        j++;\n                        continue;\n                    }\n                    else if (constantValues && !isNaN(K)) {\n                        constantValues = false;\n                    }\n                    var length_1 = xData.push(xVal[i]);\n                    // If N-period previous values are constant which results in NaN %K,\n                    // we need to use previous %K value if it is a number,\n                    // otherwise we should use null\n                    if (isNaN(K)) {\n                        yData.push([\n                            yData[length_1 - 2] &&\n                                typeof yData[length_1 - 2][0] === 'number' ?\n                                yData[length_1 - 2][0] : null,\n                            null\n                        ]);\n                    }\n                    else {\n                        yData.push([K, null]);\n                    }\n                    // Calculate smoothed %D, which is SMA of %K\n                    if (i >= j + (periodK - 1) + (periodD - 1)) {\n                        points = _super.prototype.getValues.call(this, {\n                            xData: xData.slice(-periodD),\n                            yData: yData.slice(-periodD)\n                        }, {\n                            period: periodD\n                        });\n                        D = points.yData[0];\n                    }\n                    SO.push([xVal[i], K, D]);\n                    yData[length_1 - 1][1] = D;\n                }\n                return {\n                    values: SO,\n                    xData: xData,\n                    yData: yData\n                };\n            };\n            /**\n             * Stochastic oscillator. This series requires the `linkedTo` option to be\n             * set and should be loaded after the `stock/indicators/indicators.js` file.\n             *\n             * @sample stock/indicators/stochastic\n             *         Stochastic oscillator\n             *\n             * @extends      plotOptions.sma\n             * @since        6.0.0\n             * @product      highstock\n             * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n             *               pointInterval, pointIntervalUnit, pointPlacement,\n             *               pointRange, pointStart, showInNavigator, stacking\n             * @requires     stock/indicators/indicators\n             * @requires     stock/indicators/stochastic\n             * @optionparent plotOptions.stochastic\n             */\n            StochasticIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n                /**\n                 * @excluding index, period\n                 */\n                params: {\n                    // Index and period are unchangeable, do not inherit (#15362)\n                    index: void 0,\n                    period: void 0,\n                    /**\n                     * Periods for Stochastic oscillator: [%K, %D].\n                     *\n                     * @type    {Array<number,number>}\n                     * @default [14, 3]\n                     */\n                    periods: [14, 3]\n                },\n                marker: {\n                    enabled: false\n                },\n                tooltip: {\n                    pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'\n                },\n                /**\n                 * Smoothed line options.\n                 */\n                smoothedLine: {\n                    /**\n                     * Styles for a smoothed line.\n                     */\n                    styles: {\n                        /**\n                         * Pixel width of the line.\n                         */\n                        lineWidth: 1,\n                        /**\n                         * Color of the line. If not set, it's inherited from\n                         * [plotOptions.stochastic.color\n                         * ](#plotOptions.stochastic.color).\n                         *\n                         * @type {Highcharts.ColorString}\n                         */\n                        lineColor: void 0\n                    }\n                },\n                dataGrouping: {\n                    approximation: 'averages'\n                }\n            });\n            return StochasticIndicator;\n        }(SMAIndicator));\n        extend(StochasticIndicator.prototype, {\n            areaLinesNames: [],\n            nameComponents: ['periods'],\n            nameBase: 'Stochastic',\n            pointArrayMap: ['y', 'smoothed'],\n            parallelArrays: ['x', 'y', 'smoothed'],\n            pointValKey: 'y',\n            linesApiNames: ['smoothedLine']\n        });\n        MultipleLinesComposition.compose(StochasticIndicator);\n        SeriesRegistry.registerSeriesType('stochastic', StochasticIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Stochastic indicator. If the [type](#series.stochastic.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.stochastic\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis,  dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/stochastic\n         * @apioption series.stochastic\n         */\n        ''; // to include the above in the js output\n\n        return StochasticIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/stochastic.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","getArrayExtremes","arr","minIndex","maxIndex","reduce","prev","target","Math","min","max","Number","MAX_VALUE","SeriesRegistry","U","MultipleLinesComposition","smaProto","seriesTypes","sma","prototype","defined","error","merge","composedMembers","linesApiNames","pointArrayMap","areaLinesNames","getLineName","propertyName","charAt","toUpperCase","slice","getTranslatedLinesNames","indicator","excludedValue","translatedLines","forEach","push","indicatorDrawGraph","point","pointValKey","mainLinePoints","points","mainLineOptions","options","mainLinePath","graph","gappedExtend","gapSize","secondaryLines","secondaryLinesNames","pointsLength","length","plotLine","index","x","plotX","plotY","isNull","userOptions","fillColor","secondLinePoints","indexOf","firstLinePoints","originalColor","color","nextPoints","area","fillGraph","drawGraph","call","lineName","i","styles","indicatorGetGraphPath","areaPath","higherAreaPath","getGraphPath","arguments","indicatorToYData","pointColl","indicatorTranslate","value","_this","LinesNames","translate","dataModify","modifyValue","yAxis","toPixels","compose","IndicatorClass","pushUnique","proto","toYData","AU","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","TypeError","String","__","constructor","create","SMAIndicator","extend","isArray","StochasticIndicator","_super","data","init","smoothedLine","lineColor","getValues","series","params","slicedY","LL","K","extremes","periodK","periods","periodD","xVal","xData","yVal","yData","yValLen","SO","D","constantValues","j","isNaN","CL","length_1","period","values","defaultOptions","marker","enabled","tooltip","pointFormat","lineWidth","dataGrouping","approximation","nameComponents","nameBase","parallelArrays","registerSeriesType"],"mappings":"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"}