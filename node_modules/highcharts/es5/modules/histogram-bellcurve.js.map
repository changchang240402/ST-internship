{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.2.0 (2023-10-30)\n *\n * (c) 2010-2021 Highsoft AS\n * Author: Sebastian Domas\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/histogram-bellcurve', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/DerivedComposition.js', [_modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (H, Series, U) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var noop = H.noop;\n        var addEvent = U.addEvent, defined = U.defined;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Provides methods for auto setting/updating series data based on the based\n         * series data.\n         * @private\n         */\n        var DerivedComposition;\n        (function (DerivedComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedMembers = [];\n            DerivedComposition.hasDerivedData = true;\n            /**\n             * Method to be implemented - inside the method the series has already\n             * access to the base series via m `this.baseSeries` and the bases data is\n             * initialised. It should return data in the format accepted by\n             * `Series.setData()` method\n             * @private\n             */\n            DerivedComposition.setDerivedData = noop;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (U.pushUnique(composedMembers, SeriesClass)) {\n                    var seriesProto = SeriesClass.prototype;\n                    seriesProto.addBaseSeriesEvents = addBaseSeriesEvents;\n                    seriesProto.addEvents = addEvents;\n                    seriesProto.destroy = destroy;\n                    seriesProto.init = init;\n                    seriesProto.setBaseSeries = setBaseSeries;\n                }\n                return SeriesClass;\n            }\n            DerivedComposition.compose = compose;\n            /**\n             * Initialise series\n             * @private\n             */\n            function init() {\n                Series.prototype.init.apply(this, arguments);\n                this.initialised = false;\n                this.baseSeries = null;\n                this.eventRemovers = [];\n                this.addEvents();\n            }\n            DerivedComposition.init = init;\n            /**\n             * Sets base series for the series\n             * @private\n             */\n            function setBaseSeries() {\n                var chart = this.chart, baseSeriesOptions = this.options.baseSeries, baseSeries = (defined(baseSeriesOptions) &&\n                    (chart.series[baseSeriesOptions] ||\n                        chart.get(baseSeriesOptions)));\n                this.baseSeries = baseSeries || null;\n            }\n            DerivedComposition.setBaseSeries = setBaseSeries;\n            /**\n             * Adds events for the series\n             * @private\n             */\n            function addEvents() {\n                var _this = this;\n                this.eventRemovers.push(addEvent(this.chart, 'afterLinkSeries', function () {\n                    _this.setBaseSeries();\n                    if (_this.baseSeries && !_this.initialised) {\n                        _this.setDerivedData();\n                        _this.addBaseSeriesEvents();\n                        _this.initialised = true;\n                    }\n                }));\n            }\n            DerivedComposition.addEvents = addEvents;\n            /**\n             * Adds events to the base series - it required for recalculating the data\n             * in the series if the base series is updated / removed / etc.\n             * @private\n             */\n            function addBaseSeriesEvents() {\n                var _this = this;\n                this.eventRemovers.push(addEvent(this.baseSeries, 'updatedData', function () {\n                    _this.setDerivedData();\n                }), addEvent(this.baseSeries, 'destroy', function () {\n                    _this.baseSeries = null;\n                    _this.initialised = false;\n                }));\n            }\n            DerivedComposition.addBaseSeriesEvents = addBaseSeriesEvents;\n            /**\n             * Destroys the series\n             * @private\n             */\n            function destroy() {\n                this.eventRemovers.forEach(function (remover) {\n                    remover();\n                });\n                Series.prototype.destroy.apply(this, arguments);\n            }\n            DerivedComposition.destroy = destroy;\n        })(DerivedComposition || (DerivedComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DerivedComposition;\n    });\n    _registerModule(_modules, 'Series/Histogram/HistogramSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  Copyright (c) 2010-2021 Highsoft AS\n         *  Author: Sebastian Domas\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A histogram is a column series which represents the distribution of the\n         * data set in the base series. Histogram splits data into bins and shows\n         * their frequencies.\n         *\n         * @sample {highcharts} highcharts/demo/histogram/\n         *         Histogram\n         *\n         * @extends      plotOptions.column\n         * @excluding    boostThreshold, dragDrop, pointInterval, pointIntervalUnit,\n         *               stacking, boostBlending\n         * @product      highcharts\n         * @since        6.0.0\n         * @requires     modules/histogram\n         * @optionparent plotOptions.histogram\n         */\n        var HistogramSeriesDefaults = {\n            /**\n             * A preferable number of bins. It is a suggestion, so a histogram may\n             * have a different number of bins. By default it is set to the square\n             * root of the base series' data length. Available options are:\n             * `square-root`, `sturges`, `rice`. You can also define a function\n             * which takes a `baseSeries` as a parameter and should return a\n             * positive integer.\n             *\n             * @type {\"square-root\"|\"sturges\"|\"rice\"|number|Function}\n             */\n            binsNumber: 'square-root',\n            /**\n             * Width of each bin. By default the bin's width is calculated as\n             * `(max - min) / number of bins`. This option takes precedence over\n             * [binsNumber](#plotOptions.histogram.binsNumber).\n             *\n             * @type {number}\n             */\n            binWidth: void 0,\n            pointPadding: 0,\n            groupPadding: 0,\n            grouping: false,\n            pointPlacement: 'between',\n            tooltip: {\n                headerFormat: '',\n                pointFormat: ('<span style=\"font-size: 0.8em\">{point.x} - {point.x2}' +\n                    '</span><br/>' +\n                    '<span style=\"color:{point.color}\">\\u25CF</span>' +\n                    ' {series.name} <b>{point.y}</b><br/>')\n            }\n        };\n        /**\n         * A `histogram` series. If the [type](#series.histogram.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.histogram\n         * @excluding data, dataParser, dataURL, boostThreshold, boostBlending\n         * @product   highcharts\n         * @since     6.0.0\n         * @requires  modules/histogram\n         * @apioption series.histogram\n         */\n        /**\n         * An integer identifying the index to use for the base series, or a string\n         * representing the id of the series.\n         *\n         * @type      {number|string}\n         * @apioption series.histogram.baseSeries\n         */\n        ''; // keeps doclets above separate\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HistogramSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Histogram/HistogramSeries.js', [_modules['Series/DerivedComposition.js'], _modules['Series/Histogram/HistogramSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (DerivedComposition, HistogramSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  Copyright (c) 2010-2021 Highsoft AS\n         *  Author: Sebastian Domas\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var arrayMax = U.arrayMax, arrayMin = U.arrayMin, correctFloat = U.correctFloat, extend = U.extend, isNumber = U.isNumber, merge = U.merge, objectEach = U.objectEach;\n        /* ************************************************************************** *\n         *  HISTOGRAM\n         * ************************************************************************** */\n        /**\n         * A dictionary with formulas for calculating number of bins based on the\n         * base series\n         **/\n        var binsNumberFormulas = {\n            'square-root': function (baseSeries) {\n                return Math.ceil(Math.sqrt(baseSeries.options.data.length));\n            },\n            'sturges': function (baseSeries) {\n                return Math.ceil(Math.log(baseSeries.options.data.length) * Math.LOG2E);\n            },\n            'rice': function (baseSeries) {\n                return Math.ceil(2 * Math.pow(baseSeries.options.data.length, 1 / 3));\n            }\n        };\n        /**\n         * Returns a function for mapping number to the closed (right opened) bins\n         * @private\n         * @param {Array<number>} bins\n         * Width of the bins\n         */\n        function fitToBinLeftClosed(bins) {\n            return function (y) {\n                var i = 1;\n                while (bins[i] <= y) {\n                    i++;\n                }\n                return bins[--i];\n            };\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Histogram class\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.histogram\n         * @augments Highcharts.Series\n         */\n        var HistogramSeries = /** @class */ (function (_super) {\n            __extends(HistogramSeries, _super);\n            function HistogramSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                _this.userOptions = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            HistogramSeries.prototype.binsNumber = function () {\n                var binsNumberOption = this.options.binsNumber;\n                var binsNumber = binsNumberFormulas[binsNumberOption] ||\n                    // #7457\n                    (typeof binsNumberOption === 'function' && binsNumberOption);\n                return Math.ceil((binsNumber && binsNumber(this.baseSeries)) ||\n                    (isNumber(binsNumberOption) ?\n                        binsNumberOption :\n                        binsNumberFormulas['square-root'](this.baseSeries)));\n            };\n            HistogramSeries.prototype.derivedData = function (baseData, binsNumber, binWidth) {\n                var series = this, max = correctFloat(arrayMax(baseData)), \n                // Float correction needed, because first frequency value is not\n                // corrected when generating frequencies (within for loop).\n                min = correctFloat(arrayMin(baseData)), frequencies = [], bins = {}, data = [];\n                var x;\n                binWidth = series.binWidth = (correctFloat(isNumber(binWidth) ?\n                    (binWidth || 1) :\n                    (max - min) / binsNumber));\n                // #12077 negative pointRange causes wrong calculations,\n                // browser hanging.\n                series.options.pointRange = Math.max(binWidth, 0);\n                // If binWidth is 0 then max and min are equaled,\n                // increment the x with some positive value to quit the loop\n                for (x = min; \n                // This condition is needed because of the margin of error while\n                // operating on decimal numbers. Without that, additional bin\n                // was sometimes noticeable on the graph, because of too small\n                // precision of float correction.\n                x < max &&\n                    (series.userOptions.binWidth ||\n                        correctFloat(max - x) >= binWidth ||\n                        // #13069 - Every add and subtract operation should\n                        // be corrected, due to general problems with\n                        // operations on float numbers in JS.\n                        correctFloat(correctFloat(min + (frequencies.length * binWidth)) -\n                            x) <= 0); x = correctFloat(x + binWidth)) {\n                    frequencies.push(x);\n                    bins[x] = 0;\n                }\n                if (bins[min] !== 0) {\n                    frequencies.push(min);\n                    bins[min] = 0;\n                }\n                var fitToBin = fitToBinLeftClosed(frequencies.map(function (elem) { return parseFloat(elem); }));\n                for (var _i = 0, baseData_1 = baseData; _i < baseData_1.length; _i++) {\n                    var y = baseData_1[_i];\n                    bins[correctFloat(fitToBin(y))]++;\n                }\n                for (var _a = 0, _b = Object.keys(bins); _a < _b.length; _a++) {\n                    var key = _b[_a];\n                    data.push({\n                        x: Number(key),\n                        y: bins[key],\n                        x2: correctFloat(Number(x) + binWidth)\n                    });\n                }\n                data.sort(function (a, b) { return (a.x - b.x); });\n                data[data.length - 1].x2 = max;\n                return data;\n            };\n            HistogramSeries.prototype.setDerivedData = function () {\n                var yData = this.baseSeries.yData;\n                if (!yData.length) {\n                    this.setData([]);\n                    return;\n                }\n                var data = this.derivedData(yData, this.binsNumber(), this.options.binWidth);\n                this.setData(data, false);\n            };\n            HistogramSeries.defaultOptions = merge(ColumnSeries.defaultOptions, HistogramSeriesDefaults);\n            return HistogramSeries;\n        }(ColumnSeries));\n        extend(HistogramSeries.prototype, {\n            hasDerivedData: DerivedComposition.hasDerivedData\n        });\n        DerivedComposition.compose(HistogramSeries);\n        SeriesRegistry.registerSeriesType('histogram', HistogramSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HistogramSeries;\n    });\n    _registerModule(_modules, 'Series/Bellcurve/BellcurveSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Highsoft AS\n         *\n         *  Author: Sebastian Domas\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Optiions\n         *\n         * */\n        /**\n         * A bell curve is an areaspline series which represents the probability\n         * density function of the normal distribution. It calculates mean and\n         * standard deviation of the base series data and plots the curve according\n         * to the calculated parameters.\n         *\n         * @sample {highcharts} highcharts/demo/bellcurve/\n         *         Bell curve\n         *\n         * @extends      plotOptions.areaspline\n         * @since        6.0.0\n         * @product      highcharts\n         * @excluding    boostThreshold, connectNulls, dragDrop, stacking,\n         *               pointInterval, pointIntervalUnit\n         * @requires     modules/bellcurve\n         * @optionparent plotOptions.bellcurve\n         */\n        var BellcurveSeriesDefaults = {\n            /**\n             * @see [fillColor](#plotOptions.bellcurve.fillColor)\n             * @see [fillOpacity](#plotOptions.bellcurve.fillOpacity)\n             *\n             * @apioption plotOptions.bellcurve.color\n             */\n            /**\n             * @see [color](#plotOptions.bellcurve.color)\n             * @see [fillOpacity](#plotOptions.bellcurve.fillOpacity)\n             *\n             * @apioption plotOptions.bellcurve.fillColor\n             */\n            /**\n             * @see [color](#plotOptions.bellcurve.color)\n             * @see [fillColor](#plotOptions.bellcurve.fillColor)\n             *\n             * @default   {highcharts} 0.75\n             * @default   {highstock} 0.75\n             * @apioption plotOptions.bellcurve.fillOpacity\n             */\n            /**\n             * This option allows to define the length of the bell curve. A unit of\n             * the length of the bell curve is standard deviation.\n             *\n             * @sample highcharts/plotoptions/bellcurve-intervals-pointsininterval\n             *         Intervals and points in interval\n             */\n            intervals: 3,\n            /**\n             * Defines how many points should be plotted within 1 interval. See\n             * `plotOptions.bellcurve.intervals`.\n             *\n             * @sample highcharts/plotoptions/bellcurve-intervals-pointsininterval\n             *         Intervals and points in interval\n             */\n            pointsInInterval: 3,\n            marker: {\n                enabled: false\n            }\n        };\n        /**\n         * A `bellcurve` series. If the [type](#series.bellcurve.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * For options that apply to multiple series, it is recommended to add\n         * them to the [plotOptions.series](#plotOptions.series) options structure.\n         * To apply to all series of this specific type, apply it to\n         * [plotOptions.bellcurve](#plotOptions.bellcurve).\n         *\n         * @extends   series,plotOptions.bellcurve\n         * @since     6.0.0\n         * @product   highcharts\n         * @excluding dataParser, dataURL, data, boostThreshold, boostBlending\n         * @requires  modules/bellcurve\n         * @apioption series.bellcurve\n         */\n        /**\n         * An integer identifying the index to use for the base series, or a string\n         * representing the id of the series.\n         *\n         * @type      {number|string}\n         * @apioption series.bellcurve.baseSeries\n         */\n        /**\n         * @see [fillColor](#series.bellcurve.fillColor)\n         * @see [fillOpacity](#series.bellcurve.fillOpacity)\n         *\n         * @apioption series.bellcurve.color\n         */\n        /**\n         * @see [color](#series.bellcurve.color)\n         * @see [fillOpacity](#series.bellcurve.fillOpacity)\n         *\n         * @apioption series.bellcurve.fillColor\n         */\n        /**\n         * @see [color](#series.bellcurve.color)\n         * @see [fillColor](#series.bellcurve.fillColor)\n         *\n         * @default   {highcharts} 0.75\n         * @default   {highstock} 0.75\n         * @apioption series.bellcurve.fillOpacity\n         */\n        ''; // keeps doclets above separate\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return BellcurveSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Bellcurve/BellcurveSeries.js', [_modules['Series/Bellcurve/BellcurveSeriesDefaults.js'], _modules['Series/DerivedComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (BellcurveSeriesDefaults, DerivedComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Highsoft AS\n         *\n         *  Author: Sebastian Domas\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var AreaSplineSeries = SeriesRegistry.seriesTypes.areaspline;\n        var correctFloat = U.correctFloat, isNumber = U.isNumber, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Bell curve class\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.bellcurve\n         *\n         * @augments Highcharts.Series\n         */\n        var BellcurveSeries = /** @class */ (function (_super) {\n            __extends(BellcurveSeries, _super);\n            function BellcurveSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /** @private */\n            BellcurveSeries.mean = function (data) {\n                var length = data.length, sum = data.reduce(function (sum, value) {\n                    return (sum += value);\n                }, 0);\n                return length > 0 && sum / length;\n            };\n            /** @private */\n            BellcurveSeries.standardDeviation = function (data, average) {\n                var len = data.length;\n                average = isNumber(average) ?\n                    average : BellcurveSeries.mean(data);\n                var sum = data.reduce(function (sum, value) {\n                    var diff = value - average;\n                    return (sum += diff * diff);\n                }, 0);\n                return len > 1 && Math.sqrt(sum / (len - 1));\n            };\n            /** @private */\n            BellcurveSeries.normalDensity = function (x, mean, standardDeviation) {\n                var translation = x - mean;\n                return Math.exp(-(translation * translation) /\n                    (2 * standardDeviation * standardDeviation)) / (standardDeviation * Math.sqrt(2 * Math.PI));\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            BellcurveSeries.prototype.derivedData = function (mean, standardDeviation) {\n                var options = this.options, intervals = options.intervals, pointsInInterval = options.pointsInInterval, stop = intervals * pointsInInterval * 2 + 1, increment = standardDeviation / pointsInInterval, data = [];\n                var x = mean - intervals * standardDeviation;\n                for (var i = 0; i < stop; i++) {\n                    data.push([x, BellcurveSeries.normalDensity(x, mean, standardDeviation)]);\n                    x += increment;\n                }\n                return data;\n            };\n            BellcurveSeries.prototype.setDerivedData = function () {\n                var _a, _b;\n                var series = this;\n                if (((_b = (_a = series.baseSeries) === null || _a === void 0 ? void 0 : _a.yData) === null || _b === void 0 ? void 0 : _b.length) || 0 > 1) {\n                    series.setMean();\n                    series.setStandardDeviation();\n                    series.setData(series.derivedData(series.mean || 0, series.standardDeviation || 0), false);\n                }\n                return (void 0);\n            };\n            BellcurveSeries.prototype.setMean = function () {\n                var series = this;\n                series.mean = correctFloat(BellcurveSeries.mean(series.baseSeries.yData));\n            };\n            BellcurveSeries.prototype.setStandardDeviation = function () {\n                var series = this;\n                series.standardDeviation = correctFloat(BellcurveSeries.standardDeviation(series.baseSeries.yData, series.mean));\n            };\n            BellcurveSeries.defaultOptions = merge(AreaSplineSeries.defaultOptions, BellcurveSeriesDefaults);\n            return BellcurveSeries;\n        }(AreaSplineSeries));\n        DerivedComposition.compose(BellcurveSeries);\n        SeriesRegistry.registerSeriesType('bellcurve', BellcurveSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return BellcurveSeries;\n    });\n    _registerModule(_modules, 'masters/modules/histogram-bellcurve.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","H","Series","U","DerivedComposition","noop","addEvent","defined","composedMembers","init","prototype","arguments","initialised","baseSeries","eventRemovers","addEvents","setBaseSeries","chart","baseSeriesOptions","options","series","get","_this","push","setDerivedData","addBaseSeriesEvents","destroy","forEach","remover","hasDerivedData","compose","SeriesClass","pushUnique","seriesProto","binsNumber","binWidth","pointPadding","groupPadding","grouping","pointPlacement","tooltip","headerFormat","pointFormat","HistogramSeriesDefaults","SeriesRegistry","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","call","TypeError","String","__","constructor","create","ColumnSeries","seriesTypes","column","arrayMax","arrayMin","correctFloat","extend","isNumber","merge","objectEach","binsNumberFormulas","Math","ceil","sqrt","data","length","log","LOG2E","pow","HistogramSeries","_super","points","userOptions","binsNumberOption","derivedData","baseData","bins","x","max","min","frequencies","pointRange","fitToBin","map","elem","parseFloat","y","i","_i","baseData_1","_a","_b","keys","key","Number","x2","sort","a","yData","setData","defaultOptions","registerSeriesType","intervals","pointsInInterval","marker","enabled","BellcurveSeriesDefaults","AreaSplineSeries","areaspline","BellcurveSeries","mean","sum","reduce","value","standardDeviation","average","len","diff","normalDensity","translation","exp","PI","stop","increment","setMean","setStandardDeviation"],"mappings":"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"}