{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts Gantt JS v11.2.0 (2023-10-30)\n *\n * GridAxis\n *\n * (c) 2016-2021 Lars A. V. Cabrera\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/grid-axis', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Axis/GridAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (Axis, H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var dateFormats = H.dateFormats;\n        var addEvent = U.addEvent, defined = U.defined, erase = U.erase, find = U.find, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, timeUnits = U.timeUnits, wrap = U.wrap;\n        /* *\n         *\n         *  Enums\n         *\n         * */\n        /**\n         * Enum for which side the axis is on. Maps to axis.side.\n         * @private\n         */\n        var GridAxisSide;\n        (function (GridAxisSide) {\n            GridAxisSide[GridAxisSide[\"top\"] = 0] = \"top\";\n            GridAxisSide[GridAxisSide[\"right\"] = 1] = \"right\";\n            GridAxisSide[GridAxisSide[\"bottom\"] = 2] = \"bottom\";\n            GridAxisSide[GridAxisSide[\"left\"] = 3] = \"left\";\n        })(GridAxisSide || (GridAxisSide = {}));\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function argsToArray(args) {\n            return Array.prototype.slice.call(args, 1);\n        }\n        /**\n         * @private\n         */\n        function isObject(x) {\n            // Always use strict mode\n            return U.isObject(x, true);\n        }\n        /**\n         * @private\n         */\n        function applyGridOptions(axis) {\n            var options = axis.options;\n            // Center-align by default\n            /*\n            if (!options.labels) {\n                options.labels = {};\n            }\n            */\n            options.labels.align = pick(options.labels.align, 'center');\n            // @todo: Check against tickLabelPlacement between/on etc\n            /* Prevents adding the last tick label if the axis is not a category\n               axis.\n               Since numeric labels are normally placed at starts and ends of a\n               range of value, and this module makes the label point at the value,\n               an \"extra\" label would appear. */\n            if (!axis.categories) {\n                options.showLastLabel = false;\n            }\n            // Prevents rotation of labels when squished, as rotating them would not\n            // help.\n            axis.labelRotation = 0;\n            options.labels.rotation = 0;\n            // Allow putting ticks closer than their data points.\n            options.minTickInterval = 1;\n        }\n        /**\n         * Extends axis class with grid support.\n         * @private\n         */\n        function compose(AxisClass, ChartClass, TickClass) {\n            if (U.pushUnique(composedMembers, AxisClass)) {\n                AxisClass.keepProps.push('grid');\n                AxisClass.prototype.getMaxLabelDimensions = getMaxLabelDimensions;\n                wrap(AxisClass.prototype, 'unsquish', wrapUnsquish);\n                // Add event handlers\n                addEvent(AxisClass, 'init', onInit);\n                addEvent(AxisClass, 'afterGetOffset', onAfterGetOffset);\n                addEvent(AxisClass, 'afterGetTitlePosition', onAfterGetTitlePosition);\n                addEvent(AxisClass, 'afterInit', onAfterInit);\n                addEvent(AxisClass, 'afterRender', onAfterRender);\n                addEvent(AxisClass, 'afterSetAxisTranslation', onAfterSetAxisTranslation);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions2);\n                addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n                addEvent(AxisClass, 'afterTickSize', onAfterTickSize);\n                addEvent(AxisClass, 'trimTicks', onTrimTicks);\n                addEvent(AxisClass, 'destroy', onDestroy);\n            }\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n            }\n            if (U.pushUnique(composedMembers, TickClass)) {\n                addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n                addEvent(TickClass, 'labelFormat', onTickLabelFormat);\n            }\n            return AxisClass;\n        }\n        /**\n         * Get the largest label width and height.\n         *\n         * @private\n         * @function Highcharts.Axis#getMaxLabelDimensions\n         *\n         * @param {Highcharts.Dictionary<Highcharts.Tick>} ticks\n         * All the ticks on one axis.\n         *\n         * @param {Array<number|string>} tickPositions\n         * All the tick positions on one axis.\n         *\n         * @return {Highcharts.SizeObject}\n         * Object containing the properties height and width.\n         *\n         * @todo Move this to the generic axis implementation, as it is used there.\n         */\n        function getMaxLabelDimensions(ticks, tickPositions) {\n            var dimensions = {\n                width: 0,\n                height: 0\n            };\n            tickPositions.forEach(function (pos) {\n                var tick = ticks[pos];\n                var labelHeight = 0, labelWidth = 0, label;\n                if (isObject(tick)) {\n                    label = isObject(tick.label) ? tick.label : {};\n                    // Find width and height of label\n                    labelHeight = label.getBBox ? label.getBBox().height : 0;\n                    if (label.textStr && !isNumber(label.textPxLength)) {\n                        label.textPxLength = label.getBBox().width;\n                    }\n                    labelWidth = isNumber(label.textPxLength) ?\n                        // Math.round ensures crisp lines\n                        Math.round(label.textPxLength) :\n                        0;\n                    if (label.textStr) {\n                        // Set the tickWidth same as the label width after ellipsis\n                        // applied #10281\n                        labelWidth = Math.round(label.getBBox().width);\n                    }\n                    // Update the result if width and/or height are larger\n                    dimensions.height = Math.max(labelHeight, dimensions.height);\n                    dimensions.width = Math.max(labelWidth, dimensions.width);\n                }\n            });\n            // For tree grid, add indentation\n            if (this.options.type === 'treegrid' &&\n                this.treeGrid &&\n                this.treeGrid.mapOfPosToGridNode) {\n                var treeDepth = this.treeGrid.mapOfPosToGridNode[-1].height || 0;\n                dimensions.width += (this.options.labels.indentation *\n                    (treeDepth - 1));\n            }\n            return dimensions;\n        }\n        /**\n         * Handle columns and getOffset.\n         * @private\n         */\n        function onAfterGetOffset() {\n            var grid = this.grid;\n            (grid && grid.columns || []).forEach(function (column) {\n                column.getOffset();\n            });\n        }\n        /**\n         * @private\n         */\n        function onAfterGetTitlePosition(e) {\n            var axis = this;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                // compute anchor points for each of the title align options\n                var axisTitle = axis.axisTitle, axisHeight = axis.height, horiz = axis.horiz, axisLeft = axis.left, offset = axis.offset, opposite = axis.opposite, options_1 = axis.options, axisTop = axis.top, axisWidth = axis.width;\n                var tickSize = axis.tickSize();\n                var titleWidth = axisTitle && axisTitle.getBBox().width;\n                var xOption = options_1.title.x;\n                var yOption = options_1.title.y;\n                var titleMargin = pick(options_1.title.margin, horiz ? 5 : 10);\n                var titleFontSize = axisTitle ? axis.chart.renderer.fontMetrics(axisTitle).f : 0;\n                var crispCorr = tickSize ? tickSize[0] / 2 : 0;\n                // TODO account for alignment\n                // the position in the perpendicular direction of the axis\n                var offAxis = ((horiz ? axisTop + axisHeight : axisLeft) +\n                    (horiz ? 1 : -1) * // horizontal axis reverses the margin\n                        (opposite ? -1 : 1) * // so does opposite axes\n                        crispCorr +\n                    (axis.side === GridAxisSide.bottom ? titleFontSize : 0));\n                e.titlePosition.x = horiz ?\n                    axisLeft - (titleWidth || 0) / 2 - titleMargin + xOption :\n                    offAxis + (opposite ? axisWidth : 0) + offset + xOption;\n                e.titlePosition.y = horiz ?\n                    (offAxis -\n                        (opposite ? axisHeight : 0) +\n                        (opposite ? titleFontSize : -titleFontSize) / 2 +\n                        offset +\n                        yOption) :\n                    axisTop - titleMargin + yOption;\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterInit() {\n            var axis = this;\n            var chart = axis.chart, _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a, userOptions = axis.userOptions;\n            if (gridOptions.enabled) {\n                applyGridOptions(axis);\n            }\n            if (gridOptions.columns) {\n                var columns = axis.grid.columns = [];\n                var columnIndex = axis.grid.columnIndex = 0;\n                // Handle columns, each column is a grid axis\n                while (++columnIndex < gridOptions.columns.length) {\n                    var columnOptions = merge(userOptions, gridOptions.columns[gridOptions.columns.length - columnIndex - 1], {\n                        isInternal: true,\n                        linkedTo: 0,\n                        // Force to behave like category axis\n                        type: 'category',\n                        // Disable by default the scrollbar on the grid axis\n                        scrollbar: {\n                            enabled: false\n                        }\n                    });\n                    delete columnOptions.grid.columns; // Prevent recursion\n                    var column = new Axis(axis.chart, columnOptions, 'yAxis');\n                    column.grid.isColumn = true;\n                    column.grid.columnIndex = columnIndex;\n                    // Remove column axis from chart axes array, and place it\n                    // in the columns array.\n                    erase(chart.axes, column);\n                    erase(chart[axis.coll] || [], column);\n                    columns.push(column);\n                }\n            }\n        }\n        /**\n         * Draw an extra line on the far side of the outermost axis,\n         * creating floor/roof/wall of a grid. And some padding.\n         * ```\n         * Make this:\n         *             (axis.min) __________________________ (axis.max)\n         *                           |    |    |    |    |\n         * Into this:\n         *             (axis.min) __________________________ (axis.max)\n         *                        ___|____|____|____|____|__\n         * ```\n         * @private\n         */\n        function onAfterRender() {\n            var axis = this, grid = axis.grid, options = axis.options, gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                var min = axis.min || 0, max = axis.max || 0;\n                // @todo acutual label padding (top, bottom, left, right)\n                axis.maxLabelDimensions = axis.getMaxLabelDimensions(axis.ticks, axis.tickPositions);\n                // Remove right wall before rendering if updating\n                if (axis.rightWall) {\n                    axis.rightWall.destroy();\n                }\n                /*\n                Draw an extra axis line on outer axes\n                            >\n                Make this:    |______|______|______|___\n\n                            > _________________________\n                Into this:    |______|______|______|__|\n                                                        */\n                if (axis.grid && axis.grid.isOuterAxis() && axis.axisLine) {\n                    var lineWidth = options.lineWidth;\n                    if (lineWidth) {\n                        var linePath = axis.getLinePath(lineWidth), startPoint = linePath[0], endPoint = linePath[1], \n                        // Negate distance if top or left axis\n                        // Subtract 1px to draw the line at the end of the tick\n                        tickLength = (axis.tickSize('tick') || [1])[0], distance = (tickLength - 1) * ((axis.side === GridAxisSide.top ||\n                            axis.side === GridAxisSide.left) ? -1 : 1);\n                        // If axis is horizontal, reposition line path vertically\n                        if (startPoint[0] === 'M' && endPoint[0] === 'L') {\n                            if (axis.horiz) {\n                                startPoint[2] += distance;\n                                endPoint[2] += distance;\n                            }\n                            else {\n                                startPoint[1] += distance;\n                                endPoint[1] += distance;\n                            }\n                        }\n                        // If it doesn't exist, add an upper and lower border\n                        // for the vertical grid axis.\n                        if (!axis.horiz && axis.chart.marginRight) {\n                            var upperBorderStartPoint = startPoint, upperBorderEndPoint = [\n                                'L',\n                                axis.left,\n                                startPoint[2] || 0\n                            ], upperBorderPath = [\n                                upperBorderStartPoint,\n                                upperBorderEndPoint\n                            ], lowerBorderEndPoint = [\n                                'L',\n                                axis.chart.chartWidth - axis.chart.marginRight,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderStartPoint = [\n                                'M',\n                                endPoint[1] || 0,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderPath = [\n                                lowerBorderStartPoint,\n                                lowerBorderEndPoint\n                            ];\n                            if (!axis.grid.upperBorder && min % 1 !== 0) {\n                                axis.grid.upperBorder = axis.grid.renderBorder(upperBorderPath);\n                            }\n                            if (axis.grid.upperBorder) {\n                                axis.grid.upperBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.upperBorder.animate({\n                                    d: upperBorderPath\n                                });\n                            }\n                            if (!axis.grid.lowerBorder && max % 1 !== 0) {\n                                axis.grid.lowerBorder = axis.grid.renderBorder(lowerBorderPath);\n                            }\n                            if (axis.grid.lowerBorder) {\n                                axis.grid.lowerBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.lowerBorder.animate({\n                                    d: lowerBorderPath\n                                });\n                            }\n                        }\n                        // Render an extra line parallel to the existing axes, to\n                        // close the grid.\n                        if (!axis.grid.axisLineExtra) {\n                            axis.grid.axisLineExtra = axis.grid.renderBorder(linePath);\n                        }\n                        else {\n                            axis.grid.axisLineExtra.attr({\n                                stroke: options.lineColor,\n                                'stroke-width': options.lineWidth\n                            });\n                            axis.grid.axisLineExtra.animate({\n                                d: linePath\n                            });\n                        }\n                        // show or hide the line depending on options.showEmpty\n                        axis.axisLine[axis.showAxis ? 'show' : 'hide']();\n                    }\n                }\n                (grid && grid.columns || []).forEach(function (column) { return column.render(); });\n                // Manipulate the tick mark visibility\n                // based on the axis.max- allows smooth scrolling.\n                if (!axis.horiz &&\n                    axis.chart.hasRendered &&\n                    (axis.scrollbar ||\n                        (axis.linkedParent && axis.linkedParent.scrollbar))) {\n                    var tickmarkOffset = axis.tickmarkOffset, lastTick = axis.tickPositions[axis.tickPositions.length - 1], firstTick = axis.tickPositions[0];\n                    var label = void 0, tickMark = void 0;\n                    while ((label = axis.hiddenLabels.pop()) && label.element) {\n                        label.show(); // #15453\n                    }\n                    while ((tickMark = axis.hiddenMarks.pop()) &&\n                        tickMark.element) {\n                        tickMark.show(); // #16439\n                    }\n                    // Hide/show firts tick label.\n                    label = axis.ticks[firstTick].label;\n                    if (label) {\n                        if (min - firstTick > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    // Hide/show last tick mark/label.\n                    label = axis.ticks[lastTick].label;\n                    if (label) {\n                        if (lastTick - max > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    var mark = axis.ticks[lastTick].mark;\n                    if (mark &&\n                        lastTick - max < tickmarkOffset &&\n                        lastTick - max > 0 && axis.ticks[lastTick].isLast) {\n                        axis.hiddenMarks.push(mark.hide());\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetAxisTranslation() {\n            var axis = this;\n            var tickInfo = axis.tickPositions && axis.tickPositions.info;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            var userLabels = axis.userOptions.labels || {};\n            // Fire this only for the Gantt type chart, #14868.\n            if (gridOptions.enabled) {\n                if (axis.horiz) {\n                    axis.series.forEach(function (series) {\n                        series.options.pointRange = 0;\n                    });\n                    // Lower level time ticks, like hours or minutes, represent\n                    // points in time and not ranges. These should be aligned\n                    // left in the grid cell by default. The same applies to\n                    // years of higher order.\n                    if (tickInfo &&\n                        options.dateTimeLabelFormats &&\n                        options.labels &&\n                        !defined(userLabels.align) &&\n                        (options.dateTimeLabelFormats[tickInfo.unitName]\n                            .range === false ||\n                            tickInfo.count > 1 // years\n                        )) {\n                        options.labels.align = 'left';\n                        if (!defined(userLabels.x)) {\n                            options.labels.x = 3;\n                        }\n                    }\n                }\n                else {\n                    // Don't trim ticks which not in min/max range but\n                    // they are still in the min/max plus tickInterval.\n                    if (this.options.type !== 'treegrid' &&\n                        axis.grid &&\n                        axis.grid.columns) {\n                        this.minPointOffset = this.tickInterval;\n                    }\n                }\n            }\n        }\n        /**\n         * Creates a left and right wall on horizontal axes:\n         * - Places leftmost tick at the start of the axis, to create a left\n         *   wall\n         * - Ensures that the rightmost tick is at the end of the axis, to\n         *   create a right wall.\n         * @private\n         */\n        function onAfterSetOptions(e) {\n            var options = this.options, userOptions = e.userOptions, gridOptions = ((options && isObject(options.grid)) ? options.grid : {});\n            var gridAxisOptions;\n            if (gridOptions.enabled === true) {\n                // Merge the user options into default grid axis options so\n                // that when a user option is set, it takes presedence.\n                gridAxisOptions = merge(true, {\n                    className: ('highcharts-grid-axis ' + (userOptions.className || '')),\n                    dateTimeLabelFormats: {\n                        hour: {\n                            list: ['%H:%M', '%H']\n                        },\n                        day: {\n                            list: ['%A, %e. %B', '%a, %e. %b', '%E']\n                        },\n                        week: {\n                            list: ['Week %W', 'W%W']\n                        },\n                        month: {\n                            list: ['%B', '%b', '%o']\n                        }\n                    },\n                    grid: {\n                        borderWidth: 1\n                    },\n                    labels: {\n                        padding: 2,\n                        style: {\n                            fontSize: '0.9em'\n                        }\n                    },\n                    margin: 0,\n                    title: {\n                        text: null,\n                        reserveSpace: false,\n                        rotation: 0\n                    },\n                    // In a grid axis, only allow one unit of certain types,\n                    // for example we shouln't have one grid cell spanning\n                    // two days.\n                    units: [[\n                            'millisecond',\n                            [1, 10, 100]\n                        ], [\n                            'second',\n                            [1, 10]\n                        ], [\n                            'minute',\n                            [1, 5, 15]\n                        ], [\n                            'hour',\n                            [1, 6]\n                        ], [\n                            'day',\n                            [1]\n                        ], [\n                            'week',\n                            [1]\n                        ], [\n                            'month',\n                            [1]\n                        ], [\n                            'year',\n                            null\n                        ]]\n                }, userOptions);\n                // X-axis specific options\n                if (this.coll === 'xAxis') {\n                    // For linked axes, tickPixelInterval is used only if\n                    // the tickPositioner below doesn't run or returns\n                    // undefined (like multiple years)\n                    if (defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPixelInterval)) {\n                        gridAxisOptions.tickPixelInterval = 350;\n                    }\n                    // For the secondary grid axis, use the primary axis'\n                    // tick intervals and return ticks one level higher.\n                    if (\n                    // Check for tick pixel interval in options\n                    !defined(userOptions.tickPixelInterval) &&\n                        // Only for linked axes\n                        defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPositioner) &&\n                        !defined(userOptions.tickInterval)) {\n                        gridAxisOptions.tickPositioner = function (min, max) {\n                            var parentInfo = (this.linkedParent &&\n                                this.linkedParent.tickPositions &&\n                                this.linkedParent.tickPositions.info);\n                            if (parentInfo) {\n                                var units = (gridAxisOptions.units || []);\n                                var unitIdx = void 0, count = 1, unitName = 'year';\n                                for (var i = 0; i < units.length; i++) {\n                                    var unit_1 = units[i];\n                                    if (unit_1 && unit_1[0] === parentInfo.unitName) {\n                                        unitIdx = i;\n                                        break;\n                                    }\n                                }\n                                // Get the first allowed count on the next unit.\n                                var unit = (isNumber(unitIdx) && units[unitIdx + 1]);\n                                if (unit) {\n                                    unitName = unit[0] || 'year';\n                                    var counts = unit[1];\n                                    count = counts && counts[0] || 1;\n                                    // In case the base X axis shows years, make the\n                                    // secondary axis show ten times the years (#11427)\n                                }\n                                else if (parentInfo.unitName === 'year') {\n                                    // unitName is 'year'\n                                    count = parentInfo.count * 10;\n                                }\n                                var unitRange = timeUnits[unitName];\n                                this.tickInterval = unitRange * count;\n                                return this.chart.time.getTimeTicks({ unitRange: unitRange, count: count, unitName: unitName }, min, max, this.options.startOfWeek);\n                            }\n                        };\n                    }\n                }\n                // Now merge the combined options into the axis options\n                merge(true, this.options, gridAxisOptions);\n                if (this.horiz) {\n                    /*               _________________________\n                    Make this:    ___|_____|_____|_____|__|\n                                    ^                     ^\n                                    _________________________\n                    Into this:    |_____|_____|_____|_____|\n                                        ^                 ^    */\n                    options.minPadding = pick(userOptions.minPadding, 0);\n                    options.maxPadding = pick(userOptions.maxPadding, 0);\n                }\n                // If borderWidth is set, then use its value for tick and\n                // line width.\n                if (isNumber(options.grid.borderWidth)) {\n                    options.tickWidth = options.lineWidth =\n                        gridOptions.borderWidth;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetOptions2(e) {\n            var axis = this;\n            var userOptions = e.userOptions;\n            var gridOptions = userOptions && userOptions.grid || {};\n            var columns = gridOptions.columns;\n            // Add column options to the parent axis. Children has their column\n            // options set on init in onGridAxisAfterInit.\n            if (gridOptions.enabled && columns) {\n                merge(true, axis.options, columns[columns.length - 1]);\n            }\n        }\n        /**\n         * Handle columns and setScale.\n         * @private\n         */\n        function onAfterSetScale() {\n            var axis = this;\n            (axis.grid.columns || []).forEach(function (column) { return column.setScale(); });\n        }\n        /**\n         * Draw vertical axis ticks extra long to create cell floors and roofs.\n         * Overrides the tickLength for vertical axes.\n         * @private\n         */\n        function onAfterTickSize(e) {\n            var _a = this, horiz = _a.horiz, maxLabelDimensions = _a.maxLabelDimensions, _b = _a.options.grid, gridOptions = _b === void 0 ? {} : _b;\n            if (gridOptions.enabled && maxLabelDimensions) {\n                var labelPadding = this.options.labels.distance * 2;\n                var distance = horiz ?\n                    (gridOptions.cellHeight ||\n                        labelPadding + maxLabelDimensions.height) :\n                    labelPadding + maxLabelDimensions.width;\n                if (isArray(e.tickSize)) {\n                    e.tickSize[0] = distance;\n                }\n                else {\n                    e.tickSize = [distance, 0];\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            this.axes.forEach(function (axis) {\n                (axis.grid && axis.grid.columns || []).forEach(function (column) {\n                    column.setAxisSize();\n                    column.setAxisTranslation();\n                });\n            });\n        }\n        /**\n         * @private\n         */\n        function onDestroy(e) {\n            var grid = this.grid;\n            (grid.columns || []).forEach(function (column) { return column.destroy(e.keepEvents); });\n            grid.columns = void 0;\n        }\n        /**\n         * Wraps axis init to draw cell walls on vertical axes.\n         * @private\n         */\n        function onInit(e) {\n            var axis = this;\n            var userOptions = e.userOptions || {};\n            var gridOptions = userOptions.grid || {};\n            if (gridOptions.enabled && defined(gridOptions.borderColor)) {\n                userOptions.tickColor = userOptions.lineColor = (gridOptions.borderColor);\n            }\n            if (!axis.grid) {\n                axis.grid = new GridAxisAdditions(axis);\n            }\n            axis.hiddenLabels = [];\n            axis.hiddenMarks = [];\n        }\n        /**\n         * Center tick labels in cells.\n         * @private\n         */\n        function onTickAfterGetLabelPosition(e) {\n            var tick = this, label = tick.label, axis = tick.axis, reversed = axis.reversed, chart = axis.chart, options = axis.options, gridOptions = options.grid || {}, labelOpts = axis.options.labels, align = labelOpts.align, \n            // verticalAlign is currently not supported for axis.labels.\n            verticalAlign = 'middle', // labelOpts.verticalAlign,\n            side = GridAxisSide[axis.side], tickmarkOffset = e.tickmarkOffset, tickPositions = axis.tickPositions, tickPos = tick.pos - tickmarkOffset, nextTickPos = (isNumber(tickPositions[e.index + 1]) ?\n                tickPositions[e.index + 1] - tickmarkOffset :\n                (axis.max || 0) + tickmarkOffset), tickSize = axis.tickSize('tick'), tickWidth = tickSize ? tickSize[0] : 0, crispCorr = tickSize ? tickSize[1] / 2 : 0;\n            // Only center tick labels in grid axes\n            if (gridOptions.enabled === true) {\n                var bottom = void 0, top_1, left = void 0, right = void 0;\n                // Calculate top and bottom positions of the cell.\n                if (side === 'top') {\n                    bottom = axis.top + axis.offset;\n                    top_1 = bottom - tickWidth;\n                }\n                else if (side === 'bottom') {\n                    top_1 = chart.chartHeight - axis.bottom + axis.offset;\n                    bottom = top_1 + tickWidth;\n                }\n                else {\n                    bottom = axis.top + axis.len - (axis.translate(reversed ? nextTickPos : tickPos) || 0);\n                    top_1 = axis.top + axis.len - (axis.translate(reversed ? tickPos : nextTickPos) || 0);\n                }\n                // Calculate left and right positions of the cell.\n                if (side === 'right') {\n                    left = chart.chartWidth - axis.right + axis.offset;\n                    right = left + tickWidth;\n                }\n                else if (side === 'left') {\n                    right = axis.left + axis.offset;\n                    left = right - tickWidth;\n                }\n                else {\n                    left = Math.round(axis.left + (axis.translate(reversed ? nextTickPos : tickPos) || 0)) - crispCorr;\n                    right = Math.min(// #15742\n                    Math.round(axis.left + (axis.translate(reversed ? tickPos : nextTickPos) || 0)) - crispCorr, axis.left + axis.len);\n                }\n                tick.slotWidth = right - left;\n                // Calculate the positioning of the label based on\n                // alignment.\n                e.pos.x = (align === 'left' ?\n                    left :\n                    align === 'right' ?\n                        right :\n                        left + ((right - left) / 2) // default to center\n                );\n                e.pos.y = (verticalAlign === 'top' ?\n                    top_1 :\n                    verticalAlign === 'bottom' ?\n                        bottom :\n                        top_1 + ((bottom - top_1) / 2) // default to middle\n                );\n                if (label) {\n                    var lblMetrics = chart.renderer.fontMetrics(label), labelHeight = label.getBBox().height;\n                    // Adjustment to y position to align the label correctly.\n                    // Would be better to have a setter or similar for this.\n                    if (!labelOpts.useHTML) {\n                        var lines = Math.round(labelHeight / lblMetrics.h);\n                        e.pos.y += (\n                        // Center the label\n                        // TODO: why does this actually center the label?\n                        ((lblMetrics.b - (lblMetrics.h - lblMetrics.f)) / 2) +\n                            // Adjust for height of additional lines.\n                            -(((lines - 1) * lblMetrics.h) / 2));\n                    }\n                    else {\n                        e.pos.y += (\n                        // Readjust yCorr in htmlUpdateTransform\n                        lblMetrics.b +\n                            // Adjust for height of html label\n                            -(labelHeight / 2));\n                    }\n                }\n                e.pos.x += (axis.horiz && labelOpts.x) || 0;\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickLabelFormat(ctx) {\n            var axis = ctx.axis, value = ctx.value;\n            if (axis.options.grid &&\n                axis.options.grid.enabled) {\n                var tickPos = axis.tickPositions;\n                var series = (axis.linkedParent || axis).series[0];\n                var isFirst = value === tickPos[0];\n                var isLast = value === tickPos[tickPos.length - 1];\n                var point = series && find(series.options.data, function (p) {\n                    return p[axis.isXAxis ? 'x' : 'y'] === value;\n                });\n                var pointCopy = void 0;\n                if (point && series.is('gantt')) {\n                    // For the Gantt set point aliases to the pointCopy\n                    // to do not change the original point\n                    pointCopy = merge(point);\n                    H.seriesTypes.gantt.prototype.pointClass\n                        .setGanttPointAliases(pointCopy);\n                }\n                // Make additional properties available for the\n                // formatter\n                ctx.isFirst = isFirst;\n                ctx.isLast = isLast;\n                ctx.point = pointCopy;\n            }\n        }\n        /**\n         * Makes tick labels which are usually ignored in a linked axis\n         * displayed if they are within range of linkedParent.min.\n         * ```\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Make this:             |   |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Into this:             | 1 |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         * ```\n         * @private\n         * @todo Does this function do what the drawing says? Seems to affect\n         *       ticks and not the labels directly?\n         */\n        function onTrimTicks() {\n            var axis = this;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            var categoryAxis = axis.categories;\n            var tickPositions = axis.tickPositions;\n            var firstPos = tickPositions[0];\n            var lastPos = tickPositions[tickPositions.length - 1];\n            var linkedMin = axis.linkedParent && axis.linkedParent.min;\n            var linkedMax = axis.linkedParent && axis.linkedParent.max;\n            var min = linkedMin || axis.min;\n            var max = linkedMax || axis.max;\n            var tickInterval = axis.tickInterval;\n            var endMoreThanMin = (firstPos < min &&\n                firstPos + tickInterval > min);\n            var startLessThanMax = (lastPos > max &&\n                lastPos - tickInterval < max);\n            if (gridOptions.enabled === true &&\n                !categoryAxis &&\n                (axis.horiz || axis.isLinked)) {\n                if (endMoreThanMin && !options.startOnTick) {\n                    tickPositions[0] = min;\n                }\n                if (startLessThanMax && !options.endOnTick) {\n                    tickPositions[tickPositions.length - 1] = max;\n                }\n            }\n        }\n        /**\n         * Avoid altering tickInterval when reserving space.\n         * @private\n         */\n        function wrapUnsquish(proceed) {\n            var axis = this;\n            var _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a;\n            if (gridOptions.enabled === true && axis.categories) {\n                return axis.tickInterval;\n            }\n            return proceed.apply(axis, argsToArray(arguments));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Additions for grid axes.\n         * @private\n         * @class\n         */\n        var GridAxisAdditions = /** @class */ (function () {\n            /* *\n            *\n            *  Constructors\n            *\n            * */\n            function GridAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n            *\n            *  Functions\n            *\n            * */\n            /**\n             * Checks if an axis is the outer axis in its dimension. Since\n             * axes are placed outwards in order, the axis with the highest\n             * index is the outermost axis.\n             *\n             * Example: If there are multiple x-axes at the top of the chart,\n             * this function returns true if the axis supplied is the last\n             * of the x-axes.\n             *\n             * @private\n             *\n             * @return {boolean}\n             * True if the axis is the outermost axis in its dimension; false if\n             * not.\n             */\n            GridAxisAdditions.prototype.isOuterAxis = function () {\n                var axis = this.axis;\n                var chart = axis.chart;\n                var columnIndex = axis.grid.columnIndex;\n                var columns = (axis.linkedParent && axis.linkedParent.grid.columns ||\n                    axis.grid.columns);\n                var parentAxis = columnIndex ? axis.linkedParent : axis;\n                var thisIndex = -1, lastIndex = 0;\n                (chart[axis.coll] || []).forEach(function (otherAxis, index) {\n                    if (otherAxis.side === axis.side &&\n                        !otherAxis.options.isInternal) {\n                        lastIndex = index;\n                        if (otherAxis === parentAxis) {\n                            // Get the index of the axis in question\n                            thisIndex = index;\n                        }\n                    }\n                });\n                return (lastIndex === thisIndex &&\n                    (isNumber(columnIndex) ?\n                        columns.length === columnIndex :\n                        true));\n            };\n            /**\n             * Add extra border based on the provided path.\n             * @private\n             * @param {SVGPath} path\n             * The path of the border.\n             * @return {Highcharts.SVGElement}\n             * Border\n             */\n            GridAxisAdditions.prototype.renderBorder = function (path) {\n                var axis = this.axis, renderer = axis.chart.renderer, options = axis.options, extraBorderLine = renderer.path(path)\n                    .addClass('highcharts-axis-line')\n                    .add(axis.axisBorder);\n                if (!renderer.styledMode) {\n                    extraBorderLine.attr({\n                        stroke: options.lineColor,\n                        'stroke-width': options.lineWidth,\n                        zIndex: 7\n                    });\n                }\n                return extraBorderLine;\n            };\n            return GridAxisAdditions;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // First letter of the day of the week, e.g. 'M' for 'Monday'.\n        dateFormats.E = function (timestamp) {\n            return this.dateFormat('%a', timestamp, true).charAt(0);\n        };\n        // Adds week date format\n        dateFormats.W = function (timestamp) {\n            var time = this, d = new this.Date(timestamp), unitsToOmit = ['Hours', 'Milliseconds', 'Minutes', 'Seconds'];\n            unitsToOmit.forEach(function (format) {\n                time.set(format, d, 0);\n            });\n            var firstDay = (this.get('Day', d) + 6) % 7;\n            var thursday = new this.Date(d.valueOf());\n            this.set('Date', thursday, this.get('Date', d) - firstDay + 3);\n            var firstThursday = new this.Date(this.get('FullYear', thursday), 0, 1);\n            if (this.get('Day', firstThursday) !== 4) {\n                this.set('Month', d, 0);\n                this.set('Date', d, 1 + (11 - this.get('Day', firstThursday)) % 7);\n            }\n            return (1 +\n                Math.floor((thursday.valueOf() - firstThursday.valueOf()) / 604800000)).toString();\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var GridAxis = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * @productdesc {gantt}\n         * For grid axes (like in Gantt charts),\n         * it is possible to declare as a list to provide different\n         * formats depending on available space.\n         *\n         * Defaults to:\n         * ```js\n         * {\n         *     hour: { list: ['%H:%M', '%H'] },\n         *     day: { list: ['%A, %e. %B', '%a, %e. %b', '%E'] },\n         *     week: { list: ['Week %W', 'W%W'] },\n         *     month: { list: ['%B', '%b', '%o'] }\n         * }\n         * ```\n         *\n         * @sample {gantt} gantt/grid-axis/date-time-label-formats\n         *         Gantt chart with custom axis date format.\n         *\n         * @apioption xAxis.dateTimeLabelFormats\n         */\n        /**\n         * Set grid options for the axis labels. Requires Highcharts Gantt.\n         *\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid\n         */\n        /**\n         * Enable grid on the axis labels. Defaults to true for Gantt charts.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid.enabled\n         */\n        /**\n         * Set specific options for each column (or row for horizontal axes) in the\n         * grid. Each extra column/row is its own axis, and the axis options can be set\n         * here.\n         *\n         * @sample gantt/demo/left-axis-table\n         *         Left axis as a table\n         *\n         * @type      {Array<Highcharts.XAxisOptions>}\n         * @apioption xAxis.grid.columns\n         */\n        /**\n         * Set border color for the label grid lines.\n         *\n         * @type      {Highcharts.ColorString}\n         * @apioption xAxis.grid.borderColor\n         */\n        /**\n         * Set border width of the label grid lines.\n         *\n         * @type      {number}\n         * @default   1\n         * @apioption xAxis.grid.borderWidth\n         */\n        /**\n         * Set cell height for grid axis labels. By default this is calculated from font\n         * size. This option only applies to horizontal axes. For vertical axes, check\n         * the [#yAxis.staticScale](yAxis.staticScale) option.\n         *\n         * @sample gantt/grid-axis/cellheight\n         *         Gant chart with custom cell height\n         * @type      {number}\n         * @apioption xAxis.grid.cellHeight\n         */\n        ''; // keeps doclets above in JS file\n\n        return GridAxis;\n    });\n    _registerModule(_modules, 'masters/modules/grid-axis.src.js', [_modules['Core/Globals.js'], _modules['Core/Axis/GridAxis.js']], function (Highcharts, GridAxis) {\n\n        var G = Highcharts;\n        // Compositions\n        GridAxis.compose(G.Axis, G.Chart, G.Tick);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","Axis","H","U","GridAxisSide","dateFormats","addEvent","defined","erase","find","isArray","isNumber","merge","pick","timeUnits","wrap","composedMembers","isObject","x","getMaxLabelDimensions","ticks","tickPositions","dimensions","width","height","forEach","pos","label","tick","labelHeight","labelWidth","getBBox","textStr","textPxLength","Math","round","max","options","type","treeGrid","mapOfPosToGridNode","treeDepth","labels","indentation","onAfterGetOffset","grid","columns","column","getOffset","onAfterGetTitlePosition","e","gridOptions","axis","enabled","axisTitle","axisHeight","horiz","axisLeft","left","offset","opposite","options_1","axisTop","top","axisWidth","tickSize","titleWidth","xOption","title","yOption","y","titleMargin","margin","titleFontSize","chart","renderer","fontMetrics","f","offAxis","side","bottom","titlePosition","onAfterInit","_a","userOptions","align","categories","showLastLabel","labelRotation","rotation","minTickInterval","columnIndex","length","columnOptions","isInternal","linkedTo","scrollbar","isColumn","axes","coll","push","onAfterRender","min","maxLabelDimensions","rightWall","destroy","isOuterAxis","axisLine","lineWidth","linePath","getLinePath","startPoint","endPoint","distance","tickLength","marginRight","upperBorderEndPoint","upperBorderPath","lowerBorderEndPoint","chartWidth","toPixels","tickmarkOffset","lowerBorderPath","upperBorder","renderBorder","attr","stroke","lineColor","animate","d","lowerBorder","axisLineExtra","showAxis","render","hasRendered","linkedParent","lastTick","firstTick","tickMark","hiddenLabels","pop","element","show","hiddenMarks","hide","mark","isLast","onAfterSetAxisTranslation","tickInfo","info","userLabels","series","pointRange","dateTimeLabelFormats","unitName","range","count","minPointOffset","tickInterval","onAfterSetOptions","gridAxisOptions","className","hour","list","day","week","month","borderWidth","padding","style","fontSize","text","reserveSpace","units","tickPixelInterval","tickPositioner","parentInfo","unitIdx","i","unit_1","unit","counts","unitRange","time","getTimeTicks","startOfWeek","minPadding","maxPadding","tickWidth","onAfterSetOptions2","onAfterSetScale","setScale","onAfterTickSize","_b","labelPadding","cellHeight","onChartAfterSetChartSize","setAxisSize","setAxisTranslation","onDestroy","keepEvents","onInit","borderColor","tickColor","GridAxisAdditions","onTickAfterGetLabelPosition","reversed","labelOpts","tickPos","nextTickPos","index","crispCorr","top_1","right","chartHeight","len","translate","slotWidth","lblMetrics","useHTML","b","lines","h","onTickLabelFormat","ctx","value","isFirst","point","data","p","isXAxis","pointCopy","is","seriesTypes","gantt","prototype","pointClass","setGanttPointAliases","onTrimTicks","categoryAxis","firstPos","lastPos","linkedMin","linkedMax","isLinked","startOnTick","endOnTick","wrapUnsquish","proceed","arguments","Array","slice","call","parentAxis","thisIndex","lastIndex","otherAxis","extraBorderLine","addClass","add","axisBorder","styledMode","zIndex","E","timestamp","dateFormat","charAt","W","Date","unitsToOmit","format","set","firstDay","get","thursday","valueOf","firstThursday","floor","toString","compose","AxisClass","ChartClass","TickClass","pushUnique","keepProps","GridAxis","G","Chart","Tick"],"mappings":"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"}