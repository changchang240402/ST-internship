{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.2.0 (2023-10-30)\n *\n * Annotations module\n *\n * (c) 2009-2021 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/annotations', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/Annotations/AnnotationChart.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2021 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, erase = U.erase, find = U.find, fireEvent = U.fireEvent, pick = U.pick, wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Add an annotation to the chart after render time.\n         *\n         * @sample highcharts/annotations/add-annotation/\n         *         Add annotation\n         *\n         * @function Highcharts.Chart#addAnnotation\n         *\n         * @param  {Highcharts.AnnotationsOptions} options\n         *         The annotation options for the new, detailed annotation.\n         *\n         * @param {boolean} [redraw]\n         *\n         * @return {Highcharts.Annotation}\n         *         The newly generated annotation.\n         */\n        function chartAddAnnotation(userOptions, redraw) {\n            var annotation = this.initAnnotation(userOptions);\n            this.options.annotations.push(annotation.options);\n            if (pick(redraw, true)) {\n                annotation.redraw();\n                annotation.graphic.attr({\n                    opacity: 1\n                });\n            }\n            return annotation;\n        }\n        /**\n         * @private\n         */\n        function chartCallback() {\n            var chart = this;\n            chart.plotBoxClip = this.renderer.clipRect(this.plotBox);\n            chart.controlPointsGroup = chart.renderer\n                .g('control-points')\n                .attr({ zIndex: 99 })\n                .clip(chart.plotBoxClip)\n                .add();\n            chart.options.annotations.forEach(function (annotationOptions, i) {\n                if (\n                // Verify that it has not been previously added in a responsive rule\n                !chart.annotations.some(function (annotation) {\n                    return annotation.options === annotationOptions;\n                })) {\n                    var annotation = chart.initAnnotation(annotationOptions);\n                    chart.options.annotations[i] = annotation.options;\n                }\n            });\n            chart.drawAnnotations();\n            addEvent(chart, 'redraw', chart.drawAnnotations);\n            addEvent(chart, 'destroy', function () {\n                chart.plotBoxClip.destroy();\n                chart.controlPointsGroup.destroy();\n            });\n            addEvent(chart, 'exportData', function (event) {\n                var annotations = chart.annotations, csvColumnHeaderFormatter = ((this.options.exporting &&\n                    this.options.exporting.csv) ||\n                    {}).columnHeaderFormatter, \n                // If second row doesn't have xValues\n                // then it is a title row thus multiple level header is in use.\n                multiLevelHeaders = !event.dataRows[1].xValues, annotationHeader = (chart.options.lang &&\n                    chart.options.lang.exportData &&\n                    chart.options.lang.exportData.annotationHeader), columnHeaderFormatter = function (index) {\n                    var s;\n                    if (csvColumnHeaderFormatter) {\n                        s = csvColumnHeaderFormatter(index);\n                        if (s !== false) {\n                            return s;\n                        }\n                    }\n                    s = annotationHeader + ' ' + index;\n                    if (multiLevelHeaders) {\n                        return {\n                            columnTitle: s,\n                            topLevelColumnTitle: s\n                        };\n                    }\n                    return s;\n                }, startRowLength = event.dataRows[0].length, annotationSeparator = (chart.options.exporting &&\n                    chart.options.exporting.csv &&\n                    chart.options.exporting.csv.annotations &&\n                    chart.options.exporting.csv.annotations.itemDelimiter), joinAnnotations = (chart.options.exporting &&\n                    chart.options.exporting.csv &&\n                    chart.options.exporting.csv.annotations &&\n                    chart.options.exporting.csv.annotations.join);\n                annotations.forEach(function (annotation) {\n                    if (annotation.options.labelOptions &&\n                        annotation.options.labelOptions.includeInDataExport) {\n                        annotation.labels.forEach(function (label) {\n                            if (label.options.text) {\n                                var annotationText_1 = label.options.text;\n                                label.points.forEach(function (points) {\n                                    var annotationX = points.x, xAxisIndex = points.series.xAxis ?\n                                        points.series.xAxis.index :\n                                        -1;\n                                    var wasAdded = false;\n                                    // Annotation not connected to any xAxis -\n                                    // add new row.\n                                    if (xAxisIndex === -1) {\n                                        var n = event.dataRows[0].length, newRow = new Array(n);\n                                        for (var i = 0; i < n; ++i) {\n                                            newRow[i] = '';\n                                        }\n                                        newRow.push(annotationText_1);\n                                        newRow.xValues = [];\n                                        newRow.xValues[xAxisIndex] = annotationX;\n                                        event.dataRows.push(newRow);\n                                        wasAdded = true;\n                                    }\n                                    // Annotation placed on a exported data point\n                                    // - add new column\n                                    if (!wasAdded) {\n                                        event.dataRows.forEach(function (row) {\n                                            if (!wasAdded &&\n                                                row.xValues &&\n                                                xAxisIndex !== void 0 &&\n                                                annotationX === row.xValues[xAxisIndex]) {\n                                                if (joinAnnotations &&\n                                                    row.length > startRowLength) {\n                                                    row[row.length - 1] += (annotationSeparator +\n                                                        annotationText_1);\n                                                }\n                                                else {\n                                                    row.push(annotationText_1);\n                                                }\n                                                wasAdded = true;\n                                            }\n                                        });\n                                    }\n                                    // Annotation not placed on any exported data point,\n                                    // but connected to the xAxis - add new row\n                                    if (!wasAdded) {\n                                        var n = event.dataRows[0].length, newRow = new Array(n);\n                                        for (var i = 0; i < n; ++i) {\n                                            newRow[i] = '';\n                                        }\n                                        newRow[0] = annotationX;\n                                        newRow.push(annotationText_1);\n                                        newRow.xValues = [];\n                                        if (xAxisIndex !== void 0) {\n                                            newRow.xValues[xAxisIndex] = annotationX;\n                                        }\n                                        event.dataRows.push(newRow);\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n                var maxRowLen = 0;\n                event.dataRows.forEach(function (row) {\n                    maxRowLen = Math.max(maxRowLen, row.length);\n                });\n                var newRows = maxRowLen - event.dataRows[0].length;\n                for (var i = 0; i < newRows; i++) {\n                    var header = columnHeaderFormatter(i + 1);\n                    if (multiLevelHeaders) {\n                        event.dataRows[0].push(header.topLevelColumnTitle);\n                        event.dataRows[1].push(header.columnTitle);\n                    }\n                    else {\n                        event.dataRows[0].push(header);\n                    }\n                }\n            });\n        }\n        /**\n         * @private\n         */\n        function chartDrawAnnotations() {\n            this.plotBoxClip.attr(this.plotBox);\n            this.annotations.forEach(function (annotation) {\n                annotation.redraw();\n                annotation.graphic.animate({\n                    opacity: 1\n                }, annotation.animationConfig);\n            });\n        }\n        /**\n         * Remove an annotation from the chart.\n         *\n         * @function Highcharts.Chart#removeAnnotation\n         *\n         * @param {number|string|Highcharts.Annotation} idOrAnnotation\n         *        The annotation's id or direct annotation object.\n         */\n        function chartRemoveAnnotation(idOrAnnotation) {\n            var annotations = this.annotations, annotation = (idOrAnnotation.coll === 'annotations') ?\n                idOrAnnotation :\n                find(annotations, function (annotation) {\n                    return annotation.options.id === idOrAnnotation;\n                });\n            if (annotation) {\n                fireEvent(annotation, 'remove');\n                erase(this.options.annotations, annotation.options);\n                erase(annotations, annotation);\n                annotation.destroy();\n            }\n        }\n        /**\n         * Create lookups initially\n         * @private\n         */\n        function onChartAfterInit() {\n            var chart = this;\n            chart.annotations = [];\n            if (!this.options.annotations) {\n                this.options.annotations = [];\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapPointerOnContainerMouseDown(proceed) {\n            if (!this.chart.hasDraggedAnnotation) {\n                proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * @private\n         */\n        var AnnotationChart;\n        (function (AnnotationChart) {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            function compose(AnnotationClass, ChartClass, PointerClass) {\n                if (U.pushUnique(composedMembers, ChartClass)) {\n                    addEvent(ChartClass, 'afterInit', onChartAfterInit);\n                    var chartProto = ChartClass.prototype;\n                    chartProto.addAnnotation = chartAddAnnotation;\n                    chartProto.callbacks.push(chartCallback);\n                    chartProto.collectionsWithInit.annotations = [chartAddAnnotation];\n                    chartProto.collectionsWithUpdate.push('annotations');\n                    chartProto.drawAnnotations = chartDrawAnnotations;\n                    chartProto.removeAnnotation = chartRemoveAnnotation;\n                    chartProto.initAnnotation = function chartInitAnnotation(userOptions) {\n                        var Constructor = (AnnotationClass.types[userOptions.type] ||\n                            AnnotationClass), annotation = new Constructor(this, userOptions);\n                        this.annotations.push(annotation);\n                        return annotation;\n                    };\n                }\n                if (U.pushUnique(composedMembers, PointerClass)) {\n                    var pointerProto = PointerClass.prototype;\n                    wrap(pointerProto, 'onContainerMouseDown', wrapPointerOnContainerMouseDown);\n                }\n            }\n            AnnotationChart.compose = compose;\n        })(AnnotationChart || (AnnotationChart = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return AnnotationChart;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/AnnotationDefaults.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var defined = U.defined;\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A basic type of an annotation. It allows to add custom labels\n         * or shapes. The items  can be tied to points, axis coordinates\n         * or chart pixel coordinates.\n         *\n         * @sample highcharts/annotations/basic/\n         *         Basic annotations\n         * @sample highcharts/demo/annotations/\n         *         Advanced annotations\n         * @sample highcharts/css/annotations\n         *         Styled mode\n         * @sample highcharts/annotations-advanced/controllable\n         *         Controllable items\n         * @sample {highstock} stock/annotations/fibonacci-retracements\n         *         Custom annotation, Fibonacci retracement\n         *\n         * @type         {Array<*>}\n         * @since        6.0.0\n         * @requires     modules/annotations\n         * @optionparent annotations\n         */\n        var AnnotationDefaults = {\n            /**\n             * Sets an ID for an annotation. Can be user later when\n             * removing an annotation in [Chart#removeAnnotation(id)](\n             * /class-reference/Highcharts.Chart#removeAnnotation) method.\n             *\n             * @type      {number|string}\n             * @apioption annotations.id\n             */\n            /**\n             * Whether the annotation is visible.\n             *\n             * @sample highcharts/annotations/visible/\n             *         Set annotation visibility\n             */\n            visible: true,\n            /**\n             * Enable or disable the initial animation when a series is\n             * displayed for the `annotation`. The animation can also be set\n             * as a configuration object. Please note that this option only\n             * applies to the initial animation.\n             * For other animations, see [chart.animation](#chart.animation)\n             * and the animation parameter under the API methods.\n             * The following properties are supported:\n             *\n             * - `defer`: The animation delay time in milliseconds.\n             *\n             * @sample {highcharts} highcharts/annotations/defer/\n             *          Animation defer settings\n             * @type {boolean|Partial<Highcharts.AnimationOptionsObject>}\n             * @since 8.2.0\n             */\n            animation: {},\n            /**\n             * Whether to hide the part of the annotation\n             * that is outside the plot area.\n             *\n             * @sample highcharts/annotations/label-crop-overflow/\n             *         Crop line annotation\n             * @type  {boolean}\n             * @since 9.3.0\n             */\n            crop: true,\n            /**\n             * The animation delay time in milliseconds.\n             * Set to `0` renders annotation immediately.\n             * As `undefined` inherits defer time from the [series.animation.defer](#plotOptions.series.animation.defer).\n             *\n             * @type      {number}\n             * @since 8.2.0\n             * @apioption annotations.animation.defer\n             */\n            /**\n             * Allow an annotation to be draggable by a user. Possible\n             * values are `'x'`, `'xy'`, `'y'` and `''` (disabled).\n             *\n             * @sample highcharts/annotations/draggable/\n             *         Annotations draggable: 'xy'\n             *\n             * @type {Highcharts.AnnotationDraggableValue}\n             */\n            draggable: 'xy',\n            /**\n             * Options for annotation's labels. Each label inherits options\n             * from the labelOptions object. An option from the labelOptions\n             * can be overwritten by config for a specific label.\n             *\n             * @requires modules/annotations\n             */\n            labelOptions: {\n                /**\n                 * The alignment of the annotation's label. If right,\n                 * the right side of the label should be touching the point.\n                 *\n                 * @sample highcharts/annotations/label-position/\n                 *         Set labels position\n                 *\n                 * @type {Highcharts.AlignValue}\n                 */\n                align: 'center',\n                /**\n                 * Whether to allow the annotation's labels to overlap.\n                 * To make the labels less sensitive for overlapping,\n                 * the can be set to 0.\n                 *\n                 * @sample highcharts/annotations/tooltip-like/\n                 *         Hide overlapping labels\n                 */\n                allowOverlap: false,\n                /**\n                 * The background color or gradient for the annotation's\n                 * label.\n                 *\n                 * @sample highcharts/annotations/label-presentation/\n                 *         Set labels graphic options\n                 *\n                 * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: 'rgba(0, 0, 0, 0.75)',\n                /**\n                 * The border color for the annotation's label.\n                 *\n                 * @sample highcharts/annotations/label-presentation/\n                 *         Set labels graphic options\n                 *\n                 * @type {Highcharts.ColorString}\n                 */\n                borderColor: \"#000000\" /* Palette.neutralColor100 */,\n                /**\n                 * The border radius in pixels for the annotaiton's label.\n                 *\n                 * @sample highcharts/annotations/label-presentation/\n                 *         Set labels graphic options\n                 */\n                borderRadius: 3,\n                /**\n                 * The border width in pixels for the annotation's label\n                 *\n                 * @sample highcharts/annotations/label-presentation/\n                 *         Set labels graphic options\n                 */\n                borderWidth: 1,\n                /**\n                 * A class name for styling by CSS.\n                 *\n                 * @sample highcharts/css/annotations\n                 *         Styled mode annotations\n                 *\n                 * @since 6.0.5\n                 */\n                className: 'highcharts-no-tooltip',\n                /**\n                 * Whether to hide the annotation's label\n                 * that is outside the plot area.\n                 *\n                 * @sample highcharts/annotations/label-crop-overflow/\n                 *         Crop or justify labels\n                 */\n                crop: false,\n                /**\n                 * The label's pixel distance from the point.\n                 *\n                 * @sample highcharts/annotations/label-position/\n                 *         Set labels position\n                 *\n                 * @type      {number}\n                 * @apioption annotations.labelOptions.distance\n                 */\n                /**\n                 * A\n                 * [format](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting)\n                 * string for the data label.\n                 *\n                 * @see [plotOptions.series.dataLabels.format](plotOptions.series.dataLabels.format.html)\n                 *\n                 * @sample highcharts/annotations/label-text/\n                 *         Set labels text\n                 *\n                 * @type      {string}\n                 * @apioption annotations.labelOptions.format\n                 */\n                /**\n                 * Alias for the format option.\n                 *\n                 * @see [format](annotations.labelOptions.format.html)\n                 *\n                 * @sample highcharts/annotations/label-text/\n                 *         Set labels text\n                 *\n                 * @type      {string}\n                 * @apioption annotations.labelOptions.text\n                 */\n                /**\n                 * Callback JavaScript function to format the annotation's\n                 * label. Note that if a `format` or `text` are defined,\n                 * the format or text take precedence and the formatter is\n                 * ignored. `This` refers to a point object.\n                 *\n                 * @sample highcharts/annotations/label-text/\n                 *         Set labels text\n                 *\n                 * @type    {Highcharts.FormatterCallbackFunction<Highcharts.Point>}\n                 * @default function () { return defined(this.y) ? this.y : 'Annotation label'; }\n                 */\n                formatter: function () {\n                    return defined(this.y) ? '' + this.y : 'Annotation label';\n                },\n                /**\n                 * Whether the annotation is visible in the exported data\n                 * table.\n                 *\n                 * @sample highcharts/annotations/include-in-data-export/\n                 *         Do not include in the data export\n                 *\n                 * @since 8.2.0\n                 * @requires modules/export-data\n                 */\n                includeInDataExport: true,\n                /**\n                 * How to handle the annotation's label that flow outside\n                 * the plot area. The justify option aligns the label inside\n                 * the plot area.\n                 *\n                 * @sample highcharts/annotations/label-crop-overflow/\n                 *         Crop or justify labels\n                 *\n                 * @validvalue [\"allow\", \"justify\"]\n                 */\n                overflow: 'justify',\n                /**\n                 * When either the borderWidth or the backgroundColor is\n                 * set, this is the padding within the box.\n                 *\n                 * @sample highcharts/annotations/label-presentation/\n                 *         Set labels graphic options\n                 */\n                padding: 5,\n                /**\n                 * The shadow of the box. The shadow can be an object\n                 * configuration containing `color`, `offsetX`, `offsetY`,\n                 * `opacity` and `width`.\n                 *\n                 * @sample highcharts/annotations/label-presentation/\n                 *         Set labels graphic options\n                 *\n                 * @type {boolean|Highcharts.ShadowOptionsObject}\n                 */\n                shadow: false,\n                /**\n                 * The name of a symbol to use for the border around the\n                 * label. Symbols are predefined functions on the Renderer\n                 * object.\n                 *\n                 * @sample highcharts/annotations/shapes/\n                 *         Available shapes for labels\n                 */\n                shape: 'callout',\n                /**\n                 * Styles for the annotation's label.\n                 *\n                 * @see [plotOptions.series.dataLabels.style](plotOptions.series.dataLabels.style.html)\n                 *\n                 * @sample highcharts/annotations/label-presentation/\n                 *         Set labels graphic options\n                 *\n                 * @type {Highcharts.CSSObject}\n                 */\n                style: {\n                    /** @ignore */\n                    fontSize: '0.7em',\n                    /** @ignore */\n                    fontWeight: 'normal',\n                    /** @ignore */\n                    color: 'contrast'\n                },\n                /**\n                 * Whether to [use HTML](https://www.highcharts.com/docs/chart-concepts/labels-and-string-formatting#html)\n                 * to render the annotation's label.\n                 */\n                useHTML: false,\n                /**\n                 * The vertical alignment of the annotation's label.\n                 *\n                 * @sample highcharts/annotations/label-position/\n                 *         Set labels position\n                 *\n                 * @type {Highcharts.VerticalAlignValue}\n                 */\n                verticalAlign: 'bottom',\n                /**\n                 * The x position offset of the label relative to the point.\n                 * Note that if a `distance` is defined, the distance takes\n                 * precedence over `x` and `y` options.\n                 *\n                 * @sample highcharts/annotations/label-position/\n                 *         Set labels position\n                 */\n                x: 0,\n                /**\n                 * The y position offset of the label relative to the point.\n                 * Note that if a `distance` is defined, the distance takes\n                 * precedence over `x` and `y` options.\n                 *\n                 * @sample highcharts/annotations/label-position/\n                 *         Set labels position\n                 */\n                y: -16\n            },\n            /**\n             * An array of labels for the annotation. For options that apply\n             * to multiple labels, they can be added to the\n             * [labelOptions](annotations.labelOptions.html).\n             *\n             * @type      {Array<*>}\n             * @extends   annotations.labelOptions\n             * @apioption annotations.labels\n             */\n            /**\n             * This option defines the point to which the label will be\n             * connected. It can be either the point which exists in the\n             * series - it is referenced by the point's id - or a new point\n             * with defined x, y properties and optionally axes.\n             *\n             * @sample highcharts/annotations/mock-point/\n             *         Attach annotation to a mock point\n             * @sample highcharts/annotations/mock-points/\n             *         Attach annotation to a mock point with different ways\n             *\n             * @declare   Highcharts.AnnotationMockPointOptionsObject\n             * @type      {\n             *               string|\n             *               Highcharts.AnnotationMockPointOptionsObject|\n             *               Highcharts.AnnotationMockPointFunction\n             *            }\n             * @requires  modules/annotations\n             * @apioption annotations.labels.point\n             */\n            /**\n             * An array of shapes for the annotation. For options that apply\n             * to multiple shapes, then can be added to the\n             * [shapeOptions](annotations.shapeOptions.html).\n             *\n             * @type      {Array<*>}\n             * @extends   annotations.shapeOptions\n             * @apioption annotations.shapes\n             */\n            /**\n             * This option defines the point to which the shape will be\n             * connected. It can be either the point which exists in the\n             * series - it is referenced by the point's id - or a new point\n             * with defined x, y properties and optionally axes.\n             *\n             * @sample highcharts/annotations/mock-points/\n             *         Attach annotation to a mock point with different ways\n             *\n             * @declare   Highcharts.AnnotationMockPointOptionsObject\n             * @type      {\n             *               string|\n             *               Highcharts.AnnotationMockPointOptionsObject|\n             *               Highcharts.AnnotationMockPointFunction\n             *            }\n             * @extends   annotations.labels.point\n             * @requires  modules/annotations\n             * @apioption annotations.shapes.point\n             */\n            /**\n             * An array of points for the shape\n             * or a callback function that returns that shape point.\n             *\n             * This option is available\n             * for shapes which can use multiple points such as path. A\n             * point can be either a point object or a point's id.\n             *\n             * @see [annotations.shapes.point](annotations.shapes.point.html)\n             *\n             * @type      {Array<Highcharts.AnnotationShapePointOptions>}\n             * @extends   annotations.labels.point\n             * @apioption annotations.shapes.points\n             */\n            /**\n             * The URL for an image to use as the annotation shape. Note,\n             * type has to be set to `'image'`.\n             *\n             * @see [annotations.shapes.type](annotations.shapes.type)\n             * @sample highcharts/annotations/shape-src/\n             *         Define a marker image url for annotations\n             *\n             * @type      {string}\n             * @apioption annotations.shapes.src\n             */\n            /**\n             * Id of the marker which will be drawn at the final vertex of\n             * the path. Custom markers can be defined in defs property.\n             *\n             * @see [defs.markers](defs.markers.html)\n             *\n             * @sample highcharts/annotations/custom-markers/\n             *         Define a custom marker for annotations\n             *\n             * @type      {string}\n             * @apioption annotations.shapes.markerEnd\n             */\n            /**\n             * Id of the marker which will be drawn at the first vertex of\n             * the path. Custom markers can be defined in defs property.\n             *\n             * @see [defs.markers](defs.markers.html)\n             *\n             * @sample {highcharts} highcharts/annotations/custom-markers/\n             *         Define a custom marker for annotations\n             *\n             * @type      {string}\n             * @apioption annotations.shapes.markerStart\n             */\n            /**\n             * Options for annotation's shapes. Each shape inherits options\n             * from the shapeOptions object. An option from the shapeOptions\n             * can be overwritten by config for a specific shape.\n             *\n             * @requires  modules/annotations\n             */\n            shapeOptions: {\n                /**\n                 *\n                 * The radius of the shape in y direction.\n                 * Used for the ellipse.\n                 *\n                 * @sample highcharts/annotations/ellipse/\n                 *         Ellipse annotation\n                 *\n                 * @type      {number}\n                 * @apioption annotations.shapeOptions.ry\n                 **/\n                /**\n                 *\n                 * The xAxis index to which the points should be attached.\n                 * Used for the ellipse.\n                 *\n                 * @type      {number}\n                 * @apioption annotations.shapeOptions.xAxis\n                 **/\n                /**\n                 * The yAxis index to which the points should be attached.\n                 * Used for the ellipse.\n                 *\n                 * @type      {number}\n                 * @apioption annotations.shapeOptions.yAxis\n                 **/\n                /**\n                 * The width of the shape.\n                 *\n                 * @sample highcharts/annotations/shape/\n                 *         Basic shape annotation\n                 *\n                 * @type      {number}\n                 * @apioption annotations.shapeOptions.width\n                 **/\n                /**\n                 * The height of the shape.\n                 *\n                 * @sample highcharts/annotations/shape/\n                 *         Basic shape annotation\n                 *\n                 * @type      {number}\n                 * @apioption annotations.shapeOptions.height\n                 */\n                /**\n                 * The type of the shape.\n                 * Avaliable options are circle, rect and ellipse.\n                 *\n                 * @sample highcharts/annotations/shape/\n                 *         Basic shape annotation\n                 *\n                 * @sample highcharts/annotations/ellipse/\n                 *         Ellipse annotation\n                 *\n                 * @type      {string}\n                 * @default   rect\n                 * @apioption annotations.shapeOptions.type\n                 */\n                /**\n                 * The URL for an image to use as the annotation shape.\n                 * Note, type has to be set to `'image'`.\n                 *\n                 * @see [annotations.shapeOptions.type](annotations.shapeOptions.type)\n                 * @sample highcharts/annotations/shape-src/\n                 *         Define a marker image url for annotations\n                 *\n                 * @type      {string}\n                 * @apioption annotations.shapeOptions.src\n                 */\n                /**\n                 * Name of the dash style to use for the shape's stroke.\n                 *\n                 * @sample {highcharts} highcharts/plotoptions/series-dashstyle-all/\n                 *         Possible values demonstrated\n                 *\n                 * @type      {Highcharts.DashStyleValue}\n                 * @apioption annotations.shapeOptions.dashStyle\n                 */\n                /**\n                 * The color of the shape's stroke.\n                 *\n                 * @sample highcharts/annotations/shape/\n                 *         Basic shape annotation\n                 *\n                 * @type {Highcharts.ColorString}\n                 */\n                stroke: 'rgba(0, 0, 0, 0.75)',\n                /**\n                 * The pixel stroke width of the shape.\n                 *\n                 * @sample highcharts/annotations/shape/\n                 *         Basic shape annotation\n                 */\n                strokeWidth: 1,\n                /**\n                 * The color of the shape's fill.\n                 *\n                 * @sample highcharts/annotations/shape/\n                 *         Basic shape annotation\n                 *\n                 * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                fill: 'rgba(0, 0, 0, 0.75)',\n                /**\n                 * The radius of the shape.\n                 *\n                 * @sample highcharts/annotations/shape/\n                 *         Basic shape annotation\n                 */\n                r: 0,\n                /**\n                 * Defines additional snapping area around an annotation\n                 * making this annotation to focus. Defined in pixels.\n                 */\n                snap: 2\n            },\n            /**\n             * Options for annotation's control points. Each control point\n             * inherits options from controlPointOptions object.\n             * Options from the controlPointOptions can be overwritten\n             * by options in a specific control point.\n             *\n             * @declare  Highcharts.AnnotationControlPointOptionsObject\n             * @requires modules/annotations\n             */\n            controlPointOptions: {\n                /**\n                 * @type      {Highcharts.AnnotationControlPointPositionerFunction}\n                 * @apioption annotations.controlPointOptions.positioner\n                 */\n                /**\n                 * @type {Highcharts.Dictionary<Function>}\n                 */\n                events: {},\n                /**\n                 * @type {Highcharts.SVGAttributes}\n                 */\n                style: {\n                    cursor: 'pointer',\n                    fill: \"#ffffff\" /* Palette.backgroundColor */,\n                    stroke: \"#000000\" /* Palette.neutralColor100 */,\n                    'stroke-width': 2\n                },\n                height: 10,\n                symbol: 'circle',\n                visible: false,\n                width: 10\n            },\n            /**\n             * Event callback when annotation is added to the chart.\n             *\n             * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n             * @since     7.1.0\n             * @apioption annotations.events.add\n             */\n            /**\n             * Event callback when annotation is updated (e.g. drag and\n             * droppped or resized by control points).\n             *\n             * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n             * @since     7.1.0\n             * @apioption annotations.events.afterUpdate\n             */\n            /**\n             * Fires when the annotation is clicked.\n             *\n             * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n             * @since     7.1.0\n             * @apioption annotations.events.click\n             */\n            /**\n             * Fires when the annotation is dragged.\n             *\n             * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n             * @apioption annotations.events.drag\n             */\n            /**\n             * Event callback when annotation is removed from the chart.\n             *\n             * @type      {Highcharts.EventCallbackFunction<Highcharts.Annotation>}\n             * @since     7.1.0\n             * @apioption annotations.events.remove\n             */\n            /**\n             * Events available in annotations.\n             *\n             * @requires modules/annotations\n             */\n            events: {},\n            /**\n             * The Z index of the annotation.\n             */\n            zIndex: 6\n        }; // typeOptions are expected but not set\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return AnnotationDefaults;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/EventEmitter.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2009-2021 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc, isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, fireEvent = U.fireEvent, objectEach = U.objectEach, pick = U.pick, removeEvent = U.removeEvent;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         */\n        var EventEmitter = /** @class */ (function () {\n            function EventEmitter() {\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Add emitter events.\n             * @private\n             */\n            EventEmitter.prototype.addEvents = function () {\n                var emitter = this, addMouseDownEvent = function (element) {\n                    addEvent(element, isTouchDevice ? 'touchstart' : 'mousedown', function (e) {\n                        emitter.onMouseDown(e);\n                    }, { passive: false });\n                };\n                addMouseDownEvent(this.graphic.element);\n                (emitter.labels || []).forEach(function (label) {\n                    if (label.options.useHTML && label.graphic.text) {\n                        // Mousedown event bound to HTML element (#13070).\n                        addMouseDownEvent(label.graphic.text.element);\n                    }\n                });\n                objectEach(emitter.options.events, function (event, type) {\n                    var eventHandler = function (e) {\n                        if (type !== 'click' || !emitter.cancelClick) {\n                            event.call(emitter, emitter.chart.pointer.normalize(e), emitter.target);\n                        }\n                    };\n                    if ((emitter.nonDOMEvents || []).indexOf(type) === -1) {\n                        emitter.graphic.on(type, eventHandler);\n                    }\n                    else {\n                        addEvent(emitter, type, eventHandler, { passive: false });\n                    }\n                });\n                if (emitter.options.draggable) {\n                    addEvent(emitter, 'drag', emitter.onDrag);\n                    if (!emitter.graphic.renderer.styledMode) {\n                        var cssPointer_1 = {\n                            cursor: {\n                                x: 'ew-resize',\n                                y: 'ns-resize',\n                                xy: 'move'\n                            }[emitter.options.draggable]\n                        };\n                        emitter.graphic.css(cssPointer_1);\n                        (emitter.labels || []).forEach(function (label) {\n                            if (label.options.useHTML && label.graphic.text) {\n                                label.graphic.text.css(cssPointer_1);\n                            }\n                        });\n                    }\n                }\n                if (!emitter.isUpdating) {\n                    fireEvent(emitter, 'add');\n                }\n            };\n            /**\n             * Destroy the event emitter.\n             */\n            EventEmitter.prototype.destroy = function () {\n                this.removeDocEvents();\n                removeEvent(this);\n                this.hcEvents = null;\n            };\n            /**\n             * Map mouse move event to the radians.\n             * @private\n             */\n            EventEmitter.prototype.mouseMoveToRadians = function (e, cx, cy) {\n                var prevDy = e.prevChartY - cy, prevDx = e.prevChartX - cx, dy = e.chartY - cy, dx = e.chartX - cx, temp;\n                if (this.chart.inverted) {\n                    temp = prevDx;\n                    prevDx = prevDy;\n                    prevDy = temp;\n                    temp = dx;\n                    dx = dy;\n                    dy = temp;\n                }\n                return Math.atan2(dy, dx) - Math.atan2(prevDy, prevDx);\n            };\n            /**\n             * Map mouse move to the scale factors.\n             * @private\n             */\n            EventEmitter.prototype.mouseMoveToScale = function (e, cx, cy) {\n                var prevDx = e.prevChartX - cx, prevDy = e.prevChartY - cy, dx = e.chartX - cx, dy = e.chartY - cy;\n                var sx = (dx || 1) / (prevDx || 1), sy = (dy || 1) / (prevDy || 1);\n                if (this.chart.inverted) {\n                    var temp = sy;\n                    sy = sx;\n                    sx = temp;\n                }\n                return {\n                    x: sx,\n                    y: sy\n                };\n            };\n            /**\n             * Map mouse move event to the distance between two following events.\n             * @private\n             */\n            EventEmitter.prototype.mouseMoveToTranslation = function (e) {\n                var dx = e.chartX - e.prevChartX, dy = e.chartY - e.prevChartY, temp;\n                if (this.chart.inverted) {\n                    temp = dy;\n                    dy = dx;\n                    dx = temp;\n                }\n                return {\n                    x: dx,\n                    y: dy\n                };\n            };\n            /**\n             * Drag and drop event. All basic annotations should share this\n             * capability as well as the extended ones.\n             * @private\n             */\n            EventEmitter.prototype.onDrag = function (e) {\n                if (this.chart.isInsidePlot(e.chartX - this.chart.plotLeft, e.chartY - this.chart.plotTop, {\n                    visiblePlotOnly: true\n                })) {\n                    var translation_1 = this.mouseMoveToTranslation(e);\n                    if (this.options.draggable === 'x') {\n                        translation_1.y = 0;\n                    }\n                    if (this.options.draggable === 'y') {\n                        translation_1.x = 0;\n                    }\n                    var emitter = this;\n                    if (emitter.points.length) {\n                        emitter.translate(translation_1.x, translation_1.y);\n                    }\n                    else {\n                        emitter.shapes.forEach(function (shape) {\n                            return shape.translate(translation_1.x, translation_1.y);\n                        });\n                        emitter.labels.forEach(function (label) {\n                            return label.translate(translation_1.x, translation_1.y);\n                        });\n                    }\n                    this.redraw(false);\n                }\n            };\n            /**\n             * Mouse down handler.\n             * @private\n             */\n            EventEmitter.prototype.onMouseDown = function (e) {\n                var _a;\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n                // On right click, do nothing:\n                if (e.button === 2) {\n                    return;\n                }\n                var emitter = this, pointer = emitter.chart.pointer, \n                // Using experimental property on event object to check if event was\n                // created by touch on screen on hybrid device (#18122)\n                firesTouchEvents = ((_a = e === null || e === void 0 ? void 0 : e.sourceCapabilities) === null || _a === void 0 ? void 0 : _a.firesTouchEvents) || false;\n                e = pointer.normalize(e);\n                var prevChartX = e.chartX, prevChartY = e.chartY;\n                emitter.cancelClick = false;\n                emitter.chart.hasDraggedAnnotation = true;\n                emitter.removeDrag = addEvent(doc, isTouchDevice || firesTouchEvents ? 'touchmove' : 'mousemove', function (e) {\n                    emitter.hasDragged = true;\n                    e = pointer.normalize(e);\n                    e.prevChartX = prevChartX;\n                    e.prevChartY = prevChartY;\n                    fireEvent(emitter, 'drag', e);\n                    prevChartX = e.chartX;\n                    prevChartY = e.chartY;\n                }, isTouchDevice || firesTouchEvents ? { passive: false } : void 0);\n                emitter.removeMouseUp = addEvent(doc, isTouchDevice || firesTouchEvents ? 'touchend' : 'mouseup', function (e) {\n                    // Sometimes the target is the annotation and sometimes its the\n                    // controllable\n                    var annotation = pick(emitter.target && emitter.target.annotation, emitter.target);\n                    if (annotation) {\n                        // Keep annotation selected after dragging control point\n                        annotation.cancelClick = emitter.hasDragged;\n                    }\n                    emitter.cancelClick = emitter.hasDragged;\n                    emitter.hasDragged = false;\n                    emitter.chart.hasDraggedAnnotation = false;\n                    // ControlPoints vs Annotation:\n                    fireEvent(pick(annotation, // #15952\n                    emitter), 'afterUpdate');\n                    emitter.onMouseUp(e);\n                }, isTouchDevice || firesTouchEvents ? { passive: false } : void 0);\n            };\n            /**\n             * Mouse up handler.\n             */\n            EventEmitter.prototype.onMouseUp = function (_e) {\n                var chart = this.chart, annotation = this.target || this, annotationsOptions = chart.options.annotations, index = chart.annotations.indexOf(annotation);\n                this.removeDocEvents();\n                annotationsOptions[index] = annotation.options;\n            };\n            /**\n             * Remove emitter document events.\n             * @private\n             */\n            EventEmitter.prototype.removeDocEvents = function () {\n                if (this.removeDrag) {\n                    this.removeDrag = this.removeDrag();\n                }\n                if (this.removeMouseUp) {\n                    this.removeMouseUp = this.removeMouseUp();\n                }\n            };\n            return EventEmitter;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return EventEmitter;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/ControlPoint.js', [_modules['Extensions/Annotations/EventEmitter.js'], _modules['Core/Utilities.js']], function (EventEmitter, U) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * A control point class which is a connection between controllable\n         * transform methods and a user actions.\n         *\n         * @requires modules/annotations\n         *\n         * @class\n         * @name Highcharts.AnnotationControlPoint\n         *\n         * @hideconstructor\n         *\n         * @param {Highcharts.Chart} chart\n         * A chart instance.\n         *\n         * @param {Highcharts.AnnotationControllable} target\n         * A controllable instance which is a target for a control point.\n         *\n         * @param {Highcharts.AnnotationControlPointOptionsObject} options\n         * An options object.\n         *\n         * @param {number} [index]\n         * Point index.\n         */\n        var ControlPoint = /** @class */ (function (_super) {\n            __extends(ControlPoint, _super);\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function ControlPoint(chart, target, options, index) {\n                var _this = _super.call(this) || this;\n                _this.graphic = void 0;\n                /**\n                 * List of events for `anntation.options.events` that should not be\n                 * added to `annotation.graphic` but to the `annotation`.\n                 * @private\n                 * @name Highcharts.AnnotationControlPoint#nonDOMEvents\n                 * @type {Array<string>}\n                 */\n                _this.nonDOMEvents = ['drag'];\n                _this.chart = chart;\n                _this.target = target;\n                _this.options = options;\n                _this.index = pick(options.index, index);\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Destroy the control point.\n             * @private\n             */\n            ControlPoint.prototype.destroy = function () {\n                _super.prototype.destroy.call(this);\n                if (this.graphic) {\n                    this.graphic = this.graphic.destroy();\n                }\n                this.chart = null;\n                this.target = null;\n                this.options = null;\n            };\n            /**\n             * Redraw the control point.\n             * @private\n             * @param {boolean} [animation]\n             */\n            ControlPoint.prototype.redraw = function (animation) {\n                this.graphic[animation ? 'animate' : 'attr'](this.options.positioner.call(this, this.target));\n            };\n            /**\n             * Render the control point.\n             * @private\n             */\n            ControlPoint.prototype.render = function () {\n                var chart = this.chart, options = this.options;\n                this.graphic = chart.renderer\n                    .symbol(options.symbol, 0, 0, options.width, options.height)\n                    .add(chart.controlPointsGroup)\n                    .css(options.style);\n                this.setVisibility(options.visible);\n                // npm test -- --tests \"highcharts/annotations-advanced/*\"\n                this.addEvents();\n            };\n            /**\n             * Set the visibility of the control point.\n             *\n             * @function Highcharts.AnnotationControlPoint#setVisibility\n             *\n             * @param {boolean} visible\n             * Visibility of the control point.\n             *\n             */\n            ControlPoint.prototype.setVisibility = function (visible) {\n                this.graphic[visible ? 'show' : 'hide']();\n                this.options.visible = visible;\n            };\n            /**\n             * Update the control point.\n             *\n             * @function Highcharts.AnnotationControlPoint#update\n             *\n             * @param {Partial<Highcharts.AnnotationControlPointOptionsObject>} userOptions\n             * New options for the control point.\n             */\n            ControlPoint.prototype.update = function (userOptions) {\n                var chart = this.chart, target = this.target, index = this.index, options = merge(true, this.options, userOptions);\n                this.destroy();\n                this.constructor(chart, target, options, index);\n                this.render(chart.controlPointsGroup);\n                this.redraw();\n            };\n            return ControlPoint;\n        }(EventEmitter));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Callback to modify annotation's possitioner controls.\n         *\n         * @callback Highcharts.AnnotationControlPointPositionerFunction\n         * @param {Highcharts.AnnotationControlPoint} this\n         * @param {Highcharts.AnnotationControllable} target\n         * @return {Highcharts.PositionObject}\n         */\n        (''); // keeps doclets above in JS file\n\n        return ControlPoint;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/MockPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var seriesProto = SeriesRegistry.series.prototype;\n        var defined = U.defined, fireEvent = U.fireEvent;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * A trimmed point object which imitates {@link Highchart.Point} class. It is\n         * created when there is a need of pointing to some chart's position using axis\n         * values or pixel values\n         *\n         * @requires modules/annotations\n         *\n         * @private\n         * @class\n         * @name Highcharts.AnnotationMockPoint\n         *\n         * @hideconstructor\n         *\n         * @param {Highcharts.Chart} chart\n         * The chart instance.\n         *\n         * @param {Highcharts.AnnotationControllable|null} target\n         * The related controllable.\n         *\n         * @param {Highcharts.AnnotationMockPointOptionsObject|Function} options\n         * The options object.\n         */\n        var MockPoint = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function MockPoint(chart, target, options) {\n                this.plotX = void 0;\n                this.plotY = void 0;\n                /* *\n                 *\n                 * Functions\n                 *\n                 * */\n                /**\n                 * A flag indicating that a point is not the real one.\n                 *\n                 * @type {boolean}\n                 * @default true\n                 */\n                this.mock = true;\n                /**\n                 * A mock series instance imitating a real series from a real point.\n                 *\n                 * @name Annotation.AnnotationMockPoint#series\n                 * @type {Highcharts.AnnotationMockSeries}\n                 */\n                this.series = {\n                    visible: true,\n                    chart: chart,\n                    getPlotBox: seriesProto.getPlotBox\n                };\n                /**\n                 * @name Annotation.AnnotationMockPoint#target\n                 * @type {Highcharts.AnnotationControllable|null}\n                 */\n                this.target = target || null;\n                /**\n                 * Options for the mock point.\n                 *\n                 * @name Annotation.AnnotationMockPoint#options\n                 * @type {Highcharts.AnnotationsMockPointOptionsObject}\n                 */\n                this.options = options;\n                /**\n                 * If an xAxis is set it represents the point's value in terms of the\n                 * xAxis.\n                 *\n                 * @name Annotation.AnnotationMockPoint#x\n                 * @type {number|undefined}\n                 */\n                /**\n                 * If an yAxis is set it represents the point's value in terms of the\n                 * yAxis.\n                 *\n                 * @name Annotation.AnnotationMockPoint#y\n                 * @type {number|undefined}\n                 */\n                /**\n                 * It represents the point's pixel x coordinate relative to its plot\n                 * box.\n                 *\n                 * @name Annotation.AnnotationMockPoint#plotX\n                 * @type {number|undefined}\n                 */\n                /**\n                 * It represents the point's pixel y position relative to its plot box.\n                 *\n                 * @name Annotation.AnnotationMockPoint#plotY\n                 * @type {number|undefined}\n                 */\n                /**\n                 * Whether the point is inside the plot box.\n                 *\n                 * @name Annotation.AnnotationMockPoint#isInside\n                 * @type {boolean|undefined}\n                 */\n                this.applyOptions(this.getOptions());\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * Create a mock point from a real Highcharts point.\n             *\n             * @private\n             * @static\n             *\n             * @param {Highcharts.Point} point\n             *\n             * @return {Highcharts.AnnotationMockPoint}\n             * A mock point instance.\n             */\n            MockPoint.fromPoint = function (point) {\n                return new MockPoint(point.series.chart, null, {\n                    x: point.x,\n                    y: point.y,\n                    xAxis: point.series.xAxis,\n                    yAxis: point.series.yAxis\n                });\n            };\n            /**\n             * Get the pixel position from the point like object.\n             *\n             * @private\n             * @static\n             *\n             * @param {Highcharts.AnnotationPointType} point\n             *\n             * @param {boolean} [paneCoordinates]\n             *        Whether the pixel position should be relative\n             *\n             * @return {Highcharts.PositionObject} pixel position\n             */\n            MockPoint.pointToPixels = function (point, paneCoordinates) {\n                var series = point.series, chart = series.chart;\n                var x = point.plotX || 0, y = point.plotY || 0, plotBox;\n                if (chart.inverted) {\n                    if (point.mock) {\n                        x = point.plotY;\n                        y = point.plotX;\n                    }\n                    else {\n                        x = chart.plotWidth - (point.plotY || 0);\n                        y = chart.plotHeight - (point.plotX || 0);\n                    }\n                }\n                if (series && !paneCoordinates) {\n                    plotBox = series.getPlotBox();\n                    x += plotBox.translateX;\n                    y += plotBox.translateY;\n                }\n                return {\n                    x: x,\n                    y: y\n                };\n            };\n            /**\n             * Get fresh mock point options from the point like object.\n             *\n             * @private\n             * @static\n             *\n             * @param {Highcharts.AnnotationPointType} point\n             *\n             * @return {Highcharts.AnnotationMockPointOptionsObject}\n             * A mock point's options.\n             */\n            MockPoint.pointToOptions = function (point) {\n                return {\n                    x: point.x,\n                    y: point.y,\n                    xAxis: point.series.xAxis,\n                    yAxis: point.series.yAxis\n                };\n            };\n            /**\n             * Apply options for the point.\n             * @private\n             * @param {Highcharts.AnnotationMockPointOptionsObject} options\n             */\n            MockPoint.prototype.applyOptions = function (options) {\n                this.command = options.command;\n                this.setAxis(options, 'x');\n                this.setAxis(options, 'y');\n                this.refresh();\n            };\n            /**\n             * Returns a label config object - the same as\n             * Highcharts.Point.prototype.getLabelConfig\n             * @private\n             * @return {Highcharts.AnnotationMockLabelOptionsObject}\n             * The point's label config\n             */\n            MockPoint.prototype.getLabelConfig = function () {\n                return {\n                    x: this.x,\n                    y: this.y,\n                    point: this\n                };\n            };\n            /**\n             * Get the point's options.\n             * @private\n             * @return {Highcharts.AnnotationMockPointOptionsObject}\n             * The mock point's options.\n             */\n            MockPoint.prototype.getOptions = function () {\n                return this.hasDynamicOptions() ?\n                    this.options(this.target) :\n                    this.options;\n            };\n            /**\n             * Check if the point has dynamic options.\n             * @private\n             * @return {boolean}\n             * A positive flag if the point has dynamic options.\n             */\n            MockPoint.prototype.hasDynamicOptions = function () {\n                return typeof this.options === 'function';\n            };\n            /**\n             * Check if the point is inside its pane.\n             * @private\n             * @return {boolean} A flag indicating whether the point is inside the pane.\n             */\n            MockPoint.prototype.isInsidePlot = function () {\n                var plotX = this.plotX, plotY = this.plotY, xAxis = this.series.xAxis, yAxis = this.series.yAxis, e = {\n                    x: plotX,\n                    y: plotY,\n                    isInsidePlot: true,\n                    options: {}\n                };\n                if (xAxis) {\n                    e.isInsidePlot = defined(plotX) && plotX >= 0 && plotX <= xAxis.len;\n                }\n                if (yAxis) {\n                    e.isInsidePlot =\n                        e.isInsidePlot &&\n                            defined(plotY) &&\n                            plotY >= 0 && plotY <= yAxis.len;\n                }\n                fireEvent(this.series.chart, 'afterIsInsidePlot', e);\n                return e.isInsidePlot;\n            };\n            /**\n             * Refresh point values and coordinates based on its options.\n             * @private\n             */\n            MockPoint.prototype.refresh = function () {\n                var series = this.series, xAxis = series.xAxis, yAxis = series.yAxis, options = this.getOptions();\n                if (xAxis) {\n                    this.x = options.x;\n                    this.plotX = xAxis.toPixels(options.x, true);\n                }\n                else {\n                    this.x = void 0;\n                    this.plotX = options.x;\n                }\n                if (yAxis) {\n                    this.y = options.y;\n                    this.plotY = yAxis.toPixels(options.y, true);\n                }\n                else {\n                    this.y = null;\n                    this.plotY = options.y;\n                }\n                this.isInside = this.isInsidePlot();\n            };\n            /**\n             * Refresh point options based on its plot coordinates.\n             * @private\n             */\n            MockPoint.prototype.refreshOptions = function () {\n                var series = this.series, xAxis = series.xAxis, yAxis = series.yAxis;\n                this.x = this.options.x = xAxis ?\n                    this.options.x = xAxis.toValue(this.plotX, true) :\n                    this.plotX;\n                this.y = this.options.y = yAxis ?\n                    yAxis.toValue(this.plotY, true) :\n                    this.plotY;\n            };\n            /**\n             * Rotate the point.\n             * @private\n             * @param {number} cx origin x rotation\n             * @param {number} cy origin y rotation\n             * @param {number} radians\n             */\n            MockPoint.prototype.rotate = function (cx, cy, radians) {\n                if (!this.hasDynamicOptions()) {\n                    var cos = Math.cos(radians), sin = Math.sin(radians), x = this.plotX - cx, y = this.plotY - cy, tx = x * cos - y * sin, ty = x * sin + y * cos;\n                    this.plotX = tx + cx;\n                    this.plotY = ty + cy;\n                    this.refreshOptions();\n                }\n            };\n            /**\n             * Scale the point.\n             *\n             * @private\n             *\n             * @param {number} cx\n             * Origin x transformation.\n             *\n             * @param {number} cy\n             * Origin y transformation.\n             *\n             * @param {number} sx\n             * Scale factor x.\n             *\n             * @param {number} sy\n             * Scale factor y.\n             */\n            MockPoint.prototype.scale = function (cx, cy, sx, sy) {\n                if (!this.hasDynamicOptions()) {\n                    var x = this.plotX * sx, y = this.plotY * sy, tx = (1 - sx) * cx, ty = (1 - sy) * cy;\n                    this.plotX = tx + x;\n                    this.plotY = ty + y;\n                    this.refreshOptions();\n                }\n            };\n            /**\n             * Set x or y axis.\n             * @private\n             * @param {Highcharts.AnnotationMockPointOptionsObject} options\n             * @param {string} xOrY\n             * 'x' or 'y' string literal\n             */\n            MockPoint.prototype.setAxis = function (options, xOrY) {\n                var axisName = (xOrY + 'Axis'), axisOptions = options[axisName], chart = this.series.chart;\n                this.series[axisName] =\n                    typeof axisOptions === 'object' ?\n                        axisOptions :\n                        defined(axisOptions) ?\n                            (chart[axisName][axisOptions] ||\n                                // @todo v--- (axisName)[axisOptions] ?\n                                chart.get(axisOptions)) :\n                            null;\n            };\n            /**\n             * Transform the mock point to an anchor (relative position on the chart).\n             * @private\n             * @return {Array<number>}\n             * A quadruple of numbers which denotes x, y, width and height of the box\n             **/\n            MockPoint.prototype.toAnchor = function () {\n                var anchor = [this.plotX, this.plotY, 0, 0];\n                if (this.series.chart.inverted) {\n                    anchor[0] = this.plotY;\n                    anchor[1] = this.plotX;\n                }\n                return anchor;\n            };\n            /**\n             * Translate the point.\n             *\n             * @private\n             *\n             * @param {number|undefined} cx\n             * Origin x transformation.\n             *\n             * @param {number|undefined} cy\n             * Origin y transformation.\n             *\n             * @param {number} dx\n             * Translation for x coordinate.\n             *\n             * @param {number} dy\n             * Translation for y coordinate.\n             **/\n            MockPoint.prototype.translate = function (_cx, _cy, dx, dy) {\n                if (!this.hasDynamicOptions()) {\n                    this.plotX += dx;\n                    this.plotY += dy;\n                    this.refreshOptions();\n                }\n            };\n            return MockPoint;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * @private\n         * @interface Highcharts.AnnotationMockLabelOptionsObject\n         */ /**\n        * Point instance of the point.\n        * @name Highcharts.AnnotationMockLabelOptionsObject#point\n        * @type {Highcharts.AnnotationMockPoint}\n        */ /**\n        * X value translated to x axis scale.\n        * @name Highcharts.AnnotationMockLabelOptionsObject#x\n        * @type {number|null}\n        */ /**\n        * Y value translated to y axis scale.\n        * @name Highcharts.AnnotationMockLabelOptionsObject#y\n        * @type {number|null}\n        */\n        /**\n         * Object of shape point.\n         *\n         * @interface Highcharts.AnnotationMockPointOptionsObject\n         */ /**\n        * The x position of the point. Units can be either in axis\n        * or chart pixel coordinates.\n        *\n        * @type      {number}\n        * @name      Highcharts.AnnotationMockPointOptionsObject.x\n        */ /**\n        * The y position of the point. Units can be either in axis\n        * or chart pixel coordinates.\n        *\n        * @type      {number}\n        * @name      Highcharts.AnnotationMockPointOptionsObject.y\n        */ /**\n        * This number defines which xAxis the point is connected to.\n        * It refers to either the axis id or the index of the axis in\n        * the xAxis array. If the option is not configured or the axis\n        * is not found the point's x coordinate refers to the chart\n        * pixels.\n        *\n        * @type      {number|string|null}\n        * @name      Highcharts.AnnotationMockPointOptionsObject.xAxis\n        */ /**\n        * This number defines which yAxis the point is connected to.\n        * It refers to either the axis id or the index of the axis in\n        * the yAxis array. If the option is not configured or the axis\n        * is not found the point's y coordinate refers to the chart\n        * pixels.\n        *\n        * @type      {number|string|null}\n        * @name      Highcharts.AnnotationMockPointOptionsObject.yAxis\n        */\n        /**\n         * Callback function that returns the annotation shape point.\n         *\n         * @callback Highcharts.AnnotationMockPointFunction\n         *\n         * @param  {Highcharts.Annotation} annotation\n         *         An annotation instance.\n         *\n         * @return {Highcharts.AnnotationMockPointOptionsObject}\n         *         Annotations shape point.\n         */\n        /**\n         * A mock series instance imitating a real series from a real point.\n         * @private\n         * @interface Highcharts.AnnotationMockSeries\n         */ /**\n        * Whether a series is visible.\n        * @name Highcharts.AnnotationMockSeries#visible\n        * @type {boolean}\n        */ /**\n        * A chart instance.\n        * @name Highcharts.AnnotationMockSeries#chart\n        * @type {Highcharts.Chart}\n        */ /**\n        * @name Highcharts.AnnotationMockSeries#getPlotBox\n        * @type {Function}\n        */\n        /**\n         * Indicates if this is a mock point for an annotation.\n         * @name Highcharts.Point#mock\n         * @type {boolean|undefined}\n         */\n        (''); // keeps doclets above in JS file\n\n        return MockPoint;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/ControlTarget.js', [_modules['Extensions/Annotations/ControlPoint.js'], _modules['Extensions/Annotations/MockPoint.js'], _modules['Core/Utilities.js']], function (ControlPoint, MockPoint, U) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Composition Namespace\n         *\n         * */\n        var ControlTarget;\n        (function (ControlTarget) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedMembers = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Add control points.\n             * @private\n             */\n            function addControlPoints() {\n                var _this = this;\n                var controlPoints = this.controlPoints, controlPointsOptions = this.options.controlPoints || [];\n                controlPointsOptions.forEach(function (controlPointOptions, i) {\n                    var options = U.merge(_this.options.controlPointOptions, controlPointOptions);\n                    if (!options.index) {\n                        options.index = i;\n                    }\n                    controlPointsOptions[i] = options;\n                    controlPoints.push(new ControlPoint(_this.chart, _this, options));\n                });\n            }\n            /**\n             * Returns object which denotes anchor position - relative and absolute.\n             * @private\n             * @param {Highcharts.AnnotationPointType} point\n             * An annotation point.\n             *\n             * @return {Highcharts.AnnotationAnchorObject}\n             * An annotation anchor.\n             */\n            function anchor(point) {\n                var plotBox = point.series.getPlotBox(), chart = point.series.chart, box = point.mock ?\n                    point.toAnchor() :\n                    chart.tooltip &&\n                        chart.tooltip.getAnchor.call({\n                            chart: point.series.chart\n                        }, point) ||\n                        [0, 0, 0, 0], anchor = {\n                    x: box[0] + (this.options.x || 0),\n                    y: box[1] + (this.options.y || 0),\n                    height: box[2] || 0,\n                    width: box[3] || 0\n                };\n                return {\n                    relativePosition: anchor,\n                    absolutePosition: U.merge(anchor, {\n                        x: anchor.x + (point.mock ? plotBox.translateX : chart.plotLeft),\n                        y: anchor.y + (point.mock ? plotBox.translateY : chart.plotTop)\n                    })\n                };\n            }\n            /**\n             * Adds shared functions to be used with targets of ControlPoint.\n             * @private\n             */\n            function compose(ControlTargetClass) {\n                if (U.pushUnique(composedMembers, ControlTargetClass)) {\n                    U.merge(true, ControlTargetClass.prototype, {\n                        addControlPoints: addControlPoints,\n                        anchor: anchor,\n                        destroyControlTarget: destroyControlTarget,\n                        getPointsOptions: getPointsOptions,\n                        linkPoints: linkPoints,\n                        point: point,\n                        redrawControlPoints: redrawControlPoints,\n                        renderControlPoints: renderControlPoints,\n                        transform: transform,\n                        transformPoint: transformPoint,\n                        translate: translate,\n                        translatePoint: translatePoint\n                    });\n                }\n            }\n            ControlTarget.compose = compose;\n            /**\n             * Destroy control points.\n             * @private\n             */\n            function destroyControlTarget() {\n                this.controlPoints.forEach(function (controlPoint) { return controlPoint.destroy(); });\n                this.chart = null;\n                this.controlPoints = null;\n                this.points = null;\n                this.options = null;\n                if (this.annotation) {\n                    this.annotation = null;\n                }\n            }\n            /**\n             * Get the points options.\n             * @private\n             * @return {Array<Highcharts.PointOptionsObject>}\n             * An array of points' options.\n             */\n            function getPointsOptions() {\n                var options = this.options;\n                return (options.points ||\n                    (options.point && U.splat(options.point)));\n            }\n            /**\n             * Find point-like objects based on points options.\n             * @private\n             * @return {Array<Annotation.PointLike>}\n             *         An array of point-like objects.\n             */\n            function linkPoints() {\n                var pointsOptions = this.getPointsOptions(), points = this.points, len = (pointsOptions && pointsOptions.length) || 0;\n                var i, point;\n                for (i = 0; i < len; i++) {\n                    point = this.point(pointsOptions[i], points[i]);\n                    if (!point) {\n                        points.length = 0;\n                        return;\n                    }\n                    if (point.mock) {\n                        point.refresh();\n                    }\n                    points[i] = point;\n                }\n                return points;\n            }\n            /**\n             * Map point's options to a point-like object.\n             * @private\n             * @param {string|Function|Highcharts.AnnotationMockPointOptionsObject|Highcharts.AnnotationPointType} pointOptions\n             *        Point's options.\n             * @param {Highcharts.AnnotationPointType} point\n             *        A point-like instance.\n             * @return {Highcharts.AnnotationPointType|null}\n             *         If the point is found/set returns this point, otherwise null\n             */\n            function point(pointOptions, point) {\n                if (pointOptions && pointOptions.series) {\n                    return pointOptions;\n                }\n                if (!point || point.series === null) {\n                    if (U.isObject(pointOptions)) {\n                        point = new MockPoint(this.chart, this, pointOptions);\n                    }\n                    else if (U.isString(pointOptions)) {\n                        point = this.chart.get(pointOptions) || null;\n                    }\n                    else if (typeof pointOptions === 'function') {\n                        var pointConfig = pointOptions.call(point, this);\n                        point = pointConfig.series ?\n                            pointConfig :\n                            new MockPoint(this.chart, this, pointOptions);\n                    }\n                }\n                return point;\n            }\n            /**\n             * Redraw control points.\n             * @private\n             */\n            function redrawControlPoints(animation) {\n                this.controlPoints.forEach(function (controlPoint) { return controlPoint.redraw(animation); });\n            }\n            /**\n             * Render controll points.\n             * @private\n             */\n            function renderControlPoints() {\n                this.controlPoints.forEach(function (controlPoint) { return controlPoint.render(); });\n            }\n            /**\n             * Transform control points with a specific transformation.\n             * @private\n             * @param {string} transformation\n             *        A transformation name\n             * @param {number|null} cx\n             *        Origin x transformation\n             * @param {number|null} cy\n             *        Origin y transformation\n             * @param {number} p1\n             *        Param for the transformation\n             * @param {number} [p2]\n             *        Param for the transformation\n             */\n            function transform(transformation, cx, cy, p1, p2) {\n                var _this = this;\n                if (this.chart.inverted) {\n                    var temp = cx;\n                    cx = cy;\n                    cy = temp;\n                }\n                this.points.forEach(function (_point, i) { return (_this.transformPoint(transformation, cx, cy, p1, p2, i)); }, this);\n            }\n            /**\n             * Transform a point with a specific transformation\n             * If a transformed point is a real point it is replaced with\n             * the mock point.\n             * @private\n             * @param {string} transformation\n             *        A transformation name\n             * @param {number|null} cx\n             *        Origin x transformation\n             * @param {number|null} cy\n             *        Origin y transformation\n             * @param {number} p1\n             *        Param for the transformation\n             * @param {number|undefined} p2\n             *        Param for the transformation\n             * @param {number} i\n             *        Index of the point\n             */\n            function transformPoint(transformation, cx, cy, p1, p2, i) {\n                var point = this.points[i];\n                if (!point.mock) {\n                    point = this.points[i] = MockPoint.fromPoint(point);\n                }\n                point[transformation](cx, cy, p1, p2);\n            }\n            /**\n             * Translate control points.\n             * @private\n             * @param {number} dx\n             *        Translation for x coordinate\n             * @param {number} dy\n             *        Translation for y coordinate\n             **/\n            function translate(dx, dy) {\n                this.transform('translate', null, null, dx, dy);\n            }\n            /**\n             * Translate a specific control point.\n             * @private\n             * @param {number} dx\n             *        Translation for x coordinate\n             * @param {number} dy\n             *        Translation for y coordinate\n             * @param {number} i\n             *        Index of the point\n             **/\n            function translatePoint(dx, dy, i) {\n                this.transformPoint('translate', null, null, dx, dy, i);\n            }\n        })(ControlTarget || (ControlTarget = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ControlTarget;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Controllables/Controllable.js', [_modules['Extensions/Annotations/ControlTarget.js'], _modules['Core/Utilities.js']], function (ControlTarget, U) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * It provides methods for handling points, control points\n         * and points transformations.\n         * @private\n         */\n        var Controllable = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Controllable(annotation, options, index, itemType) {\n                this.graphic = void 0;\n                this.annotation = annotation;\n                this.chart = annotation.chart;\n                this.collection = (itemType === 'label' ? 'labels' : 'shapes');\n                this.controlPoints = [];\n                this.options = options;\n                this.points = [];\n                this.index = index;\n                this.itemType = itemType;\n                this.init(annotation, options, index);\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Redirect attr usage on the controllable graphic element.\n             * @private\n             */\n            Controllable.prototype.attr = function () {\n                var _args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    _args[_i] = arguments[_i];\n                }\n                this.graphic.attr.apply(this.graphic, arguments);\n            };\n            /**\n             * Utility function for mapping item's options\n             * to element's attribute\n             * @private\n             * @param {Highcharts.AnnotationsLabelsOptions|Highcharts.AnnotationsShapesOptions} options\n             * @return {Highcharts.SVGAttributes}\n             *         Mapped options.\n             */\n            Controllable.prototype.attrsFromOptions = function (options) {\n                var map = this.constructor.attrsMap, attrs = {}, styledMode = this.chart.styledMode;\n                var key, mappedKey;\n                for (key in options) { // eslint-disable-line guard-for-in\n                    mappedKey = map[key];\n                    if (typeof map[key] !== 'undefined' &&\n                        (!styledMode ||\n                            ['fill', 'stroke', 'stroke-width']\n                                .indexOf(mappedKey) === -1)) {\n                        attrs[mappedKey] = options[key];\n                    }\n                }\n                return attrs;\n            };\n            /**\n             * Destroy a controllable.\n             * @private\n             */\n            Controllable.prototype.destroy = function () {\n                if (this.graphic) {\n                    this.graphic = this.graphic.destroy();\n                }\n                if (this.tracker) {\n                    this.tracker = this.tracker.destroy();\n                }\n                this.destroyControlTarget();\n            };\n            /**\n             * Init the controllable\n             * @private\n             */\n            Controllable.prototype.init = function (annotation, options, index) {\n                this.annotation = annotation;\n                this.chart = annotation.chart;\n                this.options = options;\n                this.points = [];\n                this.controlPoints = [];\n                this.index = index;\n                this.linkPoints();\n                this.addControlPoints();\n            };\n            /**\n             * Redraw a controllable.\n             * @private\n             */\n            Controllable.prototype.redraw = function (animation) {\n                this.redrawControlPoints(animation);\n            };\n            /**\n             * Render a controllable.\n             * @private\n             */\n            Controllable.prototype.render = function (_parentGroup) {\n                this.renderControlPoints();\n            };\n            /**\n             * Rotate a controllable.\n             * @private\n             * @param {number} cx\n             *        Origin x rotation\n             * @param {number} cy\n             *        Origin y rotation\n             * @param {number} radians\n             **/\n            Controllable.prototype.rotate = function (cx, cy, radians) {\n                this.transform('rotate', cx, cy, radians);\n            };\n            /**\n             * Scale a controllable.\n             * @private\n             * @param {number} cx\n             *        Origin x rotation\n             * @param {number} cy\n             *        Origin y rotation\n             * @param {number} sx\n             *        Scale factor x\n             * @param {number} sy\n             *        Scale factor y\n             */\n            Controllable.prototype.scale = function (cx, cy, sx, sy) {\n                this.transform('scale', cx, cy, sx, sy);\n            };\n            /**\n             * Set control points' visibility.\n             * @private\n             */\n            Controllable.prototype.setControlPointsVisibility = function (visible) {\n                this.controlPoints.forEach(function (controlPoint) {\n                    controlPoint.setVisibility(visible);\n                });\n            };\n            /**\n             * Check if a controllable should be rendered/redrawn.\n             * @private\n             * @return {boolean}\n             *         Whether a controllable should be drawn.\n             */\n            Controllable.prototype.shouldBeDrawn = function () {\n                return !!this.points.length;\n            };\n            /**\n             * Translate shape within controllable item.\n             * Replaces `controllable.translate` method.\n             * @private\n             * @param {number} dx\n             *        Translation for x coordinate\n             * @param {number} dy\n             *        Translation for y coordinate\n             * @param {boolean|undefined} translateSecondPoint\n             *        If the shape has two points attached to it, this option allows you\n             *        to translate also the second point.\n             */\n            Controllable.prototype.translateShape = function (dx, dy, translateSecondPoint) {\n                var chart = this.annotation.chart, \n                // Annotation.options\n                shapeOptions = this.annotation.userOptions, \n                // Chart.options.annotations\n                annotationIndex = chart.annotations.indexOf(this.annotation), chartOptions = chart.options.annotations[annotationIndex];\n                this.translatePoint(dx, dy, 0);\n                if (translateSecondPoint) {\n                    this.translatePoint(dx, dy, 1);\n                }\n                // Options stored in:\n                // - chart (for exporting)\n                // - current config (for redraws)\n                chartOptions[this.collection][this.index]\n                    .point = this.options.point;\n                shapeOptions[this.collection][this.index]\n                    .point = this.options.point;\n            };\n            /**\n             * Update a controllable.\n             * @private\n             */\n            Controllable.prototype.update = function (newOptions) {\n                var annotation = this.annotation, options = merge(true, this.options, newOptions), parentGroup = this.graphic.parentGroup, Constructor = this.constructor;\n                this.destroy();\n                var newControllable = new Constructor(annotation, options, this.index, this.itemType);\n                merge(true, this, newControllable);\n                this.render(parentGroup);\n                this.redraw();\n            };\n            return Controllable;\n        }());\n        ControlTarget.compose(Controllable);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * An object which denots a controllable's anchor positions - relative and\n         * absolute.\n         *\n         * @private\n         * @interface Highcharts.AnnotationAnchorObject\n         */ /**\n        * Relative to the plot area position\n        * @name Highcharts.AnnotationAnchorObject#relativePosition\n        * @type {Highcharts.BBoxObject}\n        */ /**\n        * Absolute position\n        * @name Highcharts.AnnotationAnchorObject#absolutePosition\n        * @type {Highcharts.BBoxObject}\n        */\n        /**\n         * @interface Highcharts.AnnotationControllable\n         */ /**\n        * @name Highcharts.AnnotationControllable#annotation\n        * @type {Highcharts.Annotation}\n        */ /**\n        * @name Highcharts.AnnotationControllable#chart\n        * @type {Highcharts.Chart}\n        */ /**\n        * @name Highcharts.AnnotationControllable#collection\n        * @type {string}\n        */ /**\n        * @private\n        * @name Highcharts.AnnotationControllable#controlPoints\n        * @type {Array<Highcharts.AnnotationControlPoint>}\n        */ /**\n        * @name Highcharts.AnnotationControllable#points\n        * @type {Array<Highcharts.Point>}\n        */\n        (''); // keeps doclets above in JS file\n\n        return Controllable;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Controllables/ControllableDefaults.js', [], function () {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /**\n         * Options for configuring markers for annotations.\n         *\n         * An example of the arrow marker:\n         * <pre>\n         * {\n         *   arrow: {\n         *     id: 'arrow',\n         *     tagName: 'marker',\n         *     refY: 5,\n         *     refX: 5,\n         *     markerWidth: 10,\n         *     markerHeight: 10,\n         *     children: [{\n         *       tagName: 'path',\n         *       attrs: {\n         *         d: 'M 0 0 L 10 5 L 0 10 Z',\n         *         'stroke-width': 0\n         *       }\n         *     }]\n         *   }\n         * }\n         * </pre>\n         *\n         * @sample highcharts/annotations/custom-markers/\n         *         Define a custom marker for annotations\n         *\n         * @sample highcharts/css/annotations-markers/\n         *         Define markers in a styled mode\n         *\n         * @type         {Highcharts.Dictionary<Highcharts.ASTNode>}\n         * @since        6.0.0\n         * @optionparent defs\n         */\n        var defaultMarkers = {\n            /**\n             * @type {Highcharts.ASTNode}\n             */\n            arrow: {\n                tagName: 'marker',\n                attributes: {\n                    id: 'arrow',\n                    refY: 5,\n                    refX: 9,\n                    markerWidth: 10,\n                    markerHeight: 10\n                },\n                /**\n                 * @type {Array<Highcharts.DefsOptions>}\n                 */\n                children: [{\n                        tagName: 'path',\n                        attributes: {\n                            d: 'M 0 0 L 10 5 L 0 10 Z',\n                            'stroke-width': 0\n                        }\n                    }]\n            },\n            /**\n             * @type {Highcharts.ASTNode}\n             */\n            'reverse-arrow': {\n                tagName: 'marker',\n                attributes: {\n                    id: 'reverse-arrow',\n                    refY: 5,\n                    refX: 1,\n                    markerWidth: 10,\n                    markerHeight: 10\n                },\n                children: [{\n                        tagName: 'path',\n                        attributes: {\n                            // reverse triangle (used as an arrow)\n                            d: 'M 0 5 L 10 0 L 10 10 Z',\n                            'stroke-width': 0\n                        }\n                    }]\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ControllableDefaults = {\n            defaultMarkers: defaultMarkers\n        };\n\n        return ControllableDefaults;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Controllables/ControllablePath.js', [_modules['Extensions/Annotations/Controllables/Controllable.js'], _modules['Extensions/Annotations/Controllables/ControllableDefaults.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (Controllable, ControllableDefaults, H, U) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defaultMarkers = ControllableDefaults.defaultMarkers;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, merge = U.merge, uniqueKey = U.uniqueKey;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        var markerEndSetter = createMarkerSetter('marker-end');\n        var markerStartSetter = createMarkerSetter('marker-start');\n        // See TRACKER_FILL in highcharts.src.js\n        var TRACKER_FILL = 'rgba(192,192,192,' + (H.svg ? 0.0001 : 0.002) + ')';\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function createMarkerSetter(markerType) {\n            return function (value) {\n                this.attr(markerType, 'url(#' + value + ')');\n            };\n        }\n        /**\n         * @private\n         */\n        function onChartAfterGetContainer() {\n            this.options.defs = merge(defaultMarkers, this.options.defs || {});\n            // objectEach(this.options.defs, function (def): void {\n            //     const attributes = def.attributes;\n            //     if (\n            //         def.tagName === 'marker' &&\n            //         attributes &&\n            //         attributes.id &&\n            //         attributes.display !== 'none'\n            //     ) {\n            //         this.renderer.addMarker(attributes.id, def);\n            //     }\n            // }, this);\n        }\n        /**\n         * @private\n         */\n        function svgRendererAddMarker(id, markerOptions) {\n            var options = { attributes: { id: id } };\n            var attrs = {\n                stroke: markerOptions.color || 'none',\n                fill: markerOptions.color || 'rgba(0, 0, 0, 0.75)'\n            };\n            options.children = (markerOptions.children &&\n                markerOptions.children.map(function (child) {\n                    return merge(attrs, child);\n                }));\n            var ast = merge(true, {\n                attributes: {\n                    markerWidth: 20,\n                    markerHeight: 20,\n                    refX: 0,\n                    refY: 0,\n                    orient: 'auto'\n                }\n            }, markerOptions, options);\n            var marker = this.definition(ast);\n            marker.id = id;\n            return marker;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * A controllable path class.\n         *\n         * @requires modules/annotations\n         *\n         * @private\n         * @class\n         * @name Highcharts.AnnotationControllablePath\n         *\n         * @param {Highcharts.Annotation}\n         * Related annotation.\n         *\n         * @param {Highcharts.AnnotationsShapeOptions} options\n         * A path's options object.\n         *\n         * @param {number} index\n         * Index of the path.\n         */\n        var ControllablePath = /** @class */ (function (_super) {\n            __extends(ControllablePath, _super);\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function ControllablePath(annotation, options, index) {\n                var _this = _super.call(this, annotation, options, index, 'shape') || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.type = 'path';\n                return _this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            ControllablePath.compose = function (ChartClass, SVGRendererClass) {\n                if (U.pushUnique(composedMembers, ChartClass)) {\n                    addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n                }\n                if (U.pushUnique(composedMembers, SVGRendererClass)) {\n                    var svgRendererProto = SVGRendererClass.prototype;\n                    svgRendererProto.addMarker = svgRendererAddMarker;\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Map the controllable path to 'd' path attribute.\n             *\n             * @return {Highcharts.SVGPathArray|null}\n             * A path's d attribute.\n             */\n            ControllablePath.prototype.toD = function () {\n                var dOption = this.options.d;\n                if (dOption) {\n                    return typeof dOption === 'function' ?\n                        dOption.call(this) :\n                        dOption;\n                }\n                var points = this.points, len = points.length, d = [];\n                var showPath = len, point = points[0], position = showPath && this.anchor(point).absolutePosition, pointIndex = 0, command;\n                if (position) {\n                    d.push(['M', position.x, position.y]);\n                    while (++pointIndex < len && showPath) {\n                        point = points[pointIndex];\n                        command = point.command || 'L';\n                        position = this.anchor(point).absolutePosition;\n                        if (command === 'M') {\n                            d.push([command, position.x, position.y]);\n                        }\n                        else if (command === 'L') {\n                            d.push([command, position.x, position.y]);\n                        }\n                        else if (command === 'Z') {\n                            d.push([command]);\n                        }\n                        showPath = point.series.visible;\n                    }\n                }\n                return (showPath && this.graphic ?\n                    this.chart.renderer.crispLine(d, this.graphic.strokeWidth()) :\n                    null);\n            };\n            ControllablePath.prototype.shouldBeDrawn = function () {\n                return _super.prototype.shouldBeDrawn.call(this) || !!this.options.d;\n            };\n            ControllablePath.prototype.render = function (parent) {\n                var options = this.options, attrs = this.attrsFromOptions(options);\n                this.graphic = this.annotation.chart.renderer\n                    .path([['M', 0, 0]])\n                    .attr(attrs)\n                    .add(parent);\n                if (options.className) {\n                    this.graphic.addClass(options.className);\n                }\n                this.tracker = this.annotation.chart.renderer\n                    .path([['M', 0, 0]])\n                    .addClass('highcharts-tracker-line')\n                    .attr({\n                    zIndex: 2\n                })\n                    .add(parent);\n                if (!this.annotation.chart.styledMode) {\n                    this.tracker.attr({\n                        'stroke-linejoin': 'round',\n                        stroke: TRACKER_FILL,\n                        fill: TRACKER_FILL,\n                        'stroke-width': this.graphic.strokeWidth() +\n                            options.snap * 2\n                    });\n                }\n                _super.prototype.render.call(this);\n                extend(this.graphic, { markerStartSetter: markerStartSetter, markerEndSetter: markerEndSetter });\n                this.setMarkers(this);\n            };\n            ControllablePath.prototype.redraw = function (animation) {\n                if (this.graphic) {\n                    var d = this.toD(), action = animation ? 'animate' : 'attr';\n                    if (d) {\n                        this.graphic[action]({ d: d });\n                        this.tracker[action]({ d: d });\n                    }\n                    else {\n                        this.graphic.attr({ d: 'M 0 ' + -9e9 });\n                        this.tracker.attr({ d: 'M 0 ' + -9e9 });\n                    }\n                    this.graphic.placed = this.tracker.placed = !!d;\n                }\n                _super.prototype.redraw.call(this, animation);\n            };\n            /**\n             * Set markers.\n             * @private\n             * @param {Highcharts.AnnotationControllablePath} item\n             */\n            ControllablePath.prototype.setMarkers = function (item) {\n                var itemOptions = item.options, chart = item.chart, defs = chart.options.defs, fill = itemOptions.fill, color = defined(fill) && fill !== 'none' ?\n                    fill :\n                    itemOptions.stroke;\n                var setMarker = function (markerType) {\n                    var markerId = itemOptions[markerType], def, predefinedMarker, key, marker;\n                    if (markerId) {\n                        for (key in defs) { // eslint-disable-line guard-for-in\n                            def = defs[key];\n                            if ((markerId === (def.attributes && def.attributes.id) ||\n                                // Legacy, for\n                                // unit-tests/annotations/annotations-shapes\n                                markerId === def.id) &&\n                                def.tagName === 'marker') {\n                                predefinedMarker = def;\n                                break;\n                            }\n                        }\n                        if (predefinedMarker) {\n                            marker = item[markerType] = chart.renderer\n                                .addMarker((itemOptions.id || uniqueKey()) + '-' + markerId, merge(predefinedMarker, { color: color }));\n                            item.attr(markerType, marker.getAttribute('id'));\n                        }\n                    }\n                };\n                ['markerStart', 'markerEnd']\n                    .forEach(setMarker);\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            /**\n             * A map object which allows to map options attributes to element attributes\n             *\n             * @name Highcharts.AnnotationControllablePath.attrsMap\n             * @type {Highcharts.Dictionary<string>}\n             */\n            ControllablePath.attrsMap = {\n                dashStyle: 'dashstyle',\n                strokeWidth: 'stroke-width',\n                stroke: 'stroke',\n                fill: 'fill',\n                zIndex: 'zIndex'\n            };\n            return ControllablePath;\n        }(Controllable));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ControllablePath;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Controllables/ControllableRect.js', [_modules['Extensions/Annotations/Controllables/Controllable.js'], _modules['Extensions/Annotations/Controllables/ControllablePath.js'], _modules['Core/Utilities.js']], function (Controllable, ControllablePath, U) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * A controllable rect class.\n         *\n         * @requires modules/annotations\n         *\n         * @private\n         * @class\n         * @name Highcharts.AnnotationControllableRect\n         *\n         * @param {Highcharts.Annotation} annotation\n         * An annotation instance.\n         *\n         * @param {Highcharts.AnnotationsShapeOptions} options\n         * A rect's options.\n         *\n         * @param {number} index\n         * Index of the rectangle\n         */\n        var ControllableRect = /** @class */ (function (_super) {\n            __extends(ControllableRect, _super);\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function ControllableRect(annotation, options, index) {\n                var _this = _super.call(this, annotation, options, index, 'shape') || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.type = 'rect';\n                _this.translate = _super.prototype.translateShape;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            ControllableRect.prototype.render = function (parent) {\n                var attrs = this.attrsFromOptions(this.options);\n                this.graphic = this.annotation.chart.renderer\n                    .rect(0, -9e9, 0, 0)\n                    .attr(attrs)\n                    .add(parent);\n                _super.prototype.render.call(this);\n            };\n            ControllableRect.prototype.redraw = function (animation) {\n                if (this.graphic) {\n                    var position = this.anchor(this.points[0]).absolutePosition;\n                    if (position) {\n                        this.graphic[animation ? 'animate' : 'attr']({\n                            x: position.x,\n                            y: position.y,\n                            width: this.options.width,\n                            height: this.options.height\n                        });\n                    }\n                    else {\n                        this.attr({\n                            x: 0,\n                            y: -9e9\n                        });\n                    }\n                    this.graphic.placed = Boolean(position);\n                }\n                _super.prototype.redraw.call(this, animation);\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            /**\n             * A map object which allows to map options attributes to element attributes\n             *\n             * @type {Annotation.ControllableRect.AttrsMap}\n             */\n            ControllableRect.attrsMap = merge(ControllablePath.attrsMap, {\n                width: 'width',\n                height: 'height'\n            });\n            return ControllableRect;\n        }(Controllable));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ControllableRect;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Controllables/ControllableCircle.js', [_modules['Extensions/Annotations/Controllables/Controllable.js'], _modules['Extensions/Annotations/Controllables/ControllablePath.js'], _modules['Core/Utilities.js']], function (Controllable, ControllablePath, U) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * A controllable circle class.\n         *\n         * @requires modules/annotations\n         *\n         * @private\n         * @class\n         * @name Highcharts.AnnotationControllableCircle\n         *\n         * @param {Highcharts.Annotation} annotation an annotation instance\n         * @param {Highcharts.AnnotationsShapeOptions} options a shape's options\n         * @param {number} index of the circle\n         */\n        var ControllableCircle = /** @class */ (function (_super) {\n            __extends(ControllableCircle, _super);\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function ControllableCircle(annotation, options, index) {\n                var _this = _super.call(this, annotation, options, index, 'shape') || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.type = 'circle';\n                _this.translate = _super.prototype.translateShape;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            ControllableCircle.prototype.redraw = function (animation) {\n                if (this.graphic) {\n                    var position = this.anchor(this.points[0]).absolutePosition;\n                    if (position) {\n                        this.graphic[animation ? 'animate' : 'attr']({\n                            x: position.x,\n                            y: position.y,\n                            r: this.options.r\n                        });\n                    }\n                    else {\n                        this.graphic.attr({\n                            x: 0,\n                            y: -9e9\n                        });\n                    }\n                    this.graphic.placed = !!position;\n                }\n                _super.prototype.redraw.call(this, animation);\n            };\n            /**\n             * @private\n             */\n            ControllableCircle.prototype.render = function (parent) {\n                var attrs = this.attrsFromOptions(this.options);\n                this.graphic = this.annotation.chart.renderer\n                    .circle(0, -9e9, 0)\n                    .attr(attrs)\n                    .add(parent);\n                _super.prototype.render.call(this);\n            };\n            /**\n             * Set the radius.\n             * @private\n             * @param {number} r\n             *        A radius to be set\n             */\n            ControllableCircle.prototype.setRadius = function (r) {\n                this.options.r = r;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            /**\n             * A map object which allows to map options attributes to element\n             * attributes.\n             *\n             * @name Highcharts.AnnotationControllableCircle.attrsMap\n             * @type {Highcharts.Dictionary<string>}\n             */\n            ControllableCircle.attrsMap = merge(ControllablePath.attrsMap, { r: 'r' });\n            return ControllableCircle;\n        }(Controllable));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ControllableCircle;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Controllables/ControllableEllipse.js', [_modules['Extensions/Annotations/Controllables/Controllable.js'], _modules['Extensions/Annotations/Controllables/ControllablePath.js'], _modules['Core/Utilities.js']], function (Controllable, ControllablePath, U) {\n        /* *\n         *\n         * Author: Pawel Lysy\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var merge = U.merge, defined = U.defined;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * A controllable ellipse class.\n         *\n         * @requires modules/annotations\n         *\n         * @private\n         * @class\n         * @name Highcharts.AnnotationControllableEllipse\n         *\n         * @param {Highcharts.Annotation} annotation an annotation instance\n         * @param {Highcharts.AnnotationsShapeOptions} options a shape's options\n         * @param {number} index of the Ellipse\n         */\n        var ControllableEllipse = /** @class */ (function (_super) {\n            __extends(ControllableEllipse, _super);\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function ControllableEllipse(annotation, options, index) {\n                var _this = _super.call(this, annotation, options, index, 'shape') || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.type = 'ellipse';\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            ControllableEllipse.prototype.init = function (annotation, options, index) {\n                if (defined(options.yAxis)) {\n                    options.points.forEach(function (point) {\n                        point.yAxis = options.yAxis;\n                    });\n                }\n                if (defined(options.xAxis)) {\n                    options.points.forEach(function (point) {\n                        point.xAxis = options.xAxis;\n                    });\n                }\n                _super.prototype.init.call(this, annotation, options, index);\n            };\n            /**\n             * Render the element\n             * @private\n             * @param parent\n             *        Parent SVG element.\n             */\n            ControllableEllipse.prototype.render = function (parent) {\n                this.graphic = this.annotation.chart.renderer.createElement('ellipse')\n                    .attr(this.attrsFromOptions(this.options))\n                    .add(parent);\n                _super.prototype.render.call(this);\n            };\n            /**\n             * Translate the points. Mostly used to handle dragging of the ellipse.\n             * @private\n             */\n            ControllableEllipse.prototype.translate = function (dx, dy) {\n                _super.prototype.translateShape.call(this, dx, dy, true);\n            };\n            /**\n             * Get the distance from the line to the point.\n             * @private\n             * @param point1\n             *        First point which is on the line\n             * @param point2\n             *        Second point\n             * @param x0\n             *        Point's x value from which you want to calculate the distance from\n             * @param y0\n             *        Point's y value from which you want to calculate the distance from\n             */\n            ControllableEllipse.prototype.getDistanceFromLine = function (point1, point2, x0, y0) {\n                return Math.abs((point2.y - point1.y) * x0 - (point2.x - point1.x) * y0 +\n                    point2.x * point1.y - point2.y * point1.x) / Math.sqrt((point2.y - point1.y) * (point2.y - point1.y) +\n                    (point2.x - point1.x) * (point2.x - point1.x));\n            };\n            /**\n             * The fuction calculates the svg attributes of the ellipse, and returns all\n             * parameters neccessary to draw the ellipse.\n             * @private\n             * @param position\n             *        Absolute position of the first point in points array\n             * @param position2\n             *        Absolute position of the second point in points array\n             */\n            ControllableEllipse.prototype.getAttrs = function (position, position2) {\n                var x1 = position.x, y1 = position.y, x2 = position2.x, y2 = position2.y, cx = (x1 + x2) / 2, cy = (y1 + y2) / 2, rx = Math.sqrt((x1 - x2) * (x1 - x2) / 4 + (y1 - y2) * (y1 - y2) / 4), tan = (y2 - y1) / (x2 - x1);\n                var angle = Math.atan(tan) * 180 / Math.PI;\n                if (cx < x1) {\n                    angle += 180;\n                }\n                var ry = this.getRY();\n                return { cx: cx, cy: cy, rx: rx, ry: ry, angle: angle };\n            };\n            /**\n             * Get the value of minor radius of the ellipse.\n             * @private\n             */\n            ControllableEllipse.prototype.getRY = function () {\n                var yAxis = this.getYAxis();\n                return defined(yAxis) ?\n                    Math.abs(yAxis.toPixels(this.options.ry) - yAxis.toPixels(0)) :\n                    this.options.ry;\n            };\n            /**\n             * Get the yAxis object to which the ellipse is pinned.\n             * @private\n             */\n            ControllableEllipse.prototype.getYAxis = function () {\n                var yAxisIndex = this.options.yAxis;\n                return this.chart.yAxis[yAxisIndex];\n            };\n            /**\n             * Get the absolute coordinates of the MockPoint\n             * @private\n             * @param point\n             *        MockPoint that is added through options\n             */\n            ControllableEllipse.prototype.getAbsolutePosition = function (point) {\n                return this.anchor(point).absolutePosition;\n            };\n            /**\n             * Redraw the element\n             * @private\n             * @param animation\n             *        Display an annimation\n             */\n            ControllableEllipse.prototype.redraw = function (animation) {\n                if (this.graphic) {\n                    var position = this.getAbsolutePosition(this.points[0]), position2 = this.getAbsolutePosition(this.points[1]), attrs = this.getAttrs(position, position2);\n                    if (position) {\n                        this.graphic[animation ? 'animate' : 'attr']({\n                            cx: attrs.cx,\n                            cy: attrs.cy,\n                            rx: attrs.rx,\n                            ry: attrs.ry,\n                            rotation: attrs.angle,\n                            rotationOriginX: attrs.cx,\n                            rotationOriginY: attrs.cy\n                        });\n                    }\n                    else {\n                        this.graphic.attr({\n                            x: 0,\n                            y: -9e9\n                        });\n                    }\n                    this.graphic.placed = Boolean(position);\n                }\n                _super.prototype.redraw.call(this, animation);\n            };\n            /**\n             * Set the radius Y.\n             * @private\n             * @param {number} ry\n             *        A radius in y direction to be set\n             */\n            ControllableEllipse.prototype.setYRadius = function (ry) {\n                var shapes = this.annotation.userOptions.shapes;\n                this.options.ry = ry;\n                if (shapes && shapes[0]) {\n                    shapes[0].ry = ry;\n                    shapes[0].ry = ry;\n                }\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            /**\n             * A map object which allows to map options attributes to element\n             * attributes.\n             *\n             * @name Highcharts.AnnotationControllableEllipse.attrsMap\n             * @type {Highcharts.Dictionary<string>}\n             */\n            ControllableEllipse.attrsMap = merge(ControllablePath.attrsMap, {\n                ry: 'ry'\n            });\n            return ControllableEllipse;\n        }(Controllable));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ControllableEllipse;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Controllables/ControllableLabel.js', [_modules['Extensions/Annotations/Controllables/Controllable.js'], _modules['Core/Templating.js'], _modules['Extensions/Annotations/MockPoint.js'], _modules['Core/Utilities.js']], function (Controllable, F, MockPoint, U) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var format = F.format;\n        var extend = U.extend, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * General symbol definition for labels with connector\n         * @private\n         */\n        function symbolConnector(x, y, w, h, options) {\n            var anchorX = options && options.anchorX, anchorY = options && options.anchorY;\n            var path, yOffset, lateral = w / 2;\n            if (isNumber(anchorX) && isNumber(anchorY)) {\n                path = [['M', anchorX, anchorY]];\n                // Prefer 45 deg connectors\n                yOffset = y - anchorY;\n                if (yOffset < 0) {\n                    yOffset = -h - yOffset;\n                }\n                if (yOffset < w) {\n                    lateral = anchorX < x + (w / 2) ? yOffset : w - yOffset;\n                }\n                // Anchor below label\n                if (anchorY > y + h) {\n                    path.push(['L', x + lateral, y + h]);\n                    // Anchor above label\n                }\n                else if (anchorY < y) {\n                    path.push(['L', x + lateral, y]);\n                    // Anchor left of label\n                }\n                else if (anchorX < x) {\n                    path.push(['L', x, y + h / 2]);\n                    // Anchor right of label\n                }\n                else if (anchorX > x + w) {\n                    path.push(['L', x + w, y + h / 2]);\n                }\n            }\n            return path || [];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * A controllable label class.\n         *\n         * @requires modules/annotations\n         *\n         * @private\n         * @class\n         * @name Highcharts.AnnotationControllableLabel\n         *\n         * @param {Highcharts.Annotation} annotation\n         * An annotation instance.\n         * @param {Highcharts.AnnotationsLabelOptions} options\n         * A label's options.\n         * @param {number} index\n         * Index of the label.\n         */\n        var ControllableLabel = /** @class */ (function (_super) {\n            __extends(ControllableLabel, _super);\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function ControllableLabel(annotation, options, index) {\n                return _super.call(this, annotation, options, index, 'label') || this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * Returns new aligned position based alignment options and box to align to.\n             * It is almost a one-to-one copy from SVGElement.prototype.align\n             * except it does not use and mutate an element\n             *\n             * @param {Highcharts.AnnotationAlignObject} alignOptions\n             *\n             * @param {Highcharts.BBoxObject} box\n             *\n             * @return {Highcharts.PositionObject}\n             * Aligned position.\n             */\n            ControllableLabel.alignedPosition = function (alignOptions, box) {\n                var align = alignOptions.align, vAlign = alignOptions.verticalAlign;\n                var x = (box.x || 0) + (alignOptions.x || 0), y = (box.y || 0) + (alignOptions.y || 0), alignFactor, vAlignFactor;\n                if (align === 'right') {\n                    alignFactor = 1;\n                }\n                else if (align === 'center') {\n                    alignFactor = 2;\n                }\n                if (alignFactor) {\n                    x += (box.width - (alignOptions.width || 0)) / alignFactor;\n                }\n                if (vAlign === 'bottom') {\n                    vAlignFactor = 1;\n                }\n                else if (vAlign === 'middle') {\n                    vAlignFactor = 2;\n                }\n                if (vAlignFactor) {\n                    y += (box.height - (alignOptions.height || 0)) / vAlignFactor;\n                }\n                return {\n                    x: Math.round(x),\n                    y: Math.round(y)\n                };\n            };\n            ControllableLabel.compose = function (SVGRendererClass) {\n                if (U.pushUnique(composedMembers, SVGRendererClass)) {\n                    var svgRendererProto = SVGRendererClass.prototype;\n                    svgRendererProto.symbols.connector = symbolConnector;\n                }\n            };\n            /**\n             * Returns new alignment options for a label if the label is outside the\n             * plot area. It is almost a one-to-one copy from\n             * Series.prototype.justifyDataLabel except it does not mutate the label and\n             * it works with absolute instead of relative position.\n             */\n            ControllableLabel.justifiedOptions = function (chart, label, alignOptions, alignAttr) {\n                var align = alignOptions.align, verticalAlign = alignOptions.verticalAlign, padding = label.box ? 0 : (label.padding || 0), bBox = label.getBBox(), \n                //\n                options = {\n                    align: align,\n                    verticalAlign: verticalAlign,\n                    x: alignOptions.x,\n                    y: alignOptions.y,\n                    width: label.width,\n                    height: label.height\n                }, \n                //\n                x = (alignAttr.x || 0) - chart.plotLeft, y = (alignAttr.y || 0) - chart.plotTop;\n                var off;\n                // Off left\n                off = x + padding;\n                if (off < 0) {\n                    if (align === 'right') {\n                        options.align = 'left';\n                    }\n                    else {\n                        options.x = (options.x || 0) - off;\n                    }\n                }\n                // Off right\n                off = x + bBox.width - padding;\n                if (off > chart.plotWidth) {\n                    if (align === 'left') {\n                        options.align = 'right';\n                    }\n                    else {\n                        options.x = (options.x || 0) + chart.plotWidth - off;\n                    }\n                }\n                // Off top\n                off = y + padding;\n                if (off < 0) {\n                    if (verticalAlign === 'bottom') {\n                        options.verticalAlign = 'top';\n                    }\n                    else {\n                        options.y = (options.y || 0) - off;\n                    }\n                }\n                // Off bottom\n                off = y + bBox.height - padding;\n                if (off > chart.plotHeight) {\n                    if (verticalAlign === 'top') {\n                        options.verticalAlign = 'bottom';\n                    }\n                    else {\n                        options.y = (options.y || 0) + chart.plotHeight - off;\n                    }\n                }\n                return options;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Translate the point of the label by deltaX and deltaY translations.\n             * The point is the label's anchor.\n             *\n             * @param {number} dx translation for x coordinate\n             * @param {number} dy translation for y coordinate\n             */\n            ControllableLabel.prototype.translatePoint = function (dx, dy) {\n                _super.prototype.translatePoint.call(this, dx, dy, 0);\n            };\n            /**\n             * Translate x and y position relative to the label's anchor.\n             *\n             * @param {number} dx translation for x coordinate\n             * @param {number} dy translation for y coordinate\n             */\n            ControllableLabel.prototype.translate = function (dx, dy) {\n                var chart = this.annotation.chart, \n                // Annotation.options\n                labelOptions = this.annotation.userOptions, \n                // Chart.options.annotations\n                annotationIndex = chart.annotations.indexOf(this.annotation), chartAnnotations = chart.options.annotations, chartOptions = chartAnnotations[annotationIndex];\n                if (chart.inverted) {\n                    var temp = dx;\n                    dx = dy;\n                    dy = temp;\n                }\n                // Local options:\n                this.options.x += dx;\n                this.options.y += dy;\n                // Options stored in chart:\n                chartOptions[this.collection][this.index].x = this.options.x;\n                chartOptions[this.collection][this.index].y = this.options.y;\n                labelOptions[this.collection][this.index].x = this.options.x;\n                labelOptions[this.collection][this.index].y = this.options.y;\n            };\n            ControllableLabel.prototype.render = function (parent) {\n                var options = this.options, attrs = this.attrsFromOptions(options), style = options.style;\n                this.graphic = this.annotation.chart.renderer\n                    .label('', 0, -9999, // #10055\n                options.shape, null, null, options.useHTML, null, 'annotation-label')\n                    .attr(attrs)\n                    .add(parent);\n                if (!this.annotation.chart.styledMode) {\n                    if (style.color === 'contrast') {\n                        style.color = this.annotation.chart.renderer.getContrast(ControllableLabel.shapesWithoutBackground.indexOf(options.shape) > -1 ? '#FFFFFF' : options.backgroundColor);\n                    }\n                    this.graphic\n                        .css(options.style)\n                        .shadow(options.shadow);\n                }\n                if (options.className) {\n                    this.graphic.addClass(options.className);\n                }\n                this.graphic.labelrank = options.labelrank;\n                _super.prototype.render.call(this);\n            };\n            ControllableLabel.prototype.redraw = function (animation) {\n                var options = this.options, text = this.text || options.format || options.text, label = this.graphic, point = this.points[0];\n                if (!label) {\n                    this.redraw(animation);\n                    return;\n                }\n                label.attr({\n                    text: text ?\n                        format(String(text), point.getLabelConfig(), this.annotation.chart) :\n                        options.formatter.call(point, this)\n                });\n                var anchor = this.anchor(point);\n                var attrs = this.position(anchor);\n                if (attrs) {\n                    label.alignAttr = attrs;\n                    attrs.anchorX = anchor.absolutePosition.x;\n                    attrs.anchorY = anchor.absolutePosition.y;\n                    label[animation ? 'animate' : 'attr'](attrs);\n                }\n                else {\n                    label.attr({\n                        x: 0,\n                        y: -9999 // #10055\n                    });\n                }\n                label.placed = !!attrs;\n                _super.prototype.redraw.call(this, animation);\n            };\n            /**\n             * All basic shapes don't support alignTo() method except label.\n             * For a controllable label, we need to subtract translation from\n             * options.\n             */\n            ControllableLabel.prototype.anchor = function (_point) {\n                var anchor = _super.prototype.anchor.apply(this, arguments), x = this.options.x || 0, y = this.options.y || 0;\n                anchor.absolutePosition.x -= x;\n                anchor.absolutePosition.y -= y;\n                anchor.relativePosition.x -= x;\n                anchor.relativePosition.y -= y;\n                return anchor;\n            };\n            /**\n             * Returns the label position relative to its anchor.\n             */\n            ControllableLabel.prototype.position = function (anchor) {\n                var item = this.graphic, chart = this.annotation.chart, tooltip = chart.tooltip, point = this.points[0], itemOptions = this.options, anchorAbsolutePosition = anchor.absolutePosition, anchorRelativePosition = anchor.relativePosition;\n                var itemPosition, alignTo, itemPosRelativeX, itemPosRelativeY, showItem = point.series.visible &&\n                    MockPoint.prototype.isInsidePlot.call(point);\n                if (item && showItem) {\n                    var _a = item.width, width = _a === void 0 ? 0 : _a, _b = item.height, height = _b === void 0 ? 0 : _b;\n                    if (itemOptions.distance && tooltip) {\n                        itemPosition = tooltip.getPosition.call({\n                            chart: chart,\n                            distance: pick(itemOptions.distance, 16),\n                            getPlayingField: tooltip.getPlayingField\n                        }, width, height, {\n                            plotX: anchorRelativePosition.x,\n                            plotY: anchorRelativePosition.y,\n                            negative: point.negative,\n                            ttBelow: point.ttBelow,\n                            h: (anchorRelativePosition.height ||\n                                anchorRelativePosition.width)\n                        });\n                    }\n                    else if (itemOptions.positioner) {\n                        itemPosition = itemOptions.positioner.call(this);\n                    }\n                    else {\n                        alignTo = {\n                            x: anchorAbsolutePosition.x,\n                            y: anchorAbsolutePosition.y,\n                            width: 0,\n                            height: 0\n                        };\n                        itemPosition = ControllableLabel.alignedPosition(extend(itemOptions, {\n                            width: width,\n                            height: height\n                        }), alignTo);\n                        if (this.options.overflow === 'justify') {\n                            itemPosition = ControllableLabel.alignedPosition(ControllableLabel.justifiedOptions(chart, item, itemOptions, itemPosition), alignTo);\n                        }\n                    }\n                    if (itemOptions.crop) {\n                        itemPosRelativeX = itemPosition.x - chart.plotLeft;\n                        itemPosRelativeY = itemPosition.y - chart.plotTop;\n                        showItem =\n                            chart.isInsidePlot(itemPosRelativeX, itemPosRelativeY) &&\n                                chart.isInsidePlot(itemPosRelativeX + width, itemPosRelativeY + height);\n                    }\n                }\n                return showItem ? itemPosition : null;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            /**\n             * A map object which allows to map options attributes to element attributes\n             *\n             * @type {Highcharts.Dictionary<string>}\n             */\n            ControllableLabel.attrsMap = {\n                backgroundColor: 'fill',\n                borderColor: 'stroke',\n                borderWidth: 'stroke-width',\n                zIndex: 'zIndex',\n                borderRadius: 'r',\n                padding: 'padding'\n            };\n            /**\n             * Shapes which do not have background - the object is used for proper\n             * setting of the contrast color.\n             *\n             * @type {Array<string>}\n             */\n            ControllableLabel.shapesWithoutBackground = ['connector'];\n            return ControllableLabel;\n        }(Controllable));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ControllableLabel;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Controllables/ControllableImage.js', [_modules['Extensions/Annotations/Controllables/Controllable.js'], _modules['Extensions/Annotations/Controllables/ControllableLabel.js']], function (Controllable, ControllableLabel) {\n        /* *\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * A controllable image class.\n         *\n         * @requires modules/annotations\n         *\n         * @private\n         * @class\n         * @name Highcharts.AnnotationControllableImage\n         *\n         * @param {Highcharts.Annotation} annotation\n         * An annotation instance.\n         *\n         * @param {Highcharts.AnnotationsShapeOptions} options\n         * A controllable's options.\n         *\n         * @param {number} index\n         * Index of the image.\n         */\n        var ControllableImage = /** @class */ (function (_super) {\n            __extends(ControllableImage, _super);\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function ControllableImage(annotation, options, index) {\n                var _this = _super.call(this, annotation, options, index, 'shape') || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.type = 'image';\n                _this.translate = _super.prototype.translateShape;\n                return _this;\n            }\n            ControllableImage.prototype.render = function (parent) {\n                var attrs = this.attrsFromOptions(this.options), options = this.options;\n                this.graphic = this.annotation.chart.renderer\n                    .image(options.src, 0, -9e9, options.width, options.height)\n                    .attr(attrs)\n                    .add(parent);\n                this.graphic.width = options.width;\n                this.graphic.height = options.height;\n                _super.prototype.render.call(this);\n            };\n            ControllableImage.prototype.redraw = function (animation) {\n                if (this.graphic) {\n                    var anchor = this.anchor(this.points[0]), position = ControllableLabel.prototype.position.call(this, anchor);\n                    if (position) {\n                        this.graphic[animation ? 'animate' : 'attr']({\n                            x: position.x,\n                            y: position.y\n                        });\n                    }\n                    else {\n                        this.graphic.attr({\n                            x: 0,\n                            y: -9e9\n                        });\n                    }\n                    this.graphic.placed = Boolean(position);\n                }\n                _super.prototype.redraw.call(this, animation);\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            /**\n             * A map object which allows to map options attributes to element attributes\n             *\n             * @name Highcharts.AnnotationControllableImage.attrsMap\n             * @type {Highcharts.Dictionary<string>}\n             */\n            ControllableImage.attrsMap = {\n                width: 'width',\n                height: 'height',\n                zIndex: 'zIndex'\n            };\n            return ControllableImage;\n        }(Controllable));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ControllableImage;\n    });\n    _registerModule(_modules, 'Core/Chart/ChartNavigationComposition.js', [], function () {\n        /**\n         *\n         *  (c) 2010-2021 Paweł Fus\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ChartNavigationComposition;\n        (function (ChartNavigationComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(chart) {\n                if (!chart.navigation) {\n                    chart.navigation = new Additions(chart);\n                }\n                return chart;\n            }\n            ChartNavigationComposition.compose = compose;\n            /* *\n             *\n             *  Class\n             *\n             * */\n            /**\n             * Initializes `chart.navigation` object which delegates `update()` methods\n             * to all other common classes (used in exporting and navigationBindings).\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructor\n                 *\n                 * */\n                function Additions(chart) {\n                    this.updates = [];\n                    this.chart = chart;\n                }\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                /**\n                 * Registers an `update()` method in the `chart.navigation` object.\n                 *\n                 * @private\n                 * @param {UpdateFunction} updateFn\n                 * The `update()` method that will be called in `chart.update()`.\n                 */\n                Additions.prototype.addUpdate = function (updateFn) {\n                    this.chart.navigation.updates.push(updateFn);\n                };\n                /**\n                 * @private\n                 */\n                Additions.prototype.update = function (options, redraw) {\n                    var _this = this;\n                    this.updates.forEach(function (updateFn) {\n                        updateFn.call(_this.chart, options, redraw);\n                    });\n                };\n                return Additions;\n            }());\n            ChartNavigationComposition.Additions = Additions;\n        })(ChartNavigationComposition || (ChartNavigationComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ChartNavigationComposition;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/NavigationBindingsUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2021 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Define types for editable fields per annotation. There is no need to define\n         * numbers, because they won't change their type to string.\n         * @private\n         */\n        var annotationsFieldsTypes = {\n            backgroundColor: 'string',\n            borderColor: 'string',\n            borderRadius: 'string',\n            color: 'string',\n            fill: 'string',\n            fontSize: 'string',\n            labels: 'string',\n            name: 'string',\n            stroke: 'string',\n            title: 'string'\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Returns the first xAxis or yAxis that was clicked with its value.\n         *\n         * @private\n         *\n         * @param {Array<Highcharts.PointerAxisCoordinateObject>} coords\n         *        All the chart's x or y axes with a current pointer's axis value.\n         *\n         * @return {Highcharts.PointerAxisCoordinateObject}\n         *         Object with a first found axis and its value that pointer\n         *         is currently pointing.\n         */\n        function getAssignedAxis(coords) {\n            return coords.filter(function (coord) {\n                var extremes = coord.axis.getExtremes(), axisMin = extremes.min, axisMax = extremes.max, \n                // Correct axis edges when axis has series\n                // with pointRange (like column)\n                minPointOffset = pick(coord.axis.minPointOffset, 0);\n                return isNumber(axisMin) && isNumber(axisMax) &&\n                    coord.value >= (axisMin - minPointOffset) &&\n                    coord.value <= (axisMax + minPointOffset) &&\n                    // don't count navigator axis\n                    !coord.axis.options.isInternal;\n            })[0]; // If the axes overlap, return the first axis that was found.\n        }\n        /**\n         * Get field type according to value\n         *\n         * @private\n         *\n         * @param {'boolean'|'number'|'string'} value\n         * Atomic type (one of: string, number, boolean)\n         *\n         * @return {'checkbox'|'number'|'text'}\n         * Field type (one of: text, number, checkbox)\n         */\n        function getFieldType(key, value) {\n            var predefinedType = annotationsFieldsTypes[key];\n            var fieldType = typeof value;\n            if (defined(predefinedType)) {\n                fieldType = predefinedType;\n            }\n            return {\n                'string': 'text',\n                'number': 'number',\n                'boolean': 'checkbox'\n            }[fieldType];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigationBindingUtilities = {\n            annotationsFieldsTypes: annotationsFieldsTypes,\n            getAssignedAxis: getAssignedAxis,\n            getFieldType: getFieldType\n        };\n\n        return NavigationBindingUtilities;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/NavigationBindingsDefaults.js', [_modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Core/Utilities.js']], function (NBU, U) {\n        /* *\n         *\n         *  (c) 2009-2021 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var getAssignedAxis = NBU.getAssignedAxis;\n        var isNumber = U.isNumber, merge = U.merge;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * @optionparent lang\n         */\n        var lang = {\n            /**\n             * Configure the Popup strings in the chart. Requires the\n             * `annotations.js` or `annotations-advanced.src.js` module to be\n             * loaded.\n             * @since   7.0.0\n             * @product highcharts highstock\n             */\n            navigation: {\n                /**\n                 * Translations for all field names used in popup.\n                 *\n                 * @product highcharts highstock\n                 */\n                popup: {\n                    simpleShapes: 'Simple shapes',\n                    lines: 'Lines',\n                    circle: 'Circle',\n                    ellipse: 'Ellipse',\n                    rectangle: 'Rectangle',\n                    label: 'Label',\n                    shapeOptions: 'Shape options',\n                    typeOptions: 'Details',\n                    fill: 'Fill',\n                    format: 'Text',\n                    strokeWidth: 'Line width',\n                    stroke: 'Line color',\n                    title: 'Title',\n                    name: 'Name',\n                    labelOptions: 'Label options',\n                    labels: 'Labels',\n                    backgroundColor: 'Background color',\n                    backgroundColors: 'Background colors',\n                    borderColor: 'Border color',\n                    borderRadius: 'Border radius',\n                    borderWidth: 'Border width',\n                    style: 'Style',\n                    padding: 'Padding',\n                    fontSize: 'Font size',\n                    color: 'Color',\n                    height: 'Height',\n                    shapes: 'Shape options'\n                }\n            }\n        };\n        /**\n         * @optionparent navigation\n         * @product      highcharts highstock\n         */\n        var navigation = {\n            /**\n             * A CSS class name where all bindings will be attached to. Multiple\n             * charts on the same page should have separate class names to prevent\n             * duplicating events.\n             *\n             * Default value of versions < 7.0.4 `highcharts-bindings-wrapper`\n             *\n             * @since     7.0.0\n             * @type      {string}\n             */\n            bindingsClassName: 'highcharts-bindings-container',\n            /**\n             * Bindings definitions for custom HTML buttons. Each binding implements\n             * simple event-driven interface:\n             *\n             * - `className`: classname used to bind event to\n             *\n             * - `init`: initial event, fired on button click\n             *\n             * - `start`: fired on first click on a chart\n             *\n             * - `steps`: array of sequential events fired one after another on each\n             *   of users clicks\n             *\n             * - `end`: last event to be called after last step event\n             *\n             * @type         {Highcharts.Dictionary<Highcharts.NavigationBindingsOptionsObject>|*}\n             *\n             * @sample {highstock} stock/stocktools/stocktools-thresholds\n             *               Custom bindings\n             * @sample {highcharts} highcharts/annotations/bindings/\n             *               Simple binding\n             * @sample {highcharts} highcharts/annotations/bindings-custom-annotation/\n             *               Custom annotation binding\n             *\n             * @since        7.0.0\n             * @requires     modules/annotations\n             * @product      highcharts highstock\n             */\n            bindings: {\n                /**\n                 * A circle annotation bindings. Includes `start` and one event in\n                 * `steps` array.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-circle-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                circleAnnotation: {\n                    /** @ignore-option */\n                    className: 'highcharts-circle-annotation',\n                    /** @ignore-option */\n                    start: function (e) {\n                        var coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                        // Exit if clicked out of axes area\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'circle',\n                            type: 'basicAnnotation',\n                            shapes: [{\n                                    type: 'circle',\n                                    point: {\n                                        x: coordsX.value,\n                                        y: coordsY.value,\n                                        xAxis: coordsX.axis.index,\n                                        yAxis: coordsY.axis.index\n                                    },\n                                    r: 5\n                                }]\n                        }, navigation.annotationsOptions, navigation.bindings.circleAnnotation\n                            .annotationsOptions));\n                    },\n                    /** @ignore-option */\n                    steps: [\n                        function (e, annotation) {\n                            var shapes = annotation.options.shapes, mockPointOpts = ((shapes && shapes[0] && shapes[0].point) ||\n                                {});\n                            var distance;\n                            if (isNumber(mockPointOpts.xAxis) &&\n                                isNumber(mockPointOpts.yAxis)) {\n                                var inverted = this.chart.inverted, x = this.chart.xAxis[mockPointOpts.xAxis]\n                                    .toPixels(mockPointOpts.x), y = this.chart.yAxis[mockPointOpts.yAxis]\n                                    .toPixels(mockPointOpts.y);\n                                distance = Math.max(Math.sqrt(Math.pow(inverted ? y - e.chartX : x - e.chartX, 2) +\n                                    Math.pow(inverted ? x - e.chartY : y - e.chartY, 2)), 5);\n                            }\n                            annotation.update({\n                                shapes: [{\n                                        r: distance\n                                    }]\n                            });\n                        }\n                    ]\n                },\n                /**\n                 * A ellipse annotation bindings. Includes `start` and two events in\n                 * `steps` array. First updates the second point, responsible for a\n                 * rx width, and second updates the ry width.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-ellipse-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                ellipseAnnotation: {\n                    className: 'highcharts-ellipse-annotation',\n                    start: function (e) {\n                        var coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'ellipse',\n                            type: 'basicAnnotation',\n                            shapes: [\n                                {\n                                    type: 'ellipse',\n                                    xAxis: coordsX.axis.index,\n                                    yAxis: coordsY.axis.index,\n                                    points: [{\n                                            x: coordsX.value,\n                                            y: coordsY.value\n                                        }, {\n                                            x: coordsX.value,\n                                            y: coordsY.value\n                                        }],\n                                    ry: 1\n                                }\n                            ]\n                        }, navigation.annotationsOptions, navigation.bindings.ellipseAnnotation\n                            .annotationOptions));\n                    },\n                    steps: [\n                        function (e, annotation) {\n                            var target = annotation.shapes[0], position = target.getAbsolutePosition(target.points[1]);\n                            target.translatePoint(e.chartX - position.x, e.chartY - position.y, 1);\n                            target.redraw(false);\n                        },\n                        function (e, annotation) {\n                            var target = annotation.shapes[0], position = target.getAbsolutePosition(target.points[0]), position2 = target.getAbsolutePosition(target.points[1]), newR = target.getDistanceFromLine(position, position2, e.chartX, e.chartY), yAxis = target.getYAxis(), newRY = Math.abs(yAxis.toValue(0) - yAxis.toValue(newR));\n                            target.setYRadius(newRY);\n                            target.redraw(false);\n                        }\n                    ]\n                },\n                /**\n                 * A rectangle annotation bindings. Includes `start` and one event\n                 * in `steps` array.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-rectangle-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                rectangleAnnotation: {\n                    /** @ignore-option */\n                    className: 'highcharts-rectangle-annotation',\n                    /** @ignore-option */\n                    start: function (e) {\n                        var coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                        // Exit if clicked out of axes area\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        var x = coordsX.value, y = coordsY.value, xAxis = coordsX.axis.index, yAxis = coordsY.axis.index, navigation = this.chart.options.navigation;\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'rectangle',\n                            type: 'basicAnnotation',\n                            shapes: [{\n                                    type: 'path',\n                                    points: [\n                                        { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                        { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                        { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                        { xAxis: xAxis, yAxis: yAxis, x: x, y: y },\n                                        { command: 'Z' }\n                                    ]\n                                }]\n                        }, navigation\n                            .annotationsOptions, navigation\n                            .bindings\n                            .rectangleAnnotation\n                            .annotationsOptions));\n                    },\n                    /** @ignore-option */\n                    steps: [\n                        function (e, annotation) {\n                            var shapes = annotation.options.shapes, points = ((shapes && shapes[0] && shapes[0].points) ||\n                                []), coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis);\n                            if (coordsX && coordsY) {\n                                var x = coordsX.value, y = coordsY.value;\n                                // Top right point\n                                points[1].x = x;\n                                // Bottom right point (cursor position)\n                                points[2].x = x;\n                                points[2].y = y;\n                                // Bottom left\n                                points[3].y = y;\n                                annotation.update({\n                                    shapes: [{\n                                            points: points\n                                        }]\n                                });\n                            }\n                        }\n                    ]\n                },\n                /**\n                 * A label annotation bindings. Includes `start` event only.\n                 *\n                 * @type    {Highcharts.NavigationBindingsOptionsObject}\n                 * @default {\"className\": \"highcharts-label-annotation\", \"start\": function() {}, \"steps\": [function() {}], \"annotationsOptions\": {}}\n                 */\n                labelAnnotation: {\n                    /** @ignore-option */\n                    className: 'highcharts-label-annotation',\n                    /** @ignore-option */\n                    start: function (e) {\n                        var coords = this.chart.pointer.getCoordinates(e), coordsX = getAssignedAxis(coords.xAxis), coordsY = getAssignedAxis(coords.yAxis), navigation = this.chart.options.navigation;\n                        // Exit if clicked out of axes area\n                        if (!coordsX || !coordsY) {\n                            return;\n                        }\n                        return this.chart.addAnnotation(merge({\n                            langKey: 'label',\n                            type: 'basicAnnotation',\n                            labelOptions: {\n                                format: '{y:.2f}',\n                                overflow: 'none',\n                                crop: true\n                            },\n                            labels: [{\n                                    point: {\n                                        xAxis: coordsX.axis.index,\n                                        yAxis: coordsY.axis.index,\n                                        x: coordsX.value,\n                                        y: coordsY.value\n                                    }\n                                }]\n                        }, navigation\n                            .annotationsOptions, navigation\n                            .bindings\n                            .labelAnnotation\n                            .annotationsOptions));\n                    }\n                }\n            },\n            /**\n             * Path where Highcharts will look for icons. Change this to use icons\n             * from a different server.\n             *\n             * @type      {string}\n             * @default   https://code.highcharts.com/11.2.0/gfx/stock-icons/\n             * @since     7.1.3\n             * @apioption navigation.iconsURL\n             */\n            /**\n             * A `showPopup` event. Fired when selecting for example an annotation.\n             *\n             * @type      {Function}\n             * @apioption navigation.events.showPopup\n             */\n            /**\n             * A `closePopup` event. Fired when Popup should be hidden, for example\n             * when clicking on an annotation again.\n             *\n             * @type      {Function}\n             * @apioption navigation.events.closePopup\n             */\n            /**\n             * Event fired on a button click.\n             *\n             * @type      {Function}\n             * @sample    highcharts/annotations/gui/\n             *            Change icon in a dropddown on event\n             * @sample    highcharts/annotations/gui-buttons/\n             *            Change button class on event\n             * @apioption navigation.events.selectButton\n             */\n            /**\n             * Event fired when button state should change, for example after\n             * adding an annotation.\n             *\n             * @type      {Function}\n             * @sample    highcharts/annotations/gui/\n             *            Change icon in a dropddown on event\n             * @sample    highcharts/annotations/gui-buttons/\n             *            Change button class on event\n             * @apioption navigation.events.deselectButton\n             */\n            /**\n             * Events to communicate between Stock Tools and custom GUI.\n             *\n             * @since        7.0.0\n             * @product      highcharts highstock\n             * @optionparent navigation.events\n             */\n            events: {},\n            /**\n             * Additional options to be merged into all annotations.\n             *\n             * @sample stock/stocktools/navigation-annotation-options\n             *         Set red color of all line annotations\n             *\n             * @type      {Highcharts.AnnotationsOptions}\n             * @extends   annotations\n             * @exclude   crookedLine, elliottWave, fibonacci, infinityLine,\n             *            measure, pitchfork, tunnel, verticalLine, basicAnnotation\n             * @requires     modules/annotations\n             * @apioption navigation.annotationsOptions\n             */\n            annotationsOptions: {\n                animation: {\n                    defer: 0\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigationBindingDefaults = {\n            lang: lang,\n            navigation: navigation\n        };\n\n        return NavigationBindingDefaults;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/NavigationBindings.js', [_modules['Core/Chart/ChartNavigationComposition.js'], _modules['Core/Defaults.js'], _modules['Core/Templating.js'], _modules['Core/Globals.js'], _modules['Extensions/Annotations/NavigationBindingsDefaults.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Core/Utilities.js']], function (ChartNavigationComposition, D, F, H, NavigationBindingDefaults, NBU, U) {\n        /* *\n         *\n         *  (c) 2009-2021 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var format = F.format;\n        var doc = H.doc, win = H.win;\n        var getFieldType = NBU.getFieldType;\n        var addEvent = U.addEvent, attr = U.attr, defined = U.defined, fireEvent = U.fireEvent, isArray = U.isArray, isFunction = U.isFunction, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, objectEach = U.objectEach, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * IE 9-11 polyfill for Element.closest():\n         * @private\n         */\n        function closestPolyfill(el, s) {\n            var ElementProto = win.Element.prototype, elementMatches = ElementProto.matches ||\n                ElementProto.msMatchesSelector ||\n                ElementProto.webkitMatchesSelector;\n            var ret = null;\n            if (ElementProto.closest) {\n                ret = ElementProto.closest.call(el, s);\n            }\n            else {\n                do {\n                    if (elementMatches.call(el, s)) {\n                        return el;\n                    }\n                    el = el.parentElement || el.parentNode;\n                } while (el !== null && el.nodeType === 1);\n            }\n            return ret;\n        }\n        /**\n         * @private\n         */\n        function onAnnotationRemove() {\n            if (this.chart.navigationBindings) {\n                this.chart.navigationBindings.deselectAnnotation();\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartDestroy() {\n            if (this.navigationBindings) {\n                this.navigationBindings.destroy();\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartLoad() {\n            var options = this.options;\n            if (options && options.navigation && options.navigation.bindings) {\n                this.navigationBindings = new NavigationBindings(this, options.navigation);\n                this.navigationBindings.initEvents();\n                this.navigationBindings.initUpdate();\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRender() {\n            var navigationBindings = this.navigationBindings, disabledClassName = 'highcharts-disabled-btn';\n            if (this && navigationBindings) {\n                // Check if the buttons should be enabled/disabled based on\n                // visible series.\n                var buttonsEnabled_1 = false;\n                this.series.forEach(function (series) {\n                    if (!series.options.isInternal && series.visible) {\n                        buttonsEnabled_1 = true;\n                    }\n                });\n                if (this.navigationBindings &&\n                    this.navigationBindings.container &&\n                    this.navigationBindings.container[0]) {\n                    var container_1 = this.navigationBindings.container[0];\n                    objectEach(navigationBindings.boundClassNames, function (value, key) {\n                        // Get the HTML element coresponding to the className taken\n                        // from StockToolsBindings.\n                        var buttonNode = container_1.querySelectorAll('.' + key);\n                        if (buttonNode) {\n                            for (var i = 0; i < buttonNode.length; i++) {\n                                var button = buttonNode[i], cls = button.className;\n                                if (value.noDataState === 'normal') {\n                                    // If button has noDataState: 'normal', and has\n                                    // disabledClassName, remove this className.\n                                    if (cls.indexOf(disabledClassName) !== -1) {\n                                        button.classList.remove(disabledClassName);\n                                    }\n                                }\n                                else if (!buttonsEnabled_1) {\n                                    if (cls.indexOf(disabledClassName) === -1) {\n                                        button.className += ' ' + disabledClassName;\n                                    }\n                                }\n                                else {\n                                    // Enable all buttons by deleting the className.\n                                    if (cls.indexOf(disabledClassName) !== -1) {\n                                        button.classList.remove(disabledClassName);\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onNavigationBindingsClosePopup() {\n            this.deselectAnnotation();\n        }\n        /**\n         * @private\n         */\n        function onNavigationBindingsDeselectButton() {\n            this.selectedButtonElement = null;\n        }\n        /**\n         * Show edit-annotation form:\n         * @private\n         */\n        function selectableAnnotation(annotationType) {\n            var originalClick = annotationType.prototype.defaultOptions.events &&\n                annotationType.prototype.defaultOptions.events.click;\n            /**\n             * Select and show popup\n             * @private\n             */\n            function selectAndShowPopup(eventArguments) {\n                var annotation = this, navigation = annotation.chart.navigationBindings, prevAnnotation = navigation.activeAnnotation;\n                if (originalClick) {\n                    originalClick.call(annotation, eventArguments);\n                }\n                if (prevAnnotation !== annotation) {\n                    // Select current:\n                    navigation.deselectAnnotation();\n                    navigation.activeAnnotation = annotation;\n                    annotation.setControlPointsVisibility(true);\n                    fireEvent(navigation, 'showPopup', {\n                        annotation: annotation,\n                        formType: 'annotation-toolbar',\n                        options: navigation.annotationToFields(annotation),\n                        onSubmit: function (data) {\n                            if (data.actionType === 'remove') {\n                                navigation.activeAnnotation = false;\n                                navigation.chart.removeAnnotation(annotation);\n                            }\n                            else {\n                                var config = {};\n                                navigation.fieldsToOptions(data.fields, config);\n                                navigation.deselectAnnotation();\n                                var typeOptions = config.typeOptions;\n                                if (annotation.options.type === 'measure') {\n                                    // Manually disable crooshars according to\n                                    // stroke width of the shape:\n                                    typeOptions.crosshairY.enabled = (typeOptions.crosshairY\n                                        .strokeWidth !== 0);\n                                    typeOptions.crosshairX.enabled = (typeOptions.crosshairX\n                                        .strokeWidth !== 0);\n                                }\n                                annotation.update(config);\n                            }\n                        }\n                    });\n                }\n                else {\n                    // Deselect current:\n                    fireEvent(navigation, 'closePopup');\n                }\n                // Let bubble event to chart.click:\n                eventArguments.activeAnnotation = true;\n            }\n            // #18276, show popup on touchend, but not on touchmove\n            var touchStartX, touchStartY;\n            function saveCoords(e) {\n                touchStartX = e.touches[0].clientX;\n                touchStartY = e.touches[0].clientY;\n            }\n            function checkForTouchmove(e) {\n                var hasMoved = touchStartX ? Math.sqrt(Math.pow(touchStartX - e.changedTouches[0].clientX, 2) +\n                    Math.pow(touchStartY - e.changedTouches[0].clientY, 2)) >= 4 : false;\n                if (!hasMoved) {\n                    selectAndShowPopup.call(this, e);\n                }\n            }\n            merge(true, annotationType.prototype.defaultOptions.events, {\n                click: selectAndShowPopup,\n                touchstart: saveCoords,\n                touchend: checkForTouchmove\n            });\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         */\n        var NavigationBindings = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function NavigationBindings(chart, options) {\n                this.boundClassNames = void 0;\n                this.selectedButton = void 0;\n                this.chart = chart;\n                this.options = options;\n                this.eventsToUnbind = [];\n                this.container =\n                    this.chart.container.getElementsByClassName(this.options.bindingsClassName || '');\n                if (!this.container.length) {\n                    this.container = doc.getElementsByClassName(this.options.bindingsClassName || '');\n                }\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            NavigationBindings.compose = function (AnnotationClass, ChartClass) {\n                if (U.pushUnique(composedMembers, AnnotationClass)) {\n                    addEvent(AnnotationClass, 'remove', onAnnotationRemove);\n                    // Basic shapes:\n                    selectableAnnotation(AnnotationClass);\n                    // Advanced annotations:\n                    objectEach(AnnotationClass.types, function (annotationType) {\n                        selectableAnnotation(annotationType);\n                    });\n                }\n                if (U.pushUnique(composedMembers, ChartClass)) {\n                    addEvent(ChartClass, 'destroy', onChartDestroy);\n                    addEvent(ChartClass, 'load', onChartLoad);\n                    addEvent(ChartClass, 'render', onChartRender);\n                }\n                if (U.pushUnique(composedMembers, NavigationBindings)) {\n                    addEvent(NavigationBindings, 'closePopup', onNavigationBindingsClosePopup);\n                    addEvent(NavigationBindings, 'deselectButton', onNavigationBindingsDeselectButton);\n                }\n                if (U.pushUnique(composedMembers, setOptions)) {\n                    setOptions(NavigationBindingDefaults);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initi all events conencted to NavigationBindings.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#initEvents\n             */\n            NavigationBindings.prototype.initEvents = function () {\n                var navigation = this, chart = navigation.chart, bindingsContainer = navigation.container, options = navigation.options;\n                // Shorthand object for getting events for buttons:\n                navigation.boundClassNames = {};\n                objectEach((options.bindings || {}), function (value) {\n                    navigation.boundClassNames[value.className] = value;\n                });\n                // Handle multiple containers with the same class names:\n                [].forEach.call(bindingsContainer, function (subContainer) {\n                    navigation.eventsToUnbind.push(addEvent(subContainer, 'click', function (event) {\n                        var bindings = navigation.getButtonEvents(subContainer, event);\n                        if (bindings &&\n                            (!bindings.button.classList\n                                .contains('highcharts-disabled-btn'))) {\n                            navigation.bindingsButtonClick(bindings.button, bindings.events, event);\n                        }\n                    }));\n                });\n                objectEach((options.events || {}), function (callback, eventName) {\n                    if (isFunction(callback)) {\n                        navigation.eventsToUnbind.push(addEvent(navigation, eventName, callback, { passive: false }));\n                    }\n                });\n                navigation.eventsToUnbind.push(addEvent(chart.container, 'click', function (e) {\n                    if (!chart.cancelClick &&\n                        chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop, {\n                            visiblePlotOnly: true\n                        })) {\n                        navigation.bindingsChartClick(this, e);\n                    }\n                }));\n                navigation.eventsToUnbind.push(addEvent(chart.container, H.isTouchDevice ? 'touchmove' : 'mousemove', function (e) {\n                    navigation.bindingsContainerMouseMove(this, e);\n                }, H.isTouchDevice ? { passive: false } : void 0));\n            };\n            /**\n             * Common chart.update() delegation, shared between bindings and exporting.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#initUpdate\n             */\n            NavigationBindings.prototype.initUpdate = function () {\n                var navigation = this;\n                ChartNavigationComposition\n                    .compose(this.chart).navigation\n                    .addUpdate(function (options) {\n                    navigation.update(options);\n                });\n            };\n            /**\n             * Hook for click on a button, method selcts/unselects buttons,\n             * then calls `bindings.init` callback.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#bindingsButtonClick\n             *\n             * @param {Highcharts.HTMLDOMElement} [button]\n             *        Clicked button\n             *\n             * @param {Object} events\n             *        Events passed down from bindings (`init`, `start`, `step`, `end`)\n             *\n             * @param {Highcharts.PointerEventObject} clickEvent\n             *        Browser's click event\n             */\n            NavigationBindings.prototype.bindingsButtonClick = function (button, events, clickEvent) {\n                var navigation = this, chart = navigation.chart, svgContainer = chart.renderer.boxWrapper;\n                var shouldEventBeFired = true;\n                if (navigation.selectedButtonElement) {\n                    if (navigation.selectedButtonElement.classList === button.classList) {\n                        shouldEventBeFired = false;\n                    }\n                    fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                    if (navigation.nextEvent) {\n                        // Remove in-progress annotations adders:\n                        if (navigation.currentUserDetails &&\n                            navigation.currentUserDetails.coll === 'annotations') {\n                            chart.removeAnnotation(navigation.currentUserDetails);\n                        }\n                        navigation.mouseMoveEvent = navigation.nextEvent = false;\n                    }\n                }\n                if (shouldEventBeFired) {\n                    navigation.selectedButton = events;\n                    navigation.selectedButtonElement = button;\n                    fireEvent(navigation, 'selectButton', { button: button });\n                    // Call \"init\" event, for example to open modal window\n                    if (events.init) {\n                        events.init.call(navigation, button, clickEvent);\n                    }\n                    if (events.start || events.steps) {\n                        chart.renderer.boxWrapper.addClass('highcharts-draw-mode');\n                    }\n                }\n                else {\n                    chart.stockTools &&\n                        chart.stockTools.toggleButtonActiveClass(button);\n                    svgContainer.removeClass('highcharts-draw-mode');\n                    navigation.nextEvent = false;\n                    navigation.mouseMoveEvent = false;\n                    navigation.selectedButton = null;\n                }\n            };\n            /**\n             * Hook for click on a chart, first click on a chart calls `start` event,\n             * then on all subsequent clicks iterate over `steps` array.\n             * When finished, calls `end` event.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#bindingsChartClick\n             *\n             * @param {Highcharts.Chart} chart\n             *        Chart that click was performed on.\n             *\n             * @param {Highcharts.PointerEventObject} clickEvent\n             *        Browser's click event.\n             */\n            NavigationBindings.prototype.bindingsChartClick = function (chart, clickEvent) {\n                chart = this.chart;\n                var navigation = this, activeAnnotation = navigation.activeAnnotation, selectedButton = navigation.selectedButton, svgContainer = chart.renderer.boxWrapper;\n                if (activeAnnotation) {\n                    // Click outside popups, should close them and deselect the\n                    // annotation\n                    if (!activeAnnotation.cancelClick && // #15729\n                        !clickEvent.activeAnnotation &&\n                        // Element could be removed in the child action, e.g. button\n                        clickEvent.target.parentNode &&\n                        // TO DO: Polyfill for IE11?\n                        !closestPolyfill(clickEvent.target, '.highcharts-popup')) {\n                        fireEvent(navigation, 'closePopup');\n                    }\n                    else if (activeAnnotation.cancelClick) {\n                        // Reset cancelClick after the other event handlers have run\n                        setTimeout(function () {\n                            activeAnnotation.cancelClick = false;\n                        }, 0);\n                    }\n                }\n                if (!selectedButton || !selectedButton.start) {\n                    return;\n                }\n                if (!navigation.nextEvent) {\n                    // Call init method:\n                    navigation.currentUserDetails = selectedButton.start.call(navigation, clickEvent);\n                    // If steps exists (e.g. Annotations), bind them:\n                    if (navigation.currentUserDetails && selectedButton.steps) {\n                        navigation.stepIndex = 0;\n                        navigation.steps = true;\n                        navigation.mouseMoveEvent = navigation.nextEvent =\n                            selectedButton.steps[navigation.stepIndex];\n                    }\n                    else {\n                        fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                        svgContainer.removeClass('highcharts-draw-mode');\n                        navigation.steps = false;\n                        navigation.selectedButton = null;\n                        // First click is also the last one:\n                        if (selectedButton.end) {\n                            selectedButton.end.call(navigation, clickEvent, navigation.currentUserDetails);\n                        }\n                    }\n                }\n                else {\n                    navigation.nextEvent(clickEvent, navigation.currentUserDetails);\n                    if (navigation.steps) {\n                        navigation.stepIndex++;\n                        if (selectedButton.steps[navigation.stepIndex]) {\n                            // If we have more steps, bind them one by one:\n                            navigation.mouseMoveEvent = navigation.nextEvent = selectedButton.steps[navigation.stepIndex];\n                        }\n                        else {\n                            fireEvent(navigation, 'deselectButton', { button: navigation.selectedButtonElement });\n                            svgContainer.removeClass('highcharts-draw-mode');\n                            // That was the last step, call end():\n                            if (selectedButton.end) {\n                                selectedButton.end.call(navigation, clickEvent, navigation.currentUserDetails);\n                            }\n                            navigation.nextEvent = false;\n                            navigation.mouseMoveEvent = false;\n                            navigation.selectedButton = null;\n                        }\n                    }\n                }\n            };\n            /**\n             * Hook for mouse move on a chart's container. It calls current step.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#bindingsContainerMouseMove\n             *\n             * @param {Highcharts.HTMLDOMElement} container\n             *        Chart's container.\n             *\n             * @param {global.Event} moveEvent\n             *        Browser's move event.\n             */\n            NavigationBindings.prototype.bindingsContainerMouseMove = function (_container, moveEvent) {\n                if (this.mouseMoveEvent) {\n                    this.mouseMoveEvent(moveEvent, this.currentUserDetails);\n                }\n            };\n            /**\n             * Translate fields (e.g. `params.period` or `marker.styles.color`) to\n             * Highcharts options object (e.g. `{ params: { period } }`).\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#fieldsToOptions<T>\n             *\n             * @param {Highcharts.Dictionary<string>} fields\n             *        Fields from popup form.\n             *\n             * @param {T} config\n             *        Default config to be modified.\n             *\n             * @return {T}\n             *         Modified config\n             */\n            NavigationBindings.prototype.fieldsToOptions = function (fields, config) {\n                objectEach(fields, function (value, field) {\n                    var parsedValue = parseFloat(value), path = field.split('.'), pathLength = path.length - 1;\n                    // If it's a number (not \"format\" options), parse it:\n                    if (isNumber(parsedValue) &&\n                        !value.match(/px|em/g) &&\n                        !field.match(/format/g)) {\n                        value = parsedValue;\n                    }\n                    // Remove values like 0\n                    if (value !== 'undefined') {\n                        var parent_1 = config;\n                        path.forEach(function (name, index) {\n                            var nextName = pick(path[index + 1], '');\n                            if (pathLength === index) {\n                                // Last index, put value:\n                                parent_1[name] = value;\n                            }\n                            else if (!parent_1[name]) {\n                                // Create middle property:\n                                parent_1[name] = nextName.match(/\\d/g) ? [] : {};\n                                parent_1 = parent_1[name];\n                            }\n                            else {\n                                // Jump into next property\n                                parent_1 = parent_1[name];\n                            }\n                        });\n                    }\n                });\n                return config;\n            };\n            /**\n             * Shorthand method to deselect an annotation.\n             *\n             * @function Highcharts.NavigationBindings#deselectAnnotation\n             */\n            NavigationBindings.prototype.deselectAnnotation = function () {\n                if (this.activeAnnotation) {\n                    this.activeAnnotation.setControlPointsVisibility(false);\n                    this.activeAnnotation = false;\n                }\n            };\n            /**\n             * Generates API config for popup in the same format as options for\n             * Annotation object.\n             *\n             * @function Highcharts.NavigationBindings#annotationToFields\n             *\n             * @param {Highcharts.Annotation} annotation\n             *        Annotations object\n             *\n             * @return {Highcharts.Dictionary<string>}\n             *         Annotation options to be displayed in popup box\n             */\n            NavigationBindings.prototype.annotationToFields = function (annotation) {\n                var options = annotation.options, editables = NavigationBindings.annotationsEditable, nestedEditables = editables.nestedOptions, type = pick(options.type, options.shapes && options.shapes[0] &&\n                    options.shapes[0].type, options.labels && options.labels[0] &&\n                    options.labels[0].type, 'label'), nonEditables = NavigationBindings.annotationsNonEditable[options.langKey] || [], visualOptions = {\n                    langKey: options.langKey,\n                    type: type\n                };\n                /**\n                 * Nested options traversing. Method goes down to the options and copies\n                 * allowed options (with values) to new object, which is last parameter:\n                 * \"parent\".\n                 *\n                 * @private\n                 *\n                 * @param {*} option\n                 *        Atomic type or object/array\n                 *\n                 * @param {string} key\n                 *        Option name, for example \"visible\" or \"x\", \"y\"\n                 *\n                 * @param {Object} parentEditables\n                 *        Editables from NavigationBindings.annotationsEditable\n                 *\n                 * @param {Object} parent\n                 *        Where new options will be assigned\n                 */\n                function traverse(option, key, parentEditables, parent, parentKey) {\n                    var nextParent;\n                    if (parentEditables &&\n                        defined(option) &&\n                        nonEditables.indexOf(key) === -1 &&\n                        ((parentEditables.indexOf &&\n                            parentEditables.indexOf(key)) >= 0 ||\n                            parentEditables[key] || // nested array\n                            parentEditables === true // simple array\n                        )) {\n                        // Roots:\n                        if (isArray(option)) {\n                            parent[key] = [];\n                            option.forEach(function (arrayOption, i) {\n                                if (!isObject(arrayOption)) {\n                                    // Simple arrays, e.g. [String, Number, Boolean]\n                                    traverse(arrayOption, 0, nestedEditables[key], parent[key], key);\n                                }\n                                else {\n                                    // Advanced arrays, e.g. [Object, Object]\n                                    parent[key][i] = {};\n                                    objectEach(arrayOption, function (nestedOption, nestedKey) {\n                                        traverse(nestedOption, nestedKey, nestedEditables[key], parent[key][i], key);\n                                    });\n                                }\n                            });\n                        }\n                        else if (isObject(option)) {\n                            nextParent = {};\n                            if (isArray(parent)) {\n                                parent.push(nextParent);\n                                nextParent[key] = {};\n                                nextParent = nextParent[key];\n                            }\n                            else {\n                                parent[key] = nextParent;\n                            }\n                            objectEach(option, function (nestedOption, nestedKey) {\n                                traverse(nestedOption, nestedKey, key === 0 ?\n                                    parentEditables :\n                                    nestedEditables[key], nextParent, key);\n                            });\n                        }\n                        else {\n                            // Leaf:\n                            if (key === 'format') {\n                                parent[key] = [\n                                    format(option, annotation.labels[0].points[0]).toString(),\n                                    'text'\n                                ];\n                            }\n                            else if (isArray(parent)) {\n                                parent.push([option, getFieldType(parentKey, option)]);\n                            }\n                            else {\n                                parent[key] = [option, getFieldType(key, option)];\n                            }\n                        }\n                    }\n                }\n                objectEach(options, function (option, key) {\n                    if (key === 'typeOptions') {\n                        visualOptions[key] = {};\n                        objectEach(options[key], function (typeOption, typeKey) {\n                            traverse(typeOption, typeKey, nestedEditables, visualOptions[key], typeKey);\n                        });\n                    }\n                    else {\n                        traverse(option, key, editables[type], visualOptions, key);\n                    }\n                });\n                return visualOptions;\n            };\n            /**\n             * Get all class names for all parents in the element. Iterates until finds\n             * main container.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#getClickedClassNames\n             *\n             * @param {Highcharts.HTMLDOMElement} container\n             * Container that event is bound to.\n             *\n             * @param {global.Event} event\n             * Browser's event.\n             *\n             * @return {Array<Array<string, Highcharts.HTMLDOMElement>>}\n             * Array of class names with corresponding elements\n             */\n            NavigationBindings.prototype.getClickedClassNames = function (container, event) {\n                var element = event.target, classNames = [], elemClassName;\n                while (element && element.tagName) {\n                    elemClassName = attr(element, 'class');\n                    if (elemClassName) {\n                        classNames = classNames.concat(elemClassName\n                            .split(' ')\n                            // eslint-disable-next-line no-loop-func\n                            .map(function (name) { return ([name, element]); }));\n                    }\n                    element = element.parentNode;\n                    if (element === container) {\n                        return classNames;\n                    }\n                }\n                return classNames;\n            };\n            /**\n             * Get events bound to a button. It's a custom event delegation to find all\n             * events connected to the element.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#getButtonEvents\n             *\n             * @param {Highcharts.HTMLDOMElement} container\n             *        Container that event is bound to.\n             *\n             * @param {global.Event} event\n             *        Browser's event.\n             *\n             * @return {Object}\n             *         Object with events (init, start, steps, and end)\n             */\n            NavigationBindings.prototype.getButtonEvents = function (container, event) {\n                var navigation = this, classNames = this.getClickedClassNames(container, event);\n                var bindings;\n                classNames.forEach(function (className) {\n                    if (navigation.boundClassNames[className[0]] && !bindings) {\n                        bindings = {\n                            events: navigation.boundClassNames[className[0]],\n                            button: className[1]\n                        };\n                    }\n                });\n                return bindings;\n            };\n            /**\n             * Bindings are just events, so the whole update process is simply\n             * removing old events and adding new ones.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#update\n             */\n            NavigationBindings.prototype.update = function (options) {\n                this.options = merge(true, this.options, options);\n                this.removeEvents();\n                this.initEvents();\n            };\n            /**\n             * Remove all events created in the navigation.\n             *\n             * @private\n             * @function Highcharts.NavigationBindings#removeEvents\n             */\n            NavigationBindings.prototype.removeEvents = function () {\n                this.eventsToUnbind.forEach(function (unbinder) { return unbinder(); });\n            };\n            /**\n             * @private\n             * @function Highcharts.NavigationBindings#destroy\n             */\n            NavigationBindings.prototype.destroy = function () {\n                this.removeEvents();\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            // Define which options from annotations should show up in edit box:\n            NavigationBindings.annotationsEditable = {\n                // `typeOptions` are always available\n                // Nested and shared options:\n                nestedOptions: {\n                    labelOptions: ['style', 'format', 'backgroundColor'],\n                    labels: ['style'],\n                    label: ['style'],\n                    style: ['fontSize', 'color'],\n                    background: ['fill', 'strokeWidth', 'stroke'],\n                    innerBackground: ['fill', 'strokeWidth', 'stroke'],\n                    outerBackground: ['fill', 'strokeWidth', 'stroke'],\n                    shapeOptions: ['fill', 'strokeWidth', 'stroke'],\n                    shapes: ['fill', 'strokeWidth', 'stroke'],\n                    line: ['strokeWidth', 'stroke'],\n                    backgroundColors: [true],\n                    connector: ['fill', 'strokeWidth', 'stroke'],\n                    crosshairX: ['strokeWidth', 'stroke'],\n                    crosshairY: ['strokeWidth', 'stroke']\n                },\n                // Simple shapes:\n                circle: ['shapes'],\n                ellipse: ['shapes'],\n                verticalLine: [],\n                label: ['labelOptions'],\n                // Measure\n                measure: ['background', 'crosshairY', 'crosshairX'],\n                // Others:\n                fibonacci: [],\n                tunnel: ['background', 'line', 'height'],\n                pitchfork: ['innerBackground', 'outerBackground'],\n                rect: ['shapes'],\n                // Crooked lines, elliots, arrows etc:\n                crookedLine: [],\n                basicAnnotation: ['shapes', 'labelOptions']\n            };\n            // Define non editable fields per annotation, for example Rectangle inherits\n            // options from Measure, but crosshairs are not available\n            NavigationBindings.annotationsNonEditable = {\n                rectangle: ['crosshairX', 'crosshairY', 'labelOptions'],\n                ellipse: ['labelOptions'],\n                circle: ['labelOptions']\n            };\n            return NavigationBindings;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * A config object for navigation bindings in annotations.\n         *\n         * @interface Highcharts.NavigationBindingsOptionsObject\n         */ /**\n        * ClassName of the element for a binding.\n        * @name Highcharts.NavigationBindingsOptionsObject#className\n        * @type {string|undefined}\n        */ /**\n        * Last event to be fired after last step event.\n        * @name Highcharts.NavigationBindingsOptionsObject#end\n        * @type {Function|undefined}\n        */ /**\n        * Initial event, fired on a button click.\n        * @name Highcharts.NavigationBindingsOptionsObject#init\n        * @type {Function|undefined}\n        */ /**\n        * Event fired on first click on a chart.\n        * @name Highcharts.NavigationBindingsOptionsObject#start\n        * @type {Function|undefined}\n        */ /**\n        * Last event to be fired after last step event. Array of step events to be\n        * called sequentially after each user click.\n        * @name Highcharts.NavigationBindingsOptionsObject#steps\n        * @type {Array<Function>|undefined}\n        */\n        (''); // keeps doclets above in JS file\n\n        return NavigationBindings;\n    });\n    _registerModule(_modules, 'Shared/BaseForm.js', [_modules['Core/Renderer/HTML/AST.js'], _modules['Core/Utilities.js']], function (AST, U) {\n        /* *\n         *\n         *  (c) 2009 - 2023 Highsoft AS\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var addEvent = U.addEvent, createElement = U.createElement;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var BaseForm = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function BaseForm(parentDiv, iconsURL) {\n                this.iconsURL = iconsURL;\n                this.container = this.createPopupContainer(parentDiv);\n                this.closeButton = this.addCloseButton();\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Create popup div container.\n             *\n             * @param {HTMLElement} parentDiv\n             * Parent div to attach popup.\n             *\n             * @param  {string} className\n             * Class name of the popup.\n             *\n             * @return {HTMLElement}\n             * Popup div.\n             */\n            BaseForm.prototype.createPopupContainer = function (parentDiv, className) {\n                if (className === void 0) { className = 'highcharts-popup highcharts-no-tooltip'; }\n                return createElement('div', { className: className }, void 0, parentDiv);\n            };\n            /**\n             * Create HTML element and attach click event to close popup.\n             *\n             * @param {string} className\n             * Class name of the close button.\n             *\n             * @return {HTMLElement}\n             * Close button.\n             */\n            BaseForm.prototype.addCloseButton = function (className) {\n                if (className === void 0) { className = 'highcharts-popup-close'; }\n                var popup = this, iconsURL = this.iconsURL;\n                // Create close popup button.\n                var closeButton = createElement('div', { className: className }, void 0, this.container);\n                closeButton.style['background-image'] = 'url(' +\n                    (iconsURL.match(/png|svg|jpeg|jpg|gif/ig) ?\n                        iconsURL : iconsURL + 'close.svg') + ')';\n                ['click', 'touchstart'].forEach(function (eventName) {\n                    addEvent(closeButton, eventName, popup.closeButtonEvents.bind(popup));\n                });\n                // close popup when press ESC\n                addEvent(document, 'keydown', function (event) {\n                    if (event.code === 'Escape') {\n                        popup.closeButtonEvents();\n                    }\n                });\n                return closeButton;\n            };\n            /**\n             * Close button events.\n             * @return {void}\n             */\n            BaseForm.prototype.closeButtonEvents = function () {\n                this.closePopup();\n            };\n            /**\n             * Reset content of the current popup and show.\n             *\n             * @param {string} toolbarClass\n             * Class name of the toolbar which styles should be reset.\n             */\n            BaseForm.prototype.showPopup = function (toolbarClass) {\n                if (toolbarClass === void 0) { toolbarClass = 'highcharts-annotation-toolbar'; }\n                var popupDiv = this.container, popupCloseButton = this.closeButton;\n                this.type = void 0;\n                // Reset content.\n                popupDiv.innerHTML = AST.emptyHTML;\n                // Reset toolbar styles if exists.\n                if (popupDiv.className.indexOf(toolbarClass) >= 0) {\n                    popupDiv.classList.remove(toolbarClass);\n                    // reset toolbar inline styles\n                    popupDiv.removeAttribute('style');\n                }\n                // Add close button.\n                popupDiv.appendChild(popupCloseButton);\n                popupDiv.style.display = 'block';\n                popupDiv.style.height = '';\n            };\n            /**\n             * Hide popup.\n             */\n            BaseForm.prototype.closePopup = function () {\n                this.container.style.display = 'none';\n            };\n            return BaseForm;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return BaseForm;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Popup/PopupAnnotations.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  Popup generator for Stock tools\n         *\n         *  (c) 2009-2021 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc, isFirefox = H.isFirefox;\n        var createElement = U.createElement, isArray = U.isArray, isObject = U.isObject, objectEach = U.objectEach, pick = U.pick, stableSort = U.stableSort;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Create annotation simple form.\n         * It contains fields with param names.\n         * @private\n         * @param {Highcharts.Chart} chart\n         * Chart\n         * @param {Object} options\n         * Options\n         * @param {Function} callback\n         * On click callback\n         * @param {boolean} [isInit]\n         * If it is a form declared for init annotation\n         */\n        function addForm(chart, options, callback, isInit) {\n            if (!chart) {\n                return;\n            }\n            var popupDiv = this.container, lang = this.lang;\n            // create title of annotations\n            var lhsCol = createElement('h2', {\n                className: 'highcharts-popup-main-title'\n            }, void 0, popupDiv);\n            lhsCol.appendChild(doc.createTextNode(lang[options.langKey] || options.langKey || ''));\n            // left column\n            lhsCol = createElement('div', {\n                className: ('highcharts-popup-lhs-col highcharts-popup-lhs-full')\n            }, void 0, popupDiv);\n            var bottomRow = createElement('div', {\n                className: 'highcharts-popup-bottom-row'\n            }, void 0, popupDiv);\n            addFormFields.call(this, lhsCol, chart, '', options, [], true);\n            this.addButton(bottomRow, isInit ?\n                (lang.addButton || 'Add') :\n                (lang.saveButton || 'Save'), isInit ? 'add' : 'save', popupDiv, callback);\n        }\n        /**\n         * Create annotation simple form. It contains two buttons\n         * (edit / remove) and text label.\n         * @private\n         * @param {Highcharts.Chart} - chart\n         * @param {Highcharts.AnnotationsOptions} - options\n         * @param {Function} - on click callback\n         */\n        function addToolbar(chart, options, callback) {\n            var _this = this;\n            var lang = this.lang, popupDiv = this.container, showForm = this.showForm, toolbarClass = 'highcharts-annotation-toolbar';\n            // set small size\n            if (popupDiv.className.indexOf(toolbarClass) === -1) {\n                popupDiv.className += ' ' + toolbarClass + ' highcharts-no-mousewheel';\n            }\n            // set position\n            if (chart) {\n                popupDiv.style.top = chart.plotTop + 10 + 'px';\n            }\n            // create label\n            createElement('span', void 0, void 0, popupDiv).appendChild(doc.createTextNode(pick(\n            // Advanced annotations:\n            lang[options.langKey] || options.langKey, \n            // Basic shapes:\n            options.shapes && options.shapes[0].type, '')));\n            // add buttons\n            var button = this.addButton(popupDiv, lang.removeButton || 'Remove', 'remove', popupDiv, callback);\n            button.className += ' highcharts-annotation-remove-button';\n            button.style['background-image'] = 'url(' +\n                this.iconsURL + 'destroy.svg)';\n            button = this.addButton(popupDiv, lang.editButton || 'Edit', 'edit', popupDiv, function () {\n                showForm.call(_this, 'annotation-edit', chart, options, callback);\n            });\n            button.className += ' highcharts-annotation-edit-button';\n            button.style['background-image'] = 'url(' +\n                this.iconsURL + 'edit.svg)';\n        }\n        /**\n         * Create annotation's form fields.\n         * @private\n         * @param {Highcharts.HTMLDOMElement} parentDiv\n         * Div where inputs are placed\n         * @param {Highcharts.Chart} chart\n         * Chart\n         * @param {string} parentNode\n         * Name of parent to create chain of names\n         * @param {Highcharts.AnnotationsOptions} options\n         * Options\n         * @param {Array<unknown>} storage\n         * Array where all items are stored\n         * @param {boolean} [isRoot]\n         * Recursive flag for root\n         */\n        function addFormFields(parentDiv, chart, parentNode, options, storage, isRoot) {\n            var _this = this;\n            if (!chart) {\n                return;\n            }\n            var addInput = this.addInput, lang = this.lang;\n            var parentFullName, titleName;\n            objectEach(options, function (value, option) {\n                // create name like params.styles.fontSize\n                parentFullName = parentNode !== '' ? parentNode + '.' + option : option;\n                if (isObject(value)) {\n                    if (\n                    // value is object of options\n                    !isArray(value) ||\n                        // array of objects with params. i.e labels in Fibonacci\n                        (isArray(value) && isObject(value[0]))) {\n                        titleName = lang[option] || option;\n                        if (!titleName.match(/\\d/g)) {\n                            storage.push([\n                                true,\n                                titleName,\n                                parentDiv\n                            ]);\n                        }\n                        addFormFields.call(_this, parentDiv, chart, parentFullName, value, storage, false);\n                    }\n                    else {\n                        storage.push([\n                            _this,\n                            parentFullName,\n                            'annotation',\n                            parentDiv,\n                            value\n                        ]);\n                    }\n                }\n            });\n            if (isRoot) {\n                stableSort(storage, function (a) { return (a[1].match(/format/g) ? -1 : 1); });\n                if (isFirefox) {\n                    storage.reverse(); // (#14691)\n                }\n                storage.forEach(function (genInput) {\n                    if (genInput[0] === true) {\n                        createElement('span', {\n                            className: 'highcharts-annotation-title'\n                        }, void 0, genInput[2]).appendChild(doc.createTextNode(genInput[1]));\n                    }\n                    else {\n                        genInput[4] = {\n                            value: genInput[4][0],\n                            type: genInput[4][1]\n                        };\n                        addInput.apply(genInput[0], genInput.splice(1));\n                    }\n                });\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var PopupAnnotations = {\n            addForm: addForm,\n            addToolbar: addToolbar\n        };\n\n        return PopupAnnotations;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Popup/PopupIndicators.js', [_modules['Core/Renderer/HTML/AST.js'], _modules['Core/Globals.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AST, H, NU, SeriesRegistry, U) {\n        /* *\n         *\n         *  Popup generator for Stock tools\n         *\n         *  (c) 2009-2021 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc;\n        var annotationsFieldsTypes = NU.annotationsFieldsTypes;\n        var seriesTypes = SeriesRegistry.seriesTypes;\n        var addEvent = U.addEvent, createElement = U.createElement, defined = U.defined, isArray = U.isArray, isObject = U.isObject, objectEach = U.objectEach, stableSort = U.stableSort;\n        /* *\n         *\n         *  Enums\n         *\n         * */\n        /**\n         * Enum for properties which should have dropdown list.\n         * @private\n         */\n        var DropdownProperties;\n        (function (DropdownProperties) {\n            DropdownProperties[DropdownProperties[\"params.algorithm\"] = 0] = \"params.algorithm\";\n            DropdownProperties[DropdownProperties[\"params.average\"] = 1] = \"params.average\";\n        })(DropdownProperties || (DropdownProperties = {}));\n        /**\n         * List of available algorithms for the specific indicator.\n         * @private\n         */\n        var dropdownParameters = {\n            'algorithm-pivotpoints': ['standard', 'fibonacci', 'camarilla'],\n            'average-disparityindex': ['sma', 'ema', 'dema', 'tema', 'wma']\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Create two columns (divs) in HTML.\n         * @private\n         * @param {Highcharts.HTMLDOMElement} container\n         * Container of columns\n         * @return {Highcharts.Dictionary<Highcharts.HTMLDOMElement>}\n         * Reference to two HTML columns (lhsCol, rhsCol)\n         */\n        function addColsContainer(container) {\n            // left column\n            var lhsCol = createElement('div', {\n                className: 'highcharts-popup-lhs-col'\n            }, void 0, container);\n            // right column\n            var rhsCol = createElement('div', {\n                className: 'highcharts-popup-rhs-col'\n            }, void 0, container);\n            // wrapper content\n            createElement('div', {\n                className: 'highcharts-popup-rhs-col-wrapper'\n            }, void 0, rhsCol);\n            return {\n                lhsCol: lhsCol,\n                rhsCol: rhsCol\n            };\n        }\n        /**\n         * Create indicator's form. It contains two tabs (ADD and EDIT) with\n         * content.\n         * @private\n         */\n        function addForm(chart, _options, callback) {\n            var lang = this.lang;\n            var buttonParentDiv;\n            if (!chart) {\n                return;\n            }\n            // add tabs\n            this.tabs.init.call(this, chart);\n            // get all tabs content divs\n            var tabsContainers = this.container\n                .querySelectorAll('.highcharts-tab-item-content');\n            // ADD tab\n            addColsContainer(tabsContainers[0]);\n            addSearchBox.call(this, chart, tabsContainers[0]);\n            addIndicatorList.call(this, chart, tabsContainers[0], 'add');\n            buttonParentDiv = tabsContainers[0]\n                .querySelectorAll('.highcharts-popup-rhs-col')[0];\n            this.addButton(buttonParentDiv, lang.addButton || 'add', 'add', buttonParentDiv, callback);\n            // EDIT tab\n            addColsContainer(tabsContainers[1]);\n            addIndicatorList.call(this, chart, tabsContainers[1], 'edit');\n            buttonParentDiv = tabsContainers[1]\n                .querySelectorAll('.highcharts-popup-rhs-col')[0];\n            this.addButton(buttonParentDiv, lang.saveButton || 'save', 'edit', buttonParentDiv, callback);\n            this.addButton(buttonParentDiv, lang.removeButton || 'remove', 'remove', buttonParentDiv, callback);\n        }\n        /**\n         * Create typical inputs for chosen indicator. Fields are extracted from\n         * defaultOptions (ADD mode) or current indicator (ADD mode). Two extra\n         * fields are added:\n         * - hidden input - contains indicator type (required for callback)\n         * - select - list of series which can be linked with indicator\n         * @private\n         * @param {Highcharts.Chart} chart\n         * Chart\n         * @param {Highcharts.Series} series\n         * Indicator\n         * @param {string} seriesType\n         * Indicator type like: sma, ema, etc.\n         * @param {Highcharts.HTMLDOMElement} rhsColWrapper\n         * Element where created HTML list is added\n         */\n        function addFormFields(chart, series, seriesType, rhsColWrapper) {\n            var fields = series.params || series.options.params;\n            // reset current content\n            rhsColWrapper.innerHTML = AST.emptyHTML;\n            // create title (indicator name in the right column)\n            createElement('h3', {\n                className: 'highcharts-indicator-title'\n            }, void 0, rhsColWrapper).appendChild(doc.createTextNode(getNameType(series, seriesType).indicatorFullName));\n            // input type\n            createElement('input', {\n                type: 'hidden',\n                name: 'highcharts-type-' + seriesType,\n                value: seriesType\n            }, void 0, rhsColWrapper);\n            // list all series with id\n            listAllSeries.call(this, seriesType, 'series', chart, rhsColWrapper, series, series.linkedParent && series.linkedParent.options.id);\n            if (fields.volumeSeriesID) {\n                listAllSeries.call(this, seriesType, 'volume', chart, rhsColWrapper, series, series.linkedParent && fields.volumeSeriesID);\n            }\n            // add param fields\n            addParamInputs.call(this, chart, 'params', fields, seriesType, rhsColWrapper);\n        }\n        /**\n         * Create HTML list of all indicators (ADD mode) or added indicators\n         * (EDIT mode).\n         *\n         * @private\n         *\n         * @param {Highcharts.AnnotationChart} chart\n         *        The chart object.\n         *\n         * @param {string} [optionName]\n         *        Name of the option into which selection is being added.\n         *\n         * @param {HTMLDOMElement} [parentDiv]\n         *        HTML parent element.\n         *\n         * @param {string} listType\n         *        Type of list depending on the selected bookmark.\n         *        Might be 'add' or 'edit'.\n         *\n         * @param {string|undefined} filter\n         *        Applied filter string from the input.\n         *        For the first iteration, it's an empty string.\n         */\n        function addIndicatorList(chart, parentDiv, listType, filter) {\n            var popup = this, lang = popup.lang, lhsCol = parentDiv.querySelectorAll('.highcharts-popup-lhs-col')[0], rhsCol = parentDiv.querySelectorAll('.highcharts-popup-rhs-col')[0], isEdit = listType === 'edit', series = (isEdit ?\n                chart.series : // EDIT mode\n                chart.options.plotOptions || {} // ADD mode\n            );\n            if (!chart && series) {\n                return;\n            }\n            var item, filteredSeriesArray = [];\n            // Filter and sort the series.\n            if (!isEdit && !isArray(series)) {\n                // Apply filters only for the 'add' indicator list.\n                filteredSeriesArray = filterSeries.call(this, series, filter);\n            }\n            else if (isArray(series)) {\n                filteredSeriesArray = filterSeriesArray.call(this, series);\n            }\n            // Sort indicators alphabeticaly.\n            stableSort(filteredSeriesArray, function (a, b) {\n                var seriesAName = a.indicatorFullName.toLowerCase(), seriesBName = b.indicatorFullName.toLowerCase();\n                return (seriesAName < seriesBName) ?\n                    -1 : (seriesAName > seriesBName) ? 1 : 0;\n            });\n            // If the list exists remove it from the DOM\n            // in order to create a new one with different filters.\n            if (lhsCol.children[1]) {\n                lhsCol.children[1].remove();\n            }\n            // Create wrapper for list.\n            var indicatorList = createElement('ul', {\n                className: 'highcharts-indicator-list'\n            }, void 0, lhsCol);\n            var rhsColWrapper = rhsCol.querySelectorAll('.highcharts-popup-rhs-col-wrapper')[0];\n            filteredSeriesArray.forEach(function (seriesSet) {\n                var indicatorFullName = seriesSet.indicatorFullName, indicatorType = seriesSet.indicatorType, series = seriesSet.series;\n                item = createElement('li', {\n                    className: 'highcharts-indicator-list'\n                }, void 0, indicatorList);\n                item.appendChild(doc.createTextNode(indicatorFullName));\n                ['click', 'touchstart'].forEach(function (eventName) {\n                    addEvent(item, eventName, function () {\n                        var button = rhsColWrapper.parentNode\n                            .children[1];\n                        addFormFields.call(popup, chart, series, indicatorType, rhsColWrapper);\n                        if (button) {\n                            button.style.display = 'block';\n                        }\n                        // add hidden input with series.id\n                        if (isEdit && series.options) {\n                            createElement('input', {\n                                type: 'hidden',\n                                name: 'highcharts-id-' + indicatorType,\n                                value: series.options.id\n                            }, void 0, rhsColWrapper).setAttribute('highcharts-data-series-id', series.options.id);\n                        }\n                    });\n                });\n            });\n            // select first item from the list\n            if (indicatorList.childNodes.length > 0) {\n                indicatorList.childNodes[0].click();\n            }\n            else if (!isEdit) {\n                AST.setElementHTML(rhsColWrapper.parentNode.children[0], lang.noFilterMatch || '');\n                rhsColWrapper.parentNode.children[1]\n                    .style.display = 'none';\n            }\n        }\n        /**\n         * Recurent function which lists all fields, from params object and\n         * create them as inputs. Each input has unique `data-name` attribute,\n         * which keeps chain of fields i.e params.styles.fontSize.\n         * @private\n         * @param {Highcharts.Chart} chart\n         * Chart\n         * @param {string} parentNode\n         * Name of parent to create chain of names\n         * @param {Highcharts.PopupFieldsDictionary<string>} fields\n         * Params which are based for input create\n         * @param {string} type\n         * Indicator type like: sma, ema, etc.\n         * @param {Highcharts.HTMLDOMElement} parentDiv\n         * Element where created HTML list is added\n         */\n        function addParamInputs(chart, parentNode, fields, type, parentDiv) {\n            var _this = this;\n            if (!chart) {\n                return;\n            }\n            var addInput = this.addInput;\n            objectEach(fields, function (value, fieldName) {\n                var predefinedType = annotationsFieldsTypes[fieldName];\n                var fieldType = type;\n                if (predefinedType) {\n                    fieldType = predefinedType;\n                }\n                // create name like params.styles.fontSize\n                var parentFullName = parentNode + '.' + fieldName;\n                if (defined(value) && // skip if field is unnecessary, #15362\n                    parentFullName) {\n                    if (isObject(value)) {\n                        // (15733) 'Periods' has an arrayed value. Label must be\n                        // created here.\n                        addInput.call(_this, parentFullName, type, parentDiv, {});\n                        addParamInputs.call(_this, chart, parentFullName, value, type, parentDiv);\n                    }\n                    // If the option is listed in dropdown enum,\n                    // add the selection box for it.\n                    if (parentFullName in DropdownProperties) {\n                        // Add selection boxes.\n                        var selectBox = addSelection.call(_this, type, parentFullName, parentDiv);\n                        // Add possible dropdown options.\n                        addSelectionOptions.call(_this, chart, parentNode, selectBox, type, fieldName, value);\n                    }\n                    else if (\n                    // Skip volume field which is created by addFormFields.\n                    parentFullName !== 'params.volumeSeriesID' &&\n                        !isArray(value) // Skip params declared in array.\n                    ) {\n                        addInput.call(_this, parentFullName, type, parentDiv, {\n                            value: value,\n                            type: 'number'\n                        } // all inputs are text type\n                        );\n                    }\n                }\n            });\n        }\n        /**\n         * Add searchbox HTML element and its' label.\n         *\n         * @private\n         *\n         * @param {Highcharts.AnnotationChart} chart\n         *        The chart object.\n         *\n         * @param {HTMLDOMElement} parentDiv\n         *        HTML parent element.\n         */\n        function addSearchBox(chart, parentDiv) {\n            var popup = this, lhsCol = parentDiv.querySelectorAll('.highcharts-popup-lhs-col')[0], options = 'searchIndicators', inputAttributes = {\n                value: '',\n                type: 'text',\n                htmlFor: 'search-indicators',\n                labelClassName: 'highcharts-input-search-indicators-label'\n            }, clearFilterText = this.lang.clearFilter, inputWrapper = createElement('div', {\n                className: 'highcharts-input-wrapper'\n            }, void 0, lhsCol);\n            var handleInputChange = function (inputText) {\n                // Apply some filters.\n                addIndicatorList.call(popup, chart, popup.container, 'add', inputText);\n            };\n            // Add input field with the label and button.\n            var input = this.addInput(options, 'input', inputWrapper, inputAttributes), button = createElement('a', {\n                textContent: clearFilterText\n            }, void 0, inputWrapper);\n            input.classList.add('highcharts-input-search-indicators');\n            button.classList.add('clear-filter-button');\n            // Add input change events.\n            addEvent(input, 'input', function (e) {\n                handleInputChange(this.value);\n                // Show clear filter button.\n                if (this.value.length) {\n                    button.style.display = 'inline-block';\n                }\n                else {\n                    button.style.display = 'none';\n                }\n            });\n            // Add clear filter click event.\n            ['click', 'touchstart'].forEach(function (eventName) {\n                addEvent(button, eventName, function () {\n                    // Clear the input.\n                    input.value = '';\n                    handleInputChange('');\n                    // Hide clear filter button- no longer nececary.\n                    button.style.display = 'none';\n                });\n            });\n        }\n        /**\n         * Add selection HTML element and its' label.\n         *\n         * @private\n         *\n         * @param {string} indicatorType\n         * Type of the indicator i.e. sma, ema...\n         *\n         * @param {string} [optionName]\n         * Name of the option into which selection is being added.\n         *\n         * @param {HTMLDOMElement} [parentDiv]\n         * HTML parent element.\n         */\n        function addSelection(indicatorType, optionName, parentDiv) {\n            var optionParamList = optionName.split('.'), labelText = optionParamList[optionParamList.length - 1], selectName = 'highcharts-' + optionName + '-type-' + indicatorType, lang = this.lang;\n            // Add a label for the selection box.\n            createElement('label', {\n                htmlFor: selectName\n            }, null, parentDiv).appendChild(doc.createTextNode(lang[labelText] || optionName));\n            // Create a selection box.\n            var selectBox = createElement('select', {\n                name: selectName,\n                className: 'highcharts-popup-field',\n                id: 'highcharts-select-' + optionName\n            }, null, parentDiv);\n            selectBox.setAttribute('id', 'highcharts-select-' + optionName);\n            return selectBox;\n        }\n        /**\n         * Get and add selection options.\n         *\n         * @private\n         *\n         * @param {Highcharts.AnnotationChart} chart\n         *        The chart object.\n         *\n         * @param {string} [optionName]\n         *        Name of the option into which selection is being added.\n         *\n         * @param {HTMLSelectElement} [selectBox]\n         *        HTML select box element to which the options are being added.\n         *\n         * @param {string|undefined} indicatorType\n         *        Type of the indicator i.e. sma, ema...\n         *\n         * @param {string|undefined} parameterName\n         *        Name of the parameter which should be applied.\n         *\n         * @param {string|undefined} selectedOption\n         *        Default value in dropdown.\n         */\n        function addSelectionOptions(chart, optionName, selectBox, indicatorType, parameterName, selectedOption, currentSeries) {\n            // Get and apply selection options for the possible series.\n            if (optionName === 'series' || optionName === 'volume') {\n                // List all series which have id - mandatory for indicator.\n                chart.series.forEach(function (series) {\n                    var seriesOptions = series.options, seriesName = seriesOptions.name ||\n                        seriesOptions.params ?\n                        series.name :\n                        seriesOptions.id || '';\n                    if (seriesOptions.id !== 'highcharts-navigator-series' &&\n                        seriesOptions.id !== (currentSeries &&\n                            currentSeries.options &&\n                            currentSeries.options.id)) {\n                        if (!defined(selectedOption) &&\n                            optionName === 'volume' &&\n                            series.type === 'column') {\n                            selectedOption = seriesOptions.id;\n                        }\n                        createElement('option', {\n                            value: seriesOptions.id\n                        }, void 0, selectBox).appendChild(doc.createTextNode(seriesName));\n                    }\n                });\n            }\n            else if (indicatorType && parameterName) {\n                // Get and apply options for the possible parameters.\n                var dropdownKey = parameterName + '-' + indicatorType, parameterOption = dropdownParameters[dropdownKey];\n                parameterOption.forEach(function (element) {\n                    createElement('option', {\n                        value: element\n                    }, void 0, selectBox).appendChild(doc.createTextNode(element));\n                });\n            }\n            // Add the default dropdown value if defined.\n            if (defined(selectedOption)) {\n                selectBox.value = selectedOption;\n            }\n        }\n        /**\n         * Filter object of series which are not indicators.\n         * If the filter string exists, check against it.\n         *\n         * @private\n         *\n         * @param {Highcharts.FilteredSeries} series\n         *        All series are available in the plotOptions.\n         *\n         * @param {string|undefined} filter\n         *        Applied filter string from the input.\n         *        For the first iteration, it's an empty string.\n         *\n         * @return {Array<Highcharts.FilteredSeries>} filteredSeriesArray\n         *         Returns array of filtered series based on filter string.\n         */\n        function filterSeries(series, filter) {\n            var popup = this, indicators = popup.indicators, lang = popup.chart && popup.chart.options.lang, indicatorAliases = lang &&\n                lang.navigation &&\n                lang.navigation.popup &&\n                lang.navigation.popup.indicatorAliases, filteredSeriesArray = [];\n            var filteredSeries;\n            objectEach(series, function (series, value) {\n                var seriesOptions = series && series.options;\n                // Allow only indicators.\n                if (series.params || seriesOptions &&\n                    seriesOptions.params) {\n                    var _a = getNameType(series, value), indicatorFullName = _a.indicatorFullName, indicatorType = _a.indicatorType;\n                    if (filter) {\n                        // Replace invalid characters.\n                        var validFilter = filter.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n                        var regex = new RegExp(validFilter, 'i'), alias = indicatorAliases &&\n                            indicatorAliases[indicatorType] &&\n                            indicatorAliases[indicatorType].join(' ') || '';\n                        if (indicatorFullName.match(regex) ||\n                            alias.match(regex)) {\n                            filteredSeries = {\n                                indicatorFullName: indicatorFullName,\n                                indicatorType: indicatorType,\n                                series: series\n                            };\n                            filteredSeriesArray.push(filteredSeries);\n                        }\n                    }\n                    else {\n                        filteredSeries = {\n                            indicatorFullName: indicatorFullName,\n                            indicatorType: indicatorType,\n                            series: series\n                        };\n                        filteredSeriesArray.push(filteredSeries);\n                    }\n                }\n            });\n            return filteredSeriesArray;\n        }\n        /**\n         * Filter an array of series and map its names and types.\n         *\n         * @private\n         *\n         * @param {Highcharts.FilteredSeries} series\n         *        All series that are available in the plotOptions.\n         *\n         * @return {Array<Highcharts.FilteredSeries>} filteredSeriesArray\n         *         Returns array of filtered series based on filter string.\n         */\n        function filterSeriesArray(series) {\n            var filteredSeriesArray = [];\n            // Allow only indicators.\n            series.forEach(function (series) {\n                if (series.is('sma')) {\n                    filteredSeriesArray.push({\n                        indicatorFullName: series.name,\n                        indicatorType: series.type,\n                        series: series\n                    });\n                }\n            });\n            return filteredSeriesArray;\n        }\n        /**\n         * Get amount of indicators added to chart.\n         * @private\n         * @return {number} - Amount of indicators\n         */\n        function getAmount() {\n            var counter = 0;\n            this.series.forEach(function (serie) {\n                if (serie.params ||\n                    serie.options.params) {\n                    counter++;\n                }\n            });\n            return counter;\n        }\n        /**\n         * Extract full name and type of requested indicator.\n         *\n         * @private\n         *\n         * @param {Highcharts.Series} series\n         * Series which name is needed(EDITmode - defaultOptions.series,\n         * ADDmode - indicator series).\n         *\n         * @param {string} [indicatorType]\n         * Type of the indicator i.e. sma, ema...\n         *\n         * @return {Highcharts.Dictionary<string>}\n         * Full name and series type.\n         */\n        function getNameType(series, indicatorType) {\n            var options = series.options;\n            // add mode\n            var seriesName = (seriesTypes[indicatorType] &&\n                seriesTypes[indicatorType].prototype.nameBase) ||\n                indicatorType.toUpperCase(), seriesType = indicatorType;\n            // edit\n            if (options && options.type) {\n                seriesType = series.options.type;\n                seriesName = series.name;\n            }\n            return {\n                indicatorFullName: seriesName,\n                indicatorType: seriesType\n            };\n        }\n        /**\n         * Create the selection box for the series,\n         * add options and apply the default one.\n         *\n         * @private\n         *\n         * @param {string} indicatorType\n         *        Type of the indicator i.e. sma, ema...\n         *\n         * @param {string} [optionName]\n         *        Name of the option into which selection is being added.\n         *\n         * @param {Highcharts.AnnotationChart} chart\n         *        The chart object.\n         *\n         * @param {HTMLDOMElement} [parentDiv]\n         *        HTML parent element.\n         *\n         * @param {string|undefined} selectedOption\n         *        Default value in dropdown.\n         */\n        function listAllSeries(indicatorType, optionName, chart, parentDiv, currentSeries, selectedOption) {\n            var popup = this, indicators = popup.indicators;\n            // Won't work without the chart.\n            if (!chart) {\n                return;\n            }\n            // Add selection boxes.\n            var selectBox = addSelection.call(popup, indicatorType, optionName, parentDiv);\n            // Add possible dropdown options.\n            addSelectionOptions.call(popup, chart, optionName, selectBox, void 0, void 0, void 0, currentSeries);\n            // Add the default dropdown value if defined.\n            if (defined(selectedOption)) {\n                selectBox.value = selectedOption;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var PopupIndicators = {\n            addForm: addForm,\n            getAmount: getAmount\n        };\n\n        return PopupIndicators;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Popup/PopupTabs.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  Popup generator for Stock tools\n         *\n         *  (c) 2009-2021 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var doc = H.doc;\n        var addEvent = U.addEvent, createElement = U.createElement;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Create tab content\n         * @private\n         * @return {HTMLDOMElement} - created HTML tab-content element\n         */\n        function addContentItem() {\n            var popupDiv = this.container;\n            return createElement('div', {\n                // #12100\n                className: 'highcharts-tab-item-content highcharts-no-mousewheel'\n            }, void 0, popupDiv);\n        }\n        /**\n         * Create tab menu item\n         * @private\n         * @param {string} tabName\n         * `add` or `edit`\n         * @param {number} [disableTab]\n         * Disable tab when 0\n         * @return {Highcharts.HTMLDOMElement}\n         * Created HTML tab-menu element\n         */\n        function addMenuItem(tabName, disableTab) {\n            var popupDiv = this.container, lang = this.lang;\n            var className = 'highcharts-tab-item';\n            if (disableTab === 0) {\n                className += ' highcharts-tab-disabled';\n            }\n            // tab 1\n            var menuItem = createElement('span', {\n                className: className\n            }, void 0, popupDiv);\n            menuItem.appendChild(doc.createTextNode(lang[tabName + 'Button'] || tabName));\n            menuItem.setAttribute('highcharts-data-tab-type', tabName);\n            return menuItem;\n        }\n        /**\n         * Set all tabs as invisible.\n         * @private\n         */\n        function deselectAll() {\n            var popupDiv = this.container, tabs = popupDiv\n                .querySelectorAll('.highcharts-tab-item'), tabsContent = popupDiv\n                .querySelectorAll('.highcharts-tab-item-content');\n            for (var i = 0; i < tabs.length; i++) {\n                tabs[i].classList.remove('highcharts-tab-item-active');\n                tabsContent[i].classList.remove('highcharts-tab-item-show');\n            }\n        }\n        /**\n         * Init tabs. Create tab menu items, tabs containers\n         * @private\n         * @param {Highcharts.Chart} chart\n         * Reference to current chart\n         */\n        function init(chart) {\n            if (!chart) {\n                return;\n            }\n            var indicatorsCount = this.indicators.getAmount.call(chart);\n            // create menu items\n            var firstTab = addMenuItem.call(this, 'add'); // run by default\n            addMenuItem.call(this, 'edit', indicatorsCount);\n            // create tabs containers\n            addContentItem.call(this);\n            addContentItem.call(this);\n            switchTabs.call(this, indicatorsCount);\n            // activate first tab\n            selectTab.call(this, firstTab, 0);\n        }\n        /**\n         * Set tab as visible\n         * @private\n         * @param {globals.Element} - current tab\n         * @param {number} - Index of tab in menu\n         */\n        function selectTab(tab, index) {\n            var allTabs = this.container\n                .querySelectorAll('.highcharts-tab-item-content');\n            tab.className += ' highcharts-tab-item-active';\n            allTabs[index].className += ' highcharts-tab-item-show';\n        }\n        /**\n         * Add click event to each tab\n         * @private\n         * @param {number} disableTab\n         * Disable tab when 0\n         */\n        function switchTabs(disableTab) {\n            var popup = this, popupDiv = this.container, tabs = popupDiv.querySelectorAll('.highcharts-tab-item');\n            tabs.forEach(function (tab, i) {\n                if (disableTab === 0 &&\n                    tab.getAttribute('highcharts-data-tab-type') === 'edit') {\n                    return;\n                }\n                ['click', 'touchstart'].forEach(function (eventName) {\n                    addEvent(tab, eventName, function () {\n                        // reset class on other elements\n                        deselectAll.call(popup);\n                        selectTab.call(popup, this, i);\n                    });\n                });\n            });\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var PopupTabs = {\n            init: init\n        };\n\n        return PopupTabs;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Popup/Popup.js', [_modules['Shared/BaseForm.js'], _modules['Core/Globals.js'], _modules['Core/Defaults.js'], _modules['Extensions/Annotations/Popup/PopupAnnotations.js'], _modules['Extensions/Annotations/Popup/PopupIndicators.js'], _modules['Extensions/Annotations/Popup/PopupTabs.js'], _modules['Core/Utilities.js']], function (BaseForm, H, D, PopupAnnotations, PopupIndicators, PopupTabs, U) {\n        /* *\n         *\n         *  Popup generator for Stock tools\n         *\n         *  (c) 2009-2021 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var doc = H.doc;\n        var getOptions = D.getOptions;\n        var addEvent = U.addEvent, createElement = U.createElement, extend = U.extend, fireEvent = U.fireEvent, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get values from all inputs and selections then create JSON.\n         *\n         * @private\n         *\n         * @param {Highcharts.HTMLDOMElement} parentDiv\n         * The container where inputs and selections are created.\n         *\n         * @param {string} type\n         * Type of the popup bookmark (add|edit|remove).\n         */\n        function getFields(parentDiv, type) {\n            var inputList = Array.prototype.slice.call(parentDiv.querySelectorAll('input')), selectList = Array.prototype.slice.call(parentDiv.querySelectorAll('select')), optionSeries = '#highcharts-select-series > option:checked', optionVolume = '#highcharts-select-volume > option:checked', linkedTo = parentDiv.querySelectorAll(optionSeries)[0], volumeTo = parentDiv.querySelectorAll(optionVolume)[0];\n            var fieldsOutput = {\n                actionType: type,\n                linkedTo: linkedTo && linkedTo.getAttribute('value') || '',\n                fields: {}\n            };\n            inputList.forEach(function (input) {\n                var param = input.getAttribute('highcharts-data-name'), seriesId = input.getAttribute('highcharts-data-series-id');\n                // params\n                if (seriesId) {\n                    fieldsOutput.seriesId = input.value;\n                }\n                else if (param) {\n                    fieldsOutput.fields[param] = input.value;\n                }\n                else {\n                    // type like sma / ema\n                    fieldsOutput.type = input.value;\n                }\n            });\n            selectList.forEach(function (select) {\n                var id = select.id;\n                // Get inputs only for the parameters, not for series and volume.\n                if (id !== 'highcharts-select-series' &&\n                    id !== 'highcharts-select-volume') {\n                    var parameter = id.split('highcharts-select-')[1];\n                    fieldsOutput.fields[parameter] = select.value;\n                }\n            });\n            if (volumeTo) {\n                fieldsOutput.fields['params.volumeSeriesID'] = volumeTo\n                    .getAttribute('value') || '';\n            }\n            return fieldsOutput;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var Popup = /** @class */ (function (_super) {\n            __extends(Popup, _super);\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Popup(parentDiv, iconsURL, chart) {\n                var _this = _super.call(this, parentDiv, iconsURL) || this;\n                _this.chart = chart;\n                _this.lang = (getOptions().lang.navigation || {}).popup || {};\n                addEvent(_this.container, 'mousedown', function () {\n                    var activeAnnotation = chart &&\n                        chart.navigationBindings &&\n                        chart.navigationBindings.activeAnnotation;\n                    if (activeAnnotation) {\n                        activeAnnotation.cancelClick = true;\n                        var unbind_1 = addEvent(doc, 'click', function () {\n                            setTimeout(function () {\n                                activeAnnotation.cancelClick = false;\n                            }, 0);\n                            unbind_1();\n                        });\n                    }\n                });\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Create input with label.\n             *\n             * @private\n             *\n             * @param {string} option\n             *        Chain of fields i.e params.styles.fontSize separeted by the dot.\n             *\n             * @param {string} indicatorType\n             *        Type of the indicator i.e. sma, ema...\n             *\n             * @param {HTMLDOMElement} parentDiv\n             *        HTML parent element.\n             *\n             * @param {Highcharts.InputAttributes} inputAttributes\n             *        Attributes of the input.\n             *\n             * @return {HTMLInputElement}\n             *         Return created input element.\n             */\n            Popup.prototype.addInput = function (option, indicatorType, parentDiv, inputAttributes) {\n                var optionParamList = option.split('.'), optionName = optionParamList[optionParamList.length - 1], lang = this.lang, inputName = 'highcharts-' + indicatorType + '-' + pick(inputAttributes.htmlFor, optionName);\n                if (!optionName.match(/^\\d+$/)) {\n                    // add label\n                    createElement('label', {\n                        htmlFor: inputName,\n                        className: inputAttributes.labelClassName\n                    }, void 0, parentDiv).appendChild(doc.createTextNode(lang[optionName] || optionName));\n                }\n                // add input\n                var input = createElement('input', {\n                    name: inputName,\n                    value: inputAttributes.value,\n                    type: inputAttributes.type,\n                    className: 'highcharts-popup-field'\n                }, void 0, parentDiv);\n                input.setAttribute('highcharts-data-name', option);\n                return input;\n            };\n            Popup.prototype.closeButtonEvents = function () {\n                if (this.chart) {\n                    var navigationBindings = this.chart.navigationBindings;\n                    fireEvent(navigationBindings, 'closePopup');\n                    if (navigationBindings &&\n                        navigationBindings.selectedButtonElement) {\n                        fireEvent(navigationBindings, 'deselectButton', { button: navigationBindings.selectedButtonElement });\n                    }\n                }\n                else {\n                    _super.prototype.closeButtonEvents.call(this);\n                }\n            };\n            /**\n             * Create button.\n             * @private\n             * @param {Highcharts.HTMLDOMElement} parentDiv\n             * Container where elements should be added\n             * @param {string} label\n             * Text placed as button label\n             * @param {string} type\n             * add | edit | remove\n             * @param {Function} callback\n             * On click callback\n             * @param {Highcharts.HTMLDOMElement} fieldsDiv\n             * Container where inputs are generated\n             * @return {Highcharts.HTMLDOMElement}\n             * HTML button\n             */\n            Popup.prototype.addButton = function (parentDiv, label, type, fieldsDiv, callback) {\n                var _this = this;\n                var button = createElement('button', void 0, void 0, parentDiv);\n                button.appendChild(doc.createTextNode(label));\n                if (callback) {\n                    ['click', 'touchstart'].forEach(function (eventName) {\n                        addEvent(button, eventName, function () {\n                            _this.closePopup();\n                            return callback(getFields(fieldsDiv, type));\n                        });\n                    });\n                }\n                return button;\n            };\n            /**\n             * Create content and show popup.\n             * @private\n             * @param {string} - type of popup i.e indicators\n             * @param {Highcharts.Chart} - chart\n             * @param {Highcharts.AnnotationsOptions} - options\n             * @param {Function} - on click callback\n             */\n            Popup.prototype.showForm = function (type, chart, options, callback) {\n                if (!chart) {\n                    return;\n                }\n                // show blank popup\n                this.showPopup();\n                // indicator form\n                if (type === 'indicators') {\n                    this.indicators.addForm.call(this, chart, options, callback);\n                }\n                // annotation small toolbar\n                if (type === 'annotation-toolbar') {\n                    this.annotations.addToolbar.call(this, chart, options, callback);\n                }\n                // annotation edit form\n                if (type === 'annotation-edit') {\n                    this.annotations.addForm.call(this, chart, options, callback);\n                }\n                // flags form - add / edit\n                if (type === 'flag') {\n                    this.annotations.addForm.call(this, chart, options, callback, true);\n                }\n                this.type = type;\n                // Explicit height is needed to make inner elements scrollable\n                this.container.style.height = this.container.offsetHeight + 'px';\n            };\n            return Popup;\n        }(BaseForm));\n        extend(Popup.prototype, {\n            annotations: PopupAnnotations,\n            indicators: PopupIndicators,\n            tabs: PopupTabs\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Popup;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Popup/PopupComposition.js', [_modules['Extensions/Annotations/Popup/Popup.js'], _modules['Core/Utilities.js']], function (Popup, U) {\n        /* *\n         *\n         *  Popup generator for Stock tools\n         *\n         *  (c) 2009-2021 Sebastian Bochan\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(NagivationBindingsClass, PointerClass) {\n            if (U.pushUnique(composedMembers, NagivationBindingsClass)) {\n                addEvent(NagivationBindingsClass, 'closePopup', onNavigationBindingsClosePopup);\n                addEvent(NagivationBindingsClass, 'showPopup', onNavigationBindingsShowPopup);\n            }\n            if (U.pushUnique(composedMembers, PointerClass)) {\n                wrap(PointerClass.prototype, 'onContainerMouseDown', wrapPointerOnContainerMouserDown);\n            }\n        }\n        /**\n         * @private\n         */\n        function onNavigationBindingsClosePopup() {\n            if (this.popup) {\n                this.popup.closePopup();\n            }\n        }\n        /**\n         * @private\n         */\n        function onNavigationBindingsShowPopup(config) {\n            if (!this.popup) {\n                // Add popup to main container\n                this.popup = new Popup(this.chart.container, (this.chart.options.navigation.iconsURL ||\n                    (this.chart.options.stockTools &&\n                        this.chart.options.stockTools.gui.iconsURL) ||\n                    'https://code.highcharts.com/11.2.0/gfx/stock-icons/'), this.chart);\n            }\n            this.popup.showForm(config.formType, this.chart, config.options, config.onSubmit);\n        }\n        /**\n         * onContainerMouseDown blocks internal popup events, due to e.preventDefault.\n         * Related issue #4606\n         * @private\n         */\n        function wrapPointerOnContainerMouserDown(proceed, e) {\n            // elements is not in popup\n            if (!this.inClass(e.target, 'highcharts-popup')) {\n                proceed.apply(this, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var PopupComposition = {\n            compose: compose\n        };\n\n        return PopupComposition;\n    });\n    _registerModule(_modules, 'Extensions/Annotations/Annotation.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Extensions/Annotations/AnnotationChart.js'], _modules['Extensions/Annotations/AnnotationDefaults.js'], _modules['Extensions/Annotations/Controllables/ControllableRect.js'], _modules['Extensions/Annotations/Controllables/ControllableCircle.js'], _modules['Extensions/Annotations/Controllables/ControllableEllipse.js'], _modules['Extensions/Annotations/Controllables/ControllablePath.js'], _modules['Extensions/Annotations/Controllables/ControllableImage.js'], _modules['Extensions/Annotations/Controllables/ControllableLabel.js'], _modules['Extensions/Annotations/ControlPoint.js'], _modules['Extensions/Annotations/ControlTarget.js'], _modules['Extensions/Annotations/EventEmitter.js'], _modules['Extensions/Annotations/MockPoint.js'], _modules['Extensions/Annotations/NavigationBindings.js'], _modules['Extensions/Annotations/Popup/PopupComposition.js'], _modules['Core/Utilities.js']], function (A, AnnotationChart, AnnotationDefaults, ControllableRect, ControllableCircle, ControllableEllipse, ControllablePath, ControllableImage, ControllableLabel, ControlPoint, ControlTarget, EventEmitter, MockPoint, NavigationBindings, PopupComposition, U) {\n        /* *\n         *\n         *  (c) 2009-2021 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var getDeferredAnimation = A.getDeferredAnimation;\n        var destroyObjectProperties = U.destroyObjectProperties, erase = U.erase, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Hide or show annotaiton attached to points.\n         * @private\n         */\n        function adjustVisibility(item) {\n            var label = item.graphic, hasVisiblePoints = item.points.some(function (point) { return (point.series.visible !== false &&\n                point.visible !== false); });\n            if (label) {\n                if (!hasVisiblePoints) {\n                    label.hide();\n                }\n                else if (label.visibility === 'hidden') {\n                    label.show();\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function getLabelsAndShapesOptions(baseOptions, newOptions) {\n            var mergedOptions = {};\n            ['labels', 'shapes'].forEach(function (name) {\n                var someBaseOptions = baseOptions[name];\n                if (someBaseOptions) {\n                    if (newOptions[name]) {\n                        mergedOptions[name] = splat(newOptions[name]).map(function (basicOptions, i) {\n                            return merge(someBaseOptions[i], basicOptions);\n                        });\n                    }\n                    else {\n                        mergedOptions[name] = baseOptions[name];\n                    }\n                }\n            });\n            return mergedOptions;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * An annotation class which serves as a container for items like labels or\n         * shapes. Created items are positioned on the chart either by linking them to\n         * existing points or created mock points\n         *\n         * @class\n         * @name Highcharts.Annotation\n         *\n         * @param {Highcharts.Chart} chart\n         *        A chart instance\n         * @param {Highcharts.AnnotationsOptions} userOptions\n         *        The annotation options\n         */\n        var Annotation = /** @class */ (function (_super) {\n            __extends(Annotation, _super);\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Annotation(chart, userOptions) {\n                var _this = _super.call(this) || this;\n                _this.coll = 'annotations';\n                _this.animationConfig = void 0;\n                _this.graphic = void 0;\n                _this.group = void 0;\n                _this.labelCollector = void 0;\n                _this.labelsGroup = void 0;\n                _this.shapesGroup = void 0;\n                /**\n                 * The chart that the annotation belongs to.\n                 *\n                 * @name Highcharts.Annotation#chart\n                 * @type {Highcharts.Chart}\n                 */\n                _this.chart = chart;\n                /**\n                 * The array of points which defines the annotation.\n                 * @private\n                 * @name Highcharts.Annotation#points\n                 * @type {Array<Highcharts.Point>}\n                 */\n                _this.points = [];\n                /**\n                 * The array of control points.\n                 * @private\n                 * @name Highcharts.Annotation#controlPoints\n                 * @type {Array<Annotation.ControlPoint>}\n                 */\n                _this.controlPoints = [];\n                _this.coll = 'annotations';\n                _this.index = -1;\n                /**\n                 * The array of labels which belong to the annotation.\n                 * @private\n                 * @name Highcharts.Annotation#labels\n                 * @type {Array<Highcharts.AnnotationLabelType>}\n                 */\n                _this.labels = [];\n                /**\n                 * The array of shapes which belong to the annotation.\n                 * @private\n                 * @name Highcharts.Annotation#shapes\n                 * @type {Array<Highcharts.AnnotationShapeType>}\n                 */\n                _this.shapes = [];\n                /**\n                 * The options for the annotations.\n                 *\n                 * @name Highcharts.Annotation#options\n                 * @type {Highcharts.AnnotationsOptions}\n                 */\n                _this.options = merge(_this.defaultOptions, userOptions);\n                /**\n                 * The user options for the annotations.\n                 *\n                 * @name Highcharts.Annotation#userOptions\n                 * @type {Highcharts.AnnotationsOptions}\n                 */\n                _this.userOptions = userOptions;\n                // Handle labels and shapes - those are arrays\n                // Merging does not work with arrays (stores reference)\n                var labelsAndShapes = getLabelsAndShapesOptions(_this.options, userOptions);\n                _this.options.labels = labelsAndShapes.labels;\n                _this.options.shapes = labelsAndShapes.shapes;\n                /**\n                 * The callback that reports to the overlapping-labels module which\n                 * labels it should account for.\n                 * @private\n                 * @name Highcharts.Annotation#labelCollector\n                 * @type {Function}\n                 */\n                /**\n                 * The group svg element.\n                 *\n                 * @name Highcharts.Annotation#group\n                 * @type {Highcharts.SVGElement}\n                 */\n                /**\n                 * The group svg element of the annotation's shapes.\n                 *\n                 * @name Highcharts.Annotation#shapesGroup\n                 * @type {Highcharts.SVGElement}\n                 */\n                /**\n                 * The group svg element of the annotation's labels.\n                 *\n                 * @name Highcharts.Annotation#labelsGroup\n                 * @type {Highcharts.SVGElement}\n                 */\n                _this.init(chart, _this.options);\n                return _this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            Annotation.compose = function (ChartClass, PointerClass, SVGRendererClass) {\n                AnnotationChart.compose(Annotation, ChartClass, PointerClass);\n                ControllableLabel.compose(SVGRendererClass);\n                ControllablePath.compose(ChartClass, SVGRendererClass);\n                NavigationBindings.compose(Annotation, ChartClass);\n                PopupComposition.compose(NavigationBindings, PointerClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            Annotation.prototype.addClipPaths = function () {\n                this.setClipAxes();\n                if (this.clipXAxis &&\n                    this.clipYAxis &&\n                    this.options.crop // #15399\n                ) {\n                    this.clipRect = this.chart.renderer.clipRect(this.getClipBox());\n                }\n            };\n            /**\n             * @private\n             */\n            Annotation.prototype.addLabels = function () {\n                var _this = this;\n                var labelsOptions = (this.options.labels || []);\n                labelsOptions.forEach(function (labelOptions, i) {\n                    var label = _this.initLabel(labelOptions, i);\n                    merge(true, labelsOptions[i], label.options);\n                });\n            };\n            /**\n             * @private\n             */\n            Annotation.prototype.addShapes = function () {\n                var _this = this;\n                var shapes = this.options.shapes || [];\n                shapes.forEach(function (shapeOptions, i) {\n                    var shape = _this.initShape(shapeOptions, i);\n                    merge(true, shapes[i], shape.options);\n                });\n            };\n            /**\n             * Destroy the annotation. This function does not touch the chart\n             * that the annotation belongs to (all annotations are kept in\n             * the chart.annotations array) - it is recommended to use\n             * {@link Highcharts.Chart#removeAnnotation} instead.\n             * @private\n             */\n            Annotation.prototype.destroy = function () {\n                var chart = this.chart, destroyItem = function (item) {\n                    item.destroy();\n                };\n                this.labels.forEach(destroyItem);\n                this.shapes.forEach(destroyItem);\n                this.clipXAxis = null;\n                this.clipYAxis = null;\n                erase(chart.labelCollectors, this.labelCollector);\n                _super.prototype.destroy.call(this);\n                this.destroyControlTarget();\n                destroyObjectProperties(this, chart);\n            };\n            /**\n             * Destroy a single item.\n             * @private\n             */\n            Annotation.prototype.destroyItem = function (item) {\n                // erase from shapes or labels array\n                erase(this[item.itemType + 's'], item);\n                item.destroy();\n            };\n            /**\n             * @private\n             */\n            Annotation.prototype.getClipBox = function () {\n                if (this.clipXAxis && this.clipYAxis) {\n                    return {\n                        x: this.clipXAxis.left,\n                        y: this.clipYAxis.top,\n                        width: this.clipXAxis.width,\n                        height: this.clipYAxis.height\n                    };\n                }\n            };\n            /**\n             * Initialize the annotation properties.\n             * @private\n             */\n            Annotation.prototype.initProperties = function (chart, userOptions) {\n                this.setOptions(userOptions);\n                var labelsAndShapes = getLabelsAndShapesOptions(this.options, userOptions);\n                this.options.labels = labelsAndShapes.labels;\n                this.options.shapes = labelsAndShapes.shapes;\n                this.chart = chart;\n                this.points = [];\n                this.controlPoints = [];\n                this.coll = 'annotations';\n                this.userOptions = userOptions;\n                this.labels = [];\n                this.shapes = [];\n            };\n            /**\n             * Initialize the annotation.\n             * @private\n             */\n            Annotation.prototype.init = function (_annotationOrChart, _userOptions, index) {\n                if (index === void 0) { index = this.index; }\n                var chart = this.chart, animOptions = this.options.animation;\n                this.index = index;\n                this.linkPoints();\n                this.addControlPoints();\n                this.addShapes();\n                this.addLabels();\n                this.setLabelCollector();\n                this.animationConfig = getDeferredAnimation(chart, animOptions);\n            };\n            /**\n             * Initialisation of a single label\n             * @private\n             */\n            Annotation.prototype.initLabel = function (labelOptions, index) {\n                var options = merge(this.options.labelOptions, {\n                    controlPointOptions: this.options.controlPointOptions\n                }, labelOptions), label = new ControllableLabel(this, options, index);\n                label.itemType = 'label';\n                this.labels.push(label);\n                return label;\n            };\n            /**\n             * Initialisation of a single shape\n             * @private\n             * @param {Object} shapeOptions\n             * a confg object for a single shape\n             * @param {number} index\n             * annotation may have many shapes, this is the shape's index saved in\n             * shapes.index.\n             */\n            Annotation.prototype.initShape = function (shapeOptions, index) {\n                var options = merge(this.options.shapeOptions, {\n                    controlPointOptions: this.options.controlPointOptions\n                }, shapeOptions), shape = new (Annotation.shapesMap[options.type])(this, options, index);\n                shape.itemType = 'shape';\n                this.shapes.push(shape);\n                return shape;\n            };\n            /**\n             * @private\n             */\n            Annotation.prototype.redraw = function (animation) {\n                this.linkPoints();\n                if (!this.graphic) {\n                    this.render();\n                }\n                if (this.clipRect) {\n                    this.clipRect.animate(this.getClipBox());\n                }\n                this.redrawItems(this.shapes, animation);\n                this.redrawItems(this.labels, animation);\n                this.redrawControlPoints(animation);\n            };\n            /**\n             * Redraw a single item.\n             * @private\n             */\n            Annotation.prototype.redrawItem = function (item, animation) {\n                item.linkPoints();\n                if (!item.shouldBeDrawn()) {\n                    this.destroyItem(item);\n                }\n                else {\n                    if (!item.graphic) {\n                        this.renderItem(item);\n                    }\n                    item.redraw(pick(animation, true) && item.graphic.placed);\n                    if (item.points.length) {\n                        adjustVisibility(item);\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            Annotation.prototype.redrawItems = function (items, animation) {\n                var i = items.length;\n                // needs a backward loop\n                // labels/shapes array might be modified\n                // due to destruction of the item\n                while (i--) {\n                    this.redrawItem(items[i], animation);\n                }\n            };\n            /**\n             * See {@link Highcharts.Chart#removeAnnotation}.\n             * @private\n             */\n            Annotation.prototype.remove = function () {\n                // Let chart.update() remove annoations on demand\n                return this.chart.removeAnnotation(this);\n            };\n            /**\n             * @private\n             */\n            Annotation.prototype.render = function () {\n                var renderer = this.chart.renderer;\n                this.graphic = renderer\n                    .g('annotation')\n                    .attr({\n                    opacity: 0,\n                    zIndex: this.options.zIndex,\n                    visibility: this.options.visible ?\n                        'inherit' :\n                        'hidden'\n                })\n                    .add();\n                this.shapesGroup = renderer\n                    .g('annotation-shapes')\n                    .add(this.graphic);\n                if (this.options.crop) { // #15399\n                    this.shapesGroup.clip(this.chart.plotBoxClip);\n                }\n                this.labelsGroup = renderer\n                    .g('annotation-labels')\n                    .attr({\n                    // hideOverlappingLabels requires translation\n                    translateX: 0,\n                    translateY: 0\n                })\n                    .add(this.graphic);\n                this.addClipPaths();\n                if (this.clipRect) {\n                    this.graphic.clip(this.clipRect);\n                }\n                // Render shapes and labels before adding events (#13070).\n                this.renderItems(this.shapes);\n                this.renderItems(this.labels);\n                this.addEvents();\n                this.renderControlPoints();\n            };\n            /**\n             * @private\n             */\n            Annotation.prototype.renderItem = function (item) {\n                item.render(item.itemType === 'label' ?\n                    this.labelsGroup :\n                    this.shapesGroup);\n            };\n            /**\n             * @private\n             */\n            Annotation.prototype.renderItems = function (items) {\n                var i = items.length;\n                while (i--) {\n                    this.renderItem(items[i]);\n                }\n            };\n            /**\n             * @private\n             */\n            Annotation.prototype.setClipAxes = function () {\n                var xAxes = this.chart.xAxis, yAxes = this.chart.yAxis, linkedAxes = (this.options.labels || [])\n                    .concat(this.options.shapes || [])\n                    .reduce(function (axes, labelOrShape) {\n                    var point = labelOrShape &&\n                        (labelOrShape.point ||\n                            (labelOrShape.points && labelOrShape.points[0]));\n                    return [\n                        xAxes[point && point.xAxis] || axes[0],\n                        yAxes[point && point.yAxis] || axes[1]\n                    ];\n                }, []);\n                this.clipXAxis = linkedAxes[0];\n                this.clipYAxis = linkedAxes[1];\n            };\n            /**\n             * @private\n             */\n            Annotation.prototype.setControlPointsVisibility = function (visible) {\n                var setItemControlPointsVisibility = function (item) {\n                    item.setControlPointsVisibility(visible);\n                };\n                this.controlPoints.forEach(function (controlPoint) {\n                    controlPoint.setVisibility(visible);\n                });\n                this.shapes.forEach(setItemControlPointsVisibility);\n                this.labels.forEach(setItemControlPointsVisibility);\n            };\n            /**\n             * @private\n             */\n            Annotation.prototype.setLabelCollector = function () {\n                var annotation = this;\n                annotation.labelCollector = function () {\n                    return annotation.labels.reduce(function (labels, label) {\n                        if (!label.options.allowOverlap) {\n                            labels.push(label.graphic);\n                        }\n                        return labels;\n                    }, []);\n                };\n                annotation.chart.labelCollectors.push(annotation.labelCollector);\n            };\n            /**\n             * Set an annotation options.\n             * @private\n             * @param {Highcharts.AnnotationsOptions} userOptions\n             *        User options for an annotation\n             */\n            Annotation.prototype.setOptions = function (userOptions) {\n                this.options = merge(this.defaultOptions, userOptions);\n            };\n            /**\n             * Set the annotation's visibility.\n             * @private\n             * @param {boolean} [visible]\n             * Whether to show or hide an annotation. If the param is omitted, the\n             * annotation's visibility is toggled.\n             */\n            Annotation.prototype.setVisibility = function (visible) {\n                var options = this.options, navigation = this.chart.navigationBindings, visibility = pick(visible, !options.visible);\n                this.graphic.attr('visibility', visibility ? 'inherit' : 'hidden');\n                if (!visibility) {\n                    var setItemControlPointsVisibility = function (item) {\n                        item.setControlPointsVisibility(visibility);\n                    };\n                    this.shapes.forEach(setItemControlPointsVisibility);\n                    this.labels.forEach(setItemControlPointsVisibility);\n                    if (navigation.activeAnnotation === this &&\n                        navigation.popup &&\n                        navigation.popup.type === 'annotation-toolbar') {\n                        fireEvent(navigation, 'closePopup');\n                    }\n                }\n                options.visible = visibility;\n            };\n            /**\n             * Updates an annotation.\n             *\n             * @function Highcharts.Annotation#update\n             *\n             * @param {Partial<Highcharts.AnnotationsOptions>} userOptions\n             *        New user options for the annotation.\n             *\n             */\n            Annotation.prototype.update = function (userOptions, redraw) {\n                var chart = this.chart, labelsAndShapes = getLabelsAndShapesOptions(this.userOptions, userOptions), userOptionsIndex = chart.annotations.indexOf(this), options = merge(true, this.userOptions, userOptions);\n                options.labels = labelsAndShapes.labels;\n                options.shapes = labelsAndShapes.shapes;\n                this.destroy();\n                this.initProperties(chart, options);\n                this.init(chart, options);\n                // Update options in chart options, used in exporting (#9767):\n                chart.options.annotations[userOptionsIndex] = options;\n                this.isUpdating = true;\n                if (pick(redraw, true)) {\n                    chart.redraw();\n                }\n                fireEvent(this, 'afterUpdate');\n                this.isUpdating = false;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            /**\n             * @private\n             */\n            Annotation.ControlPoint = ControlPoint;\n            /**\n             * @private\n             */\n            Annotation.MockPoint = MockPoint;\n            /**\n             * An object uses for mapping between a shape type and a constructor.\n             * To add a new shape type extend this object with type name as a key\n             * and a constructor as its value.\n             */\n            Annotation.shapesMap = {\n                'rect': ControllableRect,\n                'circle': ControllableCircle,\n                'ellipse': ControllableEllipse,\n                'path': ControllablePath,\n                'image': ControllableImage\n            };\n            /**\n             * @private\n             */\n            Annotation.types = {};\n            return Annotation;\n        }(EventEmitter));\n        Annotation.prototype.defaultOptions = AnnotationDefaults;\n        /**\n         * List of events for `annotation.options.events` that should not be\n         * added to `annotation.graphic` but to the `annotation`.\n         *\n         * @private\n         * @type {Array<string>}\n         */\n        Annotation.prototype.nonDOMEvents = ['add', 'afterUpdate', 'drag', 'remove'];\n        ControlTarget.compose(Annotation);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Possible directions for draggable annotations. An empty string (`''`)\n         * makes the annotation undraggable.\n         *\n         * @typedef {''|'x'|'xy'|'y'} Highcharts.AnnotationDraggableValue\n         * @requires modules/annotations\n         */\n        /**\n         * @private\n         * @typedef {\n         *          Highcharts.AnnotationControllableCircle|\n         *          Highcharts.AnnotationControllableImage|\n         *          Highcharts.AnnotationControllablePath|\n         *          Highcharts.AnnotationControllableRect\n         *     } Highcharts.AnnotationShapeType\n         * @requires modules/annotations\n         */\n        /**\n         * @private\n         * @typedef {\n         *          Highcharts.AnnotationControllableLabel\n         *     } Highcharts.AnnotationLabelType\n         * @requires modules/annotations\n         */\n        /**\n         * A point-like object, a mock point or a point used in series.\n         * @private\n         * @typedef {\n         *          Highcharts.AnnotationMockPoint|\n         *          Highcharts.Point\n         *     } Highcharts.AnnotationPointType\n         * @requires modules/annotations\n         */\n        /**\n         * Shape point as string, object or function.\n         *\n         * @typedef {\n         *          string|\n         *          Highcharts.AnnotationMockPointOptionsObject|\n         *          Highcharts.AnnotationMockPointFunction\n         *     } Highcharts.AnnotationShapePointOptions\n         */\n        (''); // keeps doclets above in JS file\n\n        return Annotation;\n    });\n    _registerModule(_modules, 'masters/modules/annotations.src.js', [_modules['Core/Globals.js'], _modules['Extensions/Annotations/Annotation.js']], function (Highcharts, Annotation) {\n\n        var G = Highcharts;\n        G.Annotation = Annotation;\n        Annotation.compose(G.Chart, G.Pointer, G.SVGRenderer);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","U","AnnotationChart","addEvent","erase","find","fireEvent","pick","wrap","composedMembers","chartAddAnnotation","userOptions","redraw","annotation","initAnnotation","options","annotations","push","graphic","attr","opacity","chartCallback","chart","plotBoxClip","renderer","clipRect","plotBox","controlPointsGroup","g","zIndex","clip","add","forEach","annotationOptions","i","some","drawAnnotations","destroy","event","csvColumnHeaderFormatter","exporting","csv","columnHeaderFormatter","multiLevelHeaders","dataRows","xValues","annotationHeader","lang","exportData","startRowLength","length","annotationSeparator","itemDelimiter","joinAnnotations","join","labelOptions","includeInDataExport","labels","label","text","annotationText_1","points","annotationX","x","xAxisIndex","series","xAxis","index","wasAdded","n","newRow","Array","row","maxRowLen","Math","max","newRows","header","s","columnTitle","topLevelColumnTitle","chartDrawAnnotations","animate","animationConfig","chartRemoveAnnotation","idOrAnnotation","coll","id","onChartAfterInit","wrapPointerOnContainerMouseDown","proceed","hasDraggedAnnotation","prototype","slice","call","arguments","compose","AnnotationClass","ChartClass","PointerClass","pushUnique","chartProto","addAnnotation","callbacks","collectionsWithInit","collectionsWithUpdate","removeAnnotation","types","type","defined","visible","animation","crop","draggable","align","allowOverlap","backgroundColor","borderColor","borderRadius","borderWidth","className","formatter","y","overflow","padding","shadow","shape","style","fontSize","fontWeight","color","useHTML","verticalAlign","shapeOptions","stroke","strokeWidth","fill","r","snap","controlPointOptions","events","cursor","height","symbol","width","H","doc","isTouchDevice","objectEach","removeEvent","EventEmitter","addEvents","emitter","addMouseDownEvent","element","e","onMouseDown","passive","eventHandler","cancelClick","pointer","normalize","target","nonDOMEvents","indexOf","on","onDrag","styledMode","cssPointer_1","xy","css","isUpdating","removeDocEvents","hcEvents","mouseMoveToRadians","cx","cy","temp","prevDy","prevChartY","prevDx","prevChartX","dy","chartY","dx","chartX","inverted","atan2","mouseMoveToScale","sx","sy","mouseMoveToTranslation","isInsidePlot","plotLeft","plotTop","visiblePlotOnly","translation_1","translate","shapes","preventDefault","button","_a","firesTouchEvents","sourceCapabilities","removeDrag","hasDragged","removeMouseUp","onMouseUp","_e","annotationsOptions","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","p","TypeError","String","__","constructor","create","merge","_super","ControlPoint","_this","positioner","render","setVisibility","update","SeriesRegistry","seriesProto","MockPoint","plotX","plotY","mock","getPlotBox","applyOptions","getOptions","fromPoint","point","yAxis","pointToPixels","paneCoordinates","plotWidth","plotHeight","translateX","translateY","pointToOptions","command","setAxis","refresh","getLabelConfig","hasDynamicOptions","len","toPixels","isInside","refreshOptions","toValue","rotate","radians","cos","sin","tx","ty","scale","xOrY","axisName","axisOptions","get","toAnchor","anchor","_cx","_cy","ControlTarget","addControlPoints","controlPoints","controlPointsOptions","box","tooltip","getAnchor","relativePosition","absolutePosition","destroyControlTarget","controlPoint","getPointsOptions","splat","linkPoints","pointsOptions","pointOptions","isObject","isString","pointConfig","redrawControlPoints","renderControlPoints","transform","transformation","p1","p2","_point","transformPoint","translatePoint","ControlTargetClass","Controllable","itemType","collection","init","_args","_i","attrsFromOptions","key","mappedKey","map","attrsMap","attrs","tracker","_parentGroup","setControlPointsVisibility","shouldBeDrawn","translateShape","translateSecondPoint","annotationIndex","chartOptions","newOptions","parentGroup","Constructor","defaultMarkers","arrow","tagName","attributes","refY","refX","markerWidth","markerHeight","children","ControllableDefaults","extend","uniqueKey","markerEndSetter","createMarkerSetter","markerStartSetter","TRACKER_FILL","svg","markerType","value","onChartAfterGetContainer","defs","svgRendererAddMarker","markerOptions","child","ast","orient","marker","definition","ControllablePath","SVGRendererClass","svgRendererProto","addMarker","toD","dOption","showPath","position","pointIndex","crispLine","parent","addClass","setMarkers","action","placed","item","itemOptions","def","predefinedMarker","markerId","getAttribute","dashStyle","ControllableRect","rect","Boolean","ControllableCircle","circle","setRadius","ControllableEllipse","createElement","getDistanceFromLine","point1","point2","x0","y0","abs","sqrt","getAttrs","position2","x1","y1","x2","y2","angle","atan","PI","rx","ry","getRY","getYAxis","yAxisIndex","getAbsolutePosition","rotation","rotationOriginX","rotationOriginY","setYRadius","F","format","isNumber","symbolConnector","w","h","yOffset","anchorX","anchorY","lateral","ControllableLabel","alignedPosition","alignOptions","alignFactor","vAlignFactor","vAlign","round","symbols","connector","justifiedOptions","alignAttr","off","bBox","getBBox","chartAnnotations","getContrast","shapesWithoutBackground","labelrank","itemPosition","alignTo","itemPosRelativeX","itemPosRelativeY","anchorAbsolutePosition","anchorRelativePosition","showItem","_b","distance","getPosition","getPlayingField","negative","ttBelow","ControllableImage","image","src","ChartNavigationComposition","Additions","navigation","updates","addUpdate","updateFn","annotationsFieldsTypes","name","title","getAssignedAxis","coords","filter","coord","extremes","axis","getExtremes","axisMin","min","axisMax","minPointOffset","isInternal","getFieldType","predefinedType","fieldType","NBU","popup","simpleShapes","lines","ellipse","rectangle","typeOptions","backgroundColors","bindingsClassName","bindings","circleAnnotation","start","getCoordinates","coordsX","coordsY","langKey","steps","mockPointOpts","pow","ellipseAnnotation","newR","newRY","rectangleAnnotation","labelAnnotation","defer","D","NavigationBindingDefaults","setOptions","win","isArray","isFunction","onAnnotationRemove","navigationBindings","deselectAnnotation","onChartDestroy","onChartLoad","NavigationBindings","initEvents","initUpdate","onChartRender","disabledClassName","buttonsEnabled_1","container","container_1","boundClassNames","buttonNode","querySelectorAll","cls","noDataState","classList","remove","onNavigationBindingsClosePopup","onNavigationBindingsDeselectButton","selectedButtonElement","selectableAnnotation","annotationType","touchStartX","touchStartY","originalClick","defaultOptions","click","selectAndShowPopup","eventArguments","prevAnnotation","activeAnnotation","formType","annotationToFields","onSubmit","data","actionType","config","fieldsToOptions","fields","crosshairY","enabled","crosshairX","touchstart","touches","clientX","clientY","touchend","changedTouches","selectedButton","eventsToUnbind","getElementsByClassName","bindingsContainer","subContainer","getButtonEvents","contains","bindingsButtonClick","callback","eventName","bindingsChartClick","bindingsContainerMouseMove","clickEvent","svgContainer","boxWrapper","shouldEventBeFired","nextEvent","currentUserDetails","mouseMoveEvent","stockTools","toggleButtonActiveClass","removeClass","parentNode","closestPolyfill","el","ElementProto","Element","elementMatches","matches","msMatchesSelector","webkitMatchesSelector","ret","closest","parentElement","nodeType","setTimeout","stepIndex","end","_container","moveEvent","field","parsedValue","parseFloat","split","pathLength","match","parent_1","nextName","editables","annotationsEditable","nestedEditables","nestedOptions","nonEditables","annotationsNonEditable","visualOptions","traverse","option","parentEditables","parentKey","nextParent","arrayOption","nestedOption","nestedKey","toString","typeOption","typeKey","getClickedClassNames","elemClassName","classNames","concat","removeEvents","unbinder","background","innerBackground","outerBackground","line","verticalLine","measure","fibonacci","tunnel","pitchfork","crookedLine","basicAnnotation","AST","BaseForm","parentDiv","iconsURL","createPopupContainer","closeButton","addCloseButton","closeButtonEvents","bind","document","code","closePopup","showPopup","toolbarClass","popupDiv","popupCloseButton","innerHTML","emptyHTML","removeAttribute","appendChild","display","isFirefox","stableSort","addFormFields","storage","isRoot","parentFullName","titleName","addInput","a","reverse","genInput","createTextNode","splice","addForm","isInit","lhsCol","bottomRow","addButton","saveButton","addToolbar","showForm","top","removeButton","editButton","NU","DropdownProperties","seriesTypes","dropdownParameters","addColsContainer","rhsCol","seriesType","rhsColWrapper","params","getNameType","indicatorFullName","listAllSeries","linkedParent","volumeSeriesID","addParamInputs","addIndicatorList","listType","isEdit","plotOptions","filteredSeriesArray","filterSeriesArray","filterSeries","seriesAName","toLowerCase","seriesBName","indicatorList","seriesSet","indicatorType","setAttribute","childNodes","setElementHTML","noFilterMatch","fieldName","selectBox","addSelection","addSelectionOptions","addSearchBox","clearFilterText","clearFilter","inputWrapper","handleInputChange","inputText","input","htmlFor","labelClassName","textContent","optionName","optionParamList","labelText","selectName","parameterName","selectedOption","currentSeries","seriesOptions","seriesName","parameterOption","indicators","filteredSeries","indicatorAliases","regex","RegExp","replace","alias","is","nameBase","toUpperCase","_options","buttonParentDiv","tabs","tabsContainers","getAmount","counter","serie","addContentItem","addMenuItem","tabName","disableTab","menuItem","deselectAll","tabsContent","selectTab","tab","allTabs","switchTabs","indicatorsCount","firstTab","PopupAnnotations","PopupIndicators","PopupTabs","Popup","unbind_1","inputAttributes","inputName","fieldsDiv","inputList","selectList","linkedTo","volumeTo","fieldsOutput","param","seriesId","select","parameter","offsetHeight","onNavigationBindingsShowPopup","gui","wrapPointerOnContainerMouserDown","inClass","NagivationBindingsClass","A","AnnotationDefaults","PopupComposition","getDeferredAnimation","destroyObjectProperties","getLabelsAndShapesOptions","baseOptions","mergedOptions","someBaseOptions","basicOptions","Annotation","group","labelCollector","labelsGroup","shapesGroup","labelsAndShapes","addClipPaths","setClipAxes","clipXAxis","clipYAxis","getClipBox","addLabels","labelsOptions","initLabel","addShapes","initShape","destroyItem","labelCollectors","left","initProperties","_annotationOrChart","_userOptions","animOptions","setLabelCollector","shapesMap","redrawItems","redrawItem","renderItem","hasVisiblePoints","visibility","show","hide","items","renderItems","xAxes","yAxes","linkedAxes","reduce","axes","labelOrShape","setItemControlPointsVisibility","userOptionsIndex","G","Chart","Pointer","SVGRenderer"],"mappings":"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"}