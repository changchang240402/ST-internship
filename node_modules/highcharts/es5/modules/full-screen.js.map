{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * Advanced Highcharts Stock tools\n *\n * (c) 2010-2021 Highsoft AS\n * Author: Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/full-screen', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/Exporting/Fullscreen.js', [_modules['Core/Renderer/HTML/AST.js'], _modules['Core/Utilities.js']], function (AST, U) {\n        /* *\n         *\n         *  (c) 2009-2021 Rafal Sebestjanski\n         *\n         *  Full screen for Highcharts\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /**\n         * The module allows user to enable display chart in full screen mode.\n         * Used in StockTools too.\n         * Based on default solutions in browsers.\n         */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var addEvent = U.addEvent, fireEvent = U.fireEvent;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onChartBeforeRender() {\n            /**\n             * @name Highcharts.Chart#fullscreen\n             * @type {Highcharts.Fullscreen}\n             * @requires modules/full-screen\n             */\n            this.fullscreen = new Fullscreen(this);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Handles displaying chart's container in the fullscreen mode.\n         *\n         * **Note**: Fullscreen is not supported on iPhone due to iOS limitations.\n         *\n         * @class\n         * @name Highcharts.Fullscreen\n         *\n         * @requires modules/exporting\n         */\n        var Fullscreen = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Fullscreen(chart) {\n                /**\n                 * Chart managed by the fullscreen controller.\n                 * @name Highcharts.Fullscreen#chart\n                 * @type {Highcharts.Chart}\n                 */\n                this.chart = chart;\n                /**\n                 * The flag is set to `true` when the chart is displayed in\n                 * the fullscreen mode.\n                 *\n                 * @name Highcharts.Fullscreen#isOpen\n                 * @type {boolean|undefined}\n                 * @since 8.0.1\n                 */\n                this.isOpen = false;\n                var container = chart.renderTo;\n                // Hold event and methods available only for a current browser.\n                if (!this.browserProps) {\n                    if (typeof container.requestFullscreen === 'function') {\n                        this.browserProps = {\n                            fullscreenChange: 'fullscreenchange',\n                            requestFullscreen: 'requestFullscreen',\n                            exitFullscreen: 'exitFullscreen'\n                        };\n                    }\n                    else if (container.mozRequestFullScreen) {\n                        this.browserProps = {\n                            fullscreenChange: 'mozfullscreenchange',\n                            requestFullscreen: 'mozRequestFullScreen',\n                            exitFullscreen: 'mozCancelFullScreen'\n                        };\n                    }\n                    else if (container.webkitRequestFullScreen) {\n                        this.browserProps = {\n                            fullscreenChange: 'webkitfullscreenchange',\n                            requestFullscreen: 'webkitRequestFullScreen',\n                            exitFullscreen: 'webkitExitFullscreen'\n                        };\n                    }\n                    else if (container.msRequestFullscreen) {\n                        this.browserProps = {\n                            fullscreenChange: 'MSFullscreenChange',\n                            requestFullscreen: 'msRequestFullscreen',\n                            exitFullscreen: 'msExitFullscreen'\n                        };\n                    }\n                }\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * Prepares the chart class to support fullscreen.\n             *\n             * @param {typeof_Highcharts.Chart} ChartClass\n             * The chart class to decorate with fullscreen support.\n             */\n            Fullscreen.compose = function (ChartClass) {\n                if (U.pushUnique(composedMembers, ChartClass)) {\n                    // Initialize fullscreen\n                    addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Stops displaying the chart in fullscreen mode.\n             * Exporting module required.\n             *\n             * @since       8.0.1\n             *\n             * @function    Highcharts.Fullscreen#close\n             * @return      {void}\n             * @requires    modules/full-screen\n             */\n            Fullscreen.prototype.close = function () {\n                var fullscreen = this, chart = fullscreen.chart, optionsChart = chart.options.chart;\n                fireEvent(chart, 'fullscreenClose', null, function () {\n                    // Don't fire exitFullscreen() when user exited\n                    // using 'Escape' button.\n                    if (fullscreen.isOpen &&\n                        fullscreen.browserProps &&\n                        chart.container.ownerDocument instanceof Document) {\n                        chart.container.ownerDocument[fullscreen.browserProps.exitFullscreen]();\n                    }\n                    // Unbind event as it's necessary only before exiting\n                    // from fullscreen.\n                    if (fullscreen.unbindFullscreenEvent) {\n                        fullscreen.unbindFullscreenEvent = fullscreen\n                            .unbindFullscreenEvent();\n                    }\n                    chart.setSize(fullscreen.origWidth, fullscreen.origHeight, false);\n                    fullscreen.origWidth = void 0;\n                    fullscreen.origHeight = void 0;\n                    optionsChart.width = fullscreen.origWidthOption;\n                    optionsChart.height = fullscreen.origHeightOption;\n                    fullscreen.origWidthOption = void 0;\n                    fullscreen.origHeightOption = void 0;\n                    fullscreen.isOpen = false;\n                    fullscreen.setButtonText();\n                });\n            };\n            /**\n             * Displays the chart in fullscreen mode.\n             * When fired customly by user before exporting context button is created,\n             * button's text will not be replaced - it's on the user side.\n             * Exporting module required.\n             *\n             * @since       8.0.1\n             *\n             * @function Highcharts.Fullscreen#open\n             * @return      {void}\n             * @requires    modules/full-screen\n             */\n            Fullscreen.prototype.open = function () {\n                var fullscreen = this, chart = fullscreen.chart, optionsChart = chart.options.chart;\n                fireEvent(chart, 'fullscreenOpen', null, function () {\n                    if (optionsChart) {\n                        fullscreen.origWidthOption = optionsChart.width;\n                        fullscreen.origHeightOption = optionsChart.height;\n                    }\n                    fullscreen.origWidth = chart.chartWidth;\n                    fullscreen.origHeight = chart.chartHeight;\n                    // Handle exitFullscreen() method when user clicks 'Escape' button.\n                    if (fullscreen.browserProps) {\n                        var unbindChange_1 = addEvent(chart.container.ownerDocument, // chart's document\n                        fullscreen.browserProps.fullscreenChange, function () {\n                            // Handle lack of async of browser's\n                            // fullScreenChange event.\n                            if (fullscreen.isOpen) {\n                                fullscreen.isOpen = false;\n                                fullscreen.close();\n                            }\n                            else {\n                                chart.setSize(null, null, false);\n                                fullscreen.isOpen = true;\n                                fullscreen.setButtonText();\n                            }\n                        });\n                        var unbindDestroy_1 = addEvent(chart, 'destroy', unbindChange_1);\n                        fullscreen.unbindFullscreenEvent = function () {\n                            unbindChange_1();\n                            unbindDestroy_1();\n                        };\n                        var promise = chart.renderTo[fullscreen.browserProps.requestFullscreen]();\n                        if (promise) {\n                            promise['catch'](function () {\n                                alert(// eslint-disable-line no-alert\n                                'Full screen is not supported inside a frame.');\n                            });\n                        }\n                    }\n                });\n            };\n            /**\n             * Replaces the exporting context button's text when toogling the\n             * fullscreen mode.\n             *\n             * @private\n             *\n             * @since 8.0.1\n             *\n             * @requires modules/full-screen\n             */\n            Fullscreen.prototype.setButtonText = function () {\n                var chart = this.chart, exportDivElements = chart.exportDivElements, exportingOptions = chart.options.exporting, menuItems = (exportingOptions &&\n                    exportingOptions.buttons &&\n                    exportingOptions.buttons.contextButton.menuItems), lang = chart.options.lang;\n                if (exportingOptions &&\n                    exportingOptions.menuItemDefinitions &&\n                    lang &&\n                    lang.exitFullscreen &&\n                    lang.viewFullscreen &&\n                    menuItems &&\n                    exportDivElements) {\n                    var exportDivElement = exportDivElements[menuItems.indexOf('viewFullscreen')];\n                    if (exportDivElement) {\n                        AST.setElementHTML(exportDivElement, !this.isOpen ?\n                            (exportingOptions.menuItemDefinitions.viewFullscreen\n                                .text ||\n                                lang.viewFullscreen) : lang.exitFullscreen);\n                    }\n                }\n            };\n            /**\n             * Toggles displaying the chart in fullscreen mode.\n             * By default, when the exporting module is enabled, a context button with\n             * a drop down menu in the upper right corner accesses this function.\n             * Exporting module required.\n             *\n             * @since 8.0.1\n             *\n             * @sample      highcharts/members/chart-togglefullscreen/\n             *              Toggle fullscreen mode from a HTML button\n             *\n             * @function Highcharts.Fullscreen#toggle\n             * @requires    modules/full-screen\n             */\n            Fullscreen.prototype.toggle = function () {\n                var fullscreen = this;\n                if (!fullscreen.isOpen) {\n                    fullscreen.open();\n                }\n                else {\n                    fullscreen.close();\n                }\n            };\n            return Fullscreen;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Gets fired when closing the fullscreen\n         *\n         * @callback Highcharts.FullScreenfullscreenCloseCallbackFunction\n         *\n         * @param {Highcharts.Chart} chart\n         *        The chart on which the event occured.\n         *\n         * @param {global.Event} event\n         *        The event that occured.\n         */\n        /**\n         * Gets fired when opening the fullscreen\n         *\n         * @callback Highcharts.FullScreenfullscreenOpenCallbackFunction\n         *\n         * @param {Highcharts.Chart} chart\n         *        The chart on which the event occured.\n         *\n         * @param {global.Event} event\n         *        The event that occured.\n         */\n        (''); // keeps doclets above separated from following code\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Fires when a fullscreen is closed through the context menu item,\n         * or a fullscreen is closed on the `Escape` button click,\n         * or the `Chart.fullscreen.close` method.\n         *\n         * @sample highcharts/chart/events-fullscreen\n         *         Title size change on fullscreen open\n         *\n         * @type      {Highcharts.FullScreenfullscreenCloseCallbackFunction}\n         * @since     10.1.0\n         * @context   Highcharts.Chart\n         * @requires  modules/full-screen\n         * @apioption chart.events.fullscreenClose\n         */\n        /**\n         * Fires when a fullscreen is opened through the context menu item,\n         * or the `Chart.fullscreen.open` method.\n         *\n         * @sample highcharts/chart/events-fullscreen\n         *         Title size change on fullscreen open\n         *\n         * @type      {Highcharts.FullScreenfullscreenOpenCallbackFunction}\n         * @since     10.1.0\n         * @context   Highcharts.Chart\n         * @requires  modules/full-screen\n         * @apioption chart.events.fullscreenOpen\n         */\n        (''); // keeps doclets above in transpiled file\n\n        return Fullscreen;\n    });\n    _registerModule(_modules, 'masters/modules/full-screen.src.js', [_modules['Core/Globals.js'], _modules['Extensions/Exporting/Fullscreen.js']], function (Highcharts, Fullscreen) {\n\n        var G = Highcharts;\n        G.Fullscreen = Fullscreen;\n        Fullscreen.compose(G.Chart);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","AST","U","addEvent","fireEvent","composedMembers","onChartBeforeRender","fullscreen","Fullscreen","chart","isOpen","container","renderTo","browserProps","requestFullscreen","fullscreenChange","exitFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","compose","ChartClass","pushUnique","prototype","close","optionsChart","options","ownerDocument","Document","unbindFullscreenEvent","setSize","origWidth","origHeight","width","origWidthOption","height","origHeightOption","setButtonText","open","chartWidth","chartHeight","unbindChange_1","unbindDestroy_1","promise","alert","exportDivElements","exportingOptions","exporting","menuItems","buttons","contextButton","lang","menuItemDefinitions","viewFullscreen","exportDivElement","indexOf","setElementHTML","text","toggle","G","Chart"],"mappings":"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"}