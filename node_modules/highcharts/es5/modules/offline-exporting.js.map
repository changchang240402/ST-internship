{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.2.0 (2023-10-30)\n *\n * Client side exporting module\n *\n * (c) 2015-2021 Torstein Honsi / Oystein Moseng\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/offline-exporting', ['highcharts', 'highcharts/modules/exporting'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Extensions/DownloadURL.js', [_modules['Core/Globals.js']], function (H) {\n        /* *\n         *\n         *  (c) 2015-2023 Oystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         *  Mixin for downloading content in the browser\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var isSafari = H.isSafari, win = H.win, doc = H.win.document;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var domurl = win.URL || win.webkitURL || win;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Convert base64 dataURL to Blob if supported, otherwise returns undefined.\n         * @private\n         * @function Highcharts.dataURLtoBlob\n         * @param {string} dataURL\n         *        URL to convert\n         * @return {string|undefined}\n         *         Blob\n         */\n        function dataURLtoBlob(dataURL) {\n            var parts = dataURL\n                .replace(/filename=.*;/, '')\n                .match(/data:([^;]*)(;base64)?,([0-9A-Za-z+/]+)/);\n            if (parts &&\n                parts.length > 3 &&\n                (win.atob) &&\n                win.ArrayBuffer &&\n                win.Uint8Array &&\n                win.Blob &&\n                (domurl.createObjectURL)) {\n                // Try to convert data URL to Blob\n                var binStr = win.atob(parts[3]), buf = new win.ArrayBuffer(binStr.length), binary = new win.Uint8Array(buf);\n                for (var i = 0; i < binary.length; ++i) {\n                    binary[i] = binStr.charCodeAt(i);\n                }\n                return domurl\n                    .createObjectURL(new win.Blob([binary], { 'type': parts[1] }));\n            }\n        }\n        /**\n         * Download a data URL in the browser. Can also take a blob as first param.\n         *\n         * @private\n         * @function Highcharts.downloadURL\n         * @param {string|global.URL} dataURL\n         *        The dataURL/Blob to download\n         * @param {string} filename\n         *        The name of the resulting file (w/extension)\n         * @return {void}\n         */\n        function downloadURL(dataURL, filename) {\n            var nav = win.navigator, a = doc.createElement('a');\n            // IE specific blob implementation\n            // Don't use for normal dataURLs\n            if (typeof dataURL !== 'string' &&\n                !(dataURL instanceof String) &&\n                nav.msSaveOrOpenBlob) {\n                nav.msSaveOrOpenBlob(dataURL, filename);\n                return;\n            }\n            dataURL = '' + dataURL;\n            var // Some browsers have limitations for data URL lengths. Try to convert\n            // to Blob or fall back. Edge always needs that blob.\n            isOldEdgeBrowser = /Edge\\/\\d+/.test(nav.userAgent), \n            // Safari on iOS needs Blob in order to download PDF\n            safariBlob = (isSafari &&\n                typeof dataURL === 'string' &&\n                dataURL.indexOf('data:application/pdf') === 0);\n            if (safariBlob || isOldEdgeBrowser || dataURL.length > 2000000) {\n                dataURL = dataURLtoBlob(dataURL) || '';\n                if (!dataURL) {\n                    throw new Error('Failed to convert to blob');\n                }\n            }\n            // Try HTML5 download attr if supported\n            if (typeof a.download !== 'undefined') {\n                a.href = dataURL;\n                a.download = filename; // HTML5 download attribute\n                doc.body.appendChild(a);\n                a.click();\n                doc.body.removeChild(a);\n            }\n            else {\n                // No download attr, just opening data URI\n                try {\n                    if (!win.open(dataURL, 'chart')) {\n                        throw new Error('Failed to open window');\n                    }\n                }\n                catch (_a) {\n                    // If window.open failed, try location.href\n                    win.location.href = dataURL;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DownloadURL = {\n            dataURLtoBlob: dataURLtoBlob,\n            downloadURL: downloadURL\n        };\n\n        return DownloadURL;\n    });\n    _registerModule(_modules, 'Extensions/OfflineExporting/OfflineExportingDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         * Declarations\n         *\n         * */\n        var OfflineExportingDefaults = {\n            libURL: 'https://code.highcharts.com/11.2.0/lib/',\n            // When offline-exporting is loaded, redefine the menu item definitions\n            // related to download.\n            menuItemDefinitions: {\n                downloadPNG: {\n                    textKey: 'downloadPNG',\n                    onclick: function () {\n                        this.exportChartLocal();\n                    }\n                },\n                downloadJPEG: {\n                    textKey: 'downloadJPEG',\n                    onclick: function () {\n                        this.exportChartLocal({\n                            type: 'image/jpeg'\n                        });\n                    }\n                },\n                downloadSVG: {\n                    textKey: 'downloadSVG',\n                    onclick: function () {\n                        this.exportChartLocal({\n                            type: 'image/svg+xml'\n                        });\n                    }\n                },\n                downloadPDF: {\n                    textKey: 'downloadPDF',\n                    onclick: function () {\n                        this.exportChartLocal({\n                            type: 'application/pdf'\n                        });\n                    }\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OfflineExportingDefaults;\n    });\n    _registerModule(_modules, 'Extensions/OfflineExporting/OfflineExporting.js', [_modules['Core/Renderer/HTML/AST.js'], _modules['Core/Chart/Chart.js'], _modules['Core/Defaults.js'], _modules['Extensions/DownloadURL.js'], _modules['Extensions/Exporting/Exporting.js'], _modules['Core/Globals.js'], _modules['Core/HttpUtilities.js'], _modules['Extensions/OfflineExporting/OfflineExportingDefaults.js'], _modules['Core/Utilities.js']], function (AST, Chart, D, DownloadURL, Exporting, H, HU, OfflineExportingDefaults, U) {\n        /* *\n         *\n         *  Client side exporting module\n         *\n         *  (c) 2015 Torstein Honsi / Oystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* global MSBlobBuilder */\n        var defaultOptions = D.defaultOptions;\n        var downloadURL = DownloadURL.downloadURL;\n        var win = H.win, doc = H.doc;\n        var ajax = HU.ajax;\n        var addEvent = U.addEvent, error = U.error, extend = U.extend, fireEvent = U.fireEvent, merge = U.merge;\n        AST.allowedAttributes.push('data-z-index', 'fill-opacity', 'rx', 'ry', 'stroke-dasharray', 'stroke-linejoin', 'text-anchor', 'transform', 'version', 'viewBox', 'visibility', 'xmlns', 'xmlns:xlink');\n        AST.allowedTags.push('desc', 'clippath', 'g');\n        /* *\n         *\n         * Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var OfflineExporting;\n        (function (OfflineExporting) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            // Dummy object so we can reuse our canvas-tools.js without errors\n            OfflineExporting.CanVGRenderer = {}, OfflineExporting.domurl = win.URL || win.webkitURL || win, \n            // Milliseconds to defer image load event handlers to offset IE bug\n            OfflineExporting.loadEventDeferDelay = H.isMS ? 150 : 0;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Extends OfflineExporting with Chart.\n             * @private\n             */\n            function compose(ChartClass) {\n                if (U.pushUnique(composedMembers, ChartClass)) {\n                    var chartProto = ChartClass.prototype;\n                    chartProto.getSVGForLocalExport = getSVGForLocalExport;\n                    chartProto.exportChartLocal = exportChartLocal;\n                    // Extend the default options to use the local exporter logic\n                    merge(true, defaultOptions.exporting, OfflineExportingDefaults);\n                }\n                return ChartClass;\n            }\n            OfflineExporting.compose = compose;\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Get data URL to an image of an SVG and call download on it options\n             * object:\n             * - **filename:** Name of resulting downloaded file without extension.\n             * Default is `chart`.\n             *\n             * - **type:** File type of resulting download. Default is `image/png`.\n             *\n             * - **scale:** Scaling factor of downloaded image compared to source.\n             * Default is `1`.\n             *\n             * - **libURL:** URL pointing to location of dependency scripts to download\n             * on demand. Default is the exporting.libURL option of the global\n             * Highcharts options pointing to our server.\n             *\n             * @function Highcharts.downloadSVGLocal\n             *\n             * @param {string} svg\n             * The generated SVG\n             *\n             * @param {Highcharts.ExportingOptions} options\n             * The exporting options\n             *\n             * @param {Function} failCallback\n             * The callback function in case of errors\n             *\n             * @param {Function} [successCallback]\n             * The callback function in case of success\n             *\n             */\n            function downloadSVGLocal(svg, options, failCallback, successCallback) {\n                var dummySVGContainer = doc.createElement('div'), imageType = options.type || 'image/png', filename = ((options.filename || 'chart') +\n                    '.' +\n                    (imageType === 'image/svg+xml' ?\n                        'svg' : imageType.split('/')[1])), scale = options.scale || 1;\n                var svgurl, blob, finallyHandler, libURL = (options.libURL || defaultOptions.exporting.libURL), objectURLRevoke = true, pdfFont = options.pdfFont;\n                // Allow libURL to end with or without fordward slash\n                libURL = libURL.slice(-1) !== '/' ? libURL + '/' : libURL;\n                /*\n                 * Detect if we need to load TTF fonts for the PDF, then load them and\n                 * proceed.\n                 *\n                 * @private\n                 */\n                var loadPdfFonts = function (svgElement, callback) {\n                    var hasNonASCII = function (s) { return (\n                    // eslint-disable-next-line no-control-regex\n                    /[^\\u0000-\\u007F\\u200B]+/.test(s)); };\n                    // Register an event in order to add the font once jsPDF is\n                    // initialized\n                    var addFont = function (variant, base64) {\n                        win.jspdf.jsPDF.API.events.push([\n                            'initialized',\n                            function () {\n                                this.addFileToVFS(variant, base64);\n                                this.addFont(variant, 'HighchartsFont', variant);\n                                if (!this.getFontList().HighchartsFont) {\n                                    this.setFont('HighchartsFont');\n                                }\n                            }\n                        ]);\n                    };\n                    // If there are no non-ASCII characters in the SVG, do not use\n                    // bother downloading the font files\n                    if (pdfFont && !hasNonASCII(svgElement.textContent || '')) {\n                        pdfFont = void 0;\n                    }\n                    // Add new font if the URL is declared, #6417.\n                    var variants = ['normal', 'italic', 'bold', 'bolditalic'];\n                    // Shift the first element off the variants and add as a font.\n                    // Then asynchronously trigger the next variant until calling the\n                    // callback when the variants are empty.\n                    var normalBase64;\n                    var shiftAndLoadVariant = function () {\n                        var variant = variants.shift();\n                        // All variants shifted and possibly loaded, proceed\n                        if (!variant) {\n                            return callback();\n                        }\n                        var url = pdfFont && pdfFont[variant];\n                        if (url) {\n                            ajax({\n                                url: url,\n                                responseType: 'blob',\n                                success: function (data, xhr) {\n                                    var reader = new FileReader();\n                                    reader.onloadend = function () {\n                                        if (typeof this.result === 'string') {\n                                            var base64 = this.result.split(',')[1];\n                                            addFont(variant, base64);\n                                            if (variant === 'normal') {\n                                                normalBase64 = base64;\n                                            }\n                                        }\n                                        shiftAndLoadVariant();\n                                    };\n                                    reader.readAsDataURL(xhr.response);\n                                },\n                                error: shiftAndLoadVariant\n                            });\n                        }\n                        else {\n                            // For other variants, fall back to normal text weight/style\n                            if (normalBase64) {\n                                addFont(variant, normalBase64);\n                            }\n                            shiftAndLoadVariant();\n                        }\n                    };\n                    shiftAndLoadVariant();\n                };\n                /*\n                 * @private\n                 */\n                var downloadPDF = function () {\n                    AST.setElementHTML(dummySVGContainer, svg);\n                    var textElements = dummySVGContainer.getElementsByTagName('text'), \n                    // Copy style property to element from parents if it's not\n                    // there. Searches up hierarchy until it finds prop, or hits the\n                    // chart container.\n                    setStylePropertyFromParents = function (el, propName) {\n                        var curParent = el;\n                        while (curParent && curParent !== dummySVGContainer) {\n                            if (curParent.style[propName]) {\n                                var value = curParent.style[propName];\n                                if (propName === 'fontSize' && /em$/.test(value)) {\n                                    value = Math.round(parseFloat(value) * 16) + 'px';\n                                }\n                                el.style[propName] = value;\n                                break;\n                            }\n                            curParent = curParent.parentNode;\n                        }\n                    };\n                    var titleElements, outlineElements;\n                    // Workaround for the text styling. Making sure it does pick up\n                    // settings for parent elements.\n                    [].forEach.call(textElements, function (el) {\n                        // Workaround for the text styling. making sure it does pick up\n                        // the root element\n                        ['fontFamily', 'fontSize']\n                            .forEach(function (property) {\n                            setStylePropertyFromParents(el, property);\n                        });\n                        el.style.fontFamily = pdfFont && pdfFont.normal ?\n                            // Custom PDF font\n                            'HighchartsFont' :\n                            // Generic font (serif, sans-serif etc)\n                            String(el.style.fontFamily &&\n                                el.style.fontFamily.split(' ').splice(-1));\n                        // Workaround for plotband with width, removing title from text\n                        // nodes\n                        titleElements = el.getElementsByTagName('title');\n                        [].forEach.call(titleElements, function (titleElement) {\n                            el.removeChild(titleElement);\n                        });\n                        // Remove all .highcharts-text-outline elements, #17170\n                        outlineElements =\n                            el.getElementsByClassName('highcharts-text-outline');\n                        while (outlineElements.length > 0) {\n                            el.removeChild(outlineElements[0]);\n                        }\n                    });\n                    var svgNode = dummySVGContainer.querySelector('svg');\n                    if (svgNode) {\n                        loadPdfFonts(svgNode, function () {\n                            svgToPdf(svgNode, 0, scale, function (pdfData) {\n                                try {\n                                    downloadURL(pdfData, filename);\n                                    if (successCallback) {\n                                        successCallback();\n                                    }\n                                }\n                                catch (e) {\n                                    failCallback(e);\n                                }\n                            });\n                        });\n                    }\n                };\n                // Initiate download depending on file type\n                if (imageType === 'image/svg+xml') {\n                    // SVG download. In this case, we want to use Microsoft specific\n                    // Blob if available\n                    try {\n                        if (typeof win.MSBlobBuilder !== 'undefined') {\n                            blob = new win.MSBlobBuilder();\n                            blob.append(svg);\n                            svgurl = blob.getBlob('image/svg+xml');\n                        }\n                        else {\n                            svgurl = svgToDataUrl(svg);\n                        }\n                        downloadURL(svgurl, filename);\n                        if (successCallback) {\n                            successCallback();\n                        }\n                    }\n                    catch (e) {\n                        failCallback(e);\n                    }\n                }\n                else if (imageType === 'application/pdf') {\n                    if (win.jspdf && win.jspdf.jsPDF) {\n                        downloadPDF();\n                    }\n                    else {\n                        // Must load pdf libraries first. // Don't destroy the object\n                        // URL yet since we are doing things asynchronously. A cleaner\n                        // solution would be nice, but this will do for now.\n                        objectURLRevoke = true;\n                        getScript(libURL + 'jspdf.js', function () {\n                            getScript(libURL + 'svg2pdf.js', downloadPDF);\n                        });\n                    }\n                }\n                else {\n                    // PNG/JPEG download - create bitmap from SVG\n                    svgurl = svgToDataUrl(svg);\n                    finallyHandler = function () {\n                        try {\n                            OfflineExporting.domurl.revokeObjectURL(svgurl);\n                        }\n                        catch (e) {\n                            // Ignore\n                        }\n                    };\n                    // First, try to get PNG by rendering on canvas\n                    imageToDataUrl(svgurl, imageType, {}, scale, function (imageURL) {\n                        // Success\n                        try {\n                            downloadURL(imageURL, filename);\n                            if (successCallback) {\n                                successCallback();\n                            }\n                        }\n                        catch (e) {\n                            failCallback(e);\n                        }\n                    }, function () {\n                        // Failed due to tainted canvas\n                        // Create new and untainted canvas\n                        var canvas = doc.createElement('canvas'), ctx = canvas.getContext('2d'), imageWidth = svg.match(/^<svg[^>]*width\\s*=\\s*\\\"?(\\d+)\\\"?[^>]*>/)[1] * scale, imageHeight = svg.match(/^<svg[^>]*height\\s*=\\s*\\\"?(\\d+)\\\"?[^>]*>/)[1] * scale, downloadWithCanVG = function () {\n                            var v = win.canvg.Canvg.fromString(ctx, svg);\n                            v.start();\n                            try {\n                                downloadURL(win.navigator.msSaveOrOpenBlob ?\n                                    canvas.msToBlob() :\n                                    canvas.toDataURL(imageType), filename);\n                                if (successCallback) {\n                                    successCallback();\n                                }\n                            }\n                            catch (e) {\n                                failCallback(e);\n                            }\n                            finally {\n                                finallyHandler();\n                            }\n                        };\n                        canvas.width = imageWidth;\n                        canvas.height = imageHeight;\n                        if (win.canvg) {\n                            // Use preloaded canvg\n                            downloadWithCanVG();\n                        }\n                        else {\n                            // Must load canVG first. // Don't destroy the object\n                            // URL yet since we are doing things asynchronously. A\n                            // cleaner solution would be nice, but this will do for\n                            // now.\n                            objectURLRevoke = true;\n                            getScript(libURL + 'canvg.js', function () {\n                                downloadWithCanVG();\n                            });\n                        }\n                    }, \n                    // No canvas support\n                    failCallback, \n                    // Failed to load image\n                    failCallback, \n                    // Finally\n                    function () {\n                        if (objectURLRevoke) {\n                            finallyHandler();\n                        }\n                    });\n                }\n            }\n            OfflineExporting.downloadSVGLocal = downloadSVGLocal;\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Exporting and offline-exporting modules required. Export a chart to\n             * an image locally in the user's browser.\n             *\n             * @function Highcharts.Chart#exportChartLocal\n             *\n             * @param  {Highcharts.ExportingOptions} [exportingOptions]\n             *         Exporting options, the same as in\n             *         {@link Highcharts.Chart#exportChart}.\n             *\n             * @param  {Highcharts.Options} [chartOptions]\n             *         Additional chart options for the exported chart. For example\n             *         a different background color can be added here, or\n             *         `dataLabels` for export only.\n             *\n             *\n             * @requires modules/exporting\n             * @requires modules/offline-exporting\n             */\n            function exportChartLocal(exportingOptions, chartOptions) {\n                var chart = this, options = merge(chart.options.exporting, exportingOptions), fallbackToExportServer = function (err) {\n                    if (options.fallbackToExportServer === false) {\n                        if (options.error) {\n                            options.error(options, err);\n                        }\n                        else {\n                            error(28, true); // Fallback disabled\n                        }\n                    }\n                    else {\n                        chart.exportChart(options);\n                    }\n                }, svgSuccess = function (svg) {\n                    // If SVG contains foreignObjects PDF fails in all browsers\n                    // and all exports except SVG will fail in IE, as both CanVG\n                    // and svg2pdf choke on this. Gracefully fall back.\n                    if (svg.indexOf('<foreignObject') > -1 &&\n                        options.type !== 'image/svg+xml' &&\n                        (H.isMS || options.type === 'application/pdf')) {\n                        fallbackToExportServer(new Error('Image type not supported for charts with embedded HTML'));\n                    }\n                    else {\n                        OfflineExporting.downloadSVGLocal(svg, extend({ filename: chart.getFilename() }, options), fallbackToExportServer, function () { return fireEvent(chart, 'exportChartLocalSuccess'); });\n                    }\n                }, \n                // Return true if the SVG contains images with external data. With\n                // the boost module there are `image` elements with encoded PNGs,\n                // these are supported by svg2pdf and should pass (#10243).\n                hasExternalImages = function () {\n                    return [].some.call(chart.container.getElementsByTagName('image'), function (image) {\n                        var href = image.getAttribute('href');\n                        return (href !== '' &&\n                            typeof href === 'string' &&\n                            href.indexOf('data:') !== 0);\n                    });\n                };\n                // If we are on IE and in styled mode, add an allowlist to the renderer\n                // for inline styles that we want to pass through. There are so many\n                // styles by default in IE that we don't want to denylist them all.\n                if (H.isMS && chart.styledMode && !Exporting.inlineAllowlist.length) {\n                    Exporting.inlineAllowlist.push(/^blockSize/, /^border/, /^caretColor/, /^color/, /^columnRule/, /^columnRuleColor/, /^cssFloat/, /^cursor/, /^fill$/, /^fillOpacity/, /^font/, /^inlineSize/, /^length/, /^lineHeight/, /^opacity/, /^outline/, /^parentRule/, /^rx$/, /^ry$/, /^stroke/, /^textAlign/, /^textAnchor/, /^textDecoration/, /^transform/, /^vectorEffect/, /^visibility/, /^x$/, /^y$/);\n                }\n                // Always fall back on:\n                // - MS browsers: Embedded images JPEG/PNG, or any PDF\n                // - Embedded images and PDF\n                if ((H.isMS &&\n                    (options.type === 'application/pdf' ||\n                        chart.container.getElementsByTagName('image').length &&\n                            options.type !== 'image/svg+xml')) || (options.type === 'application/pdf' &&\n                    hasExternalImages())) {\n                    fallbackToExportServer(new Error('Image type not supported for this chart/browser.'));\n                    return;\n                }\n                chart.getSVGForLocalExport(options, chartOptions || {}, fallbackToExportServer, svgSuccess);\n            }\n            /**\n             * Downloads a script and executes a callback when done.\n             *\n             * @private\n             * @function getScript\n             * @param {string} scriptLocation\n             * @param {Function} callback\n             */\n            function getScript(scriptLocation, callback) {\n                var head = doc.getElementsByTagName('head')[0], script = doc.createElement('script');\n                script.type = 'text/javascript';\n                script.src = scriptLocation;\n                script.onload = callback;\n                script.onerror = function () {\n                    error('Error loading script ' + scriptLocation);\n                };\n                head.appendChild(script);\n            }\n            OfflineExporting.getScript = getScript;\n            /**\n             * Get SVG of chart prepared for client side export. This converts\n             * embedded images in the SVG to data URIs. It requires the regular\n             * exporting module. The options and chartOptions arguments are passed\n             * to the getSVGForExport function.\n             *\n             * @private\n             * @function Highcharts.Chart#getSVGForLocalExport\n             * @param {Highcharts.ExportingOptions} options\n             * @param {Highcharts.Options} chartOptions\n             * @param {Function} failCallback\n             * @param {Function} successCallback\n             */\n            function getSVGForLocalExport(options, chartOptions, failCallback, successCallback) {\n                var chart = this, \n                // After grabbing the SVG of the chart's copy container we need\n                // to do sanitation on the SVG\n                sanitize = function (svg) { return chart.sanitizeSVG(svg, chartCopyOptions); }, \n                // When done with last image we have our SVG\n                checkDone = function () {\n                    if (images && imagesEmbedded === imagesLength) {\n                        successCallback(sanitize(chartCopyContainer.innerHTML));\n                    }\n                }, \n                // Success handler, we converted image to base64!\n                embeddedSuccess = function (imageURL, imageType, callbackArgs) {\n                    ++imagesEmbedded;\n                    // Change image href in chart copy\n                    callbackArgs.imageElement.setAttributeNS('http://www.w3.org/1999/xlink', 'href', imageURL);\n                    checkDone();\n                };\n                var el, chartCopyContainer, chartCopyOptions, href = null, images, imagesLength = 0, imagesEmbedded = 0;\n                // Hook into getSVG to get a copy of the chart copy's\n                // container (#8273)\n                chart.unbindGetSVG = addEvent(chart, 'getSVG', function (e) {\n                    chartCopyOptions = e.chartCopy.options;\n                    chartCopyContainer = e.chartCopy.container.cloneNode(true);\n                    images = chartCopyContainer && chartCopyContainer\n                        .getElementsByTagName('image') || [];\n                    imagesLength = images.length;\n                });\n                // Trigger hook to get chart copy\n                chart.getSVGForExport(options, chartOptions);\n                try {\n                    // If there are no images to embed, the SVG is okay now.\n                    if (!images || !images.length) {\n                        // Use SVG of chart copy\n                        successCallback(sanitize(chartCopyContainer.innerHTML));\n                        return;\n                    }\n                    // Go through the images we want to embed\n                    for (var i = 0; i < images.length; i++) {\n                        el = images[i];\n                        href = el.getAttributeNS('http://www.w3.org/1999/xlink', 'href');\n                        if (href) {\n                            OfflineExporting.imageToDataUrl(href, 'image/png', { imageElement: el }, options.scale, embeddedSuccess, \n                            // Tainted canvas\n                            failCallback, \n                            // No canvas support\n                            failCallback, \n                            // Failed to load source\n                            failCallback);\n                            // Hidden, boosted series have blank href (#10243)\n                        }\n                        else {\n                            imagesEmbedded++;\n                            el.parentNode.removeChild(el);\n                            i--;\n                            checkDone();\n                        }\n                    }\n                }\n                catch (e) {\n                    failCallback(e);\n                }\n                // Clean up\n                chart.unbindGetSVG();\n            }\n            /**\n             * Get data:URL from image URL. Pass in callbacks to handle results.\n             *\n             * @private\n             * @function Highcharts.imageToDataUrl\n             *\n             * @param {string} imageURL\n             *\n             * @param {string} imageType\n             *\n             * @param {*} callbackArgs\n             *        callbackArgs is used only by callbacks.\n             *\n             * @param {number} scale\n             *\n             * @param {Function} successCallback\n             *        Receives four arguments: imageURL, imageType, callbackArgs,\n             *        and scale.\n             *\n             * @param {Function} taintedCallback\n             *        Receives four arguments: imageURL, imageType, callbackArgs,\n             *        and scale.\n             *\n             * @param {Function} noCanvasSupportCallback\n             *        Receives four arguments: imageURL, imageType, callbackArgs,\n             *        and scale.\n             *\n             * @param {Function} failedLoadCallback\n             *        Receives four arguments: imageURL, imageType, callbackArgs,\n             *        and scale.\n             *\n             * @param {Function} [finallyCallback]\n             *        finallyCallback is always called at the end of the process. All\n             *        callbacks receive four arguments: imageURL, imageType,\n             *        callbackArgs, and scale.\n             */\n            function imageToDataUrl(imageURL, imageType, callbackArgs, scale, successCallback, taintedCallback, noCanvasSupportCallback, failedLoadCallback, finallyCallback) {\n                var img = new win.Image(), taintedHandler;\n                var loadHandler = function () {\n                    setTimeout(function () {\n                        var canvas = doc.createElement('canvas'), ctx = canvas.getContext && canvas.getContext('2d');\n                        var dataURL;\n                        try {\n                            if (!ctx) {\n                                noCanvasSupportCallback(imageURL, imageType, callbackArgs, scale);\n                            }\n                            else {\n                                canvas.height = img.height * scale;\n                                canvas.width = img.width * scale;\n                                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n                                // Now we try to get the contents of the canvas.\n                                try {\n                                    dataURL = canvas.toDataURL(imageType);\n                                    successCallback(dataURL, imageType, callbackArgs, scale);\n                                }\n                                catch (e) {\n                                    taintedHandler(imageURL, imageType, callbackArgs, scale);\n                                }\n                            }\n                        }\n                        finally {\n                            if (finallyCallback) {\n                                finallyCallback(imageURL, imageType, callbackArgs, scale);\n                            }\n                        }\n                        // IE bug where image is not always ready despite calling load\n                        // event.\n                    }, OfflineExporting.loadEventDeferDelay);\n                }, \n                // Image load failed (e.g. invalid URL)\n                errorHandler = function () {\n                    failedLoadCallback(imageURL, imageType, callbackArgs, scale);\n                    if (finallyCallback) {\n                        finallyCallback(imageURL, imageType, callbackArgs, scale);\n                    }\n                };\n                // This is called on load if the image drawing to canvas failed with a\n                // security error. We retry the drawing with crossOrigin set to\n                // Anonymous.\n                taintedHandler = function () {\n                    img = new win.Image();\n                    taintedHandler = taintedCallback;\n                    // Must be set prior to loading image source\n                    img.crossOrigin = 'Anonymous';\n                    img.onload = loadHandler;\n                    img.onerror = errorHandler;\n                    img.src = imageURL;\n                };\n                img.onload = loadHandler;\n                img.onerror = errorHandler;\n                img.src = imageURL;\n            }\n            OfflineExporting.imageToDataUrl = imageToDataUrl;\n            /**\n             * Get blob URL from SVG code. Falls back to normal data URI.\n             *\n             * @private\n             * @function Highcharts.svgToDataURL\n             */\n            function svgToDataUrl(svg) {\n                // Webkit and not chrome\n                var userAgent = win.navigator.userAgent;\n                var webKit = (userAgent.indexOf('WebKit') > -1 &&\n                    userAgent.indexOf('Chrome') < 0);\n                try {\n                    // Safari requires data URI since it doesn't allow navigation to\n                    // blob URLs. ForeignObjects also dont work well in Blobs in Chrome\n                    // (#14780).\n                    if (!webKit && svg.indexOf('<foreignObject') === -1) {\n                        return OfflineExporting.domurl.createObjectURL(new win.Blob([svg], {\n                            type: 'image/svg+xml;charset-utf-16'\n                        }));\n                    }\n                }\n                catch (e) {\n                    // Ignore\n                }\n                return 'data:image/svg+xml;charset=UTF-8,' + encodeURIComponent(svg);\n            }\n            OfflineExporting.svgToDataUrl = svgToDataUrl;\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function svgToPdf(svgElement, margin, scale, callback) {\n                var width = (Number(svgElement.getAttribute('width')) + 2 * margin) *\n                    scale, height = (Number(svgElement.getAttribute('height')) + 2 * margin) *\n                    scale, pdfDoc = new win.jspdf.jsPDF(// eslint-disable-line new-cap\n                // setting orientation to portrait if height exceeds width\n                height > width ? 'p' : 'l', 'pt', [width, height]);\n                // Workaround for #7090, hidden elements were drawn anyway. It comes\n                // down to https://github.com/yWorks/svg2pdf.js/issues/28. Check this\n                // later.\n                [].forEach.call(svgElement.querySelectorAll('*[visibility=\"hidden\"]'), function (node) {\n                    node.parentNode.removeChild(node);\n                });\n                // Workaround for #13948, multiple stops in linear gradient set to 0\n                // causing error in Acrobat\n                var gradients = svgElement.querySelectorAll('linearGradient');\n                for (var index = 0; index < gradients.length; index++) {\n                    var gradient = gradients[index];\n                    var stops = gradient.querySelectorAll('stop');\n                    var i = 0;\n                    while (i < stops.length &&\n                        stops[i].getAttribute('offset') === '0' &&\n                        stops[i + 1].getAttribute('offset') === '0') {\n                        stops[i].remove();\n                        i++;\n                    }\n                }\n                // Workaround for #15135, zero width spaces, which Highcharts uses\n                // to break lines, are not correctly rendered in PDF. Replace it\n                // with a regular space and offset by some pixels to compensate.\n                [].forEach.call(svgElement.querySelectorAll('tspan'), function (tspan) {\n                    if (tspan.textContent === '\\u200B') {\n                        tspan.textContent = ' ';\n                        tspan.setAttribute('dx', -5);\n                    }\n                });\n                pdfDoc.svg(svgElement, {\n                    x: 0,\n                    y: 0,\n                    width: width,\n                    height: height,\n                    removeInvalid: true\n                }).then(function () { return callback(pdfDoc.output('datauristring')); });\n            }\n            OfflineExporting.svgToPdf = svgToPdf;\n        })(OfflineExporting || (OfflineExporting = {}));\n        /* *\n         *\n         * Default Export\n         *\n         * */\n\n        return OfflineExporting;\n    });\n    _registerModule(_modules, 'masters/modules/offline-exporting.src.js', [_modules['Core/Globals.js'], _modules['Extensions/DownloadURL.js'], _modules['Extensions/OfflineExporting/OfflineExporting.js']], function (Highcharts, DownloadURL, OfflineExporting) {\n\n        var G = Highcharts;\n        // Compatibility\n        G.dataURLtoBlob = DownloadURL.dataURLtoBlob;\n        G.downloadSVGLocal = OfflineExporting.downloadSVGLocal;\n        G.downloadURL = DownloadURL.downloadURL;\n        // Compose\n        OfflineExporting.compose(G.Chart);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","H","isSafari","win","doc","document","domurl","URL","webkitURL","dataURLtoBlob","dataURL","parts","replace","match","length","atob","ArrayBuffer","Uint8Array","Blob","createObjectURL","binStr","buf","binary","i","charCodeAt","downloadURL","filename","nav","navigator","a","createElement","String","msSaveOrOpenBlob","isOldEdgeBrowser","test","userAgent","safariBlob","indexOf","Error","download","href","body","appendChild","click","removeChild","open","_a","location","libURL","menuItemDefinitions","downloadPNG","textKey","onclick","exportChartLocal","downloadJPEG","type","downloadSVG","downloadPDF","AST","Chart","D","DownloadURL","Exporting","HU","OfflineExportingDefaults","U","OfflineExporting","defaultOptions","ajax","addEvent","error","extend","fireEvent","merge","allowedAttributes","push","allowedTags","composedMembers","exportingOptions","chartOptions","chart","options","exporting","fallbackToExportServer","err","exportChart","isMS","styledMode","inlineAllowlist","container","getElementsByTagName","some","call","image","getAttribute","getSVGForLocalExport","svg","downloadSVGLocal","getFilename","getScript","scriptLocation","callback","head","script","src","onload","onerror","failCallback","successCallback","el","chartCopyContainer","chartCopyOptions","images","sanitize","sanitizeSVG","checkDone","imagesEmbedded","imagesLength","innerHTML","embeddedSuccess","imageURL","imageType","callbackArgs","imageElement","setAttributeNS","unbindGetSVG","e","chartCopy","cloneNode","getSVGForExport","getAttributeNS","imageToDataUrl","scale","parentNode","taintedCallback","noCanvasSupportCallback","failedLoadCallback","finallyCallback","taintedHandler","img","Image","loadHandler","setTimeout","canvas","ctx","getContext","height","width","drawImage","toDataURL","loadEventDeferDelay","errorHandler","crossOrigin","svgToDataUrl","webKit","encodeURIComponent","svgToPdf","svgElement","margin","Number","pdfDoc","jspdf","jsPDF","forEach","querySelectorAll","node","gradients","index","stops","gradient","remove","tspan","textContent","setAttribute","x","y","removeInvalid","then","output","CanVGRenderer","compose","ChartClass","pushUnique","chartProto","prototype","svgurl","blob","finallyHandler","dummySVGContainer","split","objectURLRevoke","pdfFont","slice","loadPdfFonts","normalBase64","s","addFont","variant","base64","API","events","addFileToVFS","getFontList","HighchartsFont","setFont","variants","shiftAndLoadVariant","shift","url","responseType","success","data","xhr","reader","FileReader","onloadend","result","readAsDataURL","response","setElementHTML","titleElements","outlineElements","textElements","setStylePropertyFromParents","propName","curParent","style","value","Math","round","parseFloat","property","fontFamily","normal","splice","titleElement","getElementsByClassName","svgNode","querySelector","pdfData","MSBlobBuilder","append","getBlob","revokeObjectURL","imageWidth","imageHeight","downloadWithCanVG","v","canvg","Canvg","fromString","start","msToBlob","G"],"mappings":"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"}