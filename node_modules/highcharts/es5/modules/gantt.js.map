{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts Gantt JS v11.2.0 (2023-10-30)\n *\n * Gantt series\n *\n * (c) 2016-2021 Lars A. V. Cabrera\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/gantt', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Gantt/Connection.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined, error = U.error, merge = U.merge, objectEach = U.objectEach;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var deg2rad = H.deg2rad, max = Math.max, min = Math.min;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Connection class. Used internally to represent a connection between two\n         * points.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Connection\n         *\n         * @param {Highcharts.Point} from\n         *        Connection runs from this Point.\n         *\n         * @param {Highcharts.Point} to\n         *        Connection runs to this Point.\n         *\n         * @param {Highcharts.ConnectorsOptions} [options]\n         *        Connection options.\n         */\n        var Connection = /** @class */ (function () {\n            function Connection(from, to, options) {\n                /* *\n                *\n                * Properties\n                *\n                * */\n                this.chart = void 0;\n                this.fromPoint = void 0;\n                this.graphics = void 0;\n                this.pathfinder = void 0;\n                this.toPoint = void 0;\n                this.init(from, to, options);\n            }\n            /**\n             * Initialize the Connection object. Used as constructor only.\n             *\n             * @function Highcharts.Connection#init\n             *\n             * @param {Highcharts.Point} from\n             *        Connection runs from this Point.\n             *\n             * @param {Highcharts.Point} to\n             *        Connection runs to this Point.\n             *\n             * @param {Highcharts.ConnectorsOptions} [options]\n             *        Connection options.\n             */\n            Connection.prototype.init = function (from, to, options) {\n                this.fromPoint = from;\n                this.toPoint = to;\n                this.options = options;\n                this.chart = from.series.chart;\n                this.pathfinder = this.chart.pathfinder;\n            };\n            /**\n             * Add (or update) this connection's path on chart. Stores reference to the\n             * created element on this.graphics.path.\n             *\n             * @function Highcharts.Connection#renderPath\n             *\n             * @param {Highcharts.SVGPathArray} path\n             *        Path to render, in array format. E.g. ['M', 0, 0, 'L', 10, 10]\n             *\n             * @param {Highcharts.SVGAttributes} [attribs]\n             *        SVG attributes for the path.\n             *\n             * @param {Partial<Highcharts.AnimationOptionsObject>} [animation]\n             *        Animation options for the rendering.\n             */\n            Connection.prototype.renderPath = function (path, attribs, animation) {\n                var connection = this, chart = this.chart, styledMode = chart.styledMode, pathfinder = chart.pathfinder, animate = !chart.options.chart.forExport && animation !== false, anim = {};\n                var pathGraphic = connection.graphics && connection.graphics.path;\n                // Add the SVG element of the pathfinder group if it doesn't exist\n                if (!pathfinder.group) {\n                    pathfinder.group = chart.renderer.g()\n                        .addClass('highcharts-pathfinder-group')\n                        .attr({ zIndex: -1 })\n                        .add(chart.seriesGroup);\n                }\n                // Shift the group to compensate for plot area.\n                // Note: Do this always (even when redrawing a path) to avoid issues\n                // when updating chart in a way that changes plot metrics.\n                pathfinder.group.translate(chart.plotLeft, chart.plotTop);\n                // Create path if does not exist\n                if (!(pathGraphic && pathGraphic.renderer)) {\n                    pathGraphic = chart.renderer.path()\n                        .add(pathfinder.group);\n                    if (!styledMode) {\n                        pathGraphic.attr({\n                            opacity: 0\n                        });\n                    }\n                }\n                // Set path attribs and animate to the new path\n                pathGraphic.attr(attribs);\n                anim.d = path;\n                if (!styledMode) {\n                    anim.opacity = 1;\n                }\n                pathGraphic[animate ? 'animate' : 'attr'](anim, animation);\n                // Store reference on connection\n                this.graphics = this.graphics || {};\n                this.graphics.path = pathGraphic;\n            };\n            /**\n             * Calculate and add marker graphics for connection to the chart. The\n             * created/updated elements are stored on this.graphics.start and\n             * this.graphics.end.\n             *\n             * @function Highcharts.Connection#addMarker\n             *\n             * @param {string} type\n             *        Marker type, either 'start' or 'end'.\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} options\n             *        All options for this marker. Not calculated or merged with other\n             *        options.\n             *\n             * @param {Highcharts.SVGPathArray} path\n             *        Connection path in array format. This is used to calculate the\n             *        rotation angle of the markers.\n             */\n            Connection.prototype.addMarker = function (type, options, path) {\n                var connection = this, chart = connection.fromPoint.series.chart, pathfinder = chart.pathfinder, renderer = chart.renderer, point = (type === 'start' ?\n                    connection.fromPoint :\n                    connection.toPoint), anchor = point.getPathfinderAnchorPoint(options);\n                var markerVector, radians, rotation, box, width, height, pathVector, segment;\n                if (!options.enabled) {\n                    return;\n                }\n                // Last vector before start/end of path, used to get angle\n                if (type === 'start') {\n                    segment = path[1];\n                }\n                else { // 'end'\n                    segment = path[path.length - 2];\n                }\n                if (segment && segment[0] === 'M' || segment[0] === 'L') {\n                    pathVector = {\n                        x: segment[1],\n                        y: segment[2]\n                    };\n                    // Get angle between pathVector and anchor point and use it to\n                    // create marker position.\n                    radians = point.getRadiansToVector(pathVector, anchor);\n                    markerVector = point.getMarkerVector(radians, options.radius, anchor);\n                    // Rotation of marker is calculated from angle between pathVector\n                    // and markerVector.\n                    // (Note:\n                    //  Used to recalculate radians between markerVector and pathVector,\n                    //  but this should be the same as between pathVector and anchor.)\n                    rotation = -radians / deg2rad;\n                    if (options.width && options.height) {\n                        width = options.width;\n                        height = options.height;\n                    }\n                    else {\n                        width = height = options.radius * 2;\n                    }\n                    // Add graphics object if it does not exist\n                    connection.graphics = connection.graphics || {};\n                    box = {\n                        x: markerVector.x - (width / 2),\n                        y: markerVector.y - (height / 2),\n                        width: width,\n                        height: height,\n                        rotation: rotation,\n                        rotationOriginX: markerVector.x,\n                        rotationOriginY: markerVector.y\n                    };\n                    if (!connection.graphics[type]) {\n                        // Create new marker element\n                        connection.graphics[type] = renderer\n                            .symbol(options.symbol)\n                            .addClass('highcharts-point-connecting-path-' + type + '-marker' +\n                            ' highcharts-color-' + this.fromPoint.colorIndex)\n                            .attr(box)\n                            .add(pathfinder.group);\n                        if (!renderer.styledMode) {\n                            connection.graphics[type].attr({\n                                fill: options.color || connection.fromPoint.color,\n                                stroke: options.lineColor,\n                                'stroke-width': options.lineWidth,\n                                opacity: 0\n                            })\n                                .animate({\n                                opacity: 1\n                            }, point.series.options.animation);\n                        }\n                    }\n                    else {\n                        connection.graphics[type].animate(box);\n                    }\n                }\n            };\n            /**\n             * Calculate and return connection path.\n             * Note: Recalculates chart obstacles on demand if they aren't calculated.\n             *\n             * @function Highcharts.Connection#getPath\n             *\n             * @param {Highcharts.ConnectorsOptions} options\n             *        Connector options. Not calculated or merged with other options.\n             *\n             * @return {object|undefined}\n             *         Calculated SVG path data in array format.\n             */\n            Connection.prototype.getPath = function (options) {\n                var pathfinder = this.pathfinder, chart = this.chart, algorithm = pathfinder.algorithms[options.type];\n                var chartObstacles = pathfinder.chartObstacles;\n                if (typeof algorithm !== 'function') {\n                    error('\"' + options.type + '\" is not a Pathfinder algorithm.');\n                    return {\n                        path: [],\n                        obstacles: []\n                    };\n                }\n                // This function calculates obstacles on demand if they don't exist\n                if (algorithm.requiresObstacles && !chartObstacles) {\n                    chartObstacles =\n                        pathfinder.chartObstacles =\n                            pathfinder.getChartObstacles(options);\n                    // If the algorithmMargin was computed, store the result in default\n                    // options.\n                    chart.options.connectors.algorithmMargin =\n                        options.algorithmMargin;\n                    // Cache some metrics too\n                    pathfinder.chartObstacleMetrics =\n                        pathfinder.getObstacleMetrics(chartObstacles);\n                }\n                // Get the SVG path\n                return algorithm(\n                // From\n                this.fromPoint.getPathfinderAnchorPoint(options.startMarker), \n                // To\n                this.toPoint.getPathfinderAnchorPoint(options.endMarker), merge({\n                    chartObstacles: chartObstacles,\n                    lineObstacles: pathfinder.lineObstacles || [],\n                    obstacleMetrics: pathfinder.chartObstacleMetrics,\n                    hardBounds: {\n                        xMin: 0,\n                        xMax: chart.plotWidth,\n                        yMin: 0,\n                        yMax: chart.plotHeight\n                    },\n                    obstacleOptions: {\n                        margin: options.algorithmMargin\n                    },\n                    startDirectionX: pathfinder.getAlgorithmStartDirection(options.startMarker)\n                }, options));\n            };\n            /**\n             * (re)Calculate and (re)draw the connection.\n             *\n             * @function Highcharts.Connection#render\n             */\n            Connection.prototype.render = function () {\n                var connection = this, fromPoint = connection.fromPoint, series = fromPoint.series, chart = series.chart, pathfinder = chart.pathfinder, attribs = {};\n                var options = merge(chart.options.connectors, series.options.connectors, fromPoint.options.connectors, connection.options);\n                // Set path attribs\n                if (!chart.styledMode) {\n                    attribs.stroke = options.lineColor || fromPoint.color;\n                    attribs['stroke-width'] = options.lineWidth;\n                    if (options.dashStyle) {\n                        attribs.dashstyle = options.dashStyle;\n                    }\n                }\n                attribs['class'] = // eslint-disable-line dot-notation\n                    'highcharts-point-connecting-path ' +\n                        'highcharts-color-' + fromPoint.colorIndex;\n                options = merge(attribs, options);\n                // Set common marker options\n                if (!defined(options.marker.radius)) {\n                    options.marker.radius = min(max(Math.ceil((options.algorithmMargin || 8) / 2) - 1, 1), 5);\n                }\n                // Get the path\n                var pathResult = connection.getPath(options), path = pathResult.path;\n                // Always update obstacle storage with obstacles from this path.\n                // We don't know if future calls will need this for their algorithm.\n                if (pathResult.obstacles) {\n                    pathfinder.lineObstacles =\n                        pathfinder.lineObstacles || [];\n                    pathfinder.lineObstacles =\n                        pathfinder.lineObstacles.concat(pathResult.obstacles);\n                }\n                // Add the calculated path to the pathfinder group\n                connection.renderPath(path, attribs, series.options.animation);\n                // Render the markers\n                connection.addMarker('start', merge(options.marker, options.startMarker), path);\n                connection.addMarker('end', merge(options.marker, options.endMarker), path);\n            };\n            /**\n             * Destroy connection by destroying the added graphics elements.\n             *\n             * @function Highcharts.Connection#destroy\n             */\n            Connection.prototype.destroy = function () {\n                if (this.graphics) {\n                    objectEach(this.graphics, function (val) {\n                        val.destroy();\n                    });\n                    delete this.graphics;\n                }\n            };\n            return Connection;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * The default pathfinder algorithm to use for a chart. It is possible to define\n         * your own algorithms by adding them to the\n         * `Highcharts.Pathfinder.prototype.algorithms`\n         * object before the chart has been created.\n         *\n         * The default algorithms are as follows:\n         *\n         * `straight`:      Draws a straight line between the connecting\n         *                  points. Does not avoid other points when drawing.\n         *\n         * `simpleConnect`: Finds a path between the points using right angles\n         *                  only. Takes only starting/ending points into\n         *                  account, and will not avoid other points.\n         *\n         * `fastAvoid`:     Finds a path between the points using right angles\n         *                  only. Will attempt to avoid other points, but its\n         *                  focus is performance over accuracy. Works well with\n         *                  less dense datasets.\n         *\n         * @typedef {\"fastAvoid\"|\"simpleConnect\"|\"straight\"|string} Highcharts.PathfinderTypeValue\n         */\n        ''; // Keeps doclets above in JS file\n\n        return Connection;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisZoom(e) {\n            var axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            if (axis.isXAxis && ((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled))) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y') {\n                    e.zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom\n                    // selection, then when the reset button is pressed, revert to\n                    // this state. This should apply only if the chart is\n                    // initialized with a range (#6612), otherwise zoom all the way\n                    // out.\n                }\n                else if (((!isTouchDevice && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    var previousZoom = navigatorAxis.previousZoom;\n                    if (defined(e.newMin)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                    }\n                    else if (previousZoom) {\n                        e.newMin = previousZoom[0];\n                        e.newMax = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof e.zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var NavigatorAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function NavigatorAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.compose = function (AxisClass) {\n                if (U.pushUnique(composedMembers, AxisClass)) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'zoom', onAxisZoom);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.prototype.destroy = function () {\n                this.axis = void 0;\n            };\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            NavigatorAxisAdditions.prototype.toFixedRange = function (pxMin, pxMax, fixedMin, fixedMax) {\n                var axis = this.axis, chart = axis.chart;\n                var newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                var fixedRange = chart && chart.fixedRange, halfPointRange = (axis.pointRange || 0) / 2;\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                // Make sure panning to the edges does not decrease the zoomed range\n                if (fixedRange && axis.dataMin && axis.dataMax) {\n                    if (newMax >= axis.dataMax) {\n                        newMin = correctFloat(axis.dataMax - fixedRange);\n                    }\n                    if (newMin <= axis.dataMin) {\n                        newMax = correctFloat(axis.dataMin + fixedRange);\n                    }\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            };\n            return NavigatorAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var seriesTypes = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        var NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null,\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * xAxis.maxPadding, but value is set in milliseconds.\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @since   6.0.0\n                 */\n                overscroll: 0,\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options) {\n            if (options === void 0) { options = {}; }\n            var halfWidth = options.width ? options.width / 2 : width, markerPosition = Math.round(halfWidth / 3) + 0.5;\n            height = options.height || height;\n            return [\n                ['M', -halfWidth - 1, 0.5],\n                ['L', halfWidth, 0.5],\n                ['L', halfWidth, height + 0.5],\n                ['L', -halfWidth - 1, height + 0.5],\n                ['L', -halfWidth - 1, 0.5],\n                ['M', -markerPosition, 4],\n                ['L', -markerPosition, height - 3],\n                ['M', markerPosition - 1, 4],\n                ['L', markerPosition - 1, height - 3]\n            ];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions, setOptions = D.setOptions;\n        var isTouchDevice = H.isTouchDevice;\n        var getRendererType = RendererRegistry.getRendererType;\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, NavigatorClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            NavigatorConstructor = NavigatorClass;\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                var chartProto = ChartClass.prototype;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n            }\n            if (U.pushUnique(composedMembers, SeriesClass)) {\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n            }\n            if (U.pushUnique(composedMembers, getRendererType)) {\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n            }\n            if (U.pushUnique(composedMembers, setOptions)) {\n                extend(defaultOptions, { navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            var _a;\n            var legend = this.legend, navigator = this.navigator;\n            var legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                var scrollbarHeight = navigator.scrollbarHeight, scrollButtonSize = navigator.scrollButtonSize;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (((_a = this.scrollbar) === null || _a === void 0 ? void 0 : _a.options.margin) || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // false if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            var options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            var chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                var extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            var navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorComposition = {\n            compose: compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2023 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n            *\n            *  Constants\n            *\n            * */\n            var composedMembers = [];\n            /* *\n            *\n            *  Variables\n            *\n            * */\n            var Scrollbar;\n            /* *\n            *\n            *  Functions\n            *\n            * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composedMembers, ScrollbarClass)) {\n                    Scrollbar = ScrollbarClass;\n                }\n                if (pushUnique(composedMembers, AxisClass)) {\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                var axisMin = pick(axis.options && axis.options.min, axis.min);\n                var axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin: axisMin,\n                    axisMax: axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                var axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        var _a = getExtremes(axis), axisMin = _a.axisMin, axisMax = _a.axisMax, unitedMin = _a.scrollMin, unitedMax = _a.scrollMax, range = unitedMax - unitedMin;\n                        var to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            var animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                var axis = this, _a = getExtremes(axis), scrollMin = _a.scrollMin, scrollMax = _a.scrollMax, scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                var offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        var xPosition = void 0;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.min === axis.max // #10733\n                    ) {\n                        // Default action: when extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [_modules['Core/Globals.js']], function (H) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can  also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        var ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)',\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        var Scrollbar = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Scrollbar(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chart = void 0;\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.group = void 0;\n                this.options = void 0;\n                this.renderer = void 0;\n                this.scrollbar = void 0;\n                this.scrollbarButtons = [];\n                this.scrollbarGroup = void 0;\n                this.scrollbarLeft = 0;\n                this.scrollbarRifles = void 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.track = void 0;\n                this.trackBorderWidth = 1;\n                this.userOptions = void 0;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Scrollbar.compose = function (AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            };\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            Scrollbar.swapXY = function (path, vertical) {\n                if (vertical) {\n                    path.forEach(function (seg) {\n                        var len = seg.length;\n                        var temp;\n                        for (var i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            Scrollbar.prototype.addEvents = function () {\n                var buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                // Mouse events\n                var _events = [\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler]\n                ];\n                // Touch events\n                if (H.hasTouch) {\n                    _events.push([bar, 'touchstart', mouseDownHandler], [bar.ownerDocument, 'touchmove', mouseMoveHandler], [bar.ownerDocument, 'touchend', mouseUpHandler]);\n                }\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            };\n            Scrollbar.prototype.buttonToMaxClick = function (e) {\n                var scroller = this;\n                var range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            Scrollbar.prototype.buttonToMinClick = function (e) {\n                var scroller = this;\n                var range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            Scrollbar.prototype.cursorToScrollbarPosition = function (normalizedEvent) {\n                var scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // minWidth distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            Scrollbar.prototype.destroy = function () {\n                var scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            };\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            Scrollbar.prototype.drawScrollbarButton = function (index) {\n                var scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    var rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        // +1 to compensate for crispifying in rect method\n                        width: size + 1,\n                        height: size + 1,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    var arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            Scrollbar.prototype.init = function (renderer, options, chart) {\n                var scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            };\n            Scrollbar.prototype.mouseDownHandler = function (e) {\n                var scroller = this, normalizedEvent = scroller.chart.pointer.normalize(e), mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            };\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            Scrollbar.prototype.mouseMoveHandler = function (e) {\n                var scroller = this, normalizedEvent = scroller.chart.pointer.normalize(e), options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                var scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            };\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            Scrollbar.prototype.mouseUpHandler = function (e) {\n                var scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            };\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scorllbar\n             */\n            Scrollbar.prototype.position = function (x, y, width, height) {\n                var scroller = this, options = scroller.options, buttonsEnabled = options.buttonsEnabled, _a = options.margin, margin = _a === void 0 ? 0 : _a, vertical = options.vertical, method = scroller.rendered ? 'animate' : 'attr';\n                var xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            Scrollbar.prototype.removeEvents = function () {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            };\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            Scrollbar.prototype.render = function () {\n                var scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                var trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -trackBorderWidth % 2 / 2,\n                    y: -trackBorderWidth % 2 / 2\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-scroller.scrollbarStrokeWidth % 2 / 2, -scroller.scrollbarStrokeWidth % 2 / 2);\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            };\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            Scrollbar.prototype.setRange = function (from, to) {\n                var scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                var toPX = fullWidth * Math.min(to, 1);\n                var fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                var newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                var newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            };\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            Scrollbar.prototype.shouldUpdateExtremes = function (eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            };\n            Scrollbar.prototype.trackClick = function (e) {\n                var scroller = this;\n                var normalizedEvent = scroller.chart.pointer.normalize(e), range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            Scrollbar.prototype.update = function (options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            };\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            Scrollbar.prototype.updatePosition = function (from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Scrollbar.defaultOptions = ScrollbarDefaults;\n            return Scrollbar;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Utilities.js']], function (Axis, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var hasTouch = H.hasTouch, isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, clamp = U.clamp, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, erase = U.erase, extend = U.extend, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        var Navigator = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Navigator(chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.baseSeries = void 0;\n                this.chart = void 0;\n                this.handles = void 0;\n                this.height = void 0;\n                this.left = void 0;\n                this.navigatorEnabled = void 0;\n                this.navigatorGroup = void 0;\n                this.navigatorOptions = void 0;\n                this.navigatorSeries = void 0;\n                this.navigatorSize = void 0;\n                this.opposite = void 0;\n                this.outline = void 0;\n                this.range = void 0;\n                this.rendered = void 0;\n                this.scrollbarHeight = 0;\n                this.scrollButtonSize = void 0;\n                this.shades = void 0;\n                this.size = void 0;\n                this.top = void 0;\n                this.xAxis = void 0;\n                this.yAxis = void 0;\n                this.zoomedMax = void 0;\n                this.zoomedMin = void 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Navigator.compose = function (AxisClass, ChartClass, SeriesClass) {\n                NavigatorComposition.compose(AxisClass, ChartClass, Navigator, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawHandle = function (x, index, inverted, verb) {\n                var navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawOutline = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                var left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin],\n                        ['M', left, zoomedMax],\n                        ['L', left + height, zoomedMax],\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // left\n                        ['M', left, lineTop],\n                        // upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            navigatorTop + halfOutline\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawMasks = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                var height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach(function (shade, i) {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            };\n            /**\n             * Generate DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            Navigator.prototype.renderElements = function () {\n                var navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = navigator.navigatorGroup = renderer\n                    .g('navigator')\n                    .attr({\n                    zIndex: 8,\n                    visibility: 'hidden'\n                })\n                    .add();\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach(function (hasMask, index) {\n                    var shade = renderer.rect()\n                        .addClass('highcharts-navigator-mask' +\n                        (index === 1 ? '-inside' : '-outside'))\n                        .add(navigatorGroup);\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ?\n                                navigatorOptions.maskFill :\n                                'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                    navigator.shades[index] = shade;\n                });\n                // Create the outline:\n                navigator.outline = renderer.path()\n                    .addClass('highcharts-navigator-outline')\n                    .add(navigatorGroup);\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if (navigatorOptions.handles && navigatorOptions.handles.enabled) {\n                    var handlesOptions_1 = navigatorOptions.handles, height_1 = handlesOptions_1.height, width_1 = handlesOptions_1.width;\n                    [0, 1].forEach(function (index) {\n                        navigator.handles[index] = renderer.symbol(handlesOptions_1.symbols[index], -width_1 / 2 - 1, 0, width_1, height_1, handlesOptions_1);\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width_1 / 2),\n                                rotationOriginY: (height_1 + width_1) / 2\n                            });\n                        }\n                        // zIndex = 6 for right handle, 7 for left.\n                        // Can't be 10, because of the tooltip in inverted chart #2908\n                        navigator.handles[index].attr({ zIndex: 7 - index })\n                            .addClass('highcharts-navigator-handle ' +\n                            'highcharts-navigator-handle-' +\n                            ['left', 'right'][index]).add(navigatorGroup);\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions_1.backgroundColor,\n                                stroke: handlesOptions_1.borderColor,\n                                'stroke-width': handlesOptions_1.lineWidth\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            };\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            Navigator.prototype.update = function (options) {\n                // Remove references to old navigator series in base series\n                (this.series || []).forEach(function (series) {\n                    if (series.baseSeries) {\n                        delete series.baseSeries.navigatorSeries;\n                    }\n                });\n                // Destroy and rebuild navigator\n                this.destroy();\n                var chartOptions = this.chart.options;\n                merge(true, chartOptions.navigator, options);\n                this.init(this.chart);\n            };\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            Navigator.prototype.render = function (min, max, pxMin, pxMax) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                var navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // in case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                var zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                var newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                var zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                fireEvent(this, 'afterRender');\n            };\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            Navigator.prototype.addMouseEvents = function () {\n                var navigator = this, chart = navigator.chart, container = chart.container;\n                var eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                // Add mouse move and mouseup events. These are bind to doc/container,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                eventsToUnbind.push(addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler));\n                // Touch events\n                if (hasTouch) {\n                    eventsToUnbind.push(addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                    eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                }\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            };\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            Navigator.prototype.getPartsEvents = function (eventName) {\n                var navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            };\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            Navigator.prototype.shadesMousedown = function (e, index) {\n                e = this.chart.pointer.normalize(e);\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                var navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // it has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            chart.xAxis[0].setExtremes(Math.min(ext.min, ext.max), Math.max(ext.min, ext.max), true, null, // auto animation\n                            { trigger: 'navigator' });\n                        }\n                    }\n                }\n            };\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            Navigator.prototype.handlesMousedown = function (e, index) {\n                e = this.chart.pointer.normalize(e);\n                var navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.fixedRange = null;\n            };\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseMove = function (e) {\n                var navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                var left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = chart.pointer.normalize(e);\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // outside left\n                            chartX = dragOffset;\n                            // outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            };\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseUp = function (e) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                var zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        chart.xAxis[0].setExtremes(Math.min(ext.min, ext.max), Math.max(ext.min, ext.max), true, \n                        // Run animation when clicking buttons, scrollbar track etc,\n                        // but not when dragging handles or scrollbar\n                        navigator.hasDragged ? false : null, {\n                            trigger: 'navigator',\n                            triggerOp: 'navigator-drag',\n                            DOMEvent: DOMEvent // #1838\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            Navigator.prototype.removeEvents = function () {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            };\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            Navigator.prototype.removeBaseSeriesEvents = function () {\n                var baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            };\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            Navigator.prototype.init = function (chart) {\n                var chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n                var navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    // an x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // inherit base xAxis' break and ordinal options\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal\n                    }, navigatorOptions.xAxis, {\n                        id: 'navigator-x-axis',\n                        yAxis: 'navigator-y-axis',\n                        type: 'datetime',\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true,\n                        startOnTick: false,\n                        endOnTick: false,\n                        minPadding: 0,\n                        maxPadding: 0,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets: [scrollButtonSize, 0, -scrollButtonSize, 0],\n                        width: height\n                    } : {\n                        offsets: [0, -scrollButtonSize, 0, scrollButtonSize],\n                        height: height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        id: 'navigator-y-axis',\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false),\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // in case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart: chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            var axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // from pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // from value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    var options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        var range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            };\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            Navigator.prototype.getUnionExtremes = function (returnFalseOnNoBaseSeries) {\n                var baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                var ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            };\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            Navigator.prototype.setBaseSeries = function (baseSeriesOptions, redraw) {\n                var chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, function (s) { return (!s.options.isInternal); }).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach(function (series, i) {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            };\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            Navigator.prototype.updateNavigatorSeries = function (addEvents, redraw) {\n                var navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null,\n                    linkedTo: null,\n                    group: 'nav',\n                    padXAxis: false,\n                    xAxis: 'navigator-x-axis',\n                    yAxis: 'navigator-y-axis',\n                    showInLegend: false,\n                    stacking: void 0,\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter(function (navSeries) {\n                        var base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                var baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach(function (base) {\n                        var linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        var navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach(function (userSeriesOptions, i) {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            };\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            Navigator.prototype.addBaseSeriesEvents = function () {\n                var _this = this;\n                var navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach(function (base) {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitily\n                    // not adapting to data changes.\n                    if (_this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', _this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            };\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            Navigator.prototype.getBaseSeriesMin = function (currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            };\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            Navigator.prototype.modifyNavigatorAxisExtremes = function () {\n                var xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    var unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            };\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            Navigator.prototype.modifyBaseAxisExtremes = function () {\n                var baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick(baseXAxis.options.overscroll, 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                var newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            };\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            Navigator.prototype.updatedDataHandler = function () {\n                var navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            };\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            Navigator.prototype.shouldStickToMin = function (baseSeries, navigator) {\n                var xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                var stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            };\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            Navigator.prototype.addChartEvents = function () {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    var navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    var chart = this, navigator = chart.navigator, marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }));\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            Navigator.prototype.destroy = function () {\n                var _this = this;\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach(function (s) {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach(function (prop) {\n                    if (_this[prop] && _this[prop].destroy) {\n                        _this[prop].destroy();\n                    }\n                    _this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach(function (coll) {\n                    destroyObjectProperties(coll);\n                });\n            };\n            return Navigator;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Series/PathUtilities.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2022 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var getLinkPath = {\n            'default': getDefaultPath,\n            straight: getStraightPath,\n            curved: getCurvedPath\n        };\n        function getDefaultPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.width, width = _a === void 0 ? 0 : _a, _b = pathParams.inverted, inverted = _b === void 0 ? false : _b, radius = pathParams.radius, parentVisible = pathParams.parentVisible;\n            var path = [\n                ['M', x1, y1],\n                ['L', x1, y1],\n                ['C', x1, y1, x1, y2, x1, y2],\n                ['L', x1, y2],\n                ['C', x1, y1, x1, y2, x1, y2],\n                ['L', x1, y2]\n            ];\n            return parentVisible ?\n                applyRadius([\n                    ['M', x1, y1],\n                    ['L', x1 + width * (inverted ? -0.5 : 0.5), y1],\n                    ['L', x1 + width * (inverted ? -0.5 : 0.5), y2],\n                    ['L', x2, y2]\n                ], radius) :\n                path;\n        }\n        function getStraightPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.width, width = _a === void 0 ? 0 : _a, _b = pathParams.inverted, inverted = _b === void 0 ? false : _b, parentVisible = pathParams.parentVisible;\n            return parentVisible ? [\n                ['M', x1, y1],\n                ['L', x1 + width * (inverted ? -1 : 1), y2],\n                ['L', x2, y2]\n            ] : [\n                ['M', x1, y1],\n                ['L', x1, y2],\n                ['L', x1, y2]\n            ];\n        }\n        function getCurvedPath(pathParams) {\n            var x1 = pathParams.x1, y1 = pathParams.y1, x2 = pathParams.x2, y2 = pathParams.y2, _a = pathParams.offset, offset = _a === void 0 ? 0 : _a, _b = pathParams.width, width = _b === void 0 ? 0 : _b, _c = pathParams.inverted, inverted = _c === void 0 ? false : _c, parentVisible = pathParams.parentVisible;\n            return parentVisible ?\n                [\n                    ['M', x1, y1],\n                    [\n                        'C',\n                        x1 + offset,\n                        y1,\n                        x1 - offset + width * (inverted ? -1 : 1),\n                        y2,\n                        x1 + width * (inverted ? -1 : 1),\n                        y2\n                    ],\n                    ['L', x2, y2]\n                ] :\n                [\n                    ['M', x1, y1],\n                    ['C', x1, y1, x1, y2, x1, y2],\n                    ['L', x2, y2]\n                ];\n        }\n        /**\n         * General function to apply corner radius to a path\n         * @private\n         */\n        function applyRadius(path, r) {\n            var d = [];\n            for (var i = 0; i < path.length; i++) {\n                var x = path[i][1];\n                var y = path[i][2];\n                if (typeof x === 'number' && typeof y === 'number') {\n                    // moveTo\n                    if (i === 0) {\n                        d.push(['M', x, y]);\n                    }\n                    else if (i === path.length - 1) {\n                        d.push(['L', x, y]);\n                        // curveTo\n                    }\n                    else if (r) {\n                        var prevSeg = path[i - 1];\n                        var nextSeg = path[i + 1];\n                        if (prevSeg && nextSeg) {\n                            var x1 = prevSeg[1], y1 = prevSeg[2], x2 = nextSeg[1], y2 = nextSeg[2];\n                            // Only apply to breaks\n                            if (typeof x1 === 'number' &&\n                                typeof x2 === 'number' &&\n                                typeof y1 === 'number' &&\n                                typeof y2 === 'number' &&\n                                x1 !== x2 &&\n                                y1 !== y2) {\n                                var directionX = x1 < x2 ? 1 : -1, directionY = y1 < y2 ? 1 : -1;\n                                d.push([\n                                    'L',\n                                    x - directionX * Math.min(Math.abs(x - x1), r),\n                                    y - directionY * Math.min(Math.abs(y - y1), r)\n                                ], [\n                                    'C',\n                                    x,\n                                    y,\n                                    x,\n                                    y,\n                                    x + directionX * Math.min(Math.abs(x - x2), r),\n                                    y + directionY * Math.min(Math.abs(y - y2), r)\n                                ]);\n                            }\n                        }\n                        // lineTo\n                    }\n                    else {\n                        d.push(['L', x, y]);\n                    }\n                }\n            }\n            return d;\n        }\n        var PathUtilities = {\n            applyRadius: applyRadius,\n            getLinkPath: getLinkPath\n        };\n\n        return PathUtilities;\n    });\n    _registerModule(_modules, 'Gantt/PathfinderAlgorithms.js', [_modules['Series/PathUtilities.js'], _modules['Core/Utilities.js']], function (PathUtilities, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Author: Ã˜ystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var min = Math.min, max = Math.max, abs = Math.abs;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get index of last obstacle before xMin. Employs a type of binary search, and\n         * thus requires that obstacles are sorted by xMin value.\n         *\n         * @private\n         * @function findLastObstacleBefore\n         *\n         * @param {Array<object>} obstacles\n         *        Array of obstacles to search in.\n         *\n         * @param {number} xMin\n         *        The xMin threshold.\n         *\n         * @param {number} [startIx]\n         *        Starting index to search from. Must be within array range.\n         *\n         * @return {number}\n         *         The index of the last obstacle element before xMin.\n         */\n        function findLastObstacleBefore(obstacles, xMin, startIx) {\n            var min = xMin - 0.0000001; // Make sure we include all obstacles at xMin\n            var left = startIx || 0, // Left limit\n            right = obstacles.length - 1, // Right limit\n            cursor, cmp;\n            while (left <= right) {\n                cursor = (right + left) >> 1;\n                cmp = min - obstacles[cursor].xMin;\n                if (cmp > 0) {\n                    left = cursor + 1;\n                }\n                else if (cmp < 0) {\n                    right = cursor - 1;\n                }\n                else {\n                    return cursor;\n                }\n            }\n            return left > 0 ? left - 1 : 0;\n        }\n        /**\n         * Test if a point lays within an obstacle.\n         *\n         * @private\n         * @function pointWithinObstacle\n         *\n         * @param {Object} obstacle\n         *        Obstacle to test.\n         *\n         * @param {Highcharts.Point} point\n         *        Point with x/y props.\n         *\n         * @return {boolean}\n         *         Whether point is within the obstacle or not.\n         */\n        function pointWithinObstacle(obstacle, point) {\n            return (point.x <= obstacle.xMax &&\n                point.x >= obstacle.xMin &&\n                point.y <= obstacle.yMax &&\n                point.y >= obstacle.yMin);\n        }\n        /**\n         * Find the index of an obstacle that wraps around a point.\n         * Returns -1 if not found.\n         *\n         * @private\n         * @function findObstacleFromPoint\n         *\n         * @param {Array<object>} obstacles\n         *        Obstacles to test.\n         *\n         * @param {Highcharts.Point} point\n         *        Point with x/y props.\n         *\n         * @return {number}\n         *         Ix of the obstacle in the array, or -1 if not found.\n         */\n        function findObstacleFromPoint(obstacles, point) {\n            var i = findLastObstacleBefore(obstacles, point.x + 1) + 1;\n            while (i--) {\n                if (obstacles[i].xMax >= point.x &&\n                    // Optimization using lazy evaluation\n                    pointWithinObstacle(obstacles[i], point)) {\n                    return i;\n                }\n            }\n            return -1;\n        }\n        /**\n         * Get SVG path array from array of line segments.\n         *\n         * @private\n         * @function pathFromSegments\n         *\n         * @param {Array<object>} segments\n         *        The segments to build the path from.\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         SVG path array as accepted by the SVG Renderer.\n         */\n        function pathFromSegments(segments) {\n            var path = [];\n            if (segments.length) {\n                path.push(['M', segments[0].start.x, segments[0].start.y]);\n                for (var i = 0; i < segments.length; ++i) {\n                    path.push(['L', segments[i].end.x, segments[i].end.y]);\n                }\n            }\n            return path;\n        }\n        /**\n         * Limits obstacle max/mins in all directions to bounds. Modifies input\n         * obstacle.\n         *\n         * @private\n         * @function limitObstacleToBounds\n         *\n         * @param {Object} obstacle\n         *        Obstacle to limit.\n         *\n         * @param {Object} bounds\n         *        Bounds to use as limit.\n         *\n         * @return {void}\n         */\n        function limitObstacleToBounds(obstacle, bounds) {\n            obstacle.yMin = max(obstacle.yMin, bounds.yMin);\n            obstacle.yMax = min(obstacle.yMax, bounds.yMax);\n            obstacle.xMin = max(obstacle.xMin, bounds.xMin);\n            obstacle.xMax = min(obstacle.xMax, bounds.xMax);\n        }\n        /**\n         * Get an SVG path from a starting coordinate to an ending coordinate.\n         * Draws a straight line.\n         *\n         * @function Highcharts.Pathfinder.algorithms.straight\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        function straight(start, end) {\n            return {\n                path: [\n                    ['M', start.x, start.y],\n                    ['L', end.x, end.y]\n                ],\n                obstacles: [{ start: start, end: end }]\n            };\n        }\n        /**\n         * Find a path from a starting coordinate to an ending coordinate, using\n         * right angles only, and taking only starting/ending obstacle into\n         * consideration.\n         *\n         * @function Highcharts.Pathfinder.algorithms.simpleConnect\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @param {Object} options\n         *        Options for the algorithm:\n         *        - chartObstacles: Array of chart obstacles to avoid\n         *        - startDirectionX: Optional. True if starting in the X direction.\n         *          If not provided, the algorithm starts in the direction that is\n         *          the furthest between start/end.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        var simpleConnect = function (start, end, options) {\n            var segments = [], chartObstacles = options.chartObstacles, startObstacleIx = findObstacleFromPoint(chartObstacles, start), endObstacleIx = findObstacleFromPoint(chartObstacles, end);\n            var endSegment, dir = pick(options.startDirectionX, abs(end.x - start.x) > abs(end.y - start.y)) ? 'x' : 'y', startObstacle, endObstacle, waypoint, useMax, endPoint;\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Return a clone of a point with a property set from a target object,\n             * optionally with an offset\n             * @private\n             */\n            function copyFromPoint(from, fromKey, to, toKey, offset) {\n                var point = {\n                    x: from.x,\n                    y: from.y\n                };\n                point[fromKey] = to[toKey || fromKey] + (offset || 0);\n                return point;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Return waypoint outside obstacle.\n             * @private\n             */\n            function getMeOut(obstacle, point, direction) {\n                var useMax = abs(point[direction] - obstacle[direction + 'Min']) >\n                    abs(point[direction] - obstacle[direction + 'Max']);\n                return copyFromPoint(point, direction, obstacle, direction + (useMax ? 'Max' : 'Min'), useMax ? 1 : -1);\n            }\n            // Pull out end point\n            if (endObstacleIx > -1) {\n                endObstacle = chartObstacles[endObstacleIx];\n                waypoint = getMeOut(endObstacle, end, dir);\n                endSegment = {\n                    start: waypoint,\n                    end: end\n                };\n                endPoint = waypoint;\n            }\n            else {\n                endPoint = end;\n            }\n            // If an obstacle envelops the start point, add a segment to get out,\n            // and around it.\n            if (startObstacleIx > -1) {\n                startObstacle = chartObstacles[startObstacleIx];\n                waypoint = getMeOut(startObstacle, start, dir);\n                segments.push({\n                    start: start,\n                    end: waypoint\n                });\n                // If we are going back again, switch direction to get around start\n                // obstacle.\n                if (\n                // Going towards max from start:\n                waypoint[dir] >= start[dir] ===\n                    // Going towards min to end:\n                    waypoint[dir] >= endPoint[dir]) {\n                    dir = dir === 'y' ? 'x' : 'y';\n                    useMax = start[dir] < end[dir];\n                    segments.push({\n                        start: waypoint,\n                        end: copyFromPoint(waypoint, dir, startObstacle, dir + (useMax ? 'Max' : 'Min'), useMax ? 1 : -1)\n                    });\n                    // Switch direction again\n                    dir = dir === 'y' ? 'x' : 'y';\n                }\n            }\n            // We are around the start obstacle. Go towards the end in one\n            // direction.\n            var prevWaypoint = segments.length ?\n                segments[segments.length - 1].end :\n                start;\n            waypoint = copyFromPoint(prevWaypoint, dir, endPoint);\n            segments.push({\n                start: prevWaypoint,\n                end: waypoint\n            });\n            // Final run to end point in the other direction\n            dir = dir === 'y' ? 'x' : 'y';\n            var waypoint2 = copyFromPoint(waypoint, dir, endPoint);\n            segments.push({\n                start: waypoint,\n                end: waypoint2\n            });\n            // Finally add the endSegment\n            segments.push(endSegment);\n            var path = PathUtilities.applyRadius(pathFromSegments(segments), options.radius);\n            return {\n                path: path,\n                obstacles: segments\n            };\n        };\n        simpleConnect.requiresObstacles = true;\n        /**\n         * Find a path from a starting coordinate to an ending coordinate, taking\n         * obstacles into consideration. Might not always find the optimal path,\n         * but is fast, and usually good enough.\n         *\n         * @function Highcharts.Pathfinder.algorithms.fastAvoid\n         *\n         * @param {Highcharts.PositionObject} start\n         *        Starting coordinate, object with x/y props.\n         *\n         * @param {Highcharts.PositionObject} end\n         *        Ending coordinate, object with x/y props.\n         *\n         * @param {Object} options\n         *        Options for the algorithm.\n         *        - chartObstacles:  Array of chart obstacles to avoid\n         *        - lineObstacles:   Array of line obstacles to jump over\n         *        - obstacleMetrics: Object with metrics of chartObstacles cached\n         *        - hardBounds:      Hard boundaries to not cross\n         *        - obstacleOptions: Options for the obstacles, including margin\n         *        - startDirectionX: Optional. True if starting in the X direction.\n         *                           If not provided, the algorithm starts in the\n         *                           direction that is the furthest between\n         *                           start/end.\n         *\n         * @return {Object}\n         *         An object with the SVG path in Array form as accepted by the SVG\n         *         renderer, as well as an array of new obstacles making up this\n         *         path.\n         */\n        function fastAvoid(start, end, options) {\n            /*\n                Algorithm rules/description\n                - Find initial direction\n                - Determine soft/hard max for each direction.\n                - Move along initial direction until obstacle.\n                - Change direction.\n                - If hitting obstacle, first try to change length of previous line\n                    before changing direction again.\n\n                Soft min/max x = start/destination x +/- widest obstacle + margin\n                Soft min/max y = start/destination y +/- tallest obstacle + margin\n\n                @todo:\n                    - Make retrospective, try changing prev segment to reduce\n                        corners\n                    - Fix logic for breaking out of end-points - not always picking\n                        the best direction currently\n                    - When going around the end obstacle we should not always go the\n                        shortest route, rather pick the one closer to the end point\n            */\n            var dirIsX = pick(options.startDirectionX, abs(end.x - start.x) > abs(end.y - start.y)), dir = dirIsX ? 'x' : 'y', endSegments = [], \n            // Boundaries to stay within. If beyond soft boundary, prefer to\n            // change direction ASAP. If at hard max, always change immediately.\n            metrics = options.obstacleMetrics, softMinX = min(start.x, end.x) - metrics.maxWidth - 10, softMaxX = max(start.x, end.x) + metrics.maxWidth + 10, softMinY = min(start.y, end.y) - metrics.maxHeight - 10, softMaxY = max(start.y, end.y) + metrics.maxHeight + 10;\n            var segments, useMax, extractedEndPoint, forceObstacleBreak = false, // Used in clearPathTo to keep track of\n            // when to force break through an obstacle.\n            // Obstacles\n            chartObstacles = options.chartObstacles, endObstacleIx = findLastObstacleBefore(chartObstacles, softMaxX);\n            var startObstacleIx = findLastObstacleBefore(chartObstacles, softMinX);\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * How far can you go between two points before hitting an obstacle?\n             * Does not work for diagonal lines (because it doesn't have to).\n             * @private\n             */\n            function pivotPoint(fromPoint, toPoint, directionIsX) {\n                var searchDirection = fromPoint.x < toPoint.x ? 1 : -1;\n                var firstPoint, lastPoint, highestPoint, lowestPoint;\n                if (fromPoint.x < toPoint.x) {\n                    firstPoint = fromPoint;\n                    lastPoint = toPoint;\n                }\n                else {\n                    firstPoint = toPoint;\n                    lastPoint = fromPoint;\n                }\n                if (fromPoint.y < toPoint.y) {\n                    lowestPoint = fromPoint;\n                    highestPoint = toPoint;\n                }\n                else {\n                    lowestPoint = toPoint;\n                    highestPoint = fromPoint;\n                }\n                // Go through obstacle range in reverse if toPoint is before\n                // fromPoint in the X-dimension.\n                var i = searchDirection < 0 ?\n                    // Searching backwards, start at last obstacle before last point\n                    min(findLastObstacleBefore(chartObstacles, lastPoint.x), chartObstacles.length - 1) :\n                    // Forwards. Since we're not sorted by xMax, we have to look\n                    // at all obstacles.\n                    0;\n                // Go through obstacles in this X range\n                while (chartObstacles[i] && (searchDirection > 0 && chartObstacles[i].xMin <= lastPoint.x ||\n                    searchDirection < 0 && chartObstacles[i].xMax >= firstPoint.x)) {\n                    // If this obstacle is between from and to points in a straight\n                    // line, pivot at the intersection.\n                    if (chartObstacles[i].xMin <= lastPoint.x &&\n                        chartObstacles[i].xMax >= firstPoint.x &&\n                        chartObstacles[i].yMin <= highestPoint.y &&\n                        chartObstacles[i].yMax >= lowestPoint.y) {\n                        if (directionIsX) {\n                            return {\n                                y: fromPoint.y,\n                                x: fromPoint.x < toPoint.x ?\n                                    chartObstacles[i].xMin - 1 :\n                                    chartObstacles[i].xMax + 1,\n                                obstacle: chartObstacles[i]\n                            };\n                        }\n                        // Else ...\n                        return {\n                            x: fromPoint.x,\n                            y: fromPoint.y < toPoint.y ?\n                                chartObstacles[i].yMin - 1 :\n                                chartObstacles[i].yMax + 1,\n                            obstacle: chartObstacles[i]\n                        };\n                    }\n                    i += searchDirection;\n                }\n                return toPoint;\n            }\n            /**\n             * Decide in which direction to dodge or get out of an obstacle.\n             * Considers desired direction, which way is shortest, soft and hard\n             * bounds.\n             *\n             * (? Returns a string, either xMin, xMax, yMin or yMax.)\n             *\n             * @private\n             * @function\n             *\n             * @param {Object} obstacle\n             *        Obstacle to dodge/escape.\n             *\n             * @param {Object} fromPoint\n             *        Point with x/y props that's dodging/escaping.\n             *\n             * @param {Object} toPoint\n             *        Goal point.\n             *\n             * @param {boolean} dirIsX\n             *        Dodge in X dimension.\n             *\n             * @param {Object} bounds\n             *        Hard and soft boundaries.\n             *\n             * @return {boolean}\n             *         Use max or not.\n             */\n            function getDodgeDirection(obstacle, fromPoint, toPoint, dirIsX, bounds) {\n                var softBounds = bounds.soft, hardBounds = bounds.hard, dir = dirIsX ? 'x' : 'y', toPointMax = { x: fromPoint.x, y: fromPoint.y }, toPointMin = { x: fromPoint.x, y: fromPoint.y }, maxOutOfSoftBounds = obstacle[dir + 'Max'] >=\n                    softBounds[dir + 'Max'], minOutOfSoftBounds = obstacle[dir + 'Min'] <=\n                    softBounds[dir + 'Min'], maxOutOfHardBounds = obstacle[dir + 'Max'] >=\n                    hardBounds[dir + 'Max'], minOutOfHardBounds = obstacle[dir + 'Min'] <=\n                    hardBounds[dir + 'Min'], \n                // Find out if we should prefer one direction over the other if\n                // we can choose freely\n                minDistance = abs(obstacle[dir + 'Min'] - fromPoint[dir]), maxDistance = abs(obstacle[dir + 'Max'] - fromPoint[dir]);\n                var // If it's a small difference, pick the one leading towards dest\n                // point. Otherwise pick the shortest distance\n                useMax = abs(minDistance - maxDistance) < 10 ?\n                    fromPoint[dir] < toPoint[dir] :\n                    maxDistance < minDistance;\n                // Check if we hit any obstacles trying to go around in either\n                // direction.\n                toPointMin[dir] = obstacle[dir + 'Min'];\n                toPointMax[dir] = obstacle[dir + 'Max'];\n                var minPivot = pivotPoint(fromPoint, toPointMin, dirIsX)[dir] !==\n                    toPointMin[dir], maxPivot = pivotPoint(fromPoint, toPointMax, dirIsX)[dir] !==\n                    toPointMax[dir];\n                useMax = minPivot ?\n                    (maxPivot ? useMax : true) :\n                    (maxPivot ? false : useMax);\n                // `useMax` now contains our preferred choice, bounds not taken into\n                // account. If both or neither direction is out of bounds we want to\n                // use this.\n                // Deal with soft bounds\n                useMax = minOutOfSoftBounds ?\n                    (maxOutOfSoftBounds ? useMax : true) : // Out on min\n                    (maxOutOfSoftBounds ? false : useMax); // Not out on min\n                // Deal with hard bounds\n                useMax = minOutOfHardBounds ?\n                    (maxOutOfHardBounds ? useMax : true) : // Out on min\n                    (maxOutOfHardBounds ? false : useMax); // Not out on min\n                return useMax;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Find a clear path between point.\n             * @private\n             */\n            function clearPathTo(fromPoint, toPoint, dirIsX) {\n                // Don't waste time if we've hit goal\n                if (fromPoint.x === toPoint.x && fromPoint.y === toPoint.y) {\n                    return [];\n                }\n                var dir = dirIsX ? 'x' : 'y', obstacleMargin = options.obstacleOptions.margin, bounds = {\n                    soft: {\n                        xMin: softMinX,\n                        xMax: softMaxX,\n                        yMin: softMinY,\n                        yMax: softMaxY\n                    },\n                    hard: options.hardBounds\n                };\n                var pivot, segments, waypoint, waypointUseMax, envelopingObstacle, secondEnvelopingObstacle, envelopWaypoint;\n                // If fromPoint is inside an obstacle we have a problem. Break out\n                // by just going to the outside of this obstacle. We prefer to go to\n                // the nearest edge in the chosen direction.\n                envelopingObstacle =\n                    findObstacleFromPoint(chartObstacles, fromPoint);\n                if (envelopingObstacle > -1) {\n                    envelopingObstacle = chartObstacles[envelopingObstacle];\n                    waypointUseMax = getDodgeDirection(envelopingObstacle, fromPoint, toPoint, dirIsX, bounds);\n                    // Cut obstacle to hard bounds to make sure we stay within\n                    limitObstacleToBounds(envelopingObstacle, options.hardBounds);\n                    envelopWaypoint = dirIsX ? {\n                        y: fromPoint.y,\n                        x: envelopingObstacle[waypointUseMax ? 'xMax' : 'xMin'] +\n                            (waypointUseMax ? 1 : -1)\n                    } : {\n                        x: fromPoint.x,\n                        y: envelopingObstacle[waypointUseMax ? 'yMax' : 'yMin'] +\n                            (waypointUseMax ? 1 : -1)\n                    };\n                    // If we crashed into another obstacle doing this, we put the\n                    // waypoint between them instead\n                    secondEnvelopingObstacle = findObstacleFromPoint(chartObstacles, envelopWaypoint);\n                    if (secondEnvelopingObstacle > -1) {\n                        secondEnvelopingObstacle = chartObstacles[secondEnvelopingObstacle];\n                        // Cut obstacle to hard bounds\n                        limitObstacleToBounds(secondEnvelopingObstacle, options.hardBounds);\n                        // Modify waypoint to lay between obstacles\n                        envelopWaypoint[dir] = waypointUseMax ? max(envelopingObstacle[dir + 'Max'] - obstacleMargin + 1, (secondEnvelopingObstacle[dir + 'Min'] +\n                            envelopingObstacle[dir + 'Max']) / 2) :\n                            min((envelopingObstacle[dir + 'Min'] + obstacleMargin - 1), ((secondEnvelopingObstacle[dir + 'Max'] +\n                                envelopingObstacle[dir + 'Min']) / 2));\n                        // We are not going anywhere. If this happens for the first\n                        // time, do nothing. Otherwise, try to go to the extreme of\n                        // the obstacle pair in the current direction.\n                        if (fromPoint.x === envelopWaypoint.x &&\n                            fromPoint.y === envelopWaypoint.y) {\n                            if (forceObstacleBreak) {\n                                envelopWaypoint[dir] = waypointUseMax ?\n                                    max(envelopingObstacle[dir + 'Max'], secondEnvelopingObstacle[dir + 'Max']) + 1 :\n                                    min(envelopingObstacle[dir + 'Min'], secondEnvelopingObstacle[dir + 'Min']) - 1;\n                            }\n                            // Toggle on if off, and the opposite\n                            forceObstacleBreak = !forceObstacleBreak;\n                        }\n                        else {\n                            // This point is not identical to previous.\n                            // Clear break trigger.\n                            forceObstacleBreak = false;\n                        }\n                    }\n                    segments = [{\n                            start: fromPoint,\n                            end: envelopWaypoint\n                        }];\n                }\n                else { // If not enveloping, use standard pivot calculation\n                    pivot = pivotPoint(fromPoint, {\n                        x: dirIsX ? toPoint.x : fromPoint.x,\n                        y: dirIsX ? fromPoint.y : toPoint.y\n                    }, dirIsX);\n                    segments = [{\n                            start: fromPoint,\n                            end: {\n                                x: pivot.x,\n                                y: pivot.y\n                            }\n                        }];\n                    // Pivot before goal, use a waypoint to dodge obstacle\n                    if (pivot[dirIsX ? 'x' : 'y'] !== toPoint[dirIsX ? 'x' : 'y']) {\n                        // Find direction of waypoint\n                        waypointUseMax = getDodgeDirection(pivot.obstacle, pivot, toPoint, !dirIsX, bounds);\n                        // Cut waypoint to hard bounds\n                        limitObstacleToBounds(pivot.obstacle, options.hardBounds);\n                        waypoint = {\n                            x: dirIsX ?\n                                pivot.x :\n                                pivot.obstacle[waypointUseMax ? 'xMax' : 'xMin'] +\n                                    (waypointUseMax ? 1 : -1),\n                            y: dirIsX ?\n                                pivot.obstacle[waypointUseMax ? 'yMax' : 'yMin'] +\n                                    (waypointUseMax ? 1 : -1) :\n                                pivot.y\n                        };\n                        // We're changing direction here, store that to make sure we\n                        // also change direction when adding the last segment array\n                        // after handling waypoint.\n                        dirIsX = !dirIsX;\n                        segments = segments.concat(clearPathTo({\n                            x: pivot.x,\n                            y: pivot.y\n                        }, waypoint, dirIsX));\n                    }\n                }\n                // Get segments for the other direction too\n                // Recursion is our friend\n                segments = segments.concat(clearPathTo(segments[segments.length - 1].end, toPoint, !dirIsX));\n                return segments;\n            }\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Extract point to outside of obstacle in whichever direction is\n             * closest. Returns new point outside obstacle.\n             * @private\n             */\n            function extractFromObstacle(obstacle, point, goalPoint) {\n                var dirIsX = min(obstacle.xMax - point.x, point.x - obstacle.xMin) <\n                    min(obstacle.yMax - point.y, point.y - obstacle.yMin), bounds = {\n                    soft: options.hardBounds,\n                    hard: options.hardBounds\n                }, useMax = getDodgeDirection(obstacle, point, goalPoint, dirIsX, bounds);\n                return dirIsX ? {\n                    y: point.y,\n                    x: obstacle[useMax ? 'xMax' : 'xMin'] + (useMax ? 1 : -1)\n                } : {\n                    x: point.x,\n                    y: obstacle[useMax ? 'yMax' : 'yMin'] + (useMax ? 1 : -1)\n                };\n            }\n            // Cut the obstacle array to soft bounds for optimization in large\n            // datasets.\n            chartObstacles =\n                chartObstacles.slice(startObstacleIx, endObstacleIx + 1);\n            // If an obstacle envelops the end point, move it out of there and add\n            // a little segment to where it was.\n            if ((endObstacleIx = findObstacleFromPoint(chartObstacles, end)) > -1) {\n                extractedEndPoint = extractFromObstacle(chartObstacles[endObstacleIx], end, start);\n                endSegments.push({\n                    end: end,\n                    start: extractedEndPoint\n                });\n                end = extractedEndPoint;\n            }\n            // If it's still inside one or more obstacles, get out of there by\n            // force-moving towards the start point.\n            while ((endObstacleIx = findObstacleFromPoint(chartObstacles, end)) > -1) {\n                useMax = end[dir] - start[dir] < 0;\n                extractedEndPoint = {\n                    x: end.x,\n                    y: end.y\n                };\n                extractedEndPoint[dir] = chartObstacles[endObstacleIx][useMax ? dir + 'Max' : dir + 'Min'] + (useMax ? 1 : -1);\n                endSegments.push({\n                    end: end,\n                    start: extractedEndPoint\n                });\n                end = extractedEndPoint;\n            }\n            // Find the path\n            segments = clearPathTo(start, end, dirIsX);\n            // Add the end-point segments\n            segments = segments.concat(endSegments.reverse());\n            return {\n                path: pathFromSegments(segments),\n                obstacles: segments\n            };\n        }\n        fastAvoid.requiresObstacles = true;\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        // Define the available pathfinding algorithms.\n        // Algorithms take up to 3 arguments: starting point, ending point, and an\n        // options object.\n        var algorithms = {\n            fastAvoid: fastAvoid,\n            straight: straight,\n            simpleConnect: simpleConnect\n        };\n\n        return algorithms;\n    });\n    _registerModule(_modules, 'Gantt/ConnectorsDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Defaults\n         *\n         * */\n        /*\n         @todo:\n             - Document how to write your own algorithms\n             - Consider adding a Point.pathTo method that wraps creating a connection\n               and rendering it\n        */\n        var connectorsDefaults = {\n            /**\n             * The Pathfinder module allows you to define connections between any two\n             * points, represented as lines - optionally with markers for the start\n             * and/or end points. Multiple algorithms are available for calculating how\n             * the connecting lines are drawn.\n             *\n             * Connector functionality requires Highcharts Gantt to be loaded. In Gantt\n             * charts, the connectors are used to draw dependencies between tasks.\n             *\n             * @see [dependency](series.gantt.data.dependency)\n             *\n             * @sample gantt/pathfinder/demo\n             *         Pathfinder connections\n             *\n             * @declare      Highcharts.ConnectorsOptions\n             * @product      gantt\n             * @optionparent connectors\n             */\n            connectors: {\n                /**\n                 * Enable connectors for this chart. Requires Highcharts Gantt.\n                 *\n                 * @type      {boolean}\n                 * @default   true\n                 * @since     6.2.0\n                 * @apioption connectors.enabled\n                 */\n                /**\n                 * Set the default dash style for this chart's connecting lines.\n                 *\n                 * @type      {string}\n                 * @default   solid\n                 * @since     6.2.0\n                 * @apioption connectors.dashStyle\n                 */\n                /**\n                 * Set the default color for this chart's Pathfinder connecting lines.\n                 * Defaults to the color of the point being connected.\n                 *\n                 * @type      {Highcharts.ColorString}\n                 * @since     6.2.0\n                 * @apioption connectors.lineColor\n                 */\n                /**\n                 * Set the default pathfinder margin to use, in pixels. Some Pathfinder\n                 * algorithms attempt to avoid obstacles, such as other points in the\n                 * chart. These algorithms use this margin to determine how close lines\n                 * can be to an obstacle. The default is to compute this automatically\n                 * from the size of the obstacles in the chart.\n                 *\n                 * To draw connecting lines close to existing points, set this to a low\n                 * number. For more space around existing points, set this number\n                 * higher.\n                 *\n                 * @sample gantt/pathfinder/algorithm-margin\n                 *         Small algorithmMargin\n                 *\n                 * @type      {number}\n                 * @since     6.2.0\n                 * @apioption connectors.algorithmMargin\n                 */\n                /**\n                 * Set the default pathfinder algorithm to use for this chart. It is\n                 * possible to define your own algorithms by adding them to the\n                 * Highcharts.Pathfinder.prototype.algorithms object before the chart\n                 * has been created.\n                 *\n                 * The default algorithms are as follows:\n                 *\n                 * `straight`:      Draws a straight line between the connecting\n                 *                  points. Does not avoid other points when drawing.\n                 *\n                 * `simpleConnect`: Finds a path between the points using right angles\n                 *                  only. Takes only starting/ending points into\n                 *                  account, and will not avoid other points.\n                 *\n                 * `fastAvoid`:     Finds a path between the points using right angles\n                 *                  only. Will attempt to avoid other points, but its\n                 *                  focus is performance over accuracy. Works well with\n                 *                  less dense datasets.\n                 *\n                 * Default value: `straight` is used as default for most series types,\n                 * while `simpleConnect` is used as default for Gantt series, to show\n                 * dependencies between points.\n                 *\n                 * @sample gantt/pathfinder/demo\n                 *         Different types used\n                 *\n                 * @type    {Highcharts.PathfinderTypeValue}\n                 * @default undefined\n                 * @since   6.2.0\n                 */\n                type: 'straight',\n                /**\n                 * The corner radius for the connector line.\n                 *\n                 * @since 11.2.0\n                 */\n                radius: 0,\n                /**\n                 * Set the default pixel width for this chart's Pathfinder connecting\n                 * lines.\n                 *\n                 * @since 6.2.0\n                 */\n                lineWidth: 1,\n                /**\n                 * Marker options for this chart's Pathfinder connectors. Note that\n                 * this option is overridden by the `startMarker` and `endMarker`\n                 * options.\n                 *\n                 * @declare Highcharts.ConnectorsMarkerOptions\n                 * @since   6.2.0\n                 */\n                marker: {\n                    /**\n                     * Set the radius of the connector markers. The default is\n                     * automatically computed based on the algorithmMargin setting.\n                     *\n                     * Setting marker.width and marker.height will override this\n                     * setting.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.radius\n                     */\n                    /**\n                     * Set the width of the connector markers. If not supplied, this\n                     * is inferred from the marker radius.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.width\n                     */\n                    /**\n                     * Set the height of the connector markers. If not supplied, this\n                     * is inferred from the marker radius.\n                     *\n                     * @type      {number}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.height\n                     */\n                    /**\n                     * Set the color of the connector markers. By default this is the\n                     * same as the connector color.\n                     *\n                     * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.color\n                     */\n                    /**\n                     * Set the line/border color of the connector markers. By default\n                     * this is the same as the marker color.\n                     *\n                     * @type      {Highcharts.ColorString}\n                     * @since     6.2.0\n                     * @apioption connectors.marker.lineColor\n                     */\n                    /**\n                     * Enable markers for the connectors.\n                     */\n                    enabled: false,\n                    /**\n                     * Horizontal alignment of the markers relative to the points.\n                     *\n                     * @type {Highcharts.AlignValue}\n                     */\n                    align: 'center',\n                    /**\n                     * Vertical alignment of the markers relative to the points.\n                     *\n                     * @type {Highcharts.VerticalAlignValue}\n                     */\n                    verticalAlign: 'middle',\n                    /**\n                     * Whether or not to draw the markers inside the points.\n                     */\n                    inside: false,\n                    /**\n                     * Set the line/border width of the pathfinder markers.\n                     */\n                    lineWidth: 1\n                },\n                /**\n                 * Marker options specific to the start markers for this chart's\n                 * Pathfinder connectors. Overrides the generic marker options.\n                 *\n                 * @declare Highcharts.ConnectorsStartMarkerOptions\n                 * @extends connectors.marker\n                 * @since   6.2.0\n                 */\n                startMarker: {\n                    /**\n                     * Set the symbol of the connector start markers.\n                     */\n                    symbol: 'diamond'\n                },\n                /**\n                 * Marker options specific to the end markers for this chart's\n                 * Pathfinder connectors. Overrides the generic marker options.\n                 *\n                 * @declare Highcharts.ConnectorsEndMarkerOptions\n                 * @extends connectors.marker\n                 * @since   6.2.0\n                 */\n                endMarker: {\n                    /**\n                     * Set the symbol of the connector end markers.\n                     */\n                    symbol: 'arrow-filled'\n                }\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Override Pathfinder connector options for a series. Requires Highcharts Gantt\n         * to be loaded.\n         *\n         * @declare   Highcharts.SeriesConnectorsOptionsObject\n         * @extends   connectors\n         * @since     6.2.0\n         * @excluding enabled, algorithmMargin\n         * @product   gantt\n         * @apioption plotOptions.series.connectors\n         */\n        /**\n         * Connect to a point. This option can be either a string, referring to the ID\n         * of another point, or an object, or an array of either. If the option is an\n         * array, each element defines a connection.\n         *\n         * @sample gantt/pathfinder/demo\n         *         Different connection types\n         *\n         * @declare   Highcharts.XrangePointConnectorsOptionsObject\n         * @type      {string|Array<string|*>|*}\n         * @extends   plotOptions.series.connectors\n         * @since     6.2.0\n         * @excluding enabled\n         * @product   gantt\n         * @requires  highcharts-gantt\n         * @apioption series.xrange.data.connect\n         */\n        /**\n         * The ID of the point to connect to.\n         *\n         * @type      {string}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.xrange.data.connect.to\n         */\n        ''; // Keeps doclets above in JS file\n\n        return connectorsDefaults;\n    });\n    _registerModule(_modules, 'Gantt/PathfinderComposition.js', [_modules['Gantt/ConnectorsDefaults.js'], _modules['Core/Defaults.js'], _modules['Core/Utilities.js']], function (ConnectorsDefaults, D, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var setOptions = D.setOptions;\n        var defined = U.defined, error = U.error, merge = U.merge, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get point bounding box using plotX/plotY and shapeArgs. If using\n         * graphic.getBBox() directly, the bbox will be affected by animation.\n         *\n         * @private\n         * @function\n         *\n         * @param {Highcharts.Point} point\n         *        The point to get BB of.\n         *\n         * @return {Highcharts.Dictionary<number>|null}\n         *         Result xMax, xMin, yMax, yMin.\n         */\n        function getPointBB(point) {\n            var shapeArgs = point.shapeArgs;\n            // Prefer using shapeArgs (columns)\n            if (shapeArgs) {\n                return {\n                    xMin: shapeArgs.x || 0,\n                    xMax: (shapeArgs.x || 0) + (shapeArgs.width || 0),\n                    yMin: shapeArgs.y || 0,\n                    yMax: (shapeArgs.y || 0) + (shapeArgs.height || 0)\n                };\n            }\n            // Otherwise use plotX/plotY and bb\n            var bb = point.graphic && point.graphic.getBBox();\n            return bb ? {\n                xMin: point.plotX - bb.width / 2,\n                xMax: point.plotX + bb.width / 2,\n                yMin: point.plotY - bb.height / 2,\n                yMax: point.plotY + bb.height / 2\n            } : null;\n        }\n        /**\n         * Warn if using legacy options. Copy the options over. Note that this will\n         * still break if using the legacy options in chart.update, addSeries etc.\n         * @private\n         */\n        function warnLegacy(chart) {\n            if (chart.options.pathfinder ||\n                chart.series.reduce(function (acc, series) {\n                    if (series.options) {\n                        merge(true, (series.options.connectors = series.options.connectors ||\n                            {}), series.options.pathfinder);\n                    }\n                    return acc || series.options && series.options.pathfinder;\n                }, false)) {\n                merge(true, (chart.options.connectors = chart.options.connectors || {}), chart.options.pathfinder);\n                error('WARNING: Pathfinder options have been renamed. ' +\n                    'Use \"chart.connectors\" or \"series.connectors\" instead.');\n            }\n        }\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ConnectionComposition;\n        (function (ConnectionComposition) {\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedMembers = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function compose(ChartClass, PathfinderClass, PointClass) {\n                if (pushUnique(composedMembers, ChartClass)) {\n                    // Initialize Pathfinder for charts\n                    ChartClass.prototype.callbacks.push(function (chart) {\n                        var options = chart.options;\n                        if (options.connectors.enabled !== false) {\n                            warnLegacy(chart);\n                            this.pathfinder = new PathfinderClass(this);\n                            this.pathfinder.update(true); // First draw, defer render\n                        }\n                    });\n                }\n                if (pushUnique(composedMembers, PointClass)) {\n                    var pointProto = PointClass.prototype;\n                    pointProto.getMarkerVector = pointGetMarkerVector;\n                    pointProto.getPathfinderAnchorPoint = pointGetPathfinderAnchorPoint;\n                    pointProto.getRadiansToVector = pointGetRadiansToVector;\n                }\n                if (pushUnique(composedMembers, setOptions)) {\n                    // Set default Pathfinder options\n                    setOptions(ConnectorsDefaults);\n                }\n            }\n            ConnectionComposition.compose = compose;\n            /**\n             * Get coordinates of anchor point for pathfinder connection.\n             *\n             * @private\n             * @function Highcharts.Point#getPathfinderAnchorPoint\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} markerOptions\n             *        Connection options for position on point.\n             *\n             * @return {Highcharts.PositionObject}\n             *         An object with x/y properties for the position. Coordinates are\n             *         in plot values, not relative to point.\n             */\n            function pointGetPathfinderAnchorPoint(markerOptions) {\n                var bb = getPointBB(this);\n                var x, y;\n                switch (markerOptions.align) { // eslint-disable-line default-case\n                    case 'right':\n                        x = 'xMax';\n                        break;\n                    case 'left':\n                        x = 'xMin';\n                }\n                switch (markerOptions.verticalAlign) { // eslint-disable-line default-case\n                    case 'top':\n                        y = 'yMin';\n                        break;\n                    case 'bottom':\n                        y = 'yMax';\n                }\n                return {\n                    x: x ? bb[x] : (bb.xMin + bb.xMax) / 2,\n                    y: y ? bb[y] : (bb.yMin + bb.yMax) / 2\n                };\n            }\n            /**\n             * Utility to get the angle from one point to another.\n             *\n             * @private\n             * @function Highcharts.Point#getRadiansToVector\n             *\n             * @param {Highcharts.PositionObject} v1\n             *        The first vector, as an object with x/y properties.\n             *\n             * @param {Highcharts.PositionObject} v2\n             *        The second vector, as an object with x/y properties.\n             *\n             * @return {number}\n             *         The angle in degrees\n             */\n            function pointGetRadiansToVector(v1, v2) {\n                var box;\n                if (!defined(v2)) {\n                    box = getPointBB(this);\n                    if (box) {\n                        v2 = {\n                            x: (box.xMin + box.xMax) / 2,\n                            y: (box.yMin + box.yMax) / 2\n                        };\n                    }\n                }\n                return Math.atan2(v2.y - v1.y, v1.x - v2.x);\n            }\n            /**\n             * Utility to get the position of the marker, based on the path angle and\n             * the marker's radius.\n             *\n             * @private\n             * @function Highcharts.Point#getMarkerVector\n             *\n             * @param {number} radians\n             *        The angle in radians from the point center to another vector.\n             *\n             * @param {number} markerRadius\n             *        The radius of the marker, to calculate the additional distance to\n             *        the center of the marker.\n             *\n             * @param {Object} anchor\n             *        The anchor point of the path and marker as an object with x/y\n             *        properties.\n             *\n             * @return {Object}\n             *         The marker vector as an object with x/y properties.\n             */\n            function pointGetMarkerVector(radians, markerRadius, anchor) {\n                var twoPI = Math.PI * 2.0, bb = getPointBB(this), rectWidth = bb.xMax - bb.xMin, rectHeight = bb.yMax - bb.yMin, rAtan = Math.atan2(rectHeight, rectWidth), rectHalfWidth = rectWidth / 2.0, rectHalfHeight = rectHeight / 2.0, rectHorizontalCenter = bb.xMin + rectHalfWidth, rectVerticalCenter = bb.yMin + rectHalfHeight, edgePoint = {\n                    x: rectHorizontalCenter,\n                    y: rectVerticalCenter\n                };\n                var theta = radians, tanTheta = 1, leftOrRightRegion = false, xFactor = 1, yFactor = 1;\n                while (theta < -Math.PI) {\n                    theta += twoPI;\n                }\n                while (theta > Math.PI) {\n                    theta -= twoPI;\n                }\n                tanTheta = Math.tan(theta);\n                if ((theta > -rAtan) && (theta <= rAtan)) {\n                    // Right side\n                    yFactor = -1;\n                    leftOrRightRegion = true;\n                }\n                else if (theta > rAtan && theta <= (Math.PI - rAtan)) {\n                    // Top side\n                    yFactor = -1;\n                }\n                else if (theta > (Math.PI - rAtan) || theta <= -(Math.PI - rAtan)) {\n                    // Left side\n                    xFactor = -1;\n                    leftOrRightRegion = true;\n                }\n                else {\n                    // Bottom side\n                    xFactor = -1;\n                }\n                // Correct the edgePoint according to the placement of the marker\n                if (leftOrRightRegion) {\n                    edgePoint.x += xFactor * (rectHalfWidth);\n                    edgePoint.y += yFactor * (rectHalfWidth) * tanTheta;\n                }\n                else {\n                    edgePoint.x += xFactor * (rectHeight / (2.0 * tanTheta));\n                    edgePoint.y += yFactor * (rectHalfHeight);\n                }\n                if (anchor.x !== rectHorizontalCenter) {\n                    edgePoint.x = anchor.x;\n                }\n                if (anchor.y !== rectVerticalCenter) {\n                    edgePoint.y = anchor.y;\n                }\n                return {\n                    x: edgePoint.x + (markerRadius * Math.cos(theta)),\n                    y: edgePoint.y - (markerRadius * Math.sin(theta))\n                };\n            }\n        })(ConnectionComposition || (ConnectionComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ConnectionComposition;\n    });\n    _registerModule(_modules, 'Gantt/Pathfinder.js', [_modules['Gantt/Connection.js'], _modules['Gantt/PathfinderAlgorithms.js'], _modules['Gantt/PathfinderComposition.js'], _modules['Core/Series/Point.js'], _modules['Core/Utilities.js']], function (Connection, PathfinderAlgorithms, PathfinderComposition, Point, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Ã˜ystein Moseng, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, splat = U.splat;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var max = Math.max, min = Math.min;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get point bounding box using plotX/plotY and shapeArgs. If using\n         * graphic.getBBox() directly, the bbox will be affected by animation.\n         *\n         * @private\n         * @function\n         *\n         * @param {Highcharts.Point} point\n         *        The point to get BB of.\n         *\n         * @return {Highcharts.Dictionary<number>|null}\n         *         Result xMax, xMin, yMax, yMin.\n         */\n        function getPointBB(point) {\n            var shapeArgs = point.shapeArgs;\n            // Prefer using shapeArgs (columns)\n            if (shapeArgs) {\n                return {\n                    xMin: shapeArgs.x || 0,\n                    xMax: (shapeArgs.x || 0) + (shapeArgs.width || 0),\n                    yMin: shapeArgs.y || 0,\n                    yMax: (shapeArgs.y || 0) + (shapeArgs.height || 0)\n                };\n            }\n            // Otherwise use plotX/plotY and bb\n            var bb = point.graphic && point.graphic.getBBox();\n            return bb ? {\n                xMin: point.plotX - bb.width / 2,\n                xMax: point.plotX + bb.width / 2,\n                yMin: point.plotY - bb.height / 2,\n                yMax: point.plotY + bb.height / 2\n            } : null;\n        }\n        /**\n         * Compute smallest distance between two rectangles.\n         * @private\n         */\n        function calculateObstacleDistance(a, b, bbMargin) {\n            // Count the distance even if we are slightly off\n            var margin = pick(bbMargin, 10), yOverlap = a.yMax + margin > b.yMin - margin &&\n                a.yMin - margin < b.yMax + margin, xOverlap = a.xMax + margin > b.xMin - margin &&\n                a.xMin - margin < b.xMax + margin, xDistance = yOverlap ? (a.xMin > b.xMax ? a.xMin - b.xMax : b.xMin - a.xMax) : Infinity, yDistance = xOverlap ? (a.yMin > b.yMax ? a.yMin - b.yMax : b.yMin - a.yMax) : Infinity;\n            // If the rectangles collide, try recomputing with smaller margin.\n            // If they collide anyway, discard the obstacle.\n            if (xOverlap && yOverlap) {\n                return (margin ?\n                    calculateObstacleDistance(a, b, Math.floor(margin / 2)) :\n                    Infinity);\n            }\n            return min(xDistance, yDistance);\n        }\n        /**\n         * Calculate margin to place around obstacles for the pathfinder in pixels.\n         * Returns a minimum of 1 pixel margin.\n         *\n         * @private\n         * @function\n         *\n         * @param {Array<object>} obstacles\n         *        Obstacles to calculate margin from.\n         *\n         * @return {number}\n         *         The calculated margin in pixels. At least 1.\n         */\n        function calculateObstacleMargin(obstacles) {\n            var len = obstacles.length, distances = [];\n            var onstacleDistance;\n            // Go over all obstacles and compare them to the others.\n            for (var i = 0; i < len; ++i) {\n                // Compare to all obstacles ahead. We will already have compared this\n                // obstacle to the ones before.\n                for (var j = i + 1; j < len; ++j) {\n                    onstacleDistance =\n                        calculateObstacleDistance(obstacles[i], obstacles[j]);\n                    // TODO: Magic number 80\n                    if (onstacleDistance < 80) { // Ignore large distances\n                        distances.push(onstacleDistance);\n                    }\n                }\n            }\n            // Ensure we always have at least one value, even in very spaceous charts\n            distances.push(80);\n            return max(Math.floor(distances.sort(function (a, b) {\n                return (a - b);\n            })[\n            // Discard first 10% of the relevant distances, and then grab\n            // the smallest one.\n            Math.floor(distances.length / 10)] / 2 - 1 // Divide the distance by 2 and subtract 1.\n            ), 1 // 1 is the minimum margin\n            );\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Pathfinder class.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Pathfinder\n         *\n         * @param {Highcharts.Chart} chart\n         *        The chart to operate on.\n         */\n        var Pathfinder = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Pathfinder(chart) {\n                /* *\n                 *\n                 * Properties\n                 *\n                 * */\n                this.chart = void 0;\n                this.chartObstacles = void 0;\n                this.chartObstacleMetrics = void 0;\n                this.connections = void 0;\n                this.group = void 0;\n                this.lineObstacles = void 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Pathfinder.compose = function (ChartClass, PointClass) {\n                PathfinderComposition.compose(ChartClass, Pathfinder, PointClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize the Pathfinder object.\n             *\n             * @function Highcharts.Pathfinder#init\n             *\n             * @param {Highcharts.Chart} chart\n             *        The chart context.\n             */\n            Pathfinder.prototype.init = function (chart) {\n                // Initialize pathfinder with chart context\n                this.chart = chart;\n                // Init connection reference list\n                this.connections = [];\n                // Recalculate paths/obstacles on chart redraw\n                addEvent(chart, 'redraw', function () {\n                    this.pathfinder.update();\n                });\n            };\n            /**\n             * Update Pathfinder connections from scratch.\n             *\n             * @function Highcharts.Pathfinder#update\n             *\n             * @param {boolean} [deferRender]\n             *        Whether or not to defer rendering of connections until\n             *        series.afterAnimate event has fired. Used on first render.\n             */\n            Pathfinder.prototype.update = function (deferRender) {\n                var chart = this.chart, pathfinder = this, oldConnections = pathfinder.connections;\n                // Rebuild pathfinder connections from options\n                pathfinder.connections = [];\n                chart.series.forEach(function (series) {\n                    if (series.visible && !series.options.isInternal) {\n                        series.points.forEach(function (point) {\n                            var _a;\n                            var ganttPointOptions = point.options;\n                            // For Gantt series the connect could be\n                            // defined as a dependency\n                            if (ganttPointOptions && ganttPointOptions.dependency) {\n                                ganttPointOptions.connect = ganttPointOptions\n                                    .dependency;\n                            }\n                            var connects = (((_a = point.options) === null || _a === void 0 ? void 0 : _a.connect) &&\n                                splat(point.options.connect));\n                            var to;\n                            if (point.visible && point.isInside !== false && connects) {\n                                connects.forEach(function (connect) {\n                                    to = chart.get(typeof connect === 'string' ?\n                                        connect : connect.to);\n                                    if (to instanceof Point &&\n                                        to.series.visible &&\n                                        to.visible &&\n                                        to.isInside !== false) {\n                                        // Add new connection\n                                        pathfinder.connections.push(new Connection(point, // From\n                                        to, typeof connect === 'string' ?\n                                            {} :\n                                            connect));\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n                // Clear connections that should not be updated, and move old info over\n                // to new connections.\n                for (var j = 0, k = void 0, found = void 0, lenOld = oldConnections.length, lenNew = pathfinder.connections.length; j < lenOld; ++j) {\n                    found = false;\n                    var oldCon = oldConnections[j];\n                    for (k = 0; k < lenNew; ++k) {\n                        var newCon = pathfinder.connections[k];\n                        if ((oldCon.options && oldCon.options.type) ===\n                            (newCon.options && newCon.options.type) &&\n                            oldCon.fromPoint === newCon.fromPoint &&\n                            oldCon.toPoint === newCon.toPoint) {\n                            newCon.graphics = oldCon.graphics;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        oldCon.destroy();\n                    }\n                }\n                // Clear obstacles to force recalculation. This must be done on every\n                // redraw in case positions have changed. Recalculation is handled in\n                // Connection.getPath on demand.\n                delete this.chartObstacles;\n                delete this.lineObstacles;\n                // Draw the pending connections\n                pathfinder.renderConnections(deferRender);\n            };\n            /**\n             * Draw the chart's connecting paths.\n             *\n             * @function Highcharts.Pathfinder#renderConnections\n             *\n             * @param {boolean} [deferRender]\n             *        Whether or not to defer render until series animation is finished.\n             *        Used on first render.\n             */\n            Pathfinder.prototype.renderConnections = function (deferRender) {\n                if (deferRender) {\n                    // Render after series are done animating\n                    this.chart.series.forEach(function (series) {\n                        var render = function () {\n                            // Find pathfinder connections belonging to this series\n                            // that haven't rendered, and render them now.\n                            var pathfinder = series.chart.pathfinder, conns = pathfinder && pathfinder.connections || [];\n                            conns.forEach(function (connection) {\n                                if (connection.fromPoint &&\n                                    connection.fromPoint.series === series) {\n                                    connection.render();\n                                }\n                            });\n                            if (series.pathfinderRemoveRenderEvent) {\n                                series.pathfinderRemoveRenderEvent();\n                                delete series.pathfinderRemoveRenderEvent;\n                            }\n                        };\n                        if (series.options.animation === false) {\n                            render();\n                        }\n                        else {\n                            series.pathfinderRemoveRenderEvent = addEvent(series, 'afterAnimate', render);\n                        }\n                    });\n                }\n                else {\n                    // Go through connections and render them\n                    this.connections.forEach(function (connection) {\n                        connection.render();\n                    });\n                }\n            };\n            /**\n             * Get obstacles for the points in the chart. Does not include connecting\n             * lines from Pathfinder. Applies algorithmMargin to the obstacles.\n             *\n             * @function Highcharts.Pathfinder#getChartObstacles\n             *\n             * @param {Object} options\n             *        Options for the calculation. Currenlty only\n             *        options.algorithmMargin.\n             *\n             * @return {Array<object>}\n             *         An array of calculated obstacles. Each obstacle is defined as an\n             *         object with xMin, xMax, yMin and yMax properties.\n             */\n            Pathfinder.prototype.getChartObstacles = function (options) {\n                var series = this.chart.series, margin = pick(options.algorithmMargin, 0);\n                var obstacles = [], calculatedMargin;\n                for (var i = 0, sLen = series.length; i < sLen; ++i) {\n                    if (series[i].visible && !series[i].options.isInternal) {\n                        for (var j = 0, pLen = series[i].points.length, bb = void 0, point = void 0; j < pLen; ++j) {\n                            point = series[i].points[j];\n                            if (point.visible) {\n                                bb = getPointBB(point);\n                                if (bb) {\n                                    obstacles.push({\n                                        xMin: bb.xMin - margin,\n                                        xMax: bb.xMax + margin,\n                                        yMin: bb.yMin - margin,\n                                        yMax: bb.yMax + margin\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n                // Sort obstacles by xMin for optimization\n                obstacles = obstacles.sort(function (a, b) {\n                    return a.xMin - b.xMin;\n                });\n                // Add auto-calculated margin if the option is not defined\n                if (!defined(options.algorithmMargin)) {\n                    calculatedMargin =\n                        options.algorithmMargin =\n                            calculateObstacleMargin(obstacles);\n                    obstacles.forEach(function (obstacle) {\n                        obstacle.xMin -= calculatedMargin;\n                        obstacle.xMax += calculatedMargin;\n                        obstacle.yMin -= calculatedMargin;\n                        obstacle.yMax += calculatedMargin;\n                    });\n                }\n                return obstacles;\n            };\n            /**\n             * Utility function to get metrics for obstacles:\n             * - Widest obstacle width\n             * - Tallest obstacle height\n             *\n             * @function Highcharts.Pathfinder#getObstacleMetrics\n             *\n             * @param {Array<object>} obstacles\n             *        An array of obstacles to inspect.\n             *\n             * @return {Object}\n             *         The calculated metrics, as an object with maxHeight and maxWidth\n             *         properties.\n             */\n            Pathfinder.prototype.getObstacleMetrics = function (obstacles) {\n                var maxWidth = 0, maxHeight = 0, width, height, i = obstacles.length;\n                while (i--) {\n                    width = obstacles[i].xMax - obstacles[i].xMin;\n                    height = obstacles[i].yMax - obstacles[i].yMin;\n                    if (maxWidth < width) {\n                        maxWidth = width;\n                    }\n                    if (maxHeight < height) {\n                        maxHeight = height;\n                    }\n                }\n                return {\n                    maxHeight: maxHeight,\n                    maxWidth: maxWidth\n                };\n            };\n            /**\n             * Utility to get which direction to start the pathfinding algorithm\n             * (X vs Y), calculated from a set of marker options.\n             *\n             * @function Highcharts.Pathfinder#getAlgorithmStartDirection\n             *\n             * @param {Highcharts.ConnectorsMarkerOptions} markerOptions\n             *        Marker options to calculate from.\n             *\n             * @return {boolean}\n             *         Returns true for X, false for Y, and undefined for autocalculate.\n             */\n            Pathfinder.prototype.getAlgorithmStartDirection = function (markerOptions) {\n                var xCenter = markerOptions.align !== 'left' &&\n                    markerOptions.align !== 'right', yCenter = markerOptions.verticalAlign !== 'top' &&\n                    markerOptions.verticalAlign !== 'bottom';\n                return xCenter ?\n                    (yCenter ? void 0 : false) : // When x is centered\n                    (yCenter ? true : void 0); // When x is off-center\n            };\n            return Pathfinder;\n        }());\n        /**\n         * @name Highcharts.Pathfinder#algorithms\n         * @type {Highcharts.Dictionary<Function>}\n         */\n        Pathfinder.prototype.algorithms = PathfinderAlgorithms;\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The default pathfinder algorithm to use for a chart. It is possible to define\n         * your own algorithms by adding them to the\n         * `Highcharts.Pathfinder.prototype.algorithms`\n         * object before the chart has been created.\n         *\n         * The default algorithms are as follows:\n         *\n         * `straight`:      Draws a straight line between the connecting\n         *                  points. Does not avoid other points when drawing.\n         *\n         * `simpleConnect`: Finds a path between the points using right angles\n         *                  only. Takes only starting/ending points into\n         *                  account, and will not avoid other points.\n         *\n         * `fastAvoid`:     Finds a path between the points using right angles\n         *                  only. Will attempt to avoid other points, but its\n         *                  focus is performance over accuracy. Works well with\n         *                  less dense datasets.\n         *\n         * @typedef {\"fastAvoid\"|\"simpleConnect\"|\"straight\"|string} Highcharts.PathfinderTypeValue\n         */\n        ''; // Keeps doclets above in JS file\n\n        return Pathfinder;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Declarations\n         *\n         * */\n        /**\n         * Language object. The language object is global and it can't be set\n         * on each chart initialization. Instead, use `Highcharts.setOptions` to\n         * set it before any chart is initialized.\n         *\n         * ```js\n         * Highcharts.setOptions({\n         *     lang: {\n         *         months: [\n         *             'Janvier', 'FÃ©vrier', 'Mars', 'Avril',\n         *             'Mai', 'Juin', 'Juillet', 'AoÃ»t',\n         *             'Septembre', 'Octobre', 'Novembre', 'DÃ©cembre'\n         *         ],\n         *         weekdays: [\n         *             'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n         *             'Jeudi', 'Vendredi', 'Samedi'\n         *         ]\n         *     }\n         * });\n         * ```\n         *\n         * @optionparent lang\n         */\n        var lang = {\n            /**\n             * The text for the label for the range selector buttons.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorZoom: 'Zoom',\n            /**\n             * The text for the label for the \"from\" input box in the range\n             * selector. Since v9.0, this string is empty as the label is not\n             * rendered by default.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorFrom: '',\n            /**\n             * The text for the label for the \"to\" input box in the range selector.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorTo: 'â†’'\n        };\n        /**\n         * The range selector is a tool for selecting ranges to display within\n         * the chart. It provides buttons to select preconfigured ranges in\n         * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n         * boxes where min and max dates can be manually input.\n         *\n         * @product      highstock gantt\n         * @optionparent rangeSelector\n         */\n        var rangeSelector = {\n            /**\n             * Whether to enable all buttons from the start. By default buttons are\n             * only enabled if the corresponding time range exists on the X axis,\n             * but enabling all buttons allows for dynamically loading different\n             * time ranges.\n             *\n             * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n             *         All buttons enabled\n             *\n             * @since     2.0.3\n             */\n            allButtonsEnabled: false,\n            /**\n             * An array of configuration objects for the buttons.\n             *\n             * Defaults to:\n             * ```js\n             * buttons: [{\n             *     type: 'month',\n             *     count: 1,\n             *     text: '1m',\n             *     title: 'View 1 month'\n             * }, {\n             *     type: 'month',\n             *     count: 3,\n             *     text: '3m',\n             *     title: 'View 3 months'\n             * }, {\n             *     type: 'month',\n             *     count: 6,\n             *     text: '6m',\n             *     title: 'View 6 months'\n             * }, {\n             *     type: 'ytd',\n             *     text: 'YTD',\n             *     title: 'View year to date'\n             * }, {\n             *     type: 'year',\n             *     count: 1,\n             *     text: '1y',\n             *     title: 'View 1 year'\n             * }, {\n             *     type: 'all',\n             *     text: 'All',\n             *     title: 'View all'\n             * }]\n             * ```\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by buttons\n             *\n             * @type      {Array<*>}\n             */\n            buttons: void 0,\n            /**\n             * How many units of the defined type the button should span. If `type`\n             * is \"month\" and `count` is 3, the button spans three months.\n             *\n             * @type      {number}\n             * @default   1\n             * @apioption rangeSelector.buttons.count\n             */\n            /**\n             * Fires when clicking on the rangeSelector button. One parameter,\n             * event, is passed to the function, containing common event\n             * information.\n             *\n             * ```js\n             * click: function(e) {\n             *   console.log(this);\n             * }\n             * ```\n             *\n             * Return false to stop default button's click action.\n             *\n             * @sample {highstock} stock/rangeselector/button-click/\n             *         Click event on the button\n             *\n             * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n             * @apioption rangeSelector.buttons.events.click\n             */\n            /**\n             * Additional range (in milliseconds) added to the end of the calculated\n             * time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMax\n             */\n            /**\n             * Additional range (in milliseconds) added to the start of the\n             * calculated time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMin\n             */\n            /**\n             * When buttons apply dataGrouping on a series, by default zooming\n             * in/out will deselect buttons and unset dataGrouping. Enable this\n             * option to keep buttons selected when extremes change.\n             *\n             * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n             *         Different preserveDataGrouping settings\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     6.1.2\n             * @apioption rangeSelector.buttons.preserveDataGrouping\n             */\n            /**\n             * A custom data grouping object for each button.\n             *\n             * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by range selector buttons\n             *\n             * @type      {*}\n             * @extends   plotOptions.series.dataGrouping\n             * @apioption rangeSelector.buttons.dataGrouping\n             */\n            /**\n             * The text for the button itself.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.text\n             */\n            /**\n             * Explanation for the button, shown as a tooltip on hover, and used by\n             * assistive technology.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.title\n             */\n            /**\n             * Defined the time span for the button. Can be one of `millisecond`,\n             * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n             * and `all`.\n             *\n             * @type       {Highcharts.RangeSelectorButtonTypeValue}\n             * @apioption  rangeSelector.buttons.type\n             */\n            /**\n             * The space in pixels between the buttons in the range selector.\n             */\n            buttonSpacing: 5,\n            /**\n             * Whether to collapse the range selector buttons into a dropdown when\n             * there is not enough room to show everything in a single row, instead\n             * of dividing the range selector into multiple rows.\n             * Can be one of the following:\n             *  - `always`: Always collapse\n             *  - `responsive`: Only collapse when there is not enough room\n             *  - `never`: Never collapse\n             *\n             * @sample {highstock} stock/rangeselector/dropdown/\n             *         Dropdown option\n             *\n             * @validvalue [\"always\", \"responsive\", \"never\"]\n             * @since 9.0.0\n             */\n            dropdown: 'responsive',\n            /**\n             * Enable or disable the range selector. Default to `true` for stock\n             * charts, using the `stockChart` factory.\n             *\n             * @sample {highstock} stock/rangeselector/enabled/\n             *         Disable the range selector\n             *\n             * @type {boolean|undefined}\n             * @default {highstock} true\n             */\n            enabled: void 0,\n            /**\n             * The vertical alignment of the rangeselector box. Allowed properties\n             * are `top`, `middle`, `bottom`.\n             *\n             * @sample {highstock} stock/rangeselector/vertical-align-middle/\n             *         Middle\n             * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n             *         Bottom\n             *\n             * @type  {Highcharts.VerticalAlignValue}\n             * @since 6.0.0\n             */\n            verticalAlign: 'top',\n            /**\n             * A collection of attributes for the buttons. The object takes SVG\n             * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n             * a collection of CSS properties for the text.\n             *\n             * The object can also be extended with states, so you can set\n             * presentational options for `hover`, `select` or `disabled` button\n             * states.\n             *\n             * CSS styles for the text label.\n             *\n             * In styled mode, the buttons are styled by the\n             * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n             * different states.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.SVGAttributes}\n             */\n            buttonTheme: {\n                /** @ignore */\n                width: 28,\n                /** @ignore */\n                height: 18,\n                /** @ignore */\n                padding: 2,\n                /** @ignore */\n                zIndex: 7 // #484, #852\n            },\n            /**\n             * When the rangeselector is floating, the plot area does not reserve\n             * space for it. This opens for positioning anywhere on the chart.\n             *\n             * @sample {highstock} stock/rangeselector/floating/\n             *         Placing the range selector between the plot area and the\n             *         navigator\n             *\n             * @since 6.0.0\n             */\n            floating: false,\n            /**\n             * The x offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            x: 0,\n            /**\n             * The y offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            y: 0,\n            /**\n             * Deprecated. The height of the range selector. Currently it is\n             * calculated dynamically.\n             *\n             * @deprecated\n             * @type  {number|undefined}\n             * @since 2.1.9\n             */\n            height: void 0,\n            /**\n             * The border color of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.ColorString}\n             * @since     1.3.7\n             */\n            inputBoxBorderColor: 'none',\n            /**\n             * The pixel height of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @since     1.3.7\n             */\n            inputBoxHeight: 17,\n            /**\n             * The pixel width of the date input boxes. When `undefined`, the width\n             * is fitted to the rendered content.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type   {number|undefined}\n             * @since  1.3.7\n             */\n            inputBoxWidth: void 0,\n            /**\n             * The date format in the input boxes when not selected for editing.\n             * Defaults to `%e %b %Y`.\n             *\n             * This is used to determine which type of input to show,\n             * `datetime-local`, `date` or `time` and falling back to `text` when\n             * the browser does not support the input type or the format contains\n             * milliseconds.\n             *\n             * @sample {highstock} stock/rangeselector/input-type/\n             *         Input types\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputDateFormat: '%e %b %Y',\n            /**\n             * A custom callback function to parse values entered in the input boxes\n             * and return a valid JavaScript time as milliseconds since 1970.\n             * The first argument passed is a value to parse,\n             * second is a boolean indicating use of the UTC time.\n             *\n             * This will only get called for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n             * @since     1.3.3\n             */\n            inputDateParser: void 0,\n            /**\n             * The date format in the input boxes when they are selected for\n             * editing. This must be a format that is recognized by JavaScript\n             * Date.parse.\n             *\n             * This will only be used for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputEditDateFormat: '%Y-%m-%d',\n            /**\n             * Enable or disable the date input boxes.\n             */\n            inputEnabled: true,\n            /**\n             * Positioning for the input boxes. Allowed properties are `align`,\n             *  `x` and `y`.\n             *\n             * @since 1.2.4\n             */\n            inputPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'right',\n                /**\n                 * X offset of the input row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the input row.\n                 */\n                y: 0\n            },\n            /**\n             * The space in pixels between the labels and the date input boxes in\n             * the range selector.\n             *\n             * @since 9.0.0\n             */\n            inputSpacing: 5,\n            /**\n             * The index of the button to appear pre-selected.\n             *\n             * @type      {number}\n             */\n            selected: void 0,\n            /**\n             * Positioning for the button row.\n             *\n             * @since 1.2.4\n             */\n            buttonPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'left',\n                /**\n                 * X offset of the button row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the button row.\n                 */\n                y: 0\n            },\n            /**\n             * CSS for the HTML inputs in the range selector.\n             *\n             * In styled mode, the inputs are styled by the\n             * `.highcharts-range-input text` rule in SVG mode, and\n             * `input.highcharts-range-selector` when active.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.CSSObject}\n             * @apioption rangeSelector.inputStyle\n             */\n            inputStyle: {\n                /** @ignore */\n                color: \"#334eff\" /* Palette.highlightColor80 */,\n                /** @ignore */\n                cursor: 'pointer',\n                /** @ignore */\n                fontSize: '0.8em'\n            },\n            /**\n             * CSS styles for the labels - the Zoom, From and To texts.\n             *\n             * In styled mode, the labels are styled by the\n             * `.highcharts-range-label` class.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.CSSObject}\n             */\n            labelStyle: {\n                /** @ignore */\n                color: \"#666666\" /* Palette.neutralColor60 */,\n                /** @ignore */\n                fontSize: '0.8em'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorDefaults = {\n            lang: lang,\n            rangeSelector: rangeSelector\n        };\n\n        return RangeSelectorDefaults;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorComposition.js', [_modules['Core/Defaults.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Core/Utilities.js']], function (D, RangeSelectorDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions, setOptions = D.setOptions;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var chartDestroyEvents = [];\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var RangeSelectorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the axis min value based on the range option and the current max. For\n         * stock charts this is extended via the {@link RangeSelector} so that if the\n         * selected range is a multiple of months or years, it is compensated for\n         * various month lengths.\n         *\n         * @private\n         * @function Highcharts.Axis#minFromRange\n         * @return {number|undefined}\n         *         The new minimum value.\n         */\n        function axisMinFromRange() {\n            var rangeOptions = this.range, type = rangeOptions.type, max = this.max, time = this.chart.time, \n            // Get the true range from a start date\n            getTrueRange = function (base, count) {\n                var timeName = type === 'year' ?\n                    'FullYear' : 'Month';\n                var date = new time.Date(base);\n                var basePeriod = time.get(timeName, date);\n                time.set(timeName, date, basePeriod + count);\n                if (basePeriod === time.get(timeName, date)) {\n                    time.set('Date', date, 0); // #6537\n                }\n                return date.getTime() - base;\n            };\n            var min, range;\n            if (isNumber(rangeOptions)) {\n                min = max - rangeOptions;\n                range = rangeOptions;\n            }\n            else if (rangeOptions) {\n                min = max + getTrueRange(max, -(rangeOptions.count || 1));\n                // Let the fixedRange reflect initial settings (#5930)\n                if (this.chart) {\n                    this.chart.fixedRange = max - min;\n                }\n            }\n            var dataMin = pick(this.dataMin, Number.MIN_VALUE);\n            if (!isNumber(min)) {\n                min = dataMin;\n            }\n            if (min <= dataMin) {\n                min = dataMin;\n                if (typeof range === 'undefined') { // #4501\n                    range = getTrueRange(min, rangeOptions.count);\n                }\n                this.newMax = Math.min(min + range, pick(this.dataMax, Number.MAX_VALUE));\n            }\n            if (!isNumber(max)) {\n                min = void 0;\n            }\n            else if (!isNumber(rangeOptions) &&\n                rangeOptions &&\n                rangeOptions._offsetMin) {\n                min += rangeOptions._offsetMin;\n            }\n            return min;\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, RangeSelectorClass) {\n            RangeSelectorConstructor = RangeSelectorClass;\n            if (U.pushUnique(composedMembers, AxisClass)) {\n                AxisClass.prototype.minFromRange = axisMinFromRange;\n            }\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins);\n                addEvent(ChartClass, 'render', onChartRender);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                var chartProto = ChartClass.prototype;\n                chartProto.callbacks.push(onChartCallback);\n            }\n            if (U.pushUnique(composedMembers, setOptions)) {\n                extend(defaultOptions, { rangeSelector: RangeSelectorDefaults.rangeSelector });\n                extend(defaultOptions.lang, RangeSelectorDefaults.lang);\n            }\n        }\n        /**\n         * Initialize rangeselector for stock charts\n         * @private\n         */\n        function onChartAfterGetContainer() {\n            if (this.options.rangeSelector &&\n                this.options.rangeSelector.enabled) {\n                this.rangeSelector = new RangeSelectorConstructor(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartBeforeRender() {\n            var chart = this, axes = chart.axes, rangeSelector = chart.rangeSelector;\n            if (rangeSelector) {\n                if (isNumber(rangeSelector.deferredYTDClick)) {\n                    rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n                    delete rangeSelector.deferredYTDClick;\n                }\n                axes.forEach(function (axis) {\n                    axis.updateNames();\n                    axis.setScale();\n                });\n                chart.getAxisMargins();\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var extremes, legend, alignTo, verticalAlign;\n            var rangeSelector = chart.rangeSelector, redraw = function () {\n                if (rangeSelector) {\n                    extremes = chart.xAxis[0].getExtremes();\n                    legend = chart.legend;\n                    verticalAlign = (rangeSelector &&\n                        rangeSelector.options.verticalAlign);\n                    if (isNumber(extremes.min)) {\n                        rangeSelector.render(extremes.min, extremes.max);\n                    }\n                    // Re-align the legend so that it's below the rangeselector\n                    if (legend.display &&\n                        verticalAlign === 'top' &&\n                        verticalAlign === legend.options.verticalAlign) {\n                        // Create a new alignment box for the legend.\n                        alignTo = merge(chart.spacingBox);\n                        if (legend.options.layout === 'vertical') {\n                            alignTo.y = chart.plotTop;\n                        }\n                        else {\n                            alignTo.y += rangeSelector.getHeight();\n                        }\n                        legend.group.placed = false; // Don't animate the alignment.\n                        legend.align(alignTo);\n                    }\n                }\n            };\n            if (rangeSelector) {\n                var events = find(chartDestroyEvents, function (e) { return e[0] === chart; });\n                if (!events) {\n                    chartDestroyEvents.push([chart, [\n                            // redraw the scroller on setExtremes\n                            addEvent(chart.xAxis[0], 'afterSetExtremes', function (e) {\n                                if (rangeSelector) {\n                                    rangeSelector.render(e.min, e.max);\n                                }\n                            }),\n                            // redraw the scroller chart resize\n                            addEvent(chart, 'redraw', redraw)\n                        ]]);\n                }\n                // do it now\n                redraw();\n            }\n        }\n        /**\n         * Remove resize/afterSetExtremes at chart destroy.\n         * @private\n         */\n        function onChartDestroy() {\n            for (var i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n                var events = chartDestroyEvents[i];\n                if (events[0] === this) {\n                    events[1].forEach(function (unbind) { return unbind(); });\n                    chartDestroyEvents.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        function onChartGetMargins() {\n            var rangeSelector = this.rangeSelector;\n            if (rangeSelector) {\n                var rangeSelectorHeight = rangeSelector.getHeight();\n                if (this.extraTopMargin) {\n                    this.plotTop += rangeSelectorHeight;\n                }\n                if (this.extraBottomMargin) {\n                    this.marginBottom += rangeSelectorHeight;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRender() {\n            var chart = this, rangeSelector = chart.rangeSelector;\n            if (rangeSelector && !rangeSelector.options.floating) {\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (verticalAlign === 'bottom') {\n                    this.extraBottomMargin = true;\n                }\n                else if (verticalAlign !== 'middle') {\n                    this.extraTopMargin = true;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartUpdate(e) {\n            var chart = this, options = e.options, optionsRangeSelector = options.rangeSelector, extraBottomMarginWas = this.extraBottomMargin, extraTopMarginWas = this.extraTopMargin;\n            var rangeSelector = chart.rangeSelector;\n            if (optionsRangeSelector &&\n                optionsRangeSelector.enabled &&\n                !defined(rangeSelector) &&\n                this.options.rangeSelector) {\n                this.options.rangeSelector.enabled = true;\n                this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n            }\n            this.extraBottomMargin = false;\n            this.extraTopMargin = false;\n            if (rangeSelector) {\n                onChartCallback(this);\n                var verticalAlign = (optionsRangeSelector &&\n                    optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n                if (this.extraBottomMargin !== extraBottomMarginWas ||\n                    this.extraTopMargin !== extraTopMarginWas) {\n                    this.isDirtyBox = true;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorComposition = {\n            compose: compose\n        };\n\n        return RangeSelectorComposition;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelector.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorComposition.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Axis, D, H, RangeSelectorComposition, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, createElement = U.createElement, css = U.css, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, discardElement = U.discardElement, extend = U.extend, fireEvent = U.fireEvent, isNumber = U.isNumber, merge = U.merge, objectEach = U.objectEach, pad = U.pad, pick = U.pick, pInt = U.pInt, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the preferred input type based on a date format string.\n         *\n         * @private\n         * @function preferredInputType\n         */\n        function preferredInputType(format) {\n            var ms = format.indexOf('%L') !== -1;\n            if (ms) {\n                return 'text';\n            }\n            var date = ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            var time = ['H', 'k', 'I', 'l', 'M', 'S']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            if (date && time) {\n                return 'datetime-local';\n            }\n            if (date) {\n                return 'date';\n            }\n            if (time) {\n                return 'time';\n            }\n            return 'text';\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The range selector.\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelector\n         * @param {Highcharts.Chart} chart\n         */\n        var RangeSelector = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function RangeSelector(chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.buttons = void 0;\n                this.buttonOptions = RangeSelector.prototype.defaultButtons;\n                this.initialButtonGroupWidth = 0;\n                this.options = void 0;\n                this.chart = chart;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            RangeSelector.compose = function (AxisClass, ChartClass) {\n                RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * The method to run when one of the buttons in the range selectors is\n             * clicked\n             *\n             * @private\n             * @function Highcharts.RangeSelector#clickButton\n             * @param {number} i\n             *        The index of the button\n             * @param {boolean} [redraw]\n             */\n            RangeSelector.prototype.clickButton = function (i, redraw) {\n                var rangeSelector = this, chart = rangeSelector.chart, rangeOptions = rangeSelector.buttonOptions[i], baseAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {}, type = rangeOptions.type, dataGrouping = rangeOptions.dataGrouping;\n                var dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, newMin, newMax = baseAxis && Math.round(Math.min(baseAxis.max, pick(dataMax, baseAxis.max))), // #1568\n                baseXAxisOptions, range = rangeOptions._range, rangeMin, minSetting, rangeSetting, ctx, ytdExtremes, addOffsetMin = true;\n                // chart has no data, base series is removed\n                if (dataMin === null || dataMax === null) {\n                    return;\n                }\n                // Set the fixed range before range is altered\n                chart.fixedRange = range;\n                rangeSelector.setSelected(i);\n                // Apply dataGrouping associated to button\n                if (dataGrouping) {\n                    this.forcedDataGrouping = true;\n                    Axis.prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n                    this.frozenStates = rangeOptions.preserveDataGrouping;\n                }\n                // Apply range\n                if (type === 'month' || type === 'year') {\n                    if (!baseAxis) {\n                        // This is set to the user options and picked up later when the\n                        // axis is instantiated so that we know the min and max.\n                        range = rangeOptions;\n                    }\n                    else {\n                        ctx = {\n                            range: rangeOptions,\n                            max: newMax,\n                            chart: chart,\n                            dataMin: dataMin,\n                            dataMax: dataMax\n                        };\n                        newMin = baseAxis.minFromRange.call(ctx);\n                        if (isNumber(ctx.newMax)) {\n                            newMax = ctx.newMax;\n                        }\n                        // #15799: offsetMin is added in minFromRange so that it works\n                        // with pre-selected buttons as well\n                        addOffsetMin = false;\n                    }\n                    // Fixed times like minutes, hours, days\n                }\n                else if (range) {\n                    newMin = Math.max(newMax - range, dataMin);\n                    newMax = Math.min(newMin + range, dataMax);\n                    addOffsetMin = false;\n                }\n                else if (type === 'ytd') {\n                    // On user clicks on the buttons, or a delayed action running from\n                    // the beforeRender event (below), the baseAxis is defined.\n                    if (baseAxis) {\n                        // When \"ytd\" is the pre-selected button for the initial view,\n                        // its calculation is delayed and rerun in the beforeRender\n                        // event (below). When the series are initialized, but before\n                        // the chart is rendered, we have access to the xData array\n                        // (#942).\n                        if (typeof dataMax === 'undefined' ||\n                            typeof dataMin === 'undefined') {\n                            dataMin = Number.MAX_VALUE;\n                            dataMax = Number.MIN_VALUE;\n                            chart.series.forEach(function (series) {\n                                // reassign it to the last item\n                                var xData = series.xData;\n                                if (xData) {\n                                    dataMin = Math.min(xData[0], dataMin);\n                                    dataMax = Math.max(xData[xData.length - 1], dataMax);\n                                }\n                            });\n                            redraw = false;\n                        }\n                        ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC);\n                        newMin = rangeMin = ytdExtremes.min;\n                        newMax = ytdExtremes.max;\n                        // \"ytd\" is pre-selected. We don't yet have access to processed\n                        // point and extremes data (things like pointStart and pointInterval\n                        // are missing), so we delay the process (#942)\n                    }\n                    else {\n                        rangeSelector.deferredYTDClick = i;\n                        return;\n                    }\n                }\n                else if (type === 'all' && baseAxis) {\n                    // If the navigator exist and the axis range is declared reset that\n                    // range and from now on only use the range set by a user, #14742.\n                    if (chart.navigator && chart.navigator.baseSeries[0]) {\n                        chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n                    }\n                    newMin = dataMin;\n                    newMax = dataMax;\n                }\n                if (addOffsetMin && rangeOptions._offsetMin && defined(newMin)) {\n                    newMin += rangeOptions._offsetMin;\n                }\n                if (rangeOptions._offsetMax && defined(newMax)) {\n                    newMax += rangeOptions._offsetMax;\n                }\n                if (this.dropdown) {\n                    this.dropdown.selectedIndex = i + 1;\n                }\n                // Update the chart\n                if (!baseAxis) {\n                    // Axis not yet instanciated. Temporarily set min and range\n                    // options and remove them on chart load (#4317).\n                    baseXAxisOptions = splat(chart.options.xAxis)[0];\n                    rangeSetting = baseXAxisOptions.range;\n                    baseXAxisOptions.range = range;\n                    minSetting = baseXAxisOptions.min;\n                    baseXAxisOptions.min = rangeMin;\n                    addEvent(chart, 'load', function resetMinAndRange() {\n                        baseXAxisOptions.range = rangeSetting;\n                        baseXAxisOptions.min = minSetting;\n                    });\n                }\n                else {\n                    // Existing axis object. Set extremes after render time.\n                    baseAxis.setExtremes(newMin, newMax, pick(redraw, true), void 0, // auto animation\n                    {\n                        trigger: 'rangeSelectorButton',\n                        rangeSelectorButton: rangeOptions\n                    });\n                }\n                fireEvent(this, 'afterBtnClick');\n            };\n            /**\n             * Set the selected option. This method only sets the internal flag, it\n             * doesn't update the buttons or the actual zoomed range.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setSelected\n             * @param {number} [selected]\n             */\n            RangeSelector.prototype.setSelected = function (selected) {\n                this.selected = this.options.selected = selected;\n            };\n            /**\n             * Initialize the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#init\n             * @param {Highcharts.Chart} chart\n             */\n            RangeSelector.prototype.init = function (chart) {\n                var rangeSelector = this, options = chart.options.rangeSelector, buttonOptions = (options.buttons || rangeSelector.defaultButtons.slice()), selectedOption = options.selected, blurInputs = function () {\n                    var minInput = rangeSelector.minInput, maxInput = rangeSelector.maxInput;\n                    // #3274 in some case blur is not defined\n                    if (minInput && !!minInput.blur) {\n                        fireEvent(minInput, 'blur');\n                    }\n                    if (maxInput && !!maxInput.blur) {\n                        fireEvent(maxInput, 'blur');\n                    }\n                };\n                rangeSelector.chart = chart;\n                rangeSelector.options = options;\n                rangeSelector.buttons = [];\n                rangeSelector.buttonOptions = buttonOptions;\n                this.eventsToUnbind = [];\n                this.eventsToUnbind.push(addEvent(chart.container, 'mousedown', blurInputs));\n                this.eventsToUnbind.push(addEvent(chart, 'resize', blurInputs));\n                // Extend the buttonOptions with actual range\n                buttonOptions.forEach(rangeSelector.computeButtonRange);\n                // zoomed range based on a pre-selected button index\n                if (typeof selectedOption !== 'undefined' &&\n                    buttonOptions[selectedOption]) {\n                    this.clickButton(selectedOption, false);\n                }\n                this.eventsToUnbind.push(addEvent(chart, 'load', function () {\n                    // If a data grouping is applied to the current button, release it\n                    // when extremes change\n                    if (chart.xAxis && chart.xAxis[0]) {\n                        addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                            if (this.max - this.min !==\n                                chart.fixedRange &&\n                                e.trigger !== 'rangeSelectorButton' &&\n                                e.trigger !== 'updatedData' &&\n                                rangeSelector.forcedDataGrouping &&\n                                !rangeSelector.frozenStates) {\n                                this.setDataGrouping(false, false);\n                            }\n                        });\n                    }\n                }));\n            };\n            /**\n             * Dynamically update the range selector buttons after a new range has been\n             * set\n             *\n             * @private\n             * @function Highcharts.RangeSelector#updateButtonStates\n             */\n            RangeSelector.prototype.updateButtonStates = function () {\n                var rangeSelector = this, chart = this.chart, dropdown = this.dropdown, baseAxis = chart.xAxis[0], actualRange = Math.round(baseAxis.max - baseAxis.min), hasNoData = !baseAxis.hasVisibleSeries, day = 24 * 36e5, // A single day in milliseconds\n                unionExtremes = (chart.scroller &&\n                    chart.scroller.getUnionExtremes()) || baseAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC), ytdMin = ytdExtremes.min, ytdMax = ytdExtremes.max, selected = rangeSelector.selected, allButtonsEnabled = rangeSelector.options.allButtonsEnabled, buttons = rangeSelector.buttons;\n                var selectedExists = isNumber(selected);\n                rangeSelector.buttonOptions.forEach(function (rangeOptions, i) {\n                    var range = rangeOptions._range, type = rangeOptions.type, count = rangeOptions.count || 1, button = buttons[i], offsetRange = rangeOptions._offsetMax -\n                        rangeOptions._offsetMin, isSelected = i === selected, \n                    // Disable buttons where the range exceeds what is allowed in\n                    // the current view\n                    isTooGreatRange = range >\n                        dataMax - dataMin, \n                    // Disable buttons where the range is smaller than the minimum\n                    // range\n                    isTooSmallRange = range < baseAxis.minRange;\n                    var state = 0, \n                    // Do not select the YTD button if not explicitly told so\n                    isYTDButNotSelected = false, \n                    // Disable the All button if we're already showing all\n                    isAllButAlreadyShowingAll = false, isSameRange = range === actualRange;\n                    // Months and years have a variable range so we check the extremes\n                    if ((type === 'month' || type === 'year') &&\n                        (actualRange + 36e5 >=\n                            { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                        (actualRange - 36e5 <=\n                            { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                        isSameRange = true;\n                    }\n                    else if (type === 'ytd') {\n                        isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                        isYTDButNotSelected = !isSelected;\n                    }\n                    else if (type === 'all') {\n                        isSameRange = (baseAxis.max - baseAxis.min >=\n                            dataMax - dataMin);\n                        isAllButAlreadyShowingAll = (!isSelected &&\n                            selectedExists &&\n                            isSameRange);\n                    }\n                    // The new zoom area happens to match the range for a button - mark\n                    // it selected. This happens when scrolling across an ordinal gap.\n                    // It can be seen in the intraday demos when selecting 1h and scroll\n                    // across the night gap.\n                    var disable = (!allButtonsEnabled &&\n                        (isTooGreatRange ||\n                            isTooSmallRange ||\n                            isAllButAlreadyShowingAll ||\n                            hasNoData));\n                    var select = ((isSelected && isSameRange) ||\n                        (isSameRange && !selectedExists && !isYTDButNotSelected) ||\n                        (isSelected && rangeSelector.frozenStates));\n                    if (disable) {\n                        state = 3;\n                    }\n                    else if (select) {\n                        selectedExists = true; // Only one button can be selected\n                        state = 2;\n                    }\n                    // If state has changed, update the button\n                    if (button.state !== state) {\n                        button.setState(state);\n                        if (dropdown) {\n                            dropdown.options[i + 1].disabled = disable;\n                            if (state === 2) {\n                                dropdown.selectedIndex = i + 1;\n                            }\n                        }\n                        // Reset (#9209)\n                        if (state === 0 && selected === i) {\n                            rangeSelector.setSelected();\n                        }\n                    }\n                });\n            };\n            /**\n             * Compute and cache the range for an individual button\n             *\n             * @private\n             * @function Highcharts.RangeSelector#computeButtonRange\n             * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n             */\n            RangeSelector.prototype.computeButtonRange = function (rangeOptions) {\n                var type = rangeOptions.type, count = rangeOptions.count || 1, \n                // these time intervals have a fixed number of milliseconds, as\n                // opposed to month, ytd and year\n                fixedTimes = {\n                    millisecond: 1,\n                    second: 1000,\n                    minute: 60 * 1000,\n                    hour: 3600 * 1000,\n                    day: 24 * 3600 * 1000,\n                    week: 7 * 24 * 3600 * 1000\n                };\n                // Store the range on the button object\n                if (fixedTimes[type]) {\n                    rangeOptions._range = fixedTimes[type] * count;\n                }\n                else if (type === 'month' || type === 'year') {\n                    rangeOptions._range = {\n                        month: 30,\n                        year: 365\n                    }[type] * 24 * 36e5 * count;\n                }\n                rangeOptions._offsetMin = pick(rangeOptions.offsetMin, 0);\n                rangeOptions._offsetMax = pick(rangeOptions.offsetMax, 0);\n                rangeOptions._range +=\n                    rangeOptions._offsetMax - rangeOptions._offsetMin;\n            };\n            /**\n             * Get the unix timestamp of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getInputValue\n             */\n            RangeSelector.prototype.getInputValue = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                var options = this.chart.options\n                    .rangeSelector;\n                var time = this.chart.time;\n                if (input) {\n                    return ((input.type === 'text' && options.inputDateParser) ||\n                        this.defaultInputDateParser)(input.value, time.useUTC, time);\n                }\n                return 0;\n            };\n            /**\n             * Set the internal and displayed value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputValue\n             */\n            RangeSelector.prototype.setInputValue = function (name, inputTime) {\n                var options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n                if (input) {\n                    var hcTimeAttr = input.getAttribute('data-hc-time');\n                    var updatedTime = defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n                    if (defined(inputTime)) {\n                        var previousTime = updatedTime;\n                        if (defined(previousTime)) {\n                            input.setAttribute('data-hc-time-previous', previousTime);\n                        }\n                        input.setAttribute('data-hc-time', inputTime);\n                        updatedTime = inputTime;\n                    }\n                    input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                        options.inputEditDateFormat), updatedTime);\n                    if (dateBox) {\n                        dateBox.attr({\n                            text: time.dateFormat(options.inputDateFormat, updatedTime)\n                        });\n                    }\n                }\n            };\n            /**\n             * Set the min and max value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputExtremes\n             */\n            RangeSelector.prototype.setInputExtremes = function (name, min, max) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    var format = this.inputTypeFormats[input.type];\n                    var time = this.chart.time;\n                    if (format) {\n                        var newMin = time.dateFormat(format, min);\n                        if (input.min !== newMin) {\n                            input.min = newMin;\n                        }\n                        var newMax = time.dateFormat(format, max);\n                        if (input.max !== newMax) {\n                            input.max = newMax;\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#showInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.showInput = function (name) {\n                var dateBox = name === 'min' ? this.minDateBox : this.maxDateBox, input = name === 'min' ? this.minInput : this.maxInput;\n                if (input && dateBox && this.inputGroup) {\n                    var isTextInput = input.type === 'text', _a = this.inputGroup, _b = _a.translateX, translateX = _b === void 0 ? 0 : _b, _c = _a.translateY, translateY = _c === void 0 ? 0 : _c, _d = dateBox.x, x = _d === void 0 ? 0 : _d, _e = dateBox.width, width = _e === void 0 ? 0 : _e, _f = dateBox.height, height = _f === void 0 ? 0 : _f, inputBoxWidth = this.options.inputBoxWidth;\n                    css(input, {\n                        width: isTextInput ?\n                            ((width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                            'auto',\n                        height: (height - 2) + 'px',\n                        border: '2px solid silver'\n                    });\n                    if (isTextInput && inputBoxWidth) {\n                        css(input, {\n                            left: (translateX + x) + 'px',\n                            top: translateY + 'px'\n                        });\n                        // Inputs of types date, time or datetime-local should be centered\n                        // on top of the dateBox\n                    }\n                    else {\n                        css(input, {\n                            left: Math.min(Math.round(x +\n                                translateX -\n                                (input.offsetWidth - width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                            top: (translateY - (input.offsetHeight - height) / 2) + 'px'\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.hideInput = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    css(input, {\n                        top: '-9999em',\n                        border: 0,\n                        width: '1px',\n                        height: '1px'\n                    });\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#defaultInputDateParser\n             */\n            RangeSelector.prototype.defaultInputDateParser = function (inputDate, useUTC, time) {\n                var hasTimezone = function (str) {\n                    return str.length > 6 &&\n                        (str.lastIndexOf('-') === str.length - 6 ||\n                            str.lastIndexOf('+') === str.length - 6);\n                };\n                var input = inputDate.split('/').join('-').split(' ').join('T');\n                if (input.indexOf('T') === -1) {\n                    input += 'T00:00';\n                }\n                if (useUTC) {\n                    input += 'Z';\n                }\n                else if (H.isSafari && !hasTimezone(input)) {\n                    var offset = new Date(input).getTimezoneOffset() / 60;\n                    input += offset <= 0 ? \"+\".concat(pad(-offset), \":00\") : \"-\".concat(pad(offset), \":00\");\n                }\n                var date = Date.parse(input);\n                // If the value isn't parsed directly to a value by the\n                // browser's Date.parse method, try\n                // parsing it a different way\n                if (!isNumber(date)) {\n                    var parts = inputDate.split('-');\n                    date = Date.UTC(pInt(parts[0]), pInt(parts[1]) - 1, pInt(parts[2]));\n                }\n                if (time && useUTC && isNumber(date)) {\n                    date += time.getTimezoneOffset(date);\n                }\n                return date;\n            };\n            /**\n             * Draw either the 'from' or the 'to' HTML input box of the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#drawInput\n             */\n            RangeSelector.prototype.drawInput = function (name) {\n                var _a = this, chart = _a.chart, div = _a.div, inputGroup = _a.inputGroup;\n                var rangeSelector = this, chartStyle = chart.renderer.style || {}, renderer = chart.renderer, options = chart.options.rangeSelector, lang = defaultOptions.lang, isMin = name === 'min';\n                /**\n                 * @private\n                 */\n                function updateExtremes() {\n                    var maxInput = rangeSelector.maxInput, minInput = rangeSelector.minInput, chartAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chartAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax;\n                    var value = rangeSelector.getInputValue(name);\n                    if (value !== Number(input.getAttribute('data-hc-time-previous')) &&\n                        isNumber(value)) {\n                        input.setAttribute('data-hc-time-previous', value);\n                        // Validate the extremes. If it goes beyound the data min or\n                        // max, use the actual data extreme (#2438).\n                        if (isMin && maxInput && isNumber(dataMin)) {\n                            if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value < dataMin) {\n                                value = dataMin;\n                            }\n                        }\n                        else if (minInput && isNumber(dataMax)) {\n                            if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value > dataMax) {\n                                value = dataMax;\n                            }\n                        }\n                        // Set the extremes\n                        if (typeof value !== 'undefined') { // @todo typof undefined\n                            chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                        }\n                    }\n                }\n                // Create the text label\n                var text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n                var label = renderer\n                    .label(text, 0)\n                    .addClass('highcharts-range-label')\n                    .attr({\n                    padding: text ? 2 : 0,\n                    height: text ? options.inputBoxHeight : 0\n                })\n                    .add(inputGroup);\n                // Create an SVG label that shows updated date ranges and and records\n                // click events that bring in the HTML input.\n                var dateBox = renderer\n                    .label('', 0)\n                    .addClass('highcharts-range-input')\n                    .attr({\n                    padding: 2,\n                    width: options.inputBoxWidth,\n                    height: options.inputBoxHeight,\n                    'text-align': 'center'\n                })\n                    .on('click', function () {\n                    // If it is already focused, the onfocus event doesn't fire\n                    // (#3713)\n                    rangeSelector.showInput(name);\n                    rangeSelector[name + 'Input'].focus();\n                });\n                if (!chart.styledMode) {\n                    dateBox.attr({\n                        stroke: options.inputBoxBorderColor,\n                        'stroke-width': 1\n                    });\n                }\n                dateBox.add(inputGroup);\n                // Create the HTML input element. This is rendered as 1x1 pixel then set\n                // to the right size when focused.\n                var input = createElement('input', {\n                    name: name,\n                    className: 'highcharts-range-selector'\n                }, void 0, div);\n                // #14788: Setting input.type to an unsupported type throws in IE, so\n                // we need to use setAttribute instead\n                input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n                if (!chart.styledMode) {\n                    // Styles\n                    label.css(merge(chartStyle, options.labelStyle));\n                    dateBox.css(merge({\n                        color: \"#333333\" /* Palette.neutralColor80 */\n                    }, chartStyle, options.inputStyle));\n                    css(input, extend({\n                        position: 'absolute',\n                        border: 0,\n                        boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                        width: '1px',\n                        height: '1px',\n                        padding: 0,\n                        textAlign: 'center',\n                        fontSize: chartStyle.fontSize,\n                        fontFamily: chartStyle.fontFamily,\n                        top: '-9999em' // #4798\n                    }, options.inputStyle));\n                }\n                // Blow up the input box\n                input.onfocus = function () {\n                    rangeSelector.showInput(name);\n                };\n                // Hide away the input box\n                input.onblur = function () {\n                    // update extermes only when inputs are active\n                    if (input === H.doc.activeElement) { // Only when focused\n                        // Update also when no `change` event is triggered, like when\n                        // clicking inside the SVG (#4710)\n                        updateExtremes();\n                    }\n                    // #10404 - move hide and blur outside focus\n                    rangeSelector.hideInput(name);\n                    rangeSelector.setInputValue(name);\n                    input.blur(); // #4606\n                };\n                var keyDown = false;\n                // handle changes in the input boxes\n                input.onchange = function () {\n                    // Update extremes and blur input when clicking date input calendar\n                    if (!keyDown) {\n                        updateExtremes();\n                        rangeSelector.hideInput(name);\n                        input.blur();\n                    }\n                };\n                input.onkeypress = function (event) {\n                    // IE does not fire onchange on enter\n                    if (event.keyCode === 13) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeydown = function (event) {\n                    keyDown = true;\n                    // Arrow keys\n                    if (event.keyCode === 38 || event.keyCode === 40) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeyup = function () {\n                    keyDown = false;\n                };\n                return { dateBox: dateBox, input: input, label: label };\n            };\n            /**\n             * Get the position of the range selector buttons and inputs. This can be\n             * overridden from outside for custom positioning.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getPosition\n             */\n            RangeSelector.prototype.getPosition = function () {\n                var chart = this.chart, options = chart.options.rangeSelector, top = options.verticalAlign === 'top' ?\n                    chart.plotTop - chart.axisOffset[0] :\n                    0; // set offset only for varticalAlign top\n                return {\n                    buttonTop: top + options.buttonPosition.y,\n                    inputTop: top + options.inputPosition.y - 10\n                };\n            };\n            /**\n             * Get the extremes of YTD. Will choose dataMax if its value is lower than\n             * the current timestamp. Will choose dataMin if its value is higher than\n             * the timestamp for the start of current year.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getYTDExtremes\n             * @return {*}\n             * Returns min and max for the YTD\n             */\n            RangeSelector.prototype.getYTDExtremes = function (dataMax, dataMin, useUTC) {\n                var time = this.chart.time, now = new time.Date(dataMax), year = time.get('FullYear', now), startOfYear = useUTC ?\n                    time.Date.UTC(year, 0, 1) : // eslint-disable-line new-cap\n                    +new time.Date(year, 0, 1), min = Math.max(dataMin, startOfYear), ts = now.getTime();\n                return {\n                    max: Math.min(dataMax || ts, ts),\n                    min: min\n                };\n            };\n            /**\n             * Render the range selector including the buttons and the inputs. The first\n             * time render is called, the elements are created and positioned. On\n             * subsequent calls, they are moved and updated.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#render\n             * @param {number} [min]\n             *        X axis minimum\n             * @param {number} [max]\n             *        X axis maximum\n             */\n            RangeSelector.prototype.render = function (min, max) {\n                var chart = this.chart, renderer = chart.renderer, container = chart.container, chartOptions = chart.options, options = chartOptions.rangeSelector, \n                // Place inputs above the container\n                inputsZIndex = pick(chartOptions.chart.style &&\n                    chartOptions.chart.style.zIndex, 0) + 1, inputEnabled = options.inputEnabled, rendered = this.rendered;\n                if (options.enabled === false) {\n                    return;\n                }\n                // create the elements\n                if (!rendered) {\n                    this.group = renderer.g('range-selector-group')\n                        .attr({\n                        zIndex: 7\n                    })\n                        .add();\n                    this.div = createElement('div', void 0, {\n                        position: 'relative',\n                        height: 0,\n                        zIndex: inputsZIndex\n                    });\n                    if (this.buttonOptions.length) {\n                        this.renderButtons();\n                    }\n                    // First create a wrapper outside the container in order to make\n                    // the inputs work and make export correct\n                    if (container.parentNode) {\n                        container.parentNode.insertBefore(this.div, container);\n                    }\n                    if (inputEnabled) {\n                        // Create the group to keep the inputs\n                        this.inputGroup = renderer.g('input-group').add(this.group);\n                        var minElems = this.drawInput('min');\n                        this.minDateBox = minElems.dateBox;\n                        this.minLabel = minElems.label;\n                        this.minInput = minElems.input;\n                        var maxElems = this.drawInput('max');\n                        this.maxDateBox = maxElems.dateBox;\n                        this.maxLabel = maxElems.label;\n                        this.maxInput = maxElems.input;\n                    }\n                }\n                if (inputEnabled) {\n                    // Set or reset the input values\n                    this.setInputValue('min', min);\n                    this.setInputValue('max', max);\n                    var unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n                    if (defined(unionExtremes.dataMin) &&\n                        defined(unionExtremes.dataMax)) {\n                        var minRange = chart.xAxis[0].minRange || 0;\n                        this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                        this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n                    }\n                    // Reflow\n                    if (this.inputGroup) {\n                        var x_1 = 0;\n                        [\n                            this.minLabel,\n                            this.minDateBox,\n                            this.maxLabel,\n                            this.maxDateBox\n                        ].forEach(function (label) {\n                            if (label) {\n                                var width = label.getBBox().width;\n                                if (width) {\n                                    label.attr({ x: x_1 });\n                                    x_1 += width + options.inputSpacing;\n                                }\n                            }\n                        });\n                    }\n                }\n                this.alignElements();\n                this.rendered = true;\n            };\n            /**\n             * Render the range buttons. This only runs the first time, later the\n             * positioning is laid out in alignElements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#renderButtons\n             */\n            RangeSelector.prototype.renderButtons = function () {\n                var _this = this;\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options;\n                var lang = defaultOptions.lang;\n                var renderer = chart.renderer;\n                var buttonTheme = merge(options.buttonTheme);\n                var states = buttonTheme && buttonTheme.states;\n                // Prevent the button from resetting the width when the button state\n                // changes since we need more control over the width when collapsing\n                // the buttons\n                var width = buttonTheme.width || 28;\n                delete buttonTheme.width;\n                delete buttonTheme.states;\n                this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n                var dropdown = this.dropdown = createElement('select', void 0, {\n                    position: 'absolute',\n                    width: '1px',\n                    height: '1px',\n                    padding: 0,\n                    border: 0,\n                    top: '-9999em',\n                    cursor: 'pointer',\n                    opacity: 0.0001\n                }, this.div);\n                // Prevent page zoom on iPhone\n                addEvent(dropdown, 'touchstart', function () {\n                    dropdown.style.fontSize = '16px';\n                });\n                // Forward events from select to button\n                [\n                    [H.isMS ? 'mouseover' : 'mouseenter'],\n                    [H.isMS ? 'mouseout' : 'mouseleave'],\n                    ['change', 'click']\n                ].forEach(function (_a) {\n                    var from = _a[0], to = _a[1];\n                    addEvent(dropdown, from, function () {\n                        var button = buttons[_this.currentButtonIndex()];\n                        if (button) {\n                            fireEvent(button.element, to || from);\n                        }\n                    });\n                });\n                this.zoomText = renderer\n                    .label((lang && lang.rangeSelectorZoom) || '', 0)\n                    .attr({\n                    padding: options.buttonTheme.padding,\n                    height: options.buttonTheme.height,\n                    paddingLeft: 0,\n                    paddingRight: 0\n                })\n                    .add(this.buttonGroup);\n                if (!this.chart.styledMode) {\n                    this.zoomText.css(options.labelStyle);\n                    buttonTheme['stroke-width'] = pick(buttonTheme['stroke-width'], 0);\n                }\n                createElement('option', {\n                    textContent: this.zoomText.textStr,\n                    disabled: true\n                }, void 0, dropdown);\n                this.buttonOptions.forEach(function (rangeOptions, i) {\n                    createElement('option', {\n                        textContent: rangeOptions.title || rangeOptions.text\n                    }, void 0, dropdown);\n                    buttons[i] = renderer\n                        .button(rangeOptions.text, 0, 0, function (e) {\n                        // extract events from button object and call\n                        var buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n                        var callDefaultEvent;\n                        if (buttonEvents) {\n                            callDefaultEvent =\n                                buttonEvents.call(rangeOptions, e);\n                        }\n                        if (callDefaultEvent !== false) {\n                            _this.clickButton(i);\n                        }\n                        _this.isActive = true;\n                    }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n                        .attr({\n                        'text-align': 'center',\n                        width: width\n                    })\n                        .add(_this.buttonGroup);\n                    if (rangeOptions.title) {\n                        buttons[i].attr('title', rangeOptions.title);\n                    }\n                });\n            };\n            /**\n             * Align the elements horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignElements\n             */\n            RangeSelector.prototype.alignElements = function () {\n                var _this = this;\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, group = _a.group, inputGroup = _a.inputGroup, options = _a.options, zoomText = _a.zoomText;\n                var chartOptions = chart.options;\n                var navButtonOptions = (chartOptions.exporting &&\n                    chartOptions.exporting.enabled !== false &&\n                    chartOptions.navigation &&\n                    chartOptions.navigation.buttonOptions);\n                var buttonPosition = options.buttonPosition, inputPosition = options.inputPosition, verticalAlign = options.verticalAlign;\n                // Get the X offset required to avoid overlapping with the exporting\n                // button. This is is used both by the buttonGroup and the inputGroup.\n                var getXOffsetForExportButton = function (group, position) {\n                    if (navButtonOptions &&\n                        _this.titleCollision(chart) &&\n                        verticalAlign === 'top' &&\n                        position.align === 'right' && ((position.y -\n                        group.getBBox().height - 12) <\n                        ((navButtonOptions.y || 0) +\n                            (navButtonOptions.height || 0) +\n                            chart.spacing[0]))) {\n                        return -40;\n                    }\n                    return 0;\n                };\n                var plotLeft = chart.plotLeft;\n                if (group && buttonPosition && inputPosition) {\n                    var translateX = buttonPosition.x - chart.spacing[3];\n                    if (buttonGroup) {\n                        this.positionButtons();\n                        if (!this.initialButtonGroupWidth) {\n                            var width_1 = 0;\n                            if (zoomText) {\n                                width_1 += zoomText.getBBox().width + 5;\n                            }\n                            buttons.forEach(function (button, i) {\n                                width_1 += button.width || 0;\n                                if (i !== buttons.length - 1) {\n                                    width_1 += options.buttonSpacing;\n                                }\n                            });\n                            this.initialButtonGroupWidth = width_1;\n                        }\n                        plotLeft -= chart.spacing[3];\n                        this.updateButtonStates();\n                        // Detect collision between button group and exporting\n                        var xOffsetForExportButton_1 = getXOffsetForExportButton(buttonGroup, buttonPosition);\n                        this.alignButtonGroup(xOffsetForExportButton_1);\n                        // Skip animation\n                        group.placed = buttonGroup.placed = chart.hasLoaded;\n                    }\n                    var xOffsetForExportButton = 0;\n                    if (inputGroup) {\n                        // Detect collision between the input group and exporting button\n                        xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition);\n                        if (inputPosition.align === 'left') {\n                            translateX = plotLeft;\n                        }\n                        else if (inputPosition.align === 'right') {\n                            translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                        }\n                        // Update the alignment to the updated spacing box\n                        inputGroup.align({\n                            y: inputPosition.y,\n                            width: inputGroup.getBBox().width,\n                            align: inputPosition.align,\n                            // fix wrong getBBox() value on right align\n                            x: inputPosition.x + translateX - 2\n                        }, true, chart.spacingBox);\n                        // Skip animation\n                        inputGroup.placed = chart.hasLoaded;\n                    }\n                    this.handleCollision(xOffsetForExportButton);\n                    // Vertical align\n                    group.align({\n                        verticalAlign: verticalAlign\n                    }, true, chart.spacingBox);\n                    var alignTranslateY = group.alignAttr.translateY;\n                    // Set position\n                    var groupHeight = group.getBBox().height + 20; // # 20 padding\n                    var translateY = 0;\n                    // Calculate bottom position\n                    if (verticalAlign === 'bottom') {\n                        var legendOptions = chart.legend && chart.legend.options;\n                        var legendHeight = (legendOptions &&\n                            legendOptions.verticalAlign === 'bottom' &&\n                            legendOptions.enabled &&\n                            !legendOptions.floating ?\n                            (chart.legend.legendHeight +\n                                pick(legendOptions.margin, 10)) :\n                            0);\n                        groupHeight = groupHeight + legendHeight - 20;\n                        translateY = (alignTranslateY -\n                            groupHeight -\n                            (options.floating ? 0 : options.y) -\n                            (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                            10 // 10 spacing\n                        );\n                    }\n                    if (verticalAlign === 'top') {\n                        if (options.floating) {\n                            translateY = 0;\n                        }\n                        if (chart.titleOffset && chart.titleOffset[0]) {\n                            translateY = chart.titleOffset[0];\n                        }\n                        translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n                    }\n                    else if (verticalAlign === 'middle') {\n                        if (inputPosition.y === buttonPosition.y) {\n                            translateY = alignTranslateY;\n                        }\n                        else if (inputPosition.y || buttonPosition.y) {\n                            if (inputPosition.y < 0 ||\n                                buttonPosition.y < 0) {\n                                translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                            }\n                            else {\n                                translateY = alignTranslateY - groupHeight;\n                            }\n                        }\n                    }\n                    group.translate(options.x, options.y + Math.floor(translateY));\n                    // Translate HTML inputs\n                    var _b = this, minInput = _b.minInput, maxInput = _b.maxInput, dropdown = _b.dropdown;\n                    if (options.inputEnabled && minInput && maxInput) {\n                        minInput.style.marginTop = group.translateY + 'px';\n                        maxInput.style.marginTop = group.translateY + 'px';\n                    }\n                    if (dropdown) {\n                        dropdown.style.marginTop = group.translateY + 'px';\n                    }\n                }\n            };\n            /**\n             * Align the button group horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignButtonGroup\n             * @param {number} xOffsetForExportButton\n             * @param {number} [width]\n             */\n            RangeSelector.prototype.alignButtonGroup = function (xOffsetForExportButton, width) {\n                var _a = this, chart = _a.chart, options = _a.options, buttonGroup = _a.buttonGroup, buttons = _a.buttons;\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft - chart.spacing[3];\n                var translateX = buttonPosition.x - chart.spacing[3];\n                if (buttonPosition.align === 'right') {\n                    translateX += xOffsetForExportButton - plotLeft; // #13014\n                }\n                else if (buttonPosition.align === 'center') {\n                    translateX -= plotLeft / 2;\n                }\n                if (buttonGroup) {\n                    // Align button group\n                    buttonGroup.align({\n                        y: buttonPosition.y,\n                        width: pick(width, this.initialButtonGroupWidth),\n                        align: buttonPosition.align,\n                        x: translateX\n                    }, true, chart.spacingBox);\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#positionButtons\n             */\n            RangeSelector.prototype.positionButtons = function () {\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options, zoomText = _a.zoomText;\n                var verb = chart.hasLoaded ? 'animate' : 'attr';\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft;\n                var buttonLeft = plotLeft;\n                if (zoomText && zoomText.visibility !== 'hidden') {\n                    // #8769, allow dynamically updating margins\n                    zoomText[verb]({\n                        x: pick(plotLeft + buttonPosition.x, plotLeft)\n                    });\n                    // Button start position\n                    buttonLeft += buttonPosition.x +\n                        zoomText.getBBox().width + 5;\n                }\n                for (var i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n                    if (buttons[i].visibility !== 'hidden') {\n                        buttons[i][verb]({ x: buttonLeft });\n                        // Increase the button position for the next button\n                        buttonLeft += (buttons[i].width || 0) + options.buttonSpacing;\n                    }\n                    else {\n                        buttons[i][verb]({ x: plotLeft });\n                    }\n                }\n            };\n            /**\n             * Handle collision between the button group and the input group\n             *\n             * @private\n             * @function Highcharts.RangeSelector#handleCollision\n             *\n             * @param  {number} xOffsetForExportButton\n             *                  The X offset of the group required to make room for the\n             *                  exporting button\n             */\n            RangeSelector.prototype.handleCollision = function (xOffsetForExportButton) {\n                var _this = this;\n                var _a = this, chart = _a.chart, buttonGroup = _a.buttonGroup, inputGroup = _a.inputGroup;\n                var _b = this.options, buttonPosition = _b.buttonPosition, dropdown = _b.dropdown, inputPosition = _b.inputPosition;\n                var maxButtonWidth = function () {\n                    var buttonWidth = 0;\n                    _this.buttons.forEach(function (button) {\n                        var bBox = button.getBBox();\n                        if (bBox.width > buttonWidth) {\n                            buttonWidth = bBox.width;\n                        }\n                    });\n                    return buttonWidth;\n                };\n                var groupsOverlap = function (buttonGroupWidth) {\n                    if (inputGroup && buttonGroup) {\n                        var inputGroupX = (inputGroup.alignAttr.translateX +\n                            inputGroup.alignOptions.x -\n                            xOffsetForExportButton +\n                            // getBBox for detecing left margin\n                            inputGroup.getBBox().x +\n                            // 2px padding to not overlap input and label\n                            2);\n                        var inputGroupWidth = inputGroup.alignOptions.width;\n                        var buttonGroupX = buttonGroup.alignAttr.translateX +\n                            buttonGroup.getBBox().x;\n                        return (buttonGroupX + buttonGroupWidth > inputGroupX) &&\n                            (inputGroupX + inputGroupWidth > buttonGroupX) &&\n                            (buttonPosition.y <\n                                (inputPosition.y +\n                                    inputGroup.getBBox().height));\n                    }\n                    return false;\n                };\n                var moveInputsDown = function () {\n                    if (inputGroup && buttonGroup) {\n                        inputGroup.attr({\n                            translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                                0 :\n                                -xOffsetForExportButton),\n                            translateY: inputGroup.alignAttr.translateY +\n                                buttonGroup.getBBox().height + 10\n                        });\n                    }\n                };\n                if (buttonGroup) {\n                    if (dropdown === 'always') {\n                        this.collapseButtons(xOffsetForExportButton);\n                        if (groupsOverlap(maxButtonWidth())) {\n                            // Move the inputs down if there is still a collision\n                            // after collapsing the buttons\n                            moveInputsDown();\n                        }\n                        return;\n                    }\n                    if (dropdown === 'never') {\n                        this.expandButtons();\n                    }\n                }\n                // Detect collision\n                if (inputGroup && buttonGroup) {\n                    if ((inputPosition.align === buttonPosition.align) ||\n                        // 20 is minimal spacing between elements\n                        groupsOverlap(this.initialButtonGroupWidth + 20)) {\n                        if (dropdown === 'responsive') {\n                            this.collapseButtons(xOffsetForExportButton);\n                            if (groupsOverlap(maxButtonWidth())) {\n                                moveInputsDown();\n                            }\n                        }\n                        else {\n                            moveInputsDown();\n                        }\n                    }\n                    else if (dropdown === 'responsive') {\n                        this.expandButtons();\n                    }\n                }\n                else if (buttonGroup && dropdown === 'responsive') {\n                    if (this.initialButtonGroupWidth > chart.plotWidth) {\n                        this.collapseButtons(xOffsetForExportButton);\n                    }\n                    else {\n                        this.expandButtons();\n                    }\n                }\n            };\n            /**\n             * Collapse the buttons and put the select element on top.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#collapseButtons\n             * @param {number} xOffsetForExportButton\n             */\n            RangeSelector.prototype.collapseButtons = function (xOffsetForExportButton) {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, chart = _a.chart, dropdown = _a.dropdown, options = _a.options, zoomText = _a.zoomText;\n                var userButtonTheme = (chart.userOptions.rangeSelector &&\n                    chart.userOptions.rangeSelector.buttonTheme) || {};\n                var getAttribs = function (text) { return ({\n                    text: text ? \"\".concat(text, \" \\u25BE\") : 'â–¾',\n                    width: 'auto',\n                    paddingLeft: pick(options.buttonTheme.paddingLeft, userButtonTheme.padding, 8),\n                    paddingRight: pick(options.buttonTheme.paddingRight, userButtonTheme.padding, 8)\n                }); };\n                if (zoomText) {\n                    zoomText.hide();\n                }\n                var hasActiveButton = false;\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    if (button.state !== 2) {\n                        button.hide();\n                    }\n                    else {\n                        button.show();\n                        button.attr(getAttribs(rangeOptions.text));\n                        hasActiveButton = true;\n                    }\n                });\n                if (!hasActiveButton) {\n                    if (dropdown) {\n                        dropdown.selectedIndex = 0;\n                    }\n                    buttons[0].show();\n                    buttons[0].attr(getAttribs(this.zoomText && this.zoomText.textStr));\n                }\n                var align = options.buttonPosition.align;\n                this.positionButtons();\n                if (align === 'right' || align === 'center') {\n                    this.alignButtonGroup(xOffsetForExportButton, buttons[this.currentButtonIndex()].getBBox().width);\n                }\n                this.showDropdown();\n            };\n            /**\n             * Show all the buttons and hide the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#expandButtons\n             */\n            RangeSelector.prototype.expandButtons = function () {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, options = _a.options, zoomText = _a.zoomText;\n                this.hideDropdown();\n                if (zoomText) {\n                    zoomText.show();\n                }\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    button.show();\n                    button.attr({\n                        text: rangeOptions.text,\n                        width: options.buttonTheme.width || 28,\n                        paddingLeft: pick(options.buttonTheme.paddingLeft, 'unset'),\n                        paddingRight: pick(options.buttonTheme.paddingRight, 'unset')\n                    });\n                    if (button.state < 2) {\n                        button.setState(0);\n                    }\n                });\n                this.positionButtons();\n            };\n            /**\n             * Get the index of the visible button when the buttons are collapsed.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#currentButtonIndex\n             */\n            RangeSelector.prototype.currentButtonIndex = function () {\n                var dropdown = this.dropdown;\n                if (dropdown && dropdown.selectedIndex > 0) {\n                    return dropdown.selectedIndex - 1;\n                }\n                return 0;\n            };\n            /**\n             * Position the select element on top of the button.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#showDropdown\n             */\n            RangeSelector.prototype.showDropdown = function () {\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, dropdown = _a.dropdown;\n                if (buttonGroup && dropdown) {\n                    var _b = buttonGroup.translateX, translateX = _b === void 0 ? 0 : _b, _c = buttonGroup.translateY, translateY = _c === void 0 ? 0 : _c, bBox = buttons[this.currentButtonIndex()].getBBox();\n                    css(dropdown, {\n                        left: (chart.plotLeft + translateX) + 'px',\n                        top: (translateY + 0.5) + 'px',\n                        width: bBox.width + 'px',\n                        height: bBox.height + 'px'\n                    });\n                    this.hasVisibleDropdown = true;\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideDropdown\n             */\n            RangeSelector.prototype.hideDropdown = function () {\n                var dropdown = this.dropdown;\n                if (dropdown) {\n                    css(dropdown, {\n                        top: '-9999em',\n                        width: '1px',\n                        height: '1px'\n                    });\n                    this.hasVisibleDropdown = false;\n                }\n            };\n            /**\n             * Extracts height of range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getHeight\n             * @return {number}\n             * Returns rangeSelector height\n             */\n            RangeSelector.prototype.getHeight = function () {\n                var rangeSelector = this, options = rangeSelector.options, rangeSelectorGroup = rangeSelector.group, inputPosition = options.inputPosition, buttonPosition = options.buttonPosition, yPosition = options.y, buttonPositionY = buttonPosition.y, inputPositionY = inputPosition.y;\n                var rangeSelectorHeight = 0;\n                if (options.height) {\n                    return options.height;\n                }\n                // Align the elements before we read the height in case we're switching\n                // between wrapped and non-wrapped layout\n                this.alignElements();\n                rangeSelectorHeight = rangeSelectorGroup ?\n                    // 13px to keep back compatibility\n                    (rangeSelectorGroup.getBBox(true).height) + 13 +\n                        yPosition :\n                    0;\n                var minPosition = Math.min(inputPositionY, buttonPositionY);\n                if ((inputPositionY < 0 && buttonPositionY < 0) ||\n                    (inputPositionY > 0 && buttonPositionY > 0)) {\n                    rangeSelectorHeight += Math.abs(minPosition);\n                }\n                return rangeSelectorHeight;\n            };\n            /**\n             * Detect collision with title or subtitle\n             *\n             * @private\n             * @function Highcharts.RangeSelector#titleCollision\n             * @return {boolean}\n             * Returns collision status\n             */\n            RangeSelector.prototype.titleCollision = function (chart) {\n                return !(chart.options.title.text ||\n                    chart.options.subtitle.text);\n            };\n            /**\n             * Update the range selector with new options\n             *\n             * @private\n             * @function Highcharts.RangeSelector#update\n             * @param {Highcharts.RangeSelectorOptions} options\n             */\n            RangeSelector.prototype.update = function (options) {\n                var chart = this.chart;\n                merge(true, chart.options.rangeSelector, options);\n                this.destroy();\n                this.init(chart);\n                this.render();\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#destroy\n             */\n            RangeSelector.prototype.destroy = function () {\n                var rSelector = this, minInput = rSelector.minInput, maxInput = rSelector.maxInput;\n                if (rSelector.eventsToUnbind) {\n                    rSelector.eventsToUnbind.forEach(function (unbind) { return unbind(); });\n                    rSelector.eventsToUnbind = void 0;\n                }\n                // Destroy elements in collections\n                destroyObjectProperties(rSelector.buttons);\n                // Clear input element events\n                if (minInput) {\n                    minInput.onfocus = minInput.onblur = minInput.onchange = null;\n                }\n                if (maxInput) {\n                    maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n                }\n                // Destroy HTML and SVG elements\n                objectEach(rSelector, function (val, key) {\n                    if (val && key !== 'chart') {\n                        if (val instanceof SVGElement) {\n                            // SVGElement\n                            val.destroy();\n                        }\n                        else if (val instanceof window.HTMLElement) {\n                            // HTML element\n                            discardElement(val);\n                        }\n                    }\n                    if (val !== RangeSelector.prototype[key]) {\n                        rSelector[key] = null;\n                    }\n                }, this);\n            };\n            return RangeSelector;\n        }());\n        extend(RangeSelector.prototype, {\n            /**\n             * The default buttons for pre-selecting time frames.\n             * @private\n             */\n            defaultButtons: [{\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n            /**\n             * The date formats to use when setting min, max and value on date inputs.\n             * @private\n             */\n            inputTypeFormats: {\n                'datetime-local': '%Y-%m-%dT%H:%M:%S',\n                'date': '%Y-%m-%d',\n                'time': '%H:%M:%S'\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Define the time span for the button\n         *\n         * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n         */\n        /**\n         * Callback function to react on button clicks.\n         *\n         * @callback Highcharts.RangeSelectorClickCallbackFunction\n         *\n         * @param {global.Event} e\n         *        Event arguments.\n         *\n         * @param {boolean|undefined}\n         *        Return false to cancel the default button event.\n         */\n        /**\n         * Callback function to parse values entered in the input boxes and return a\n         * valid JavaScript time as milliseconds since 1970.\n         *\n         * @callback Highcharts.RangeSelectorParseCallbackFunction\n         *\n         * @param {string} value\n         *        Input value to parse.\n         *\n         * @return {number}\n         *         Parsed JavaScript time value.\n         */\n        (''); // keeps doclets above in JS file\n\n        return RangeSelector;\n    });\n    _registerModule(_modules, 'Extensions/StaticScale.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016-2021 Torstein Honsi, Lars Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, defined = U.defined, isNumber = U.isNumber, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /** @private */\n        function compose(AxisClass, ChartClass) {\n            if (pushUnique(composedMembers, AxisClass)) {\n                addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n            }\n            if (pushUnique(composedMembers, ChartClass)) {\n                var chartProto = ChartClass.prototype;\n                chartProto.adjustHeight = chartAdjustHeight;\n                addEvent(ChartClass, 'render', chartProto.adjustHeight);\n            }\n        }\n        /** @private */\n        function onAxisAfterSetOptions() {\n            var chartOptions = this.chart.options.chart;\n            if (!this.horiz &&\n                isNumber(this.options.staticScale) &&\n                (!chartOptions.height ||\n                    (chartOptions.scrollablePlotArea &&\n                        chartOptions.scrollablePlotArea.minHeight))) {\n                this.staticScale = this.options.staticScale;\n            }\n        }\n        /** @private */\n        function chartAdjustHeight() {\n            var chart = this;\n            if (chart.redrawTrigger !== 'adjustHeight') {\n                var _loop_1 = function (axis) {\n                    var chart_1 = axis.chart, animate = !!chart_1.initiatedScale &&\n                        chart_1.options.animation, staticScale = axis.options.staticScale;\n                    if (axis.staticScale && defined(axis.min)) {\n                        var height = pick(axis.brokenAxis && axis.brokenAxis.unitLength, axis.max + axis.tickInterval - axis.min) * staticScale;\n                        // Minimum height is 1 x staticScale.\n                        height = Math.max(height, staticScale);\n                        var diff = height - chart_1.plotHeight;\n                        if (!chart_1.scrollablePixelsY && Math.abs(diff) >= 1) {\n                            chart_1.plotHeight = height;\n                            chart_1.redrawTrigger = 'adjustHeight';\n                            chart_1.setSize(void 0, chart_1.chartHeight + diff, animate);\n                        }\n                        // Make sure clip rects have the right height before initial\n                        // animation.\n                        axis.series.forEach(function (series) {\n                            var clipRect = series.sharedClipKey &&\n                                chart_1.sharedClips[series.sharedClipKey];\n                            if (clipRect) {\n                                clipRect.attr(chart_1.inverted ? {\n                                    width: chart_1.plotHeight\n                                } : {\n                                    height: chart_1.plotHeight\n                                });\n                            }\n                        });\n                    }\n                };\n                for (var _i = 0, _a = (chart.axes || []); _i < _a.length; _i++) {\n                    var axis = _a[_i];\n                    _loop_1(axis);\n                }\n                this.initiatedScale = true;\n            }\n            this.redrawTrigger = null;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var StaticScale = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * For vertical axes only. Setting the static scale ensures that each tick unit\n         * is translated into a fixed pixel height. For example, setting the static\n         * scale to 24 results in each Y axis category taking up 24 pixels, and the\n         * height of the chart adjusts. Adding or removing items will make the chart\n         * resize.\n         *\n         * @sample gantt/xrange-series/demo/\n         *         X-range series with static scale\n         *\n         * @type      {number}\n         * @default   50\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption yAxis.staticScale\n         */\n        ''; // keeps doclets above in JS file\n\n        return StaticScale;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangeSeriesDefaults.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2021 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var correctFloat = U.correctFloat, isNumber = U.isNumber, isObject = U.isObject;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The X-range series displays ranges on the X axis, typically time\n         * intervals with a start and end date.\n         *\n         * @sample {highcharts} highcharts/demo/x-range/\n         *         X-range\n         * @sample {highcharts} highcharts/css/x-range/\n         *         Styled mode X-range\n         * @sample {highcharts} highcharts/chart/inverted-xrange/\n         *         Inverted X-range\n         *\n         * @extends      plotOptions.column\n         * @since        6.0.0\n         * @product      highcharts highstock gantt\n         * @excluding    boostThreshold, crisp, cropThreshold, depth, edgeColor,\n         *               edgeWidth, findNearestPointBy, getExtremesFromAll,\n         *               negativeColor, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, softThreshold,\n         *               stacking, threshold, data, dataSorting, boostBlending\n         * @requires     modules/xrange\n         * @optionparent plotOptions.xrange\n         */\n        var XRangeSeriesDefaults = {\n            /**\n             * A partial fill for each point, typically used to visualize how much\n             * of a task is performed. The partial fill object can be set either on\n             * series or point level.\n             *\n             * @sample {highcharts} highcharts/demo/x-range\n             *         X-range with partial fill\n             *\n             * @product   highcharts highstock gantt\n             * @apioption plotOptions.xrange.partialFill\n             */\n            /**\n             * The fill color to be used for partial fills. Defaults to a darker\n             * shade of the point color.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highcharts highstock gantt\n             * @apioption plotOptions.xrange.partialFill.fill\n             */\n            /**\n             * A partial fill for each point, typically used to visualize how much\n             * of a task is performed. See [completed](series.gantt.data.completed).\n             *\n             * @sample gantt/demo/progress-indicator\n             *         Gantt with progress indicator\n             *\n             * @product   gantt\n             * @apioption plotOptions.gantt.partialFill\n             */\n            /**\n             * In an X-range series, this option makes all points of the same Y-axis\n             * category the same color.\n             */\n            colorByPoint: true,\n            dataLabels: {\n                formatter: function () {\n                    var point = this.point, amount = point.partialFill;\n                    if (isObject(amount)) {\n                        amount = amount.amount;\n                    }\n                    if (isNumber(amount) && amount > 0) {\n                        return correctFloat(amount * 100) + '%';\n                    }\n                },\n                inside: true,\n                verticalAlign: 'middle'\n            },\n            tooltip: {\n                headerFormat: '<span style=\"font-size: 0.8em\">{point.x} - {point.x2}</span><br/>',\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.yCategory}</b><br/>'\n            },\n            borderRadius: 3,\n            pointRange: 0\n        };\n        /* *\n         *\n         *  Export Default\n         *\n         * */\n        /* *\n         *\n         * API Options\n         *\n         * */\n        /**\n         * An `xrange` series. If the [type](#series.xrange.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.xrange\n         * @excluding boostThreshold, crisp, cropThreshold, depth, edgeColor, edgeWidth,\n         *            findNearestPointBy, getExtremesFromAll, negativeColor,\n         *            pointInterval, pointIntervalUnit, pointPlacement, pointRange,\n         *            pointStart, softThreshold, stacking, threshold, dataSorting,\n         *            boostBlending\n         * @product   highcharts highstock gantt\n         * @requires  modules/xrange\n         * @apioption series.xrange\n         */\n        /**\n         * An array of data points for the series. For the `xrange` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of objects with named values. The objects are point configuration\n         *    objects as seen below.\n         *    ```js\n         *    data: [{\n         *        x: Date.UTC(2017, 0, 1),\n         *        x2: Date.UTC(2017, 0, 3),\n         *        name: \"Test\",\n         *        y: 0,\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: Date.UTC(2017, 0, 4),\n         *        x2: Date.UTC(2017, 0, 5),\n         *        name: \"Deploy\",\n         *        y: 1,\n         *        color: \"#FF0000\"\n         *    }]\n         *    ```\n         *\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @declare   Highcharts.XrangePointOptionsObject\n         * @type      {Array<*>}\n         * @extends   series.line.data\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data\n         */\n        /**\n         * The starting X value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.x\n         */\n        /**\n         * The ending X value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.x2\n         */\n        /**\n         * The Y value of the range point.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.y\n         */\n        /**\n         * A partial fill for each point, typically used to visualize how much of\n         * a task is performed. The partial fill object can be set either on series\n         * or point level.\n         *\n         * @sample {highcharts} highcharts/demo/x-range\n         *         X-range with partial fill\n         *\n         * @declare   Highcharts.XrangePointPartialFillOptionsObject\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill\n         */\n        /**\n         * The amount of the X-range point to be filled. Values can be 0-1 and are\n         * converted to percentages in the default data label formatter.\n         *\n         * @type      {number}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill.amount\n         */\n        /**\n         * The fill color to be used for partial fills. Defaults to a darker shade\n         * of the point color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highcharts highstock gantt\n         * @apioption series.xrange.data.partialFill.fill\n         */\n        (''); // adds doclets above to transpiled file\n\n        return XRangeSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangePoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2021 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        var extend = U.extend;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var XRangePoint = /** @class */ (function (_super) {\n            __extends(XRangePoint, _super);\n            function XRangePoint() {\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.options = void 0;\n                _this.series = void 0;\n                return _this;\n            }\n            /**\n             * Return color of a point based on its category.\n             *\n             * @private\n             * @function getColorByCategory\n             *\n             * @param {object} series\n             *        The series which the point belongs to.\n             *\n             * @param {object} point\n             *        The point to calculate its color for.\n             *\n             * @return {object}\n             *         Returns an object containing the properties color and colorIndex.\n             */\n            XRangePoint.getColorByCategory = function (series, point) {\n                var colors = series.options.colors || series.chart.options.colors, colorCount = colors ?\n                    colors.length :\n                    series.chart.options.chart.colorCount, colorIndex = point.y % colorCount, color = colors && colors[colorIndex];\n                return {\n                    colorIndex: colorIndex,\n                    color: color\n                };\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            XRangePoint.prototype.resolveColor = function () {\n                var series = this.series;\n                if (series.options.colorByPoint && !this.options.color) {\n                    var colorByPoint = XRangePoint.getColorByCategory(series, this);\n                    if (!series.chart.styledMode) {\n                        this.color = colorByPoint.color;\n                    }\n                    if (!this.options.colorIndex) {\n                        this.colorIndex = colorByPoint.colorIndex;\n                    }\n                }\n                else if (!this.color) {\n                    this.color = series.color;\n                }\n            };\n            /**\n             * Extend init to have y default to 0.\n             *\n             * @private\n             */\n            XRangePoint.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                if (!this.y) {\n                    this.y = 0;\n                }\n                return this;\n            };\n            /**\n             * @private\n             */\n            XRangePoint.prototype.setState = function () {\n                _super.prototype.setState.apply(this, arguments);\n                this.series.drawPoint(this, this.series.getAnimationVerb());\n            };\n            /**\n             * Add x2 and yCategory to the available properties for tooltip formats.\n             *\n             * @private\n             */\n            XRangePoint.prototype.getLabelConfig = function () {\n                var cfg = _super.prototype.getLabelConfig.call(this), yCats = this.series.yAxis.categories;\n                cfg.x2 = this.x2;\n                cfg.yCategory = this.yCategory = yCats && yCats[this.y];\n                // Use 'category' as 'key' to ensure tooltip datetime formatting.\n                // Use 'name' only when 'category' is undefined.\n                cfg.key = this.category || this.name;\n                return cfg;\n            };\n            /**\n             * @private\n             */\n            XRangePoint.prototype.isValid = function () {\n                return typeof this.x === 'number' &&\n                    typeof this.x2 === 'number';\n            };\n            return XRangePoint;\n        }(ColumnPoint));\n        extend(XRangePoint.prototype, {\n            ttBelow: false,\n            tooltipDateKeys: ['x', 'x2']\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * The ending X value of the range point.\n         * @name Highcharts.Point#x2\n         * @type {number|undefined}\n         * @requires modules/xrange\n         */\n        /**\n         * Extend applyOptions so that `colorByPoint` for x-range means that one\n         * color is applied per Y axis category.\n         *\n         * @private\n         * @function Highcharts.Point#applyOptions\n         *\n         * @return {Highcharts.Series}\n         */\n        /**\n         * @interface Highcharts.PointOptionsObject in parts/Point.ts\n         */ /**\n        * The ending X value of the range point.\n        * @name Highcharts.PointOptionsObject#x2\n        * @type {number|undefined}\n        * @requires modules/xrange\n        */\n        (''); // keeps doclets above in JS file\n\n        return XRangePoint;\n    });\n    _registerModule(_modules, 'Series/XRange/XRangeSeries.js', [_modules['Core/Globals.js'], _modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Series/XRange/XRangeSeriesDefaults.js'], _modules['Series/XRange/XRangePoint.js']], function (H, Color, SeriesRegistry, U, XRangeSeriesDefaults, XRangePoint) {\n        /* *\n         *\n         *  X-range series module\n         *\n         *  (c) 2010-2021 Torstein Honsi, Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var noop = H.noop;\n        var color = Color.parse;\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var addEvent = U.addEvent, clamp = U.clamp, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, pick = U.pick, relativeLength = U.relativeLength;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Max x2 should be considered in xAxis extremes\n         * @private\n         */\n        function onAxisAfterGetSeriesExtremes() {\n            var dataMax, modMax;\n            if (this.isXAxis) {\n                dataMax = pick(this.dataMax, -Number.MAX_VALUE);\n                for (var _i = 0, _a = this.series; _i < _a.length; _i++) {\n                    var series = _a[_i];\n                    if (series.x2Data) {\n                        for (var _b = 0, _c = series.x2Data; _b < _c.length; _b++) {\n                            var val = _c[_b];\n                            if (val && val > dataMax) {\n                                dataMax = val;\n                                modMax = true;\n                            }\n                        }\n                    }\n                }\n                if (modMax) {\n                    this.dataMax = dataMax;\n                }\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.xrange\n         *\n         * @augments Highcharts.Series\n         */\n        var XRangeSeries = /** @class */ (function (_super) {\n            __extends(XRangeSeries, _super);\n            function XRangeSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n                /*\n                // Override to remove stroke from points. For partial fill.\n                pointAttribs: function () {\n                    let series = this,\n                        retVal = columnType.prototype.pointAttribs\n                            .apply(series, arguments);\n    \n                    //retVal['stroke-width'] = 0;\n                    return retVal;\n                }\n                //*/\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            XRangeSeries.compose = function (AxisClass) {\n                if (U.pushUnique(composedMembers, AxisClass)) {\n                    addEvent(AxisClass, 'afterGetSeriesExtremes', onAxisAfterGetSeriesExtremes);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                this.options.stacking = void 0; // #13161\n            };\n            /**\n             * Borrow the column series metrics, but with swapped axes. This gives\n             * free access to features like groupPadding, grouping, pointWidth etc.\n             * @private\n             */\n            XRangeSeries.prototype.getColumnMetrics = function () {\n                var _this = this;\n                var swapAxes = function () {\n                    for (var _i = 0, _a = _this.chart.series; _i < _a.length; _i++) {\n                        var series = _a[_i];\n                        var xAxis = series.xAxis;\n                        series.xAxis = series.yAxis;\n                        series.yAxis = xAxis;\n                    }\n                };\n                swapAxes();\n                var metrics = _super.prototype.getColumnMetrics.call(this);\n                swapAxes();\n                return metrics;\n            };\n            /**\n             * Override cropData to show a point where x or x2 is outside visible range,\n             * but one of them is inside.\n             * @private\n             */\n            XRangeSeries.prototype.cropData = function (xData, yData, min, max) {\n                // Replace xData with x2Data to find the appropriate cropStart\n                var crop = _super.prototype.cropData.call(this, this.x2Data, yData, min, max);\n                // Re-insert the cropped xData\n                crop.xData = xData.slice(crop.start, crop.end);\n                return crop;\n            };\n            /**\n             * Finds the index of an existing point that matches the given point\n             * options.\n             *\n             * @private\n             *\n             * @param {Highcharts.XRangePointOptions} options\n             *        The options of the point.\n             *\n             * @return {number|undefined}\n             *         Returns index of a matching point, or undefined if no match is\n             *         found.\n             */\n            XRangeSeries.prototype.findPointIndex = function (options) {\n                var _a = this, cropStart = _a.cropStart, points = _a.points;\n                var id = options.id;\n                var pointIndex;\n                if (id) {\n                    var point = find(points, function (point) { return point.id === id; });\n                    pointIndex = point ? point.index : void 0;\n                }\n                if (typeof pointIndex === 'undefined') {\n                    var point = find(points, function (point) { return (point.x === options.x &&\n                        point.x2 === options.x2 &&\n                        !point.touched); });\n                    pointIndex = point ? point.index : void 0;\n                }\n                // Reduce pointIndex if data is cropped\n                if (this.cropped &&\n                    isNumber(pointIndex) &&\n                    isNumber(cropStart) &&\n                    pointIndex >= cropStart) {\n                    pointIndex -= cropStart;\n                }\n                return pointIndex;\n            };\n            XRangeSeries.prototype.alignDataLabel = function (point) {\n                var oldPlotX = point.plotX;\n                point.plotX = pick(point.dlBox && point.dlBox.centerX, point.plotX);\n                _super.prototype.alignDataLabel.apply(this, arguments);\n                point.plotX = oldPlotX;\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.translatePoint = function (point) {\n                var xAxis = this.xAxis, yAxis = this.yAxis, metrics = this.columnMetrics, options = this.options, minPointLength = options.minPointLength || 0, oldColWidth = (point.shapeArgs && point.shapeArgs.width || 0) / 2, seriesXOffset = this.pointXOffset = metrics.offset, posX = pick(point.x2, point.x + (point.len || 0)), borderRadius = options.borderRadius, plotTop = this.chart.plotTop, plotLeft = this.chart.plotLeft;\n                var plotX = point.plotX, plotX2 = xAxis.translate(posX, 0, 0, 0, 1);\n                var length = Math.abs(plotX2 - plotX), inverted = this.chart.inverted, borderWidth = pick(options.borderWidth, 1), crisper = borderWidth % 2 / 2;\n                var widthDifference, partialFill, yOffset = metrics.offset, pointHeight = Math.round(metrics.width), dlLeft, dlRight, dlWidth, clipRectWidth;\n                if (minPointLength) {\n                    widthDifference = minPointLength - length;\n                    if (widthDifference < 0) {\n                        widthDifference = 0;\n                    }\n                    plotX -= widthDifference / 2;\n                    plotX2 += widthDifference / 2;\n                }\n                plotX = Math.max(plotX, -10);\n                plotX2 = clamp(plotX2, -10, xAxis.len + 10);\n                // Handle individual pointWidth\n                if (defined(point.options.pointWidth)) {\n                    yOffset -= ((Math.ceil(point.options.pointWidth) - pointHeight) / 2);\n                    pointHeight = Math.ceil(point.options.pointWidth);\n                }\n                // Apply pointPlacement to the Y axis\n                if (options.pointPlacement &&\n                    isNumber(point.plotY) &&\n                    yAxis.categories) {\n                    point.plotY = yAxis.translate(point.y, 0, 1, 0, 1, options.pointPlacement);\n                }\n                var x = Math.floor(Math.min(plotX, plotX2)) + crisper, x2 = Math.floor(Math.max(plotX, plotX2)) + crisper, width = x2 - x;\n                var r = Math.min(relativeLength((typeof borderRadius === 'object' ?\n                    borderRadius.radius :\n                    borderRadius || 0), pointHeight), Math.min(width, pointHeight) / 2);\n                var shapeArgs = {\n                    x: x,\n                    y: Math.floor(point.plotY + yOffset) + crisper,\n                    width: width,\n                    height: pointHeight,\n                    r: r\n                };\n                point.shapeArgs = shapeArgs;\n                // Move tooltip to default position\n                if (!inverted) {\n                    point.tooltipPos[0] -= oldColWidth +\n                        seriesXOffset -\n                        shapeArgs.width / 2;\n                }\n                else {\n                    point.tooltipPos[1] += seriesXOffset +\n                        oldColWidth;\n                }\n                // Align data labels inside the shape and inside the plot area\n                dlLeft = shapeArgs.x;\n                dlRight = dlLeft + shapeArgs.width;\n                if (dlLeft < 0 || dlRight > xAxis.len) {\n                    dlLeft = clamp(dlLeft, 0, xAxis.len);\n                    dlRight = clamp(dlRight, 0, xAxis.len);\n                    dlWidth = dlRight - dlLeft;\n                    point.dlBox = merge(shapeArgs, {\n                        x: dlLeft,\n                        width: dlRight - dlLeft,\n                        centerX: dlWidth ? dlWidth / 2 : null\n                    });\n                }\n                else {\n                    point.dlBox = null;\n                }\n                // Tooltip position\n                var tooltipPos = point.tooltipPos;\n                var xIndex = !inverted ? 0 : 1;\n                var yIndex = !inverted ? 1 : 0;\n                var tooltipYOffset = (this.columnMetrics ?\n                    this.columnMetrics.offset :\n                    -metrics.width / 2);\n                // Centering tooltip position (#14147)\n                if (inverted) {\n                    tooltipPos[xIndex] += shapeArgs.width / 2;\n                }\n                else {\n                    tooltipPos[xIndex] = clamp(tooltipPos[xIndex] +\n                        (xAxis.reversed ? -1 : 0) * shapeArgs.width, xAxis.left - plotLeft, xAxis.left + xAxis.len - plotLeft - 1);\n                }\n                tooltipPos[yIndex] = clamp(tooltipPos[yIndex] + ((inverted ? -1 : 1) * tooltipYOffset), yAxis.top - plotTop, yAxis.top + yAxis.len - plotTop - 1);\n                // Add a partShapeArgs to the point, based on the shapeArgs property\n                partialFill = point.partialFill;\n                if (partialFill) {\n                    // Get the partial fill amount\n                    if (isObject(partialFill)) {\n                        partialFill = partialFill.amount;\n                    }\n                    // If it was not a number, assume 0\n                    if (!isNumber(partialFill)) {\n                        partialFill = 0;\n                    }\n                    point.partShapeArgs = merge(shapeArgs);\n                    clipRectWidth = Math.max(Math.round(length * partialFill + point.plotX -\n                        plotX), 0);\n                    point.clipRectArgs = {\n                        x: xAxis.reversed ? // #10717\n                            shapeArgs.x + length - clipRectWidth :\n                            shapeArgs.x,\n                        y: shapeArgs.y,\n                        width: clipRectWidth,\n                        height: shapeArgs.height\n                    };\n                }\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.translate = function () {\n                _super.prototype.translate.apply(this, arguments);\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    this.translatePoint(point);\n                }\n            };\n            /**\n             * Draws a single point in the series. Needed for partial fill.\n             *\n             * This override turns point.graphic into a group containing the\n             * original graphic and an overlay displaying the partial fill.\n             *\n             * @private\n             *\n             * @param {Highcharts.Point} point\n             *        An instance of Point in the series.\n             *\n             * @param {\"animate\"|\"attr\"} verb\n             *        'animate' (animates changes) or 'attr' (sets options)\n             */\n            XRangeSeries.prototype.drawPoint = function (point, verb) {\n                var seriesOpts = this.options, renderer = this.chart.renderer, type = point.shapeType, shapeArgs = point.shapeArgs, partShapeArgs = point.partShapeArgs, clipRectArgs = point.clipRectArgs, pointState = point.state, stateOpts = (seriesOpts.states[pointState || 'normal'] ||\n                    {}), pointStateVerb = typeof pointState === 'undefined' ?\n                    'attr' : verb, pointAttr = this.pointAttribs(point, pointState), animation = pick(this.chart.options.chart.animation, stateOpts.animation);\n                var graphic = point.graphic, pfOptions = point.partialFill;\n                if (!point.isNull && point.visible !== false) {\n                    // Original graphic\n                    if (graphic) { // update\n                        graphic.rect[verb](shapeArgs);\n                    }\n                    else {\n                        point.graphic = graphic = renderer.g('point')\n                            .addClass(point.getClassName())\n                            .add(point.group || this.group);\n                        graphic.rect = renderer[type](merge(shapeArgs))\n                            .addClass(point.getClassName())\n                            .addClass('highcharts-partfill-original')\n                            .add(graphic);\n                    }\n                    // Partial fill graphic\n                    if (partShapeArgs) {\n                        if (graphic.partRect) {\n                            graphic.partRect[verb](merge(partShapeArgs));\n                            graphic.partialClipRect[verb](merge(clipRectArgs));\n                        }\n                        else {\n                            graphic.partialClipRect = renderer.clipRect(clipRectArgs.x, clipRectArgs.y, clipRectArgs.width, clipRectArgs.height);\n                            graphic.partRect =\n                                renderer[type](partShapeArgs)\n                                    .addClass('highcharts-partfill-overlay')\n                                    .add(graphic)\n                                    .clip(graphic.partialClipRect);\n                        }\n                    }\n                    // Presentational\n                    if (!this.chart.styledMode) {\n                        graphic\n                            .rect[verb](pointAttr, animation)\n                            .shadow(seriesOpts.shadow);\n                        if (partShapeArgs) {\n                            // Ensure pfOptions is an object\n                            if (!isObject(pfOptions)) {\n                                pfOptions = {};\n                            }\n                            if (isObject(seriesOpts.partialFill)) {\n                                pfOptions = merge(seriesOpts.partialFill, pfOptions);\n                            }\n                            var fill = (pfOptions.fill ||\n                                color(pointAttr.fill).brighten(-0.3).get() ||\n                                color(point.color || this.color)\n                                    .brighten(-0.3).get());\n                            pointAttr.fill = fill;\n                            graphic\n                                .partRect[pointStateVerb](pointAttr, animation)\n                                .shadow(seriesOpts.shadow);\n                        }\n                    }\n                }\n                else if (graphic) {\n                    point.graphic = graphic.destroy(); // #1269\n                }\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.drawPoints = function () {\n                var verb = this.getAnimationVerb();\n                // Draw the columns\n                for (var _i = 0, _a = this.points; _i < _a.length; _i++) {\n                    var point = _a[_i];\n                    this.drawPoint(point, verb);\n                }\n            };\n            /**\n             * Returns \"animate\", or \"attr\" if the number of points is above the\n             * animation limit.\n             *\n             * @private\n             */\n            XRangeSeries.prototype.getAnimationVerb = function () {\n                return (this.chart.pointCount < (this.options.animationLimit || 250) ?\n                    'animate' :\n                    'attr');\n            };\n            /**\n             * @private\n             */\n            XRangeSeries.prototype.isPointInside = function (point) {\n                var shapeArgs = point.shapeArgs, plotX = point.plotX, plotY = point.plotY;\n                if (!shapeArgs) {\n                    return _super.prototype.isPointInside.apply(this, arguments);\n                }\n                var isInside = typeof plotX !== 'undefined' &&\n                    typeof plotY !== 'undefined' &&\n                    plotY >= 0 &&\n                    plotY <= this.yAxis.len &&\n                    (shapeArgs.x || 0) + (shapeArgs.width || 0) >= 0 &&\n                    plotX <= this.xAxis.len;\n                return isInside;\n            };\n            XRangeSeries.defaultOptions = merge(ColumnSeries.defaultOptions, XRangeSeriesDefaults);\n            return XRangeSeries;\n        }(ColumnSeries));\n        extend(XRangeSeries.prototype, {\n            pointClass: XRangePoint,\n            pointArrayMap: ['x2', 'y'],\n            getExtremesFromAll: true,\n            parallelArrays: ['x', 'x2', 'y'],\n            requireSorting: false,\n            type: 'xrange',\n            animate: SeriesRegistry.series.prototype.animate,\n            autoIncrement: noop,\n            buildKDTree: noop\n        });\n        SeriesRegistry.registerSeriesType('xrange', XRangeSeries);\n        /* *\n         *\n         * Default Export\n         *\n         * */\n\n        return XRangeSeries;\n    });\n    _registerModule(_modules, 'Series/Gantt/GanttPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2016-2021 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var XRangePoint = SeriesRegistry.seriesTypes.xrange.prototype.pointClass;\n        var pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var GanttPoint = /** @class */ (function (_super) {\n            __extends(GanttPoint, _super);\n            function GanttPoint() {\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.options = void 0;\n                _this.series = void 0;\n                return _this;\n                /* eslint-enable valid-jsdoc */\n            }\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            GanttPoint.setGanttPointAliases = function (options) {\n                /**\n                 * Add a value to options if the value exists.\n                 * @private\n                 */\n                function addIfExists(prop, val) {\n                    if (typeof val !== 'undefined') {\n                        options[prop] = val;\n                    }\n                }\n                addIfExists('x', pick(options.start, options.x));\n                addIfExists('x2', pick(options.end, options.x2));\n                addIfExists('partialFill', pick(options.completed, options.partialFill));\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Applies the options containing the x and y data and possible some\n             * extra properties. This is called on point init or from point.update.\n             *\n             * @private\n             * @function Highcharts.Point#applyOptions\n             *\n             * @param {Object} options\n             *        The point options\n             *\n             * @param {number} x\n             *        The x value\n             *\n             * @return {Highcharts.Point}\n             *         The Point instance\n             */\n            GanttPoint.prototype.applyOptions = function (options, x) {\n                var point = this, ganttPoint;\n                ganttPoint = _super.prototype.applyOptions.call(point, options, x);\n                GanttPoint.setGanttPointAliases(ganttPoint);\n                return ganttPoint;\n            };\n            GanttPoint.prototype.isValid = function () {\n                return ((typeof this.start === 'number' ||\n                    typeof this.x === 'number') &&\n                    (typeof this.end === 'number' ||\n                        typeof this.x2 === 'number' ||\n                        this.milestone));\n            };\n            return GanttPoint;\n        }(XRangePoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttPoint;\n    });\n    _registerModule(_modules, 'Core/Axis/BrokenAxis.js', [_modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Utilities.js']], function (StackItem, U) {\n        /* *\n         *\n         *  (c) 2009-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Axis with support of broken data rows.\n         * @private\n         */\n        var BrokenAxis;\n        (function (BrokenAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedMembers = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Adds support for broken axes.\n             * @private\n             */\n            function compose(AxisClass, SeriesClass) {\n                if (U.pushUnique(composedMembers, AxisClass)) {\n                    AxisClass.keepProps.push('brokenAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                }\n                if (U.pushUnique(composedMembers, SeriesClass)) {\n                    var seriesProto = SeriesClass.prototype;\n                    seriesProto.drawBreaks = seriesDrawBreaks;\n                    seriesProto.gappedPath = seriesGappedPath;\n                    addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n                    addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n                }\n                return AxisClass;\n            }\n            BrokenAxis.compose = compose;\n            /**\n             * @private\n             */\n            function onAxisAfterInit() {\n                if (typeof this.brokenAxis !== 'undefined') {\n                    this.brokenAxis.setBreaks(this.options.breaks, false);\n                }\n            }\n            /**\n             * Force Axis to be not-ordinal when breaks are defined.\n             * @private\n             */\n            function onAxisAfterSetOptions() {\n                var _a;\n                var axis = this;\n                if ((_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    axis.options.ordinal = false;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisAfterSetTickPositions() {\n                var axis = this, brokenAxis = axis.brokenAxis;\n                if (brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.hasBreaks) {\n                    var tickPositions = axis.tickPositions, info = axis.tickPositions.info, newPositions = [];\n                    for (var i = 0; i < tickPositions.length; i++) {\n                        if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                            newPositions.push(tickPositions[i]);\n                        }\n                    }\n                    axis.tickPositions = newPositions;\n                    axis.tickPositions.info = info;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInit() {\n                var axis = this;\n                if (!axis.brokenAxis) {\n                    axis.brokenAxis = new Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterGeneratePoints() {\n                var _a, _b;\n                var _c = this, isDirty = _c.isDirty, connectNulls = _c.options.connectNulls, points = _c.points, xAxis = _c.xAxis, yAxis = _c.yAxis;\n                // Set, or reset visibility of the points. Axis.setBreaks marks\n                // the series as isDirty\n                if (isDirty) {\n                    var i = points.length;\n                    while (i--) {\n                        var point = points[i];\n                        // Respect nulls inside the break (#4275)\n                        var nullGap = point.y === null && connectNulls === false;\n                        var isPointInBreak = (!nullGap && (((_a = xAxis === null || xAxis === void 0 ? void 0 : xAxis.brokenAxis) === null || _a === void 0 ? void 0 : _a.isInAnyBreak(point.x, true)) ||\n                            ((_b = yAxis === null || yAxis === void 0 ? void 0 : yAxis.brokenAxis) === null || _b === void 0 ? void 0 : _b.isInAnyBreak(point.y, true))));\n                        // Set point.visible if in any break.\n                        // If not in break, reset visible to original value.\n                        point.visible = isPointInBreak ?\n                            false :\n                            point.options.visible !== false;\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterRender() {\n                this.drawBreaks(this.xAxis, ['x']);\n                this.drawBreaks(this.yAxis, pick(this.pointArrayMap, ['y']));\n            }\n            /**\n             * @private\n             */\n            function seriesDrawBreaks(axis, keys) {\n                var _a;\n                var series = this, points = series.points;\n                var breaks, threshold, y;\n                if ((_a = axis === null || axis === void 0 ? void 0 : axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    var brokenAxis_1 = axis.brokenAxis;\n                    keys.forEach(function (key) {\n                        var _a, _b;\n                        breaks = (brokenAxis_1 === null || brokenAxis_1 === void 0 ? void 0 : brokenAxis_1.breakArray) || [];\n                        threshold = axis.isXAxis ?\n                            axis.min :\n                            pick(series.options.threshold, axis.min);\n                        // Array of breaks that have been \"zoomed-out\" which means that\n                        // they were shown previously, but now after zoom, they are not\n                        // (#19885).\n                        var breaksOutOfRange = (_b = (_a = axis === null || axis === void 0 ? void 0 : axis.options) === null || _a === void 0 ? void 0 : _a.breaks) === null || _b === void 0 ? void 0 : _b.filter(function (brk) {\n                            var isOut = true;\n                            // Iterate to see if \"brk\" is in axis range\n                            for (var i = 0; i < breaks.length; i++) {\n                                var otherBreak = breaks[i];\n                                if (otherBreak.from === brk.from &&\n                                    otherBreak.to === brk.to) {\n                                    isOut = false;\n                                    break;\n                                }\n                            }\n                            return isOut;\n                        });\n                        points.forEach(function (point) {\n                            y = pick(point['stack' + key.toUpperCase()], point[key]);\n                            breaks.forEach(function (brk) {\n                                if (isNumber(threshold) && isNumber(y)) {\n                                    var eventName = '';\n                                    if ((threshold < brk.from && y > brk.to) ||\n                                        (threshold > brk.from && y < brk.from)) {\n                                        eventName = 'pointBreak';\n                                    }\n                                    else if ((threshold < brk.from &&\n                                        y > brk.from &&\n                                        y < brk.to) || (threshold > brk.from &&\n                                        y > brk.to &&\n                                        y < brk.from)) {\n                                        eventName = 'pointInBreak';\n                                    }\n                                    if (eventName) {\n                                        fireEvent(axis, eventName, { point: point, brk: brk });\n                                    }\n                                }\n                            });\n                            breaksOutOfRange === null || breaksOutOfRange === void 0 ? void 0 : breaksOutOfRange.forEach(function (brk) {\n                                fireEvent(axis, 'pointOutsideOfBreak', { point: point, brk: brk });\n                            });\n                        });\n                    });\n                }\n            }\n            /**\n             * Extend getGraphPath by identifying gaps in the data so that we\n             * can draw a gap in the line or area. This was moved from ordinal\n             * axis module to broken axis module as of #5045.\n             *\n             * @private\n             * @function Highcharts.Series#gappedPath\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Gapped path\n             */\n            function seriesGappedPath() {\n                var currentDataGrouping = this.currentDataGrouping, groupingSize = currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.gapSize, points = this.points.slice(), yAxis = this.yAxis;\n                var gapSize = this.options.gapSize, i = points.length - 1, stack;\n                /**\n                 * Defines when to display a gap in the graph, together with the\n                 * [gapUnit](plotOptions.series.gapUnit) option.\n                 *\n                 * In case when `dataGrouping` is enabled, points can be grouped\n                 * into a larger time span. This can make the grouped points to\n                 * have a greater distance than the absolute value of `gapSize`\n                 * property, which will result in disappearing graph completely.\n                 * To prevent this situation the mentioned distance between\n                 * grouped points is used instead of previously defined\n                 * `gapSize`.\n                 *\n                 * In practice, this option is most often used to visualize gaps\n                 * in time series. In a stock chart, intraday data is available\n                 * for daytime hours, while gaps will appear in nights and\n                 * weekends.\n                 *\n                 * @see [gapUnit](plotOptions.series.gapUnit)\n                 * @see [xAxis.breaks](#xAxis.breaks)\n                 *\n                 * @sample {highstock} stock/plotoptions/series-gapsize/\n                 * Setting the gap size to 2 introduces gaps for weekends in\n                 * daily datasets.\n                 *\n                 * @type      {number}\n                 * @default   0\n                 * @product   highstock\n                 * @requires  modules/broken-axis\n                 * @apioption plotOptions.series.gapSize\n                 */\n                /**\n                 * Together with [gapSize](plotOptions.series.gapSize), this\n                 * option defines where to draw gaps in the graph.\n                 *\n                 * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n                 * means that if the distance between two points is greater than\n                 * 5 times that of the two closest points, the graph will be\n                 * broken.\n                 *\n                 * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n                 * axis values, which on a datetime axis is milliseconds. This\n                 * also applies to the navigator series that inherits gap\n                 * options from the base series.\n                 *\n                 * @see [gapSize](plotOptions.series.gapSize)\n                 *\n                 * @type       {string}\n                 * @default    relative\n                 * @since      5.0.13\n                 * @product    highstock\n                 * @validvalue [\"relative\", \"value\"]\n                 * @requires   modules/broken-axis\n                 * @apioption  plotOptions.series.gapUnit\n                 */\n                if (gapSize && i > 0) { // #5008\n                    // Gap unit is relative\n                    if (this.options.gapUnit !== 'value') {\n                        gapSize *= this.basePointRange;\n                    }\n                    // Setting a new gapSize in case dataGrouping is enabled\n                    // (#7686)\n                    if (groupingSize &&\n                        groupingSize > gapSize &&\n                        // Except when DG is forced (e.g. from other series)\n                        // and has lower granularity than actual points (#11351)\n                        groupingSize >= this.basePointRange) {\n                        gapSize = groupingSize;\n                    }\n                    // extension for ordinal breaks\n                    var current = void 0, next = void 0;\n                    while (i--) {\n                        // Reassign next if it is not visible\n                        if (!(next && next.visible !== false)) {\n                            next = points[i + 1];\n                        }\n                        current = points[i];\n                        // Skip iteration if one of the points is not visible\n                        if (next.visible === false || current.visible === false) {\n                            continue;\n                        }\n                        if (next.x - current.x > gapSize) {\n                            var xRange = (current.x + next.x) / 2;\n                            points.splice(// insert after this one\n                            i + 1, 0, {\n                                isNull: true,\n                                x: xRange\n                            });\n                            // For stacked chart generate empty stack items, #6546\n                            if (yAxis.stacking && this.options.stacking) {\n                                stack = yAxis.stacking.stacks[this.stackKey][xRange] = new StackItem(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                                stack.total = 0;\n                            }\n                        }\n                        // Assign current to next for the upcoming iteration\n                        next = current;\n                    }\n                }\n                // Call base method\n                return this.getGraphPath(points);\n            }\n            /* *\n             *\n             *  Class\n             *\n             * */\n            /**\n             * Provides support for broken axes.\n             * @private\n             * @class\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                function Additions(axis) {\n                    this.hasBreaks = false;\n                    this.axis = axis;\n                }\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                Additions.isInBreak = function (brk, val) {\n                    var repeat = brk.repeat || Infinity, from = brk.from, length = brk.to - brk.from, test = (val >= from ?\n                        (val - from) % repeat :\n                        repeat - ((from - val) % repeat));\n                    var ret;\n                    if (!brk.inclusive) {\n                        ret = test < length && test !== 0;\n                    }\n                    else {\n                        ret = test <= length;\n                    }\n                    return ret;\n                };\n                /**\n                 * @private\n                 */\n                Additions.lin2Val = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.from >= nval) {\n                            break;\n                        }\n                        else if (brk.to < nval) {\n                            nval += brk.len;\n                        }\n                        else if (Additions.isInBreak(brk, nval)) {\n                            nval += brk.len;\n                        }\n                    }\n                    return nval;\n                };\n                /**\n                 * @private\n                 */\n                Additions.val2Lin = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.to <= val) {\n                            nval -= brk.len;\n                        }\n                        else if (brk.from >= val) {\n                            break;\n                        }\n                        else if (Additions.isInBreak(brk, val)) {\n                            nval -= (val - brk.from);\n                            break;\n                        }\n                    }\n                    return nval;\n                };\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                /**\n                 * Returns the first break found where the x is larger then break.from\n                 * and smaller then break.to.\n                 *\n                 * @param {number} x\n                 * The number which should be within a break.\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n                 * The array of breaks to search within.\n                 *\n                 * @return {Highcharts.XAxisBreaksOptions|undefined}\n                 * Returns the first break found that matches, returns false if no break\n                 * is found.\n                 */\n                Additions.prototype.findBreakAt = function (x, breaks) {\n                    return find(breaks, function (b) {\n                        return b.from < x && x < b.to;\n                    });\n                };\n                /**\n                 * @private\n                 */\n                Additions.prototype.isInAnyBreak = function (val, testKeep) {\n                    var brokenAxis = this, axis = brokenAxis.axis, breaks = axis.options.breaks || [];\n                    var i = breaks.length, inbrk, keep, ret;\n                    if (i && isNumber(val)) {\n                        while (i--) {\n                            if (Additions.isInBreak(breaks[i], val)) {\n                                inbrk = true;\n                                if (!keep) {\n                                    keep = pick(breaks[i].showPoints, !axis.isXAxis);\n                                }\n                            }\n                        }\n                        if (inbrk && testKeep) {\n                            ret = inbrk && !keep;\n                        }\n                        else {\n                            ret = inbrk;\n                        }\n                    }\n                    return ret;\n                };\n                /**\n                 * Dynamically set or unset breaks in an axis. This function in lighter\n                 * than usin Axis.update, and it also preserves animation.\n                 *\n                 * @private\n                 * @function Highcharts.Axis#setBreaks\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n                 * The breaks to add. When `undefined` it removes existing breaks.\n                 *\n                 * @param {boolean} [redraw=true]\n                 * Whether to redraw the chart immediately.\n                 */\n                Additions.prototype.setBreaks = function (breaks, redraw) {\n                    var brokenAxis = this;\n                    var axis = brokenAxis.axis;\n                    var hasBreaks = isArray(breaks) &&\n                        !!breaks.length &&\n                        !!Object.keys(breaks[0]).length; // Check for [{}], #16368.\n                    axis.isDirty = brokenAxis.hasBreaks !== hasBreaks;\n                    brokenAxis.hasBreaks = hasBreaks;\n                    if (breaks !== axis.options.breaks) {\n                        axis.options.breaks = axis.userOptions.breaks = breaks;\n                    }\n                    axis.forceRedraw = true; // Force recalculation in setScale\n                    // Recalculate series related to the axis.\n                    axis.series.forEach(function (series) {\n                        series.isDirty = true;\n                    });\n                    if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                        // Revert to prototype functions\n                        delete axis.val2lin;\n                        delete axis.lin2val;\n                    }\n                    if (hasBreaks) {\n                        axis.userOptions.ordinal = false;\n                        axis.lin2val = Additions.lin2Val;\n                        axis.val2lin = Additions.val2Lin;\n                        axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                            // If trying to set extremes inside a break, extend min to\n                            // after, and max to before the break ( #3857 )\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_1 = (this.options.breaks || []);\n                                var axisBreak = void 0;\n                                while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks_1))) {\n                                    newMin = axisBreak.to;\n                                }\n                                while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks_1))) {\n                                    newMax = axisBreak.from;\n                                }\n                                // If both min and max is within the same break.\n                                if (newMax < newMin) {\n                                    newMax = newMin;\n                                }\n                            }\n                            axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                        };\n                        axis.setAxisTranslation = function () {\n                            axis.constructor.prototype.setAxisTranslation.call(this);\n                            brokenAxis.unitLength = void 0;\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_2 = axis.options.breaks || [], \n                                // Temporary one:\n                                breakArrayT_1 = [], breakArray_1 = [], pointRangePadding = pick(axis.pointRangePadding, 0);\n                                var length_1 = 0, inBrk_1, repeat_1, min_1 = axis.userMin || axis.min, max_1 = axis.userMax || axis.max, start_1, i_1;\n                                // Min & max check (#4247)\n                                breaks_2.forEach(function (brk) {\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        if (Additions.isInBreak(brk, min_1)) {\n                                            min_1 += ((brk.to % repeat_1) -\n                                                (min_1 % repeat_1));\n                                        }\n                                        if (Additions.isInBreak(brk, max_1)) {\n                                            max_1 -= ((max_1 % repeat_1) -\n                                                (brk.from % repeat_1));\n                                        }\n                                    }\n                                });\n                                // Construct an array holding all breaks in the axis\n                                breaks_2.forEach(function (brk) {\n                                    start_1 = brk.from;\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        while (start_1 - repeat_1 > min_1) {\n                                            start_1 -= repeat_1;\n                                        }\n                                        while (start_1 < min_1) {\n                                            start_1 += repeat_1;\n                                        }\n                                        for (i_1 = start_1; i_1 < max_1; i_1 += repeat_1) {\n                                            breakArrayT_1.push({\n                                                value: i_1,\n                                                move: 'in'\n                                            });\n                                            breakArrayT_1.push({\n                                                value: i_1 + brk.to - brk.from,\n                                                move: 'out',\n                                                size: brk.breakSize\n                                            });\n                                        }\n                                    }\n                                });\n                                breakArrayT_1.sort(function (a, b) {\n                                    return ((a.value === b.value) ?\n                                        ((a.move === 'in' ? 0 : 1) -\n                                            (b.move === 'in' ? 0 : 1)) :\n                                        a.value - b.value);\n                                });\n                                // Simplify the breaks\n                                inBrk_1 = 0;\n                                start_1 = min_1;\n                                breakArrayT_1.forEach(function (brk) {\n                                    inBrk_1 += (brk.move === 'in' ? 1 : -1);\n                                    if (inBrk_1 === 1 && brk.move === 'in') {\n                                        start_1 = brk.value;\n                                    }\n                                    if (inBrk_1 === 0 && isNumber(start_1)) {\n                                        breakArray_1.push({\n                                            from: start_1,\n                                            to: brk.value,\n                                            len: brk.value - start_1 - (brk.size || 0)\n                                        });\n                                        length_1 += (brk.value -\n                                            start_1 -\n                                            (brk.size || 0));\n                                    }\n                                });\n                                brokenAxis.breakArray = breakArray_1;\n                                // Used with staticScale, and below the actual axis\n                                // length, when breaks are substracted.\n                                if (isNumber(min_1) &&\n                                    isNumber(max_1) &&\n                                    isNumber(axis.min)) {\n                                    brokenAxis.unitLength = max_1 - min_1 - length_1 +\n                                        pointRangePadding;\n                                    fireEvent(axis, 'afterBreaks');\n                                    if (axis.staticScale) {\n                                        axis.transA = axis.staticScale;\n                                    }\n                                    else if (brokenAxis.unitLength) {\n                                        axis.transA *=\n                                            (max_1 - axis.min + pointRangePadding) /\n                                                brokenAxis.unitLength;\n                                    }\n                                    if (pointRangePadding) {\n                                        axis.minPixelPadding =\n                                            axis.transA * (axis.minPointOffset || 0);\n                                    }\n                                    axis.min = min_1;\n                                    axis.max = max_1;\n                                }\n                            }\n                        };\n                    }\n                    if (pick(redraw, true)) {\n                        axis.chart.redraw();\n                    }\n                };\n                return Additions;\n            }());\n            BrokenAxis.Additions = Additions;\n        })(BrokenAxis || (BrokenAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return BrokenAxis;\n    });\n    _registerModule(_modules, 'Core/Axis/GridAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (Axis, H, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var dateFormats = H.dateFormats;\n        var addEvent = U.addEvent, defined = U.defined, erase = U.erase, find = U.find, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, timeUnits = U.timeUnits, wrap = U.wrap;\n        /* *\n         *\n         *  Enums\n         *\n         * */\n        /**\n         * Enum for which side the axis is on. Maps to axis.side.\n         * @private\n         */\n        var GridAxisSide;\n        (function (GridAxisSide) {\n            GridAxisSide[GridAxisSide[\"top\"] = 0] = \"top\";\n            GridAxisSide[GridAxisSide[\"right\"] = 1] = \"right\";\n            GridAxisSide[GridAxisSide[\"bottom\"] = 2] = \"bottom\";\n            GridAxisSide[GridAxisSide[\"left\"] = 3] = \"left\";\n        })(GridAxisSide || (GridAxisSide = {}));\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function argsToArray(args) {\n            return Array.prototype.slice.call(args, 1);\n        }\n        /**\n         * @private\n         */\n        function isObject(x) {\n            // Always use strict mode\n            return U.isObject(x, true);\n        }\n        /**\n         * @private\n         */\n        function applyGridOptions(axis) {\n            var options = axis.options;\n            // Center-align by default\n            /*\n            if (!options.labels) {\n                options.labels = {};\n            }\n            */\n            options.labels.align = pick(options.labels.align, 'center');\n            // @todo: Check against tickLabelPlacement between/on etc\n            /* Prevents adding the last tick label if the axis is not a category\n               axis.\n               Since numeric labels are normally placed at starts and ends of a\n               range of value, and this module makes the label point at the value,\n               an \"extra\" label would appear. */\n            if (!axis.categories) {\n                options.showLastLabel = false;\n            }\n            // Prevents rotation of labels when squished, as rotating them would not\n            // help.\n            axis.labelRotation = 0;\n            options.labels.rotation = 0;\n            // Allow putting ticks closer than their data points.\n            options.minTickInterval = 1;\n        }\n        /**\n         * Extends axis class with grid support.\n         * @private\n         */\n        function compose(AxisClass, ChartClass, TickClass) {\n            if (U.pushUnique(composedMembers, AxisClass)) {\n                AxisClass.keepProps.push('grid');\n                AxisClass.prototype.getMaxLabelDimensions = getMaxLabelDimensions;\n                wrap(AxisClass.prototype, 'unsquish', wrapUnsquish);\n                // Add event handlers\n                addEvent(AxisClass, 'init', onInit);\n                addEvent(AxisClass, 'afterGetOffset', onAfterGetOffset);\n                addEvent(AxisClass, 'afterGetTitlePosition', onAfterGetTitlePosition);\n                addEvent(AxisClass, 'afterInit', onAfterInit);\n                addEvent(AxisClass, 'afterRender', onAfterRender);\n                addEvent(AxisClass, 'afterSetAxisTranslation', onAfterSetAxisTranslation);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions);\n                addEvent(AxisClass, 'afterSetOptions', onAfterSetOptions2);\n                addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n                addEvent(AxisClass, 'afterTickSize', onAfterTickSize);\n                addEvent(AxisClass, 'trimTicks', onTrimTicks);\n                addEvent(AxisClass, 'destroy', onDestroy);\n            }\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n            }\n            if (U.pushUnique(composedMembers, TickClass)) {\n                addEvent(TickClass, 'afterGetLabelPosition', onTickAfterGetLabelPosition);\n                addEvent(TickClass, 'labelFormat', onTickLabelFormat);\n            }\n            return AxisClass;\n        }\n        /**\n         * Get the largest label width and height.\n         *\n         * @private\n         * @function Highcharts.Axis#getMaxLabelDimensions\n         *\n         * @param {Highcharts.Dictionary<Highcharts.Tick>} ticks\n         * All the ticks on one axis.\n         *\n         * @param {Array<number|string>} tickPositions\n         * All the tick positions on one axis.\n         *\n         * @return {Highcharts.SizeObject}\n         * Object containing the properties height and width.\n         *\n         * @todo Move this to the generic axis implementation, as it is used there.\n         */\n        function getMaxLabelDimensions(ticks, tickPositions) {\n            var dimensions = {\n                width: 0,\n                height: 0\n            };\n            tickPositions.forEach(function (pos) {\n                var tick = ticks[pos];\n                var labelHeight = 0, labelWidth = 0, label;\n                if (isObject(tick)) {\n                    label = isObject(tick.label) ? tick.label : {};\n                    // Find width and height of label\n                    labelHeight = label.getBBox ? label.getBBox().height : 0;\n                    if (label.textStr && !isNumber(label.textPxLength)) {\n                        label.textPxLength = label.getBBox().width;\n                    }\n                    labelWidth = isNumber(label.textPxLength) ?\n                        // Math.round ensures crisp lines\n                        Math.round(label.textPxLength) :\n                        0;\n                    if (label.textStr) {\n                        // Set the tickWidth same as the label width after ellipsis\n                        // applied #10281\n                        labelWidth = Math.round(label.getBBox().width);\n                    }\n                    // Update the result if width and/or height are larger\n                    dimensions.height = Math.max(labelHeight, dimensions.height);\n                    dimensions.width = Math.max(labelWidth, dimensions.width);\n                }\n            });\n            // For tree grid, add indentation\n            if (this.options.type === 'treegrid' &&\n                this.treeGrid &&\n                this.treeGrid.mapOfPosToGridNode) {\n                var treeDepth = this.treeGrid.mapOfPosToGridNode[-1].height || 0;\n                dimensions.width += (this.options.labels.indentation *\n                    (treeDepth - 1));\n            }\n            return dimensions;\n        }\n        /**\n         * Handle columns and getOffset.\n         * @private\n         */\n        function onAfterGetOffset() {\n            var grid = this.grid;\n            (grid && grid.columns || []).forEach(function (column) {\n                column.getOffset();\n            });\n        }\n        /**\n         * @private\n         */\n        function onAfterGetTitlePosition(e) {\n            var axis = this;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                // compute anchor points for each of the title align options\n                var axisTitle = axis.axisTitle, axisHeight = axis.height, horiz = axis.horiz, axisLeft = axis.left, offset = axis.offset, opposite = axis.opposite, options_1 = axis.options, axisTop = axis.top, axisWidth = axis.width;\n                var tickSize = axis.tickSize();\n                var titleWidth = axisTitle && axisTitle.getBBox().width;\n                var xOption = options_1.title.x;\n                var yOption = options_1.title.y;\n                var titleMargin = pick(options_1.title.margin, horiz ? 5 : 10);\n                var titleFontSize = axisTitle ? axis.chart.renderer.fontMetrics(axisTitle).f : 0;\n                var crispCorr = tickSize ? tickSize[0] / 2 : 0;\n                // TODO account for alignment\n                // the position in the perpendicular direction of the axis\n                var offAxis = ((horiz ? axisTop + axisHeight : axisLeft) +\n                    (horiz ? 1 : -1) * // horizontal axis reverses the margin\n                        (opposite ? -1 : 1) * // so does opposite axes\n                        crispCorr +\n                    (axis.side === GridAxisSide.bottom ? titleFontSize : 0));\n                e.titlePosition.x = horiz ?\n                    axisLeft - (titleWidth || 0) / 2 - titleMargin + xOption :\n                    offAxis + (opposite ? axisWidth : 0) + offset + xOption;\n                e.titlePosition.y = horiz ?\n                    (offAxis -\n                        (opposite ? axisHeight : 0) +\n                        (opposite ? titleFontSize : -titleFontSize) / 2 +\n                        offset +\n                        yOption) :\n                    axisTop - titleMargin + yOption;\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterInit() {\n            var axis = this;\n            var chart = axis.chart, _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a, userOptions = axis.userOptions;\n            if (gridOptions.enabled) {\n                applyGridOptions(axis);\n            }\n            if (gridOptions.columns) {\n                var columns = axis.grid.columns = [];\n                var columnIndex = axis.grid.columnIndex = 0;\n                // Handle columns, each column is a grid axis\n                while (++columnIndex < gridOptions.columns.length) {\n                    var columnOptions = merge(userOptions, gridOptions.columns[gridOptions.columns.length - columnIndex - 1], {\n                        isInternal: true,\n                        linkedTo: 0,\n                        // Force to behave like category axis\n                        type: 'category',\n                        // Disable by default the scrollbar on the grid axis\n                        scrollbar: {\n                            enabled: false\n                        }\n                    });\n                    delete columnOptions.grid.columns; // Prevent recursion\n                    var column = new Axis(axis.chart, columnOptions, 'yAxis');\n                    column.grid.isColumn = true;\n                    column.grid.columnIndex = columnIndex;\n                    // Remove column axis from chart axes array, and place it\n                    // in the columns array.\n                    erase(chart.axes, column);\n                    erase(chart[axis.coll] || [], column);\n                    columns.push(column);\n                }\n            }\n        }\n        /**\n         * Draw an extra line on the far side of the outermost axis,\n         * creating floor/roof/wall of a grid. And some padding.\n         * ```\n         * Make this:\n         *             (axis.min) __________________________ (axis.max)\n         *                           |    |    |    |    |\n         * Into this:\n         *             (axis.min) __________________________ (axis.max)\n         *                        ___|____|____|____|____|__\n         * ```\n         * @private\n         */\n        function onAfterRender() {\n            var axis = this, grid = axis.grid, options = axis.options, gridOptions = options.grid || {};\n            if (gridOptions.enabled === true) {\n                var min = axis.min || 0, max = axis.max || 0;\n                // @todo acutual label padding (top, bottom, left, right)\n                axis.maxLabelDimensions = axis.getMaxLabelDimensions(axis.ticks, axis.tickPositions);\n                // Remove right wall before rendering if updating\n                if (axis.rightWall) {\n                    axis.rightWall.destroy();\n                }\n                /*\n                Draw an extra axis line on outer axes\n                            >\n                Make this:    |______|______|______|___\n\n                            > _________________________\n                Into this:    |______|______|______|__|\n                                                        */\n                if (axis.grid && axis.grid.isOuterAxis() && axis.axisLine) {\n                    var lineWidth = options.lineWidth;\n                    if (lineWidth) {\n                        var linePath = axis.getLinePath(lineWidth), startPoint = linePath[0], endPoint = linePath[1], \n                        // Negate distance if top or left axis\n                        // Subtract 1px to draw the line at the end of the tick\n                        tickLength = (axis.tickSize('tick') || [1])[0], distance = (tickLength - 1) * ((axis.side === GridAxisSide.top ||\n                            axis.side === GridAxisSide.left) ? -1 : 1);\n                        // If axis is horizontal, reposition line path vertically\n                        if (startPoint[0] === 'M' && endPoint[0] === 'L') {\n                            if (axis.horiz) {\n                                startPoint[2] += distance;\n                                endPoint[2] += distance;\n                            }\n                            else {\n                                startPoint[1] += distance;\n                                endPoint[1] += distance;\n                            }\n                        }\n                        // If it doesn't exist, add an upper and lower border\n                        // for the vertical grid axis.\n                        if (!axis.horiz && axis.chart.marginRight) {\n                            var upperBorderStartPoint = startPoint, upperBorderEndPoint = [\n                                'L',\n                                axis.left,\n                                startPoint[2] || 0\n                            ], upperBorderPath = [\n                                upperBorderStartPoint,\n                                upperBorderEndPoint\n                            ], lowerBorderEndPoint = [\n                                'L',\n                                axis.chart.chartWidth - axis.chart.marginRight,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderStartPoint = [\n                                'M',\n                                endPoint[1] || 0,\n                                axis.toPixels(max + axis.tickmarkOffset)\n                            ], lowerBorderPath = [\n                                lowerBorderStartPoint,\n                                lowerBorderEndPoint\n                            ];\n                            if (!axis.grid.upperBorder && min % 1 !== 0) {\n                                axis.grid.upperBorder = axis.grid.renderBorder(upperBorderPath);\n                            }\n                            if (axis.grid.upperBorder) {\n                                axis.grid.upperBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.upperBorder.animate({\n                                    d: upperBorderPath\n                                });\n                            }\n                            if (!axis.grid.lowerBorder && max % 1 !== 0) {\n                                axis.grid.lowerBorder = axis.grid.renderBorder(lowerBorderPath);\n                            }\n                            if (axis.grid.lowerBorder) {\n                                axis.grid.lowerBorder.attr({\n                                    stroke: options.lineColor,\n                                    'stroke-width': options.lineWidth\n                                });\n                                axis.grid.lowerBorder.animate({\n                                    d: lowerBorderPath\n                                });\n                            }\n                        }\n                        // Render an extra line parallel to the existing axes, to\n                        // close the grid.\n                        if (!axis.grid.axisLineExtra) {\n                            axis.grid.axisLineExtra = axis.grid.renderBorder(linePath);\n                        }\n                        else {\n                            axis.grid.axisLineExtra.attr({\n                                stroke: options.lineColor,\n                                'stroke-width': options.lineWidth\n                            });\n                            axis.grid.axisLineExtra.animate({\n                                d: linePath\n                            });\n                        }\n                        // show or hide the line depending on options.showEmpty\n                        axis.axisLine[axis.showAxis ? 'show' : 'hide']();\n                    }\n                }\n                (grid && grid.columns || []).forEach(function (column) { return column.render(); });\n                // Manipulate the tick mark visibility\n                // based on the axis.max- allows smooth scrolling.\n                if (!axis.horiz &&\n                    axis.chart.hasRendered &&\n                    (axis.scrollbar ||\n                        (axis.linkedParent && axis.linkedParent.scrollbar))) {\n                    var tickmarkOffset = axis.tickmarkOffset, lastTick = axis.tickPositions[axis.tickPositions.length - 1], firstTick = axis.tickPositions[0];\n                    var label = void 0, tickMark = void 0;\n                    while ((label = axis.hiddenLabels.pop()) && label.element) {\n                        label.show(); // #15453\n                    }\n                    while ((tickMark = axis.hiddenMarks.pop()) &&\n                        tickMark.element) {\n                        tickMark.show(); // #16439\n                    }\n                    // Hide/show firts tick label.\n                    label = axis.ticks[firstTick].label;\n                    if (label) {\n                        if (min - firstTick > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    // Hide/show last tick mark/label.\n                    label = axis.ticks[lastTick].label;\n                    if (label) {\n                        if (lastTick - max > tickmarkOffset) {\n                            axis.hiddenLabels.push(label.hide());\n                        }\n                        else {\n                            label.show();\n                        }\n                    }\n                    var mark = axis.ticks[lastTick].mark;\n                    if (mark &&\n                        lastTick - max < tickmarkOffset &&\n                        lastTick - max > 0 && axis.ticks[lastTick].isLast) {\n                        axis.hiddenMarks.push(mark.hide());\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetAxisTranslation() {\n            var axis = this;\n            var tickInfo = axis.tickPositions && axis.tickPositions.info;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            var userLabels = axis.userOptions.labels || {};\n            // Fire this only for the Gantt type chart, #14868.\n            if (gridOptions.enabled) {\n                if (axis.horiz) {\n                    axis.series.forEach(function (series) {\n                        series.options.pointRange = 0;\n                    });\n                    // Lower level time ticks, like hours or minutes, represent\n                    // points in time and not ranges. These should be aligned\n                    // left in the grid cell by default. The same applies to\n                    // years of higher order.\n                    if (tickInfo &&\n                        options.dateTimeLabelFormats &&\n                        options.labels &&\n                        !defined(userLabels.align) &&\n                        (options.dateTimeLabelFormats[tickInfo.unitName]\n                            .range === false ||\n                            tickInfo.count > 1 // years\n                        )) {\n                        options.labels.align = 'left';\n                        if (!defined(userLabels.x)) {\n                            options.labels.x = 3;\n                        }\n                    }\n                }\n                else {\n                    // Don't trim ticks which not in min/max range but\n                    // they are still in the min/max plus tickInterval.\n                    if (this.options.type !== 'treegrid' &&\n                        axis.grid &&\n                        axis.grid.columns) {\n                        this.minPointOffset = this.tickInterval;\n                    }\n                }\n            }\n        }\n        /**\n         * Creates a left and right wall on horizontal axes:\n         * - Places leftmost tick at the start of the axis, to create a left\n         *   wall\n         * - Ensures that the rightmost tick is at the end of the axis, to\n         *   create a right wall.\n         * @private\n         */\n        function onAfterSetOptions(e) {\n            var options = this.options, userOptions = e.userOptions, gridOptions = ((options && isObject(options.grid)) ? options.grid : {});\n            var gridAxisOptions;\n            if (gridOptions.enabled === true) {\n                // Merge the user options into default grid axis options so\n                // that when a user option is set, it takes presedence.\n                gridAxisOptions = merge(true, {\n                    className: ('highcharts-grid-axis ' + (userOptions.className || '')),\n                    dateTimeLabelFormats: {\n                        hour: {\n                            list: ['%H:%M', '%H']\n                        },\n                        day: {\n                            list: ['%A, %e. %B', '%a, %e. %b', '%E']\n                        },\n                        week: {\n                            list: ['Week %W', 'W%W']\n                        },\n                        month: {\n                            list: ['%B', '%b', '%o']\n                        }\n                    },\n                    grid: {\n                        borderWidth: 1\n                    },\n                    labels: {\n                        padding: 2,\n                        style: {\n                            fontSize: '0.9em'\n                        }\n                    },\n                    margin: 0,\n                    title: {\n                        text: null,\n                        reserveSpace: false,\n                        rotation: 0\n                    },\n                    // In a grid axis, only allow one unit of certain types,\n                    // for example we shouln't have one grid cell spanning\n                    // two days.\n                    units: [[\n                            'millisecond',\n                            [1, 10, 100]\n                        ], [\n                            'second',\n                            [1, 10]\n                        ], [\n                            'minute',\n                            [1, 5, 15]\n                        ], [\n                            'hour',\n                            [1, 6]\n                        ], [\n                            'day',\n                            [1]\n                        ], [\n                            'week',\n                            [1]\n                        ], [\n                            'month',\n                            [1]\n                        ], [\n                            'year',\n                            null\n                        ]]\n                }, userOptions);\n                // X-axis specific options\n                if (this.coll === 'xAxis') {\n                    // For linked axes, tickPixelInterval is used only if\n                    // the tickPositioner below doesn't run or returns\n                    // undefined (like multiple years)\n                    if (defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPixelInterval)) {\n                        gridAxisOptions.tickPixelInterval = 350;\n                    }\n                    // For the secondary grid axis, use the primary axis'\n                    // tick intervals and return ticks one level higher.\n                    if (\n                    // Check for tick pixel interval in options\n                    !defined(userOptions.tickPixelInterval) &&\n                        // Only for linked axes\n                        defined(userOptions.linkedTo) &&\n                        !defined(userOptions.tickPositioner) &&\n                        !defined(userOptions.tickInterval)) {\n                        gridAxisOptions.tickPositioner = function (min, max) {\n                            var parentInfo = (this.linkedParent &&\n                                this.linkedParent.tickPositions &&\n                                this.linkedParent.tickPositions.info);\n                            if (parentInfo) {\n                                var units = (gridAxisOptions.units || []);\n                                var unitIdx = void 0, count = 1, unitName = 'year';\n                                for (var i = 0; i < units.length; i++) {\n                                    var unit_1 = units[i];\n                                    if (unit_1 && unit_1[0] === parentInfo.unitName) {\n                                        unitIdx = i;\n                                        break;\n                                    }\n                                }\n                                // Get the first allowed count on the next unit.\n                                var unit = (isNumber(unitIdx) && units[unitIdx + 1]);\n                                if (unit) {\n                                    unitName = unit[0] || 'year';\n                                    var counts = unit[1];\n                                    count = counts && counts[0] || 1;\n                                    // In case the base X axis shows years, make the\n                                    // secondary axis show ten times the years (#11427)\n                                }\n                                else if (parentInfo.unitName === 'year') {\n                                    // unitName is 'year'\n                                    count = parentInfo.count * 10;\n                                }\n                                var unitRange = timeUnits[unitName];\n                                this.tickInterval = unitRange * count;\n                                return this.chart.time.getTimeTicks({ unitRange: unitRange, count: count, unitName: unitName }, min, max, this.options.startOfWeek);\n                            }\n                        };\n                    }\n                }\n                // Now merge the combined options into the axis options\n                merge(true, this.options, gridAxisOptions);\n                if (this.horiz) {\n                    /*               _________________________\n                    Make this:    ___|_____|_____|_____|__|\n                                    ^                     ^\n                                    _________________________\n                    Into this:    |_____|_____|_____|_____|\n                                        ^                 ^    */\n                    options.minPadding = pick(userOptions.minPadding, 0);\n                    options.maxPadding = pick(userOptions.maxPadding, 0);\n                }\n                // If borderWidth is set, then use its value for tick and\n                // line width.\n                if (isNumber(options.grid.borderWidth)) {\n                    options.tickWidth = options.lineWidth =\n                        gridOptions.borderWidth;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onAfterSetOptions2(e) {\n            var axis = this;\n            var userOptions = e.userOptions;\n            var gridOptions = userOptions && userOptions.grid || {};\n            var columns = gridOptions.columns;\n            // Add column options to the parent axis. Children has their column\n            // options set on init in onGridAxisAfterInit.\n            if (gridOptions.enabled && columns) {\n                merge(true, axis.options, columns[columns.length - 1]);\n            }\n        }\n        /**\n         * Handle columns and setScale.\n         * @private\n         */\n        function onAfterSetScale() {\n            var axis = this;\n            (axis.grid.columns || []).forEach(function (column) { return column.setScale(); });\n        }\n        /**\n         * Draw vertical axis ticks extra long to create cell floors and roofs.\n         * Overrides the tickLength for vertical axes.\n         * @private\n         */\n        function onAfterTickSize(e) {\n            var _a = this, horiz = _a.horiz, maxLabelDimensions = _a.maxLabelDimensions, _b = _a.options.grid, gridOptions = _b === void 0 ? {} : _b;\n            if (gridOptions.enabled && maxLabelDimensions) {\n                var labelPadding = this.options.labels.distance * 2;\n                var distance = horiz ?\n                    (gridOptions.cellHeight ||\n                        labelPadding + maxLabelDimensions.height) :\n                    labelPadding + maxLabelDimensions.width;\n                if (isArray(e.tickSize)) {\n                    e.tickSize[0] = distance;\n                }\n                else {\n                    e.tickSize = [distance, 0];\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            this.axes.forEach(function (axis) {\n                (axis.grid && axis.grid.columns || []).forEach(function (column) {\n                    column.setAxisSize();\n                    column.setAxisTranslation();\n                });\n            });\n        }\n        /**\n         * @private\n         */\n        function onDestroy(e) {\n            var grid = this.grid;\n            (grid.columns || []).forEach(function (column) { return column.destroy(e.keepEvents); });\n            grid.columns = void 0;\n        }\n        /**\n         * Wraps axis init to draw cell walls on vertical axes.\n         * @private\n         */\n        function onInit(e) {\n            var axis = this;\n            var userOptions = e.userOptions || {};\n            var gridOptions = userOptions.grid || {};\n            if (gridOptions.enabled && defined(gridOptions.borderColor)) {\n                userOptions.tickColor = userOptions.lineColor = (gridOptions.borderColor);\n            }\n            if (!axis.grid) {\n                axis.grid = new GridAxisAdditions(axis);\n            }\n            axis.hiddenLabels = [];\n            axis.hiddenMarks = [];\n        }\n        /**\n         * Center tick labels in cells.\n         * @private\n         */\n        function onTickAfterGetLabelPosition(e) {\n            var tick = this, label = tick.label, axis = tick.axis, reversed = axis.reversed, chart = axis.chart, options = axis.options, gridOptions = options.grid || {}, labelOpts = axis.options.labels, align = labelOpts.align, \n            // verticalAlign is currently not supported for axis.labels.\n            verticalAlign = 'middle', // labelOpts.verticalAlign,\n            side = GridAxisSide[axis.side], tickmarkOffset = e.tickmarkOffset, tickPositions = axis.tickPositions, tickPos = tick.pos - tickmarkOffset, nextTickPos = (isNumber(tickPositions[e.index + 1]) ?\n                tickPositions[e.index + 1] - tickmarkOffset :\n                (axis.max || 0) + tickmarkOffset), tickSize = axis.tickSize('tick'), tickWidth = tickSize ? tickSize[0] : 0, crispCorr = tickSize ? tickSize[1] / 2 : 0;\n            // Only center tick labels in grid axes\n            if (gridOptions.enabled === true) {\n                var bottom = void 0, top_1, left = void 0, right = void 0;\n                // Calculate top and bottom positions of the cell.\n                if (side === 'top') {\n                    bottom = axis.top + axis.offset;\n                    top_1 = bottom - tickWidth;\n                }\n                else if (side === 'bottom') {\n                    top_1 = chart.chartHeight - axis.bottom + axis.offset;\n                    bottom = top_1 + tickWidth;\n                }\n                else {\n                    bottom = axis.top + axis.len - (axis.translate(reversed ? nextTickPos : tickPos) || 0);\n                    top_1 = axis.top + axis.len - (axis.translate(reversed ? tickPos : nextTickPos) || 0);\n                }\n                // Calculate left and right positions of the cell.\n                if (side === 'right') {\n                    left = chart.chartWidth - axis.right + axis.offset;\n                    right = left + tickWidth;\n                }\n                else if (side === 'left') {\n                    right = axis.left + axis.offset;\n                    left = right - tickWidth;\n                }\n                else {\n                    left = Math.round(axis.left + (axis.translate(reversed ? nextTickPos : tickPos) || 0)) - crispCorr;\n                    right = Math.min(// #15742\n                    Math.round(axis.left + (axis.translate(reversed ? tickPos : nextTickPos) || 0)) - crispCorr, axis.left + axis.len);\n                }\n                tick.slotWidth = right - left;\n                // Calculate the positioning of the label based on\n                // alignment.\n                e.pos.x = (align === 'left' ?\n                    left :\n                    align === 'right' ?\n                        right :\n                        left + ((right - left) / 2) // default to center\n                );\n                e.pos.y = (verticalAlign === 'top' ?\n                    top_1 :\n                    verticalAlign === 'bottom' ?\n                        bottom :\n                        top_1 + ((bottom - top_1) / 2) // default to middle\n                );\n                if (label) {\n                    var lblMetrics = chart.renderer.fontMetrics(label), labelHeight = label.getBBox().height;\n                    // Adjustment to y position to align the label correctly.\n                    // Would be better to have a setter or similar for this.\n                    if (!labelOpts.useHTML) {\n                        var lines = Math.round(labelHeight / lblMetrics.h);\n                        e.pos.y += (\n                        // Center the label\n                        // TODO: why does this actually center the label?\n                        ((lblMetrics.b - (lblMetrics.h - lblMetrics.f)) / 2) +\n                            // Adjust for height of additional lines.\n                            -(((lines - 1) * lblMetrics.h) / 2));\n                    }\n                    else {\n                        e.pos.y += (\n                        // Readjust yCorr in htmlUpdateTransform\n                        lblMetrics.b +\n                            // Adjust for height of html label\n                            -(labelHeight / 2));\n                    }\n                }\n                e.pos.x += (axis.horiz && labelOpts.x) || 0;\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickLabelFormat(ctx) {\n            var axis = ctx.axis, value = ctx.value;\n            if (axis.options.grid &&\n                axis.options.grid.enabled) {\n                var tickPos = axis.tickPositions;\n                var series = (axis.linkedParent || axis).series[0];\n                var isFirst = value === tickPos[0];\n                var isLast = value === tickPos[tickPos.length - 1];\n                var point = series && find(series.options.data, function (p) {\n                    return p[axis.isXAxis ? 'x' : 'y'] === value;\n                });\n                var pointCopy = void 0;\n                if (point && series.is('gantt')) {\n                    // For the Gantt set point aliases to the pointCopy\n                    // to do not change the original point\n                    pointCopy = merge(point);\n                    H.seriesTypes.gantt.prototype.pointClass\n                        .setGanttPointAliases(pointCopy);\n                }\n                // Make additional properties available for the\n                // formatter\n                ctx.isFirst = isFirst;\n                ctx.isLast = isLast;\n                ctx.point = pointCopy;\n            }\n        }\n        /**\n         * Makes tick labels which are usually ignored in a linked axis\n         * displayed if they are within range of linkedParent.min.\n         * ```\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Make this:             |   |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         *                        _____________________________\n         *                        |   |       |       |       |\n         * Into this:             | 1 |   2   |   3   |   4   |\n         *                        |___|_______|_______|_______|\n         *                          ^\n         * ```\n         * @private\n         * @todo Does this function do what the drawing says? Seems to affect\n         *       ticks and not the labels directly?\n         */\n        function onTrimTicks() {\n            var axis = this;\n            var options = axis.options;\n            var gridOptions = options.grid || {};\n            var categoryAxis = axis.categories;\n            var tickPositions = axis.tickPositions;\n            var firstPos = tickPositions[0];\n            var lastPos = tickPositions[tickPositions.length - 1];\n            var linkedMin = axis.linkedParent && axis.linkedParent.min;\n            var linkedMax = axis.linkedParent && axis.linkedParent.max;\n            var min = linkedMin || axis.min;\n            var max = linkedMax || axis.max;\n            var tickInterval = axis.tickInterval;\n            var endMoreThanMin = (firstPos < min &&\n                firstPos + tickInterval > min);\n            var startLessThanMax = (lastPos > max &&\n                lastPos - tickInterval < max);\n            if (gridOptions.enabled === true &&\n                !categoryAxis &&\n                (axis.horiz || axis.isLinked)) {\n                if (endMoreThanMin && !options.startOnTick) {\n                    tickPositions[0] = min;\n                }\n                if (startLessThanMax && !options.endOnTick) {\n                    tickPositions[tickPositions.length - 1] = max;\n                }\n            }\n        }\n        /**\n         * Avoid altering tickInterval when reserving space.\n         * @private\n         */\n        function wrapUnsquish(proceed) {\n            var axis = this;\n            var _a = axis.options.grid, gridOptions = _a === void 0 ? {} : _a;\n            if (gridOptions.enabled === true && axis.categories) {\n                return axis.tickInterval;\n            }\n            return proceed.apply(axis, argsToArray(arguments));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Additions for grid axes.\n         * @private\n         * @class\n         */\n        var GridAxisAdditions = /** @class */ (function () {\n            /* *\n            *\n            *  Constructors\n            *\n            * */\n            function GridAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n            *\n            *  Functions\n            *\n            * */\n            /**\n             * Checks if an axis is the outer axis in its dimension. Since\n             * axes are placed outwards in order, the axis with the highest\n             * index is the outermost axis.\n             *\n             * Example: If there are multiple x-axes at the top of the chart,\n             * this function returns true if the axis supplied is the last\n             * of the x-axes.\n             *\n             * @private\n             *\n             * @return {boolean}\n             * True if the axis is the outermost axis in its dimension; false if\n             * not.\n             */\n            GridAxisAdditions.prototype.isOuterAxis = function () {\n                var axis = this.axis;\n                var chart = axis.chart;\n                var columnIndex = axis.grid.columnIndex;\n                var columns = (axis.linkedParent && axis.linkedParent.grid.columns ||\n                    axis.grid.columns);\n                var parentAxis = columnIndex ? axis.linkedParent : axis;\n                var thisIndex = -1, lastIndex = 0;\n                (chart[axis.coll] || []).forEach(function (otherAxis, index) {\n                    if (otherAxis.side === axis.side &&\n                        !otherAxis.options.isInternal) {\n                        lastIndex = index;\n                        if (otherAxis === parentAxis) {\n                            // Get the index of the axis in question\n                            thisIndex = index;\n                        }\n                    }\n                });\n                return (lastIndex === thisIndex &&\n                    (isNumber(columnIndex) ?\n                        columns.length === columnIndex :\n                        true));\n            };\n            /**\n             * Add extra border based on the provided path.\n             * @private\n             * @param {SVGPath} path\n             * The path of the border.\n             * @return {Highcharts.SVGElement}\n             * Border\n             */\n            GridAxisAdditions.prototype.renderBorder = function (path) {\n                var axis = this.axis, renderer = axis.chart.renderer, options = axis.options, extraBorderLine = renderer.path(path)\n                    .addClass('highcharts-axis-line')\n                    .add(axis.axisBorder);\n                if (!renderer.styledMode) {\n                    extraBorderLine.attr({\n                        stroke: options.lineColor,\n                        'stroke-width': options.lineWidth,\n                        zIndex: 7\n                    });\n                }\n                return extraBorderLine;\n            };\n            return GridAxisAdditions;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // First letter of the day of the week, e.g. 'M' for 'Monday'.\n        dateFormats.E = function (timestamp) {\n            return this.dateFormat('%a', timestamp, true).charAt(0);\n        };\n        // Adds week date format\n        dateFormats.W = function (timestamp) {\n            var time = this, d = new this.Date(timestamp), unitsToOmit = ['Hours', 'Milliseconds', 'Minutes', 'Seconds'];\n            unitsToOmit.forEach(function (format) {\n                time.set(format, d, 0);\n            });\n            var firstDay = (this.get('Day', d) + 6) % 7;\n            var thursday = new this.Date(d.valueOf());\n            this.set('Date', thursday, this.get('Date', d) - firstDay + 3);\n            var firstThursday = new this.Date(this.get('FullYear', thursday), 0, 1);\n            if (this.get('Day', firstThursday) !== 4) {\n                this.set('Month', d, 0);\n                this.set('Date', d, 1 + (11 - this.get('Day', firstThursday)) % 7);\n            }\n            return (1 +\n                Math.floor((thursday.valueOf() - firstThursday.valueOf()) / 604800000)).toString();\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var GridAxis = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * @productdesc {gantt}\n         * For grid axes (like in Gantt charts),\n         * it is possible to declare as a list to provide different\n         * formats depending on available space.\n         *\n         * Defaults to:\n         * ```js\n         * {\n         *     hour: { list: ['%H:%M', '%H'] },\n         *     day: { list: ['%A, %e. %B', '%a, %e. %b', '%E'] },\n         *     week: { list: ['Week %W', 'W%W'] },\n         *     month: { list: ['%B', '%b', '%o'] }\n         * }\n         * ```\n         *\n         * @sample {gantt} gantt/grid-axis/date-time-label-formats\n         *         Gantt chart with custom axis date format.\n         *\n         * @apioption xAxis.dateTimeLabelFormats\n         */\n        /**\n         * Set grid options for the axis labels. Requires Highcharts Gantt.\n         *\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid\n         */\n        /**\n         * Enable grid on the axis labels. Defaults to true for Gantt charts.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption xAxis.grid.enabled\n         */\n        /**\n         * Set specific options for each column (or row for horizontal axes) in the\n         * grid. Each extra column/row is its own axis, and the axis options can be set\n         * here.\n         *\n         * @sample gantt/demo/left-axis-table\n         *         Left axis as a table\n         *\n         * @type      {Array<Highcharts.XAxisOptions>}\n         * @apioption xAxis.grid.columns\n         */\n        /**\n         * Set border color for the label grid lines.\n         *\n         * @type      {Highcharts.ColorString}\n         * @apioption xAxis.grid.borderColor\n         */\n        /**\n         * Set border width of the label grid lines.\n         *\n         * @type      {number}\n         * @default   1\n         * @apioption xAxis.grid.borderWidth\n         */\n        /**\n         * Set cell height for grid axis labels. By default this is calculated from font\n         * size. This option only applies to horizontal axes. For vertical axes, check\n         * the [#yAxis.staticScale](yAxis.staticScale) option.\n         *\n         * @sample gantt/grid-axis/cellheight\n         *         Gant chart with custom cell height\n         * @type      {number}\n         * @apioption xAxis.grid.cellHeight\n         */\n        ''; // keeps doclets above in JS file\n\n        return GridAxis;\n    });\n    _registerModule(_modules, 'Gantt/Tree.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016-2021 Highsoft AS\n         *\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var extend = U.extend, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Creates an object map from parent id to childrens index.\n         *\n         * @private\n         * @function Highcharts.Tree#getListOfParents\n         *\n         * @param {Array<*>} data\n         *        List of points set in options. `Array.parent` is parent id of point.\n         *\n         * @param {Array<string>} ids\n         *        List of all point ids.\n         *\n         * @return {Highcharts.Dictionary<Array<*>>}\n         * Map from parent id to children index in data\n         */\n        function getListOfParents(data) {\n            var listOfParents = data.reduce(function (prev, curr) {\n                var parent = pick(curr.parent, '');\n                if (typeof prev[parent] === 'undefined') {\n                    prev[parent] = [];\n                }\n                prev[parent].push(curr);\n                return prev;\n            }, {});\n            // parents = Object.keys(listOfParents);\n            // If parent does not exist, hoist parent to root of tree.\n            // parents.forEach((parent, list): void => {\n            //     const children = listOfParents[parent];\n            //     if ((parent !== '') && (ids.indexOf(parent) === -1)) {\n            //         for (const child of children) {\n            //             (list as any)[''].push(child);\n            //         }\n            //         delete (list as any)[parent];\n            //     }\n            // });\n            return listOfParents;\n        }\n        /** @private */\n        function getNode(id, parent, level, data, mapOfIdToChildren, options) {\n            var after = options && options.after, before = options && options.before, node = {\n                data: data,\n                depth: level - 1,\n                id: id,\n                level: level,\n                parent: (parent || '')\n            };\n            var descendants = 0, height = 0, start, end;\n            // Allow custom logic before the children has been created.\n            if (typeof before === 'function') {\n                before(node, options);\n            }\n            // Call getNode recursively on the children. Calulate the height of the\n            // node, and the number of descendants.\n            var children = ((mapOfIdToChildren[id] || [])).map(function (child) {\n                var node = getNode(child.id, id, (level + 1), child, mapOfIdToChildren, options), childStart = child.start || NaN, childEnd = (child.milestone === true ?\n                    childStart :\n                    child.end ||\n                        NaN);\n                // Start should be the lowest child.start.\n                start = ((!isNumber(start) || childStart < start) ?\n                    childStart :\n                    start);\n                // End should be the largest child.end.\n                // If child is milestone, then use start as end.\n                end = ((!isNumber(end) || childEnd > end) ?\n                    childEnd :\n                    end);\n                descendants = descendants + 1 + node.descendants;\n                height = Math.max(node.height + 1, height);\n                return node;\n            });\n            // Calculate start and end for point if it is not already explicitly set.\n            if (data) {\n                data.start = pick(data.start, start);\n                data.end = pick(data.end, end);\n            }\n            extend(node, {\n                children: children,\n                descendants: descendants,\n                height: height\n            });\n            // Allow custom logic after the children has been created.\n            if (typeof after === 'function') {\n                after(node, options);\n            }\n            return node;\n        }\n        /** @private */\n        function getTree(data, options) {\n            var mapOfIdToChildren = getListOfParents(data);\n            return getNode('', null, 1, null, mapOfIdToChildren, options);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var Tree = {\n            getNode: getNode,\n            getTree: getTree\n        };\n\n        return Tree;\n    });\n    _registerModule(_modules, 'Core/Axis/TreeGrid/TreeGridTick.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, isObject = U.isObject, isNumber = U.isNumber, pick = U.pick, wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onTickInit() {\n            var tick = this;\n            if (!tick.treeGrid) {\n                tick.treeGrid = new TreeGridTickAdditions(tick);\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickHover(label) {\n            label.addClass('highcharts-treegrid-node-active');\n            if (!label.renderer.styledMode) {\n                label.css({\n                    textDecoration: 'underline'\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function onTickHoverExit(label, options) {\n            var css = isObject(options.style) ? options.style : {};\n            label.removeClass('highcharts-treegrid-node-active');\n            if (!label.renderer.styledMode) {\n                label.css({ textDecoration: css.textDecoration });\n            }\n        }\n        /**\n         * @private\n         */\n        function renderLabelIcon(tick, params) {\n            var treeGrid = tick.treeGrid, isNew = !treeGrid.labelIcon, renderer = params.renderer, labelBox = params.xy, options = params.options, width = options.width || 0, height = options.height || 0, iconCenter = {\n                x: labelBox.x - (width / 2) - (options.padding || 0),\n                y: labelBox.y - (height / 2)\n            }, rotation = params.collapsed ? 90 : 180, shouldRender = params.show && isNumber(iconCenter.y);\n            var icon = treeGrid.labelIcon;\n            if (!icon) {\n                treeGrid.labelIcon = icon = renderer\n                    .path(renderer.symbols[options.type](options.x || 0, options.y || 0, width, height))\n                    .addClass('highcharts-label-icon')\n                    .add(params.group);\n            }\n            // Set the new position, and show or hide\n            icon[shouldRender ? 'show' : 'hide'](); // #14904, #1338\n            // Presentational attributes\n            if (!renderer.styledMode) {\n                icon\n                    .attr({\n                    cursor: 'pointer',\n                    'fill': pick(params.color, \"#666666\" /* Palette.neutralColor60 */),\n                    'stroke-width': 1,\n                    stroke: options.lineColor,\n                    strokeWidth: options.lineWidth || 0\n                });\n            }\n            // Update the icon positions\n            icon[isNew ? 'attr' : 'animate']({\n                translateX: iconCenter.x,\n                translateY: iconCenter.y,\n                rotation: rotation\n            });\n        }\n        /**\n         * @private\n         */\n        function wrapGetLabelPosition(proceed, x, y, label, horiz, labelOptions, tickmarkOffset, index, step) {\n            var tick = this, lbOptions = pick(tick.options && tick.options.labels, labelOptions), pos = tick.pos, axis = tick.axis, options = axis.options, isTreeGrid = options.type === 'treegrid', result = proceed.apply(tick, [x, y, label, horiz, lbOptions, tickmarkOffset, index, step]);\n            var symbolOptions, indentation, mapOfPosToGridNode, node, level;\n            if (isTreeGrid) {\n                symbolOptions = (lbOptions && isObject(lbOptions.symbol, true) ?\n                    lbOptions.symbol :\n                    {});\n                indentation = (lbOptions && isNumber(lbOptions.indentation) ?\n                    lbOptions.indentation :\n                    0);\n                mapOfPosToGridNode = axis.treeGrid.mapOfPosToGridNode;\n                node = mapOfPosToGridNode && mapOfPosToGridNode[pos];\n                level = (node && node.depth) || 1;\n                result.x += (\n                // Add space for symbols\n                ((symbolOptions.width || 0) +\n                    ((symbolOptions.padding || 0) * 2)) +\n                    // Apply indentation\n                    ((level - 1) * indentation));\n            }\n            return result;\n        }\n        /**\n         * @private\n         */\n        function wrapRenderLabel(proceed) {\n            var tick = this, pos = tick.pos, axis = tick.axis, label = tick.label, mapOfPosToGridNode = axis.treeGrid.mapOfPosToGridNode, options = axis.options, labelOptions = pick(tick.options && tick.options.labels, options && options.labels), symbolOptions = (labelOptions && isObject(labelOptions.symbol, true) ?\n                labelOptions.symbol :\n                {}), node = mapOfPosToGridNode && mapOfPosToGridNode[pos], level = node && node.depth, isTreeGrid = options.type === 'treegrid', shouldRender = axis.tickPositions.indexOf(pos) > -1, prefixClassName = 'highcharts-treegrid-node-', styledMode = axis.chart.styledMode;\n            var collapsed, addClassName, removeClassName;\n            if (isTreeGrid && node) {\n                // Add class name for hierarchical styling.\n                if (label &&\n                    label.element) {\n                    label.addClass(prefixClassName + 'level-' + level);\n                }\n            }\n            proceed.apply(tick, Array.prototype.slice.call(arguments, 1));\n            if (isTreeGrid &&\n                label &&\n                label.element &&\n                node &&\n                node.descendants &&\n                node.descendants > 0) {\n                collapsed = axis.treeGrid.isCollapsed(node);\n                renderLabelIcon(tick, {\n                    color: (!styledMode &&\n                        label.styles &&\n                        label.styles.color ||\n                        ''),\n                    collapsed: collapsed,\n                    group: label.parentGroup,\n                    options: symbolOptions,\n                    renderer: label.renderer,\n                    show: shouldRender,\n                    xy: label.xy\n                });\n                // Add class name for the node.\n                addClassName = prefixClassName +\n                    (collapsed ? 'collapsed' : 'expanded');\n                removeClassName = prefixClassName +\n                    (collapsed ? 'expanded' : 'collapsed');\n                label\n                    .addClass(addClassName)\n                    .removeClass(removeClassName);\n                if (!styledMode) {\n                    label.css({\n                        cursor: 'pointer'\n                    });\n                }\n                // Add events to both label text and icon\n                [label, tick.treeGrid.labelIcon].forEach(function (object) {\n                    if (object && !object.attachedTreeGridEvents) {\n                        // On hover\n                        addEvent(object.element, 'mouseover', function () {\n                            onTickHover(label);\n                        });\n                        // On hover out\n                        addEvent(object.element, 'mouseout', function () {\n                            onTickHoverExit(label, labelOptions);\n                        });\n                        addEvent(object.element, 'click', function () {\n                            tick.treeGrid.toggleCollapse();\n                        });\n                        object.attachedTreeGridEvents = true;\n                    }\n                });\n            }\n        }\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var TreeGridTickAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            function TreeGridTickAdditions(tick) {\n                this.tick = tick;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            TreeGridTickAdditions.compose = function (TickClass) {\n                if (U.pushUnique(composedMembers, TickClass)) {\n                    addEvent(TickClass, 'init', onTickInit);\n                    wrap(TickClass.prototype, 'getLabelPosition', wrapGetLabelPosition);\n                    wrap(TickClass.prototype, 'renderLabel', wrapRenderLabel);\n                    // backwards compatibility\n                    TickClass.prototype.collapse = function (redraw) {\n                        this.treeGrid.collapse(redraw);\n                    };\n                    TickClass.prototype.expand = function (redraw) {\n                        this.treeGrid.expand(redraw);\n                    };\n                    TickClass.prototype.toggleCollapse = function (redraw) {\n                        this.treeGrid.toggleCollapse(redraw);\n                    };\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Collapse the grid cell. Used when axis is of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#collapse\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.collapse = function (redraw) {\n                var tick = this.tick, axis = tick.axis, brokenAxis = axis.brokenAxis;\n                if (brokenAxis &&\n                    axis.treeGrid.mapOfPosToGridNode) {\n                    var pos = tick.pos, node = axis.treeGrid.mapOfPosToGridNode[pos], breaks = axis.treeGrid.collapse(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            /**\n             * Destroy remaining labelIcon if exist.\n             *\n             * @private\n             * @function Highcharts.Tick#destroy\n             */\n            TreeGridTickAdditions.prototype.destroy = function () {\n                if (this.labelIcon) {\n                    this.labelIcon.destroy();\n                }\n            };\n            /**\n             * Expand the grid cell. Used when axis is of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#expand\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.expand = function (redraw) {\n                var tick = this.tick, axis = tick.axis, brokenAxis = axis.brokenAxis;\n                if (brokenAxis &&\n                    axis.treeGrid.mapOfPosToGridNode) {\n                    var pos = tick.pos, node = axis.treeGrid.mapOfPosToGridNode[pos], breaks = axis.treeGrid.expand(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            /**\n             * Toggle the collapse/expand state of the grid cell. Used when axis is\n             * of type treegrid.\n             *\n             * @see gantt/treegrid-axis/collapsed-dynamically/demo.js\n             *\n             * @private\n             * @function Highcharts.Tick#toggleCollapse\n             *\n             * @param {boolean} [redraw=true]\n             * Whether to redraw the chart or wait for an explicit call to\n             * {@link Highcharts.Chart#redraw}\n             */\n            TreeGridTickAdditions.prototype.toggleCollapse = function (redraw) {\n                var tick = this.tick, axis = tick.axis, brokenAxis = axis.brokenAxis;\n                if (brokenAxis &&\n                    axis.treeGrid.mapOfPosToGridNode) {\n                    var pos = tick.pos, node = axis.treeGrid.mapOfPosToGridNode[pos], breaks = axis.treeGrid.toggleCollapse(node);\n                    brokenAxis.setBreaks(breaks, pick(redraw, true));\n                }\n            };\n            return TreeGridTickAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TreeGridTickAdditions;\n    });\n    _registerModule(_modules, 'Series/TreeUtilities.js', [_modules['Core/Color/Color.js'], _modules['Core/Utilities.js']], function (Color, U) {\n        /* *\n         *\n         *  (c) 2014-2021 Highsoft AS\n         *\n         *  Authors: Jon Arild Nygard / Oystein Moseng\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var extend = U.extend, isArray = U.isArray, isNumber = U.isNumber, isObject = U.isObject, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /* eslint-disable valid-jsdoc */\n        /**\n         * @private\n         */\n        function getColor(node, options) {\n            var index = options.index, mapOptionsToLevel = options.mapOptionsToLevel, parentColor = options.parentColor, parentColorIndex = options.parentColorIndex, series = options.series, colors = options.colors, siblings = options.siblings, points = series.points, chartOptionsChart = series.chart.options.chart;\n            var getColorByPoint, point, level, colorByPoint, colorIndexByPoint, color, colorIndex;\n            /**\n             * @private\n             */\n            var variateColor = function (color) {\n                var colorVariation = level && level.colorVariation;\n                if (colorVariation &&\n                    colorVariation.key === 'brightness' &&\n                    index &&\n                    siblings) {\n                    return Color.parse(color).brighten(colorVariation.to * (index / siblings)).get();\n                }\n                return color;\n            };\n            if (node) {\n                point = points[node.i];\n                level = mapOptionsToLevel[node.level] || {};\n                getColorByPoint = point && level.colorByPoint;\n                if (getColorByPoint) {\n                    colorIndexByPoint = point.index % (colors ?\n                        colors.length :\n                        chartOptionsChart.colorCount);\n                    colorByPoint = colors && colors[colorIndexByPoint];\n                }\n                // Select either point color, level color or inherited color.\n                if (!series.chart.styledMode) {\n                    color = pick(point && point.options.color, level && level.color, colorByPoint, parentColor && variateColor(parentColor), series.color);\n                }\n                colorIndex = pick(point && point.options.colorIndex, level && level.colorIndex, colorIndexByPoint, parentColorIndex, options.colorIndex);\n            }\n            return {\n                color: color,\n                colorIndex: colorIndex\n            };\n        }\n        /**\n         * Creates a map from level number to its given options.\n         *\n         * @private\n         *\n         * @param {Object} params\n         * Object containing parameters.\n         * - `defaults` Object containing default options. The default options are\n         *   merged with the userOptions to get the final options for a specific\n         *   level.\n         * - `from` The lowest level number.\n         * - `levels` User options from series.levels.\n         * - `to` The highest level number.\n         *\n         * @return {Highcharts.Dictionary<object>|null}\n         * Returns a map from level number to its given options.\n         */\n        function getLevelOptions(params) {\n            var result = {}, defaults, converted, i, from, to, levels;\n            if (isObject(params)) {\n                from = isNumber(params.from) ? params.from : 1;\n                levels = params.levels;\n                converted = {};\n                defaults = isObject(params.defaults) ? params.defaults : {};\n                if (isArray(levels)) {\n                    converted = levels.reduce(function (obj, item) {\n                        var level, levelIsConstant, options;\n                        if (isObject(item) && isNumber(item.level)) {\n                            options = merge({}, item);\n                            levelIsConstant = pick(options.levelIsConstant, defaults.levelIsConstant);\n                            // Delete redundant properties.\n                            delete options.levelIsConstant;\n                            delete options.level;\n                            // Calculate which level these options apply to.\n                            level = item.level + (levelIsConstant ? 0 : from - 1);\n                            if (isObject(obj[level])) {\n                                merge(true, obj[level], options); // #16329\n                            }\n                            else {\n                                obj[level] = options;\n                            }\n                        }\n                        return obj;\n                    }, {});\n                }\n                to = isNumber(params.to) ? params.to : 1;\n                for (i = 0; i <= to; i++) {\n                    result[i] = merge({}, defaults, isObject(converted[i]) ? converted[i] : {});\n                }\n            }\n            return result;\n        }\n        /**\n         * @private\n         * @todo Combine buildTree and buildNode with setTreeValues\n         * @todo Remove logic from Treemap and make it utilize this mixin.\n         */\n        function setTreeValues(tree, options) {\n            var before = options.before, idRoot = options.idRoot, mapIdToNode = options.mapIdToNode, nodeRoot = mapIdToNode[idRoot], levelIsConstant = (options.levelIsConstant !== false), points = options.points, point = points[tree.i], optionsPoint = point && point.options || {}, children = [];\n            var childrenTotal = 0;\n            tree.levelDynamic = tree.level - (levelIsConstant ? 0 : nodeRoot.level);\n            tree.name = pick(point && point.name, '');\n            tree.visible = (idRoot === tree.id ||\n                options.visible === true);\n            if (typeof before === 'function') {\n                tree = before(tree, options);\n            }\n            // First give the children some values\n            tree.children.forEach(function (child, i) {\n                var newOptions = extend({}, options);\n                extend(newOptions, {\n                    index: i,\n                    siblings: tree.children.length,\n                    visible: tree.visible\n                });\n                child = setTreeValues(child, newOptions);\n                children.push(child);\n                if (child.visible) {\n                    childrenTotal += child.val;\n                }\n            });\n            // Set the values\n            var value = pick(optionsPoint.value, childrenTotal);\n            tree.visible = value >= 0 && (childrenTotal > 0 || tree.visible);\n            tree.children = children;\n            tree.childrenTotal = childrenTotal;\n            tree.isLeaf = tree.visible && !childrenTotal;\n            tree.val = value;\n            return tree;\n        }\n        /**\n         * Update the rootId property on the series. Also makes sure that it is\n         * accessible to exporting.\n         *\n         * @private\n         *\n         * @param {Object} series\n         * The series to operate on.\n         *\n         * @return {string}\n         * Returns the resulting rootId after update.\n         */\n        function updateRootId(series) {\n            var rootId, options;\n            if (isObject(series)) {\n                // Get the series options.\n                options = isObject(series.options) ? series.options : {};\n                // Calculate the rootId.\n                rootId = pick(series.rootNode, options.rootId, '');\n                // Set rootId on series.userOptions to pick it up in exporting.\n                if (isObject(series.userOptions)) {\n                    series.userOptions.rootId = rootId;\n                }\n                // Set rootId on series to pick it up on next update.\n                series.rootNode = rootId;\n            }\n            return rootId;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var TreeUtilities = {\n            getColor: getColor,\n            getLevelOptions: getLevelOptions,\n            setTreeValues: setTreeValues,\n            updateRootId: updateRootId\n        };\n\n        return TreeUtilities;\n    });\n    _registerModule(_modules, 'Core/Axis/TreeGrid/TreeGridAxis.js', [_modules['Core/Axis/BrokenAxis.js'], _modules['Core/Axis/GridAxis.js'], _modules['Gantt/Tree.js'], _modules['Core/Axis/TreeGrid/TreeGridTick.js'], _modules['Series/TreeUtilities.js'], _modules['Core/Utilities.js']], function (BrokenAxis, GridAxis, Tree, TreeGridTick, TU, U) {\n        /* *\n         *\n         *  (c) 2016 Highsoft AS\n         *  Authors: Jon Arild Nygard\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var getLevelOptions = TU.getLevelOptions;\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isObject = U.isObject, isString = U.isString, merge = U.merge, pick = U.pick, wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var TickConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function getBreakFromNode(node, max) {\n            var to = node.collapseEnd || 0;\n            var from = node.collapseStart || 0;\n            // In broken-axis, the axis.max is minimized until it is not within a\n            // break. Therefore, if break.to is larger than axis.max, the axis.to\n            // should not add the 0.5 axis.tickMarkOffset, to avoid adding a break\n            // larger than axis.max.\n            // TODO consider simplifying broken-axis and this might solve itself\n            if (to >= max) {\n                from -= 0.5;\n            }\n            return {\n                from: from,\n                to: to,\n                showPoints: false\n            };\n        }\n        /**\n         * Creates a tree structure of the data, and the treegrid. Calculates\n         * categories, and y-values of points based on the tree.\n         *\n         * @private\n         * @function getTreeGridFromData\n         *\n         * @param {Array<Highcharts.GanttPointOptions>} data\n         * All the data points to display in the axis.\n         *\n         * @param {boolean} uniqueNames\n         * Whether or not the data node with the same name should share grid cell. If\n         * true they do share cell. False by default.\n         *\n         * @param {number} numberOfSeries\n         *\n         * @return {Object}\n         * Returns an object containing categories, mapOfIdToNode,\n         * mapOfPosToGridNode, and tree.\n         *\n         * @todo There should be only one point per line.\n         * @todo It should be optional to have one category per point, or merge\n         *       cells\n         * @todo Add unit-tests.\n         */\n        function getTreeGridFromData(data, uniqueNames, numberOfSeries) {\n            var categories = [], collapsedNodes = [], mapOfIdToNode = {}, uniqueNamesEnabled = typeof uniqueNames === 'boolean' ?\n                uniqueNames : false;\n            var mapOfPosToGridNode = {}, posIterator = -1;\n            // Build the tree from the series data.\n            var treeParams = {\n                // After the children has been created.\n                after: function (node) {\n                    var gridNode = mapOfPosToGridNode[node.pos];\n                    var height = 0, descendants = 0;\n                    gridNode.children.forEach(function (child) {\n                        descendants += (child.descendants || 0) + 1;\n                        height = Math.max((child.height || 0) + 1, height);\n                    });\n                    gridNode.descendants = descendants;\n                    gridNode.height = height;\n                    if (gridNode.collapsed) {\n                        collapsedNodes.push(gridNode);\n                    }\n                },\n                // Before the children has been created.\n                before: function (node) {\n                    var data = isObject(node.data, true) ?\n                        node.data :\n                        {}, name = isString(data.name) ? data.name : '', parentNode = mapOfIdToNode[node.parent], parentGridNode = (isObject(parentNode, true) ?\n                        mapOfPosToGridNode[parentNode.pos] :\n                        null), hasSameName = function (x) {\n                        return x.name === name;\n                    };\n                    var gridNode, pos;\n                    // If not unique names, look for sibling node with the same name\n                    if (uniqueNamesEnabled &&\n                        isObject(parentGridNode, true) &&\n                        !!(gridNode = find(parentGridNode.children, hasSameName))) {\n                        // If there is a gridNode with the same name, reuse position\n                        pos = gridNode.pos;\n                        // Add data node to list of nodes in the grid node.\n                        gridNode.nodes.push(node);\n                    }\n                    else {\n                        // If it is a new grid node, increment position.\n                        pos = posIterator++;\n                    }\n                    // Add new grid node to map.\n                    if (!mapOfPosToGridNode[pos]) {\n                        mapOfPosToGridNode[pos] = gridNode = {\n                            depth: parentGridNode ? parentGridNode.depth + 1 : 0,\n                            name: name,\n                            id: data.id,\n                            nodes: [node],\n                            children: [],\n                            pos: pos\n                        };\n                        // If not root, then add name to categories.\n                        if (pos !== -1) {\n                            categories.push(name);\n                        }\n                        // Add name to list of children.\n                        if (isObject(parentGridNode, true)) {\n                            parentGridNode.children.push(gridNode);\n                        }\n                    }\n                    // Add data node to map\n                    if (isString(node.id)) {\n                        mapOfIdToNode[node.id] = node;\n                    }\n                    // If one of the points are collapsed, then start the grid node\n                    // in collapsed state.\n                    if (gridNode &&\n                        data.collapsed === true) {\n                        gridNode.collapsed = true;\n                    }\n                    // Assign pos to data node\n                    node.pos = pos;\n                }\n            };\n            var updateYValuesAndTickPos = function (map, numberOfSeries) {\n                var setValues = function (gridNode, start, result) {\n                    var nodes = gridNode.nodes, padding = 0.5;\n                    var end = start + (start === -1 ? 0 : numberOfSeries - 1);\n                    var diff = (end - start) / 2, pos = start + diff;\n                    nodes.forEach(function (node) {\n                        var data = node.data;\n                        if (isObject(data, true)) {\n                            // Update point\n                            data.y = start + (data.seriesIndex || 0);\n                            // Remove the property once used\n                            delete data.seriesIndex;\n                        }\n                        node.pos = pos;\n                    });\n                    result[pos] = gridNode;\n                    gridNode.pos = pos;\n                    gridNode.tickmarkOffset = diff + padding;\n                    gridNode.collapseStart = end + padding;\n                    gridNode.children.forEach(function (child) {\n                        setValues(child, end + 1, result);\n                        end = (child.collapseEnd || 0) - padding;\n                    });\n                    // Set collapseEnd to the end of the last child node.\n                    gridNode.collapseEnd = end + padding;\n                    return result;\n                };\n                return setValues(map['-1'], -1, {});\n            };\n            // Create tree from data\n            var tree = Tree.getTree(data, treeParams);\n            // Update y values of data, and set calculate tick positions.\n            mapOfPosToGridNode = updateYValuesAndTickPos(mapOfPosToGridNode, numberOfSeries);\n            // Return the resulting data.\n            return {\n                categories: categories,\n                mapOfIdToNode: mapOfIdToNode,\n                mapOfPosToGridNode: mapOfPosToGridNode,\n                collapsedNodes: collapsedNodes,\n                tree: tree\n            };\n        }\n        /**\n         * Builds the tree of categories and calculates its positions.\n         * @private\n         * @param {Object} e Event object\n         * @param {Object} e.target The chart instance which the event was fired on.\n         * @param {object[]} e.target.axes The axes of the chart.\n         */\n        function onBeforeRender(e) {\n            var chart = e.target, axes = chart.axes;\n            axes.filter(function (axis) {\n                return axis.options.type === 'treegrid';\n            }).forEach(function (axis) {\n                var options = axis.options || {}, labelOptions = options.labels, uniqueNames = options.uniqueNames, max = options.max, \n                // Check whether any of series is rendering for the first\n                // time, visibility has changed, or its data is dirty, and\n                // only then update. #10570, #10580. Also check if\n                // mapOfPosToGridNode exists. #10887\n                isDirty = (!axis.treeGrid.mapOfPosToGridNode ||\n                    axis.series.some(function (series) {\n                        return !series.hasRendered ||\n                            series.isDirtyData ||\n                            series.isDirty;\n                    }));\n                var numberOfSeries = 0, data, treeGrid;\n                if (isDirty) {\n                    // Concatenate data from all series assigned to this axis.\n                    data = axis.series.reduce(function (arr, s) {\n                        if (s.visible) {\n                            // Push all data to array\n                            (s.options.data || []).forEach(function (data) {\n                                // For using keys - rebuild the data structure\n                                if (s.options.keys && s.options.keys.length) {\n                                    data = s.pointClass.prototype\n                                        .optionsToObject\n                                        .call({ series: s }, data);\n                                    s.pointClass.setGanttPointAliases(data);\n                                }\n                                if (isObject(data, true)) {\n                                    // Set series index on data. Removed again\n                                    // after use.\n                                    data.seriesIndex = (numberOfSeries);\n                                    arr.push(data);\n                                }\n                            });\n                            // Increment series index\n                            if (uniqueNames === true) {\n                                numberOfSeries++;\n                            }\n                        }\n                        return arr;\n                    }, []);\n                    // If max is higher than set data - add a\n                    // dummy data to render categories #10779\n                    if (max && data.length < max) {\n                        for (var i = data.length; i <= max; i++) {\n                            data.push({\n                                // Use the zero-width character\n                                // to avoid conflict with uniqueNames\n                                name: i + '\\u200B'\n                            });\n                        }\n                    }\n                    // setScale is fired after all the series is initialized,\n                    // which is an ideal time to update the axis.categories.\n                    treeGrid = getTreeGridFromData(data, uniqueNames || false, (uniqueNames === true) ? numberOfSeries : 1);\n                    // Assign values to the axis.\n                    axis.categories = treeGrid.categories;\n                    axis.treeGrid.mapOfPosToGridNode = (treeGrid.mapOfPosToGridNode);\n                    axis.hasNames = true;\n                    axis.treeGrid.tree = treeGrid.tree;\n                    // Update yData now that we have calculated the y values\n                    axis.series.forEach(function (series) {\n                        var axisData = (series.options.data || []).map(function (d) {\n                            if (isArray(d) &&\n                                series.options.keys &&\n                                series.options.keys.length) {\n                                // Get the axisData from the data array used to\n                                // build the treeGrid where has been modified\n                                data.forEach(function (point) {\n                                    if (d.indexOf(point.x) >= 0 &&\n                                        d.indexOf(point.x2) >= 0) {\n                                        d = point;\n                                    }\n                                });\n                            }\n                            return isObject(d, true) ? merge(d) : d;\n                        });\n                        // Avoid destroying points when series is not visible\n                        if (series.visible) {\n                            series.setData(axisData, false);\n                        }\n                    });\n                    // Calculate the label options for each level in the tree.\n                    axis.treeGrid.mapOptionsToLevel =\n                        getLevelOptions({\n                            defaults: labelOptions,\n                            from: 1,\n                            levels: labelOptions && labelOptions.levels,\n                            to: axis.treeGrid.tree && axis.treeGrid.tree.height\n                        });\n                    // Setting initial collapsed nodes\n                    if (e.type === 'beforeRender') {\n                        axis.treeGrid.collapsedNodes = treeGrid.collapsedNodes;\n                    }\n                }\n            });\n        }\n        /**\n         * Generates a tick for initial positioning.\n         *\n         * @private\n         * @function Highcharts.GridAxis#generateTick\n         *\n         * @param {Function} proceed\n         * The original generateTick function.\n         *\n         * @param {number} pos\n         * The tick position in axis values.\n         */\n        function wrapGenerateTick(proceed, pos) {\n            var axis = this, mapOptionsToLevel = axis.treeGrid.mapOptionsToLevel || {}, isTreeGrid = axis.options.type === 'treegrid', ticks = axis.ticks;\n            var tick = ticks[pos], levelOptions, options, gridNode;\n            if (isTreeGrid &&\n                axis.treeGrid.mapOfPosToGridNode) {\n                gridNode = axis.treeGrid.mapOfPosToGridNode[pos];\n                levelOptions = mapOptionsToLevel[gridNode.depth];\n                if (levelOptions) {\n                    options = {\n                        labels: levelOptions\n                    };\n                }\n                if (!tick &&\n                    TickConstructor) {\n                    ticks[pos] = tick =\n                        new TickConstructor(axis, pos, void 0, void 0, {\n                            category: gridNode.name,\n                            tickmarkOffset: gridNode.tickmarkOffset,\n                            options: options\n                        });\n                }\n                else {\n                    // update labels depending on tick interval\n                    tick.parameters.category = gridNode.name;\n                    tick.options = options;\n                    tick.addLabel();\n                }\n            }\n            else {\n                proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapInit(proceed, chart, userOptions, coll) {\n            var axis = this, isTreeGrid = userOptions.type === 'treegrid';\n            if (!axis.treeGrid) {\n                axis.treeGrid = new TreeGridAxisAdditions(axis);\n            }\n            // Set default and forced options for TreeGrid\n            if (isTreeGrid) {\n                // Add event for updating the categories of a treegrid.\n                // NOTE Preferably these events should be set on the axis.\n                addEvent(chart, 'beforeRender', onBeforeRender);\n                addEvent(chart, 'beforeRedraw', onBeforeRender);\n                // Add new collapsed nodes on addseries\n                addEvent(chart, 'addSeries', function (e) {\n                    if (e.options.data) {\n                        var treeGrid = getTreeGridFromData(e.options.data, userOptions.uniqueNames || false, 1);\n                        axis.treeGrid.collapsedNodes = (axis.treeGrid.collapsedNodes || []).concat(treeGrid.collapsedNodes);\n                    }\n                });\n                // Collapse all nodes in axis.treegrid.collapsednodes\n                // where collapsed equals true.\n                addEvent(axis, 'foundExtremes', function () {\n                    if (axis.treeGrid.collapsedNodes) {\n                        axis.treeGrid.collapsedNodes.forEach(function (node) {\n                            var breaks = axis.treeGrid.collapse(node);\n                            if (axis.brokenAxis) {\n                                axis.brokenAxis.setBreaks(breaks, false);\n                                // remove the node from the axis collapsedNodes\n                                if (axis.treeGrid.collapsedNodes) {\n                                    axis.treeGrid.collapsedNodes = axis.treeGrid\n                                        .collapsedNodes\n                                        .filter(function (n) { return ((node.collapseStart !==\n                                        n.collapseStart) ||\n                                        node.collapseEnd !== n.collapseEnd); });\n                                }\n                            }\n                        });\n                    }\n                });\n                // If staticScale is not defined on the yAxis\n                // and chart height is set, set axis.isDirty\n                // to ensure collapsing works (#12012)\n                addEvent(axis, 'afterBreaks', function () {\n                    if (axis.coll === 'yAxis' &&\n                        !axis.staticScale &&\n                        axis.chart.options.chart.height) {\n                        axis.isDirty = true;\n                    }\n                });\n                userOptions = merge({\n                    // Default options\n                    grid: {\n                        enabled: true\n                    },\n                    // TODO: add support for align in treegrid.\n                    labels: {\n                        align: 'left',\n                        /**\n                        * Set options on specific levels in a tree grid axis. Takes\n                        * precedence over labels options.\n                        *\n                        * @sample {gantt} gantt/treegrid-axis/labels-levels\n                        *         Levels on TreeGrid Labels\n                        *\n                        * @type      {Array<*>}\n                        * @product   gantt\n                        * @apioption yAxis.labels.levels\n                        *\n                        * @private\n                        */\n                        levels: [{\n                                /**\n                                * Specify the level which the options within this object\n                                * applies to.\n                                *\n                                * @type      {number}\n                                * @product   gantt\n                                * @apioption yAxis.labels.levels.level\n                                *\n                                * @private\n                                */\n                                level: void 0\n                            }, {\n                                level: 1,\n                                /**\n                                 * @type      {Highcharts.CSSObject}\n                                 * @product   gantt\n                                 * @apioption yAxis.labels.levels.style\n                                 *\n                                 * @private\n                                 */\n                                style: {\n                                    /** @ignore-option */\n                                    fontWeight: 'bold'\n                                }\n                            }],\n                        /**\n                         * The symbol for the collapse and expand icon in a\n                         * treegrid.\n                         *\n                         * @product      gantt\n                         * @optionparent yAxis.labels.symbol\n                         *\n                         * @private\n                         */\n                        symbol: {\n                            /**\n                             * The symbol type. Points to a definition function in\n                             * the `Highcharts.Renderer.symbols` collection.\n                             *\n                             * @type {Highcharts.SymbolKeyValue}\n                             *\n                             * @private\n                             */\n                            type: 'triangle',\n                            x: -5,\n                            y: -5,\n                            height: 10,\n                            width: 10,\n                            padding: 5\n                        }\n                    },\n                    uniqueNames: false\n                }, userOptions, {\n                    // Forced options\n                    reversed: true,\n                    // grid.columns is not supported in treegrid\n                    grid: {\n                        columns: void 0\n                    }\n                });\n            }\n            // Now apply the original function with the original arguments, which are\n            // sliced off this function's arguments\n            proceed.apply(axis, [chart, userOptions, coll]);\n            if (isTreeGrid) {\n                axis.hasNames = true;\n                axis.options.showLastLabel = true;\n            }\n        }\n        /**\n         * Set the tick positions, tickInterval, axis min and max.\n         *\n         * @private\n         * @function Highcharts.GridAxis#setTickInterval\n         *\n         * @param {Function} proceed\n         * The original setTickInterval function.\n         */\n        function wrapSetTickInterval(proceed) {\n            var axis = this, options = axis.options, isTreeGrid = options.type === 'treegrid';\n            if (isTreeGrid) {\n                axis.min = pick(axis.userMin, options.min, axis.dataMin);\n                axis.max = pick(axis.userMax, options.max, axis.dataMax);\n                fireEvent(axis, 'foundExtremes');\n                // setAxisTranslation modifies the min and max according to\n                // axis breaks.\n                axis.setAxisTranslation();\n                axis.tickmarkOffset = 0.5;\n                axis.tickInterval = 1;\n                axis.tickPositions = axis.treeGrid.mapOfPosToGridNode ?\n                    axis.treeGrid.getTickPositions() :\n                    [];\n            }\n            else {\n                proceed.apply(axis, Array.prototype.slice.call(arguments, 1));\n            }\n        }\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var TreeGridAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            function TreeGridAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            TreeGridAxisAdditions.compose = function (AxisClass, ChartClass, SeriesClass, TickClass) {\n                if (U.pushUnique(composedMembers, AxisClass)) {\n                    if (AxisClass.keepProps.indexOf('treeGrid') === -1) {\n                        AxisClass.keepProps.push('treeGrid');\n                    }\n                    var axisProps = AxisClass.prototype;\n                    wrap(axisProps, 'generateTick', wrapGenerateTick);\n                    wrap(axisProps, 'init', wrapInit);\n                    wrap(axisProps, 'setTickInterval', wrapSetTickInterval);\n                    // Make utility functions available for testing.\n                    axisProps.utils = {\n                        getNode: Tree.getNode\n                    };\n                }\n                if (U.pushUnique(composedMembers, TickClass)) {\n                    if (!TickConstructor) {\n                        TickConstructor = TickClass;\n                    }\n                }\n                GridAxis.compose(AxisClass, ChartClass, TickClass);\n                BrokenAxis.compose(AxisClass, SeriesClass);\n                TreeGridTick.compose(TickClass);\n                return AxisClass;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set the collapse status.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to collapse.\n             */\n            TreeGridAxisAdditions.prototype.setCollapsedStatus = function (node) {\n                var axis = this.axis, chart = axis.chart;\n                axis.series.forEach(function (series) {\n                    var data = series.options.data;\n                    if (node.id && data) {\n                        var point = chart.get(node.id), dataPoint = data[series.data.indexOf(point)];\n                        if (point && dataPoint) {\n                            point.collapsed = node.collapsed;\n                            dataPoint.collapsed = node.collapsed;\n                        }\n                    }\n                });\n            };\n            /**\n             * Calculates the new axis breaks to collapse a node.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to collapse.\n             *\n             * @param {number} pos\n             * The tick position to collapse.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.collapse = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                breaks.push(obj);\n                // Change the collapsed flag #13838\n                node.collapsed = true;\n                axis.treeGrid.setCollapsedStatus(node);\n                return breaks;\n            };\n            /**\n             * Calculates the new axis breaks to expand a node.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to expand.\n             *\n             * @param {number} pos\n             * The tick position to expand.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.expand = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                // Change the collapsed flag #13838\n                node.collapsed = false;\n                axis.treeGrid.setCollapsedStatus(node);\n                // Remove the break from the axis breaks array.\n                return breaks.reduce(function (arr, b) {\n                    if (b.to !== obj.to || b.from !== obj.from) {\n                        arr.push(b);\n                    }\n                    return arr;\n                }, []);\n            };\n            /**\n             * Creates a list of positions for the ticks on the axis. Filters out\n             * positions that are outside min and max, or is inside an axis break.\n             *\n             * @private\n             *\n             * @return {Array<number>}\n             * List of positions.\n             */\n            TreeGridAxisAdditions.prototype.getTickPositions = function () {\n                var axis = this.axis, roundedMin = Math.floor(axis.min / axis.tickInterval) * axis.tickInterval, roundedMax = Math.ceil(axis.max / axis.tickInterval) * axis.tickInterval;\n                return Object.keys(axis.treeGrid.mapOfPosToGridNode || {}).reduce(function (arr, key) {\n                    var pos = +key;\n                    if (pos >= roundedMin &&\n                        pos <= roundedMax &&\n                        !(axis.brokenAxis && axis.brokenAxis.isInAnyBreak(pos))) {\n                        arr.push(pos);\n                    }\n                    return arr;\n                }, []);\n            };\n            /**\n             * Check if a node is collapsed.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Object} node\n             * The node to check if is collapsed.\n             *\n             * @param {number} pos\n             * The tick position to collapse.\n             *\n             * @return {boolean}\n             * Returns true if collapsed, false if expanded.\n             */\n            TreeGridAxisAdditions.prototype.isCollapsed = function (node) {\n                var axis = this.axis, breaks = (axis.options.breaks || []), obj = getBreakFromNode(node, axis.max);\n                return breaks.some(function (b) {\n                    return b.from === obj.from && b.to === obj.to;\n                });\n            };\n            /**\n             * Calculates the new axis breaks after toggling the collapse/expand\n             * state of a node. If it is collapsed it will be expanded, and if it is\n             * exapended it will be collapsed.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} axis\n             * The axis to check against.\n             *\n             * @param {Highcharts.GridNode} node\n             * The node to toggle.\n             *\n             * @return {Array<object>}\n             * Returns an array of the new breaks for the axis.\n             */\n            TreeGridAxisAdditions.prototype.toggleCollapse = function (node) {\n                return (this.isCollapsed(node) ?\n                    this.expand(node) :\n                    this.collapse(node));\n            };\n            return TreeGridAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TreeGridAxisAdditions;\n    });\n    _registerModule(_modules, 'Series/Gantt/GanttSeries.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Chart/Chart.js'], _modules['Series/Gantt/GanttPoint.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Axis/Tick.js'], _modules['Core/Utilities.js'], _modules['Core/Axis/TreeGrid/TreeGridAxis.js']], function (Axis, Chart, GanttPoint, SeriesRegistry, Tick, U, TreeGridAxis) {\n        /* *\n         *\n         *  (c) 2016-2021 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var Series = SeriesRegistry.series, XRangeSeries = SeriesRegistry.seriesTypes.xrange;\n        var extend = U.extend, isNumber = U.isNumber, merge = U.merge, splat = U.splat;\n        TreeGridAxis.compose(Axis, Chart, Series, Tick);\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.gantt\n         *\n         * @augments Highcharts.Series\n         */\n        var GanttSeries = /** @class */ (function (_super) {\n            __extends(GanttSeries, _super);\n            function GanttSeries() {\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n                /* eslint-enable valid-jsdoc */\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Draws a single point in the series.\n             *\n             * This override draws the point as a diamond if point.options.milestone\n             * is true, and uses the original drawPoint() if it is false or not set.\n             *\n             * @requires highcharts-gantt\n             *\n             * @private\n             * @function Highcharts.seriesTypes.gantt#drawPoint\n             *\n             * @param {Highcharts.Point} point\n             *        An instance of Point in the series\n             *\n             * @param {\"animate\"|\"attr\"} verb\n             *        'animate' (animates changes) or 'attr' (sets options)\n             */\n            GanttSeries.prototype.drawPoint = function (point, verb) {\n                var series = this, seriesOpts = series.options, renderer = series.chart.renderer, shapeArgs = point.shapeArgs, plotY = point.plotY, graphic = point.graphic, state = point.selected && 'select', cutOff = seriesOpts.stacking && !seriesOpts.borderRadius, diamondShape;\n                if (point.options.milestone) {\n                    if (isNumber(plotY) &&\n                        point.y !== null &&\n                        point.visible !== false) {\n                        diamondShape = renderer.symbols.diamond(shapeArgs.x || 0, shapeArgs.y || 0, shapeArgs.width || 0, shapeArgs.height || 0);\n                        if (graphic) {\n                            graphic[verb]({\n                                d: diamondShape\n                            });\n                        }\n                        else {\n                            point.graphic = graphic = renderer.path(diamondShape)\n                                .addClass(point.getClassName(), true)\n                                .add(point.group || series.group);\n                        }\n                        // Presentational\n                        if (!series.chart.styledMode) {\n                            point.graphic\n                                .attr(series.pointAttribs(point, state))\n                                .shadow(seriesOpts.shadow, null, cutOff);\n                        }\n                    }\n                    else if (graphic) {\n                        point.graphic = graphic.destroy(); // #1269\n                    }\n                }\n                else {\n                    XRangeSeries.prototype.drawPoint.call(series, point, verb);\n                }\n            };\n            /**\n             * Handle milestones, as they have no x2.\n             * @private\n             */\n            GanttSeries.prototype.translatePoint = function (point) {\n                var series = this, shapeArgs, size;\n                XRangeSeries.prototype.translatePoint.call(series, point);\n                if (point.options.milestone) {\n                    shapeArgs = point.shapeArgs;\n                    size = shapeArgs.height || 0;\n                    point.shapeArgs = {\n                        x: (shapeArgs.x || 0) - (size / 2),\n                        y: shapeArgs.y,\n                        width: size,\n                        height: size\n                    };\n                }\n            };\n            /**\n             * A `gantt` series. If the [type](#series.gantt.type) option is not specified,\n             * it is inherited from [chart.type](#chart.type).\n             *\n             * @extends      plotOptions.xrange\n             * @product      gantt\n             * @requires     highcharts-gantt\n             * @optionparent plotOptions.gantt\n             */\n            GanttSeries.defaultOptions = merge(XRangeSeries.defaultOptions, {\n                // options - default options merged with parent\n                grouping: false,\n                dataLabels: {\n                    enabled: true\n                },\n                tooltip: {\n                    headerFormat: '<span style=\"font-size: 0.8em\">{series.name}</span><br/>',\n                    pointFormat: null,\n                    pointFormatter: function () {\n                        var point = this, series = point.series, xAxis = series.xAxis, formats = series.tooltipOptions.dateTimeLabelFormats, startOfWeek = xAxis.options.startOfWeek, ttOptions = series.tooltipOptions, format = ttOptions.xDateFormat, start, end, milestone = point.options.milestone, retVal = '<b>' + (point.name || point.yCategory) + '</b>';\n                        if (ttOptions.pointFormat) {\n                            return point.tooltipFormatter(ttOptions.pointFormat);\n                        }\n                        if (!format && isNumber(point.start)) {\n                            format = series.chart.time.getDateFormat(xAxis.closestPointRange, point.start, startOfWeek, formats || {});\n                        }\n                        start = series.chart.time.dateFormat(format, point.start);\n                        end = series.chart.time.dateFormat(format, point.end);\n                        retVal += '<br/>';\n                        if (!milestone) {\n                            retVal += 'Start: ' + start + '<br/>';\n                            retVal += 'End: ' + end + '<br/>';\n                        }\n                        else {\n                            retVal += start + '<br/>';\n                        }\n                        return retVal;\n                    }\n                },\n                connectors: {\n                    type: 'simpleConnect',\n                    /**\n                     * @declare Highcharts.ConnectorsAnimationOptionsObject\n                     */\n                    animation: {\n                        reversed: true // Dependencies go from child to parent\n                    },\n                    radius: 0,\n                    startMarker: {\n                        enabled: true,\n                        symbol: 'arrow-filled',\n                        radius: 4,\n                        fill: '#fa0',\n                        align: 'left'\n                    },\n                    endMarker: {\n                        enabled: false,\n                        align: 'right'\n                    }\n                }\n            });\n            return GanttSeries;\n        }(XRangeSeries));\n        extend(GanttSeries.prototype, {\n            pointArrayMap: ['start', 'end', 'y'],\n            pointClass: GanttPoint,\n            setData: Series.prototype.setData\n        });\n        SeriesRegistry.registerSeriesType('gantt', GanttSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `gantt` series.\n         *\n         * @extends   series,plotOptions.gantt\n         * @excluding boostThreshold, dashStyle, findNearestPointBy,\n         *            getExtremesFromAll, marker, negativeColor, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointStart\n         * @product   gantt\n         * @requires  highcharts-gantt\n         * @apioption series.gantt\n         */\n        /**\n         * Data for a Gantt series.\n         *\n         * @declare   Highcharts.GanttPointOptionsObject\n         * @type      {Array<*>}\n         * @extends   series.xrange.data\n         * @excluding className, connect, dataLabels, events,\n         *            partialFill, selected, x, x2\n         * @product   gantt\n         * @apioption series.gantt.data\n         */\n        /**\n         * Whether the grid node belonging to this point should start as collapsed. Used\n         * in axes of type treegrid.\n         *\n         * @sample {gantt} gantt/treegrid-axis/collapsed/\n         *         Start as collapsed\n         *\n         * @type      {boolean}\n         * @default   false\n         * @product   gantt\n         * @apioption series.gantt.data.collapsed\n         */\n        /**\n         * The start time of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.start\n         */\n        /**\n         * The end time of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.end\n         */\n        /**\n         * The Y value of a task.\n         *\n         * @type      {number}\n         * @product   gantt\n         * @apioption series.gantt.data.y\n         */\n        /**\n         * The name of a task. If a `treegrid` y-axis is used (default in Gantt charts),\n         * this will be picked up automatically, and used to calculate the y-value.\n         *\n         * @type      {string}\n         * @product   gantt\n         * @apioption series.gantt.data.name\n         */\n        /**\n         * Progress indicator, how much of the task completed. If it is a number, the\n         * `fill` will be applied automatically.\n         *\n         * @sample {gantt} gantt/demo/progress-indicator\n         *         Progress indicator\n         *\n         * @type      {number|*}\n         * @extends   series.xrange.data.partialFill\n         * @product   gantt\n         * @apioption series.gantt.data.completed\n         */\n        /**\n         * The amount of the progress indicator, ranging from 0 (not started) to 1\n         * (finished).\n         *\n         * @type      {number}\n         * @default   0\n         * @apioption series.gantt.data.completed.amount\n         */\n        /**\n         * The fill of the progress indicator. Defaults to a darkened variety of the\n         * main color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @apioption series.gantt.data.completed.fill\n         */\n        /**\n         * The ID of the point (task) that this point depends on in Gantt charts.\n         * Aliases [connect](series.xrange.data.connect). Can also be an object,\n         * specifying further connecting [options](series.gantt.connectors) between the\n         * points. Multiple connections can be specified by providing an array.\n         *\n         * @sample gantt/demo/project-management\n         *         Dependencies\n         * @sample gantt/pathfinder/demo\n         *         Different connection types\n         *\n         * @type      {string|Array<string|*>|*}\n         * @extends   series.xrange.data.connect\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.dependency\n         */\n        /**\n         * Whether this point is a milestone. If so, only the `start` option is handled,\n         * while `end` is ignored.\n         *\n         * @sample gantt/gantt/milestones\n         *         Milestones\n         *\n         * @type      {boolean}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.milestone\n         */\n        /**\n         * The ID of the parent point (task) of this point in Gantt charts.\n         *\n         * @sample gantt/demo/subtasks\n         *         Gantt chart with subtasks\n         *\n         * @type      {string}\n         * @since     6.2.0\n         * @product   gantt\n         * @apioption series.gantt.data.parent\n         */\n        /**\n         * @excluding afterAnimate\n         * @apioption series.gantt.events\n         */\n        ''; // adds doclets above to the transpiled file\n\n        return GanttSeries;\n    });\n    _registerModule(_modules, 'Core/Chart/GanttChart.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Defaults.js'], _modules['Core/Utilities.js']], function (Chart, D, U) {\n        /* *\n         *\n         *  (c) 2016-2021 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var getOptions = D.getOptions;\n        var isArray = U.isArray, merge = U.merge, splat = U.splat;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Gantt-optimized chart. Use {@link Highcharts.Chart|Chart} for common charts.\n         *\n         * @requires modules/gantt\n         *\n         * @class\n         * @name Highcharts.GanttChart\n         * @extends Highcharts.Chart\n         */\n        var GanttChart = /** @class */ (function (_super) {\n            __extends(GanttChart, _super);\n            function GanttChart() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initializes the chart. The constructor's arguments are passed on\n             * directly.\n             *\n             * @function Highcharts.GanttChart#init\n             *\n             * @param {Highcharts.Options} userOptions\n             *        Custom options.\n             *\n             * @param {Function} [callback]\n             *        Function to run when the chart has loaded and and all external\n             *        images are loaded.\n             *\n             *\n             * @emits Highcharts.GanttChart#event:init\n             * @emits Highcharts.GanttChart#event:afterInit\n             */\n            GanttChart.prototype.init = function (userOptions, callback) {\n                var defaultOptions = getOptions(), xAxisOptions = userOptions.xAxis, yAxisOptions = userOptions.yAxis;\n                var defaultLinkedTo;\n                // Avoid doing these twice\n                userOptions.xAxis = userOptions.yAxis = void 0;\n                var options = merge(true, {\n                    chart: {\n                        type: 'gantt'\n                    },\n                    title: {\n                        text: ''\n                    },\n                    legend: {\n                        enabled: false\n                    },\n                    navigator: {\n                        series: { type: 'gantt' },\n                        // Bars were clipped, #14060.\n                        yAxis: {\n                            type: 'category'\n                        }\n                    }\n                }, userOptions, // user's options\n                // forced options\n                {\n                    isGantt: true\n                });\n                userOptions.xAxis = xAxisOptions;\n                userOptions.yAxis = yAxisOptions;\n                // apply X axis options to both single and multi x axes\n                // If user hasn't defined axes as array, make it into an array and add a\n                // second axis by default.\n                options.xAxis = (!isArray(userOptions.xAxis) ?\n                    [userOptions.xAxis || {}, {}] :\n                    userOptions.xAxis).map(function (xAxisOptions, i) {\n                    if (i === 1) { // Second xAxis\n                        defaultLinkedTo = 0;\n                    }\n                    return merge(defaultOptions.xAxis, {\n                        grid: {\n                            enabled: true\n                        },\n                        opposite: true,\n                        linkedTo: defaultLinkedTo\n                    }, xAxisOptions, // user options\n                    {\n                        type: 'datetime'\n                    });\n                });\n                // apply Y axis options to both single and multi y axes\n                options.yAxis = (splat(userOptions.yAxis || {})).map(function (yAxisOptions) { return merge(defaultOptions.yAxis, // #3802\n                {\n                    grid: {\n                        enabled: true\n                    },\n                    staticScale: 50,\n                    reversed: true,\n                    // Set default type treegrid, but only if 'categories' is\n                    // undefined\n                    type: yAxisOptions.categories ? yAxisOptions.type : 'treegrid'\n                }, yAxisOptions // user options\n                ); });\n                _super.prototype.init.call(this, options, callback);\n            };\n            return GanttChart;\n        }(Chart));\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        (function (GanttChart) {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable jsdoc/check-param-names */\n            /**\n             * The factory function for creating new gantt charts. Creates a new {@link\n             * Highcharts.GanttChart|GanttChart} object with different default options\n             * than the basic Chart.\n             *\n             * @example\n             * // Render a chart in to div#container\n             * let chart = Highcharts.ganttChart('container', {\n             *     title: {\n             *         text: 'My chart'\n             *     },\n             *     series: [{\n             *         data: ...\n             *     }]\n             * });\n             *\n             * @function Highcharts.ganttChart\n             *\n             * @param {string|Highcharts.HTMLDOMElement} renderTo\n             *        The DOM element to render to, or its id.\n             *\n             * @param {Highcharts.Options} options\n             *        The chart options structure.\n             *\n             * @param {Highcharts.ChartCallbackFunction} [callback]\n             *        Function to run when the chart has loaded and and all external\n             *        images are loaded. Defining a\n             *        [chart.events.load](https://api.highcharts.com/highcharts/chart.events.load)\n             *        handler is equivalent.\n             *\n             * @return {Highcharts.GanttChart}\n             *         Returns the Chart object.\n             */\n            function ganttChart(a, b, c) {\n                return new GanttChart(a, b, c);\n            }\n            GanttChart.ganttChart = ganttChart;\n            /* eslint-enable jsdoc/check-param-names */\n        })(GanttChart || (GanttChart = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return GanttChart;\n    });\n    _registerModule(_modules, 'Extensions/ArrowSymbols.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2017 Highsoft AS\n         *  Authors: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Creates an arrow symbol. Like a triangle, except not filled.\n         * ```\n         *                   o\n         *             o\n         *       o\n         * o\n         *       o\n         *             o\n         *                   o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the arrow\n         *\n         * @param {number} y\n         *        y position of the arrow\n         *\n         * @param {number} w\n         *        width of the arrow\n         *\n         * @param {number} h\n         *        height of the arrow\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function arrow(x, y, w, h) {\n            return [\n                ['M', x, y + h / 2],\n                ['L', x + w, y],\n                ['L', x, y + h / 2],\n                ['L', x + w, y + h]\n            ];\n        }\n        /**\n         * Creates a half-width arrow symbol. Like a triangle, except not filled.\n         * ```\n         *       o\n         *    o\n         * o\n         *    o\n         *       o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the arrow\n         *\n         * @param {number} y\n         *        y position of the arrow\n         *\n         * @param {number} w\n         *        width of the arrow\n         *\n         * @param {number} h\n         *        height of the arrow\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function arrowHalf(x, y, w, h) {\n            return arrow(x, y, w / 2, h);\n        }\n        /**\n         * @private\n         */\n        function compose(SVGRendererClass) {\n            if (U.pushUnique(composedMembers, SVGRendererClass)) {\n                var symbols = SVGRendererClass.prototype.symbols;\n                symbols.arrow = arrow;\n                symbols['arrow-filled'] = triangleLeft;\n                symbols['arrow-filled-half'] = triangleLeftHalf;\n                symbols['arrow-half'] = arrowHalf;\n                symbols['triangle-left'] = triangleLeft;\n                symbols['triangle-left-half'] = triangleLeftHalf;\n            }\n        }\n        /**\n         * Creates a left-oriented triangle.\n         * ```\n         *             o\n         *       ooooooo\n         * ooooooooooooo\n         *       ooooooo\n         *             o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the triangle\n         *\n         * @param {number} y\n         *        y position of the triangle\n         *\n         * @param {number} w\n         *        width of the triangle\n         *\n         * @param {number} h\n         *        height of the triangle\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function triangleLeft(x, y, w, h) {\n            return [\n                ['M', x + w, y],\n                ['L', x, y + h / 2],\n                ['L', x + w, y + h],\n                ['Z']\n            ];\n        }\n        /**\n         * Creates a half-width, left-oriented triangle.\n         * ```\n         *       o\n         *    oooo\n         * ooooooo\n         *    oooo\n         *       o\n         * ```\n         *\n         * @private\n         * @function\n         *\n         * @param {number} x\n         *        x position of the triangle\n         *\n         * @param {number} y\n         *        y position of the triangle\n         *\n         * @param {number} w\n         *        width of the triangle\n         *\n         * @param {number} h\n         *        height of the triangle\n         *\n         * @return {Highcharts.SVGPathArray}\n         *         Path array\n         */\n        function triangleLeftHalf(x, y, w, h) {\n            return triangleLeft(x, y, w / 2, h);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ArrowSymbols = {\n            compose: compose\n        };\n\n        return ArrowSymbols;\n    });\n    _registerModule(_modules, 'Extensions/CurrentDateIndication.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2016-2021 Highsoft AS\n         *\n         *  Author: Lars A. V. Cabrera\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, merge = U.merge, wrap = U.wrap;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /**\n         * Show an indicator on the axis for the current date and time. Can be a\n         * boolean or a configuration object similar to\n         * [xAxis.plotLines](#xAxis.plotLines).\n         *\n         * @sample gantt/current-date-indicator/demo\n         *         Current date indicator enabled\n         * @sample gantt/current-date-indicator/object-config\n         *         Current date indicator with custom options\n         *\n         * @declare   Highcharts.CurrentDateIndicatorOptions\n         * @type      {boolean|CurrentDateIndicatorOptions}\n         * @default   true\n         * @extends   xAxis.plotLines\n         * @excluding value\n         * @product   gantt\n         * @apioption xAxis.currentDateIndicator\n         */\n        var defaultOptions = {\n            color: \"#ccd3ff\" /* Palette.highlightColor20 */,\n            width: 2,\n            /**\n             * @declare Highcharts.AxisCurrentDateIndicatorLabelOptions\n             */\n            label: {\n                /**\n                 * Format of the label. This options is passed as the fist argument to\n                 * [dateFormat](/class-reference/Highcharts.Time#dateFormat) function.\n                 *\n                 * @type      {string}\n                 * @default   %a, %b %d %Y, %H:%M\n                 * @product   gantt\n                 * @apioption xAxis.currentDateIndicator.label.format\n                 */\n                format: '%a, %b %d %Y, %H:%M',\n                formatter: function (value, format) {\n                    return this.axis.chart.time.dateFormat(format || '', value);\n                },\n                rotation: 0,\n                /**\n                 * @type {Highcharts.CSSObject}\n                 */\n                style: {\n                    /** @internal */\n                    fontSize: '0.7em'\n                }\n            }\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, PlotLineOrBandClass) {\n            if (U.pushUnique(composedMembers, AxisClass)) {\n                addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n            }\n            if (U.pushUnique(composedMembers, PlotLineOrBandClass)) {\n                addEvent(PlotLineOrBandClass, 'render', onPlotLineOrBandRender);\n                wrap(PlotLineOrBandClass.prototype, 'getLabelText', wrapPlotLineOrBandGetLabelText);\n            }\n        }\n        /**\n         * @private\n         */\n        function onAxisAfterSetOptions() {\n            var options = this.options, cdiOptions = options.currentDateIndicator;\n            if (cdiOptions) {\n                var plotLineOptions = typeof cdiOptions === 'object' ?\n                    merge(defaultOptions, cdiOptions) :\n                    merge(defaultOptions);\n                plotLineOptions.value = Date.now();\n                plotLineOptions.className = 'highcharts-current-date-indicator';\n                if (!options.plotLines) {\n                    options.plotLines = [];\n                }\n                options.plotLines.push(plotLineOptions);\n            }\n        }\n        /**\n         * @private\n         */\n        function onPlotLineOrBandRender() {\n            // If the label already exists, update its text\n            if (this.label) {\n                this.label.attr({\n                    text: this.getLabelText(this.options.label)\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function wrapPlotLineOrBandGetLabelText(defaultMethod, defaultLabelOptions) {\n            var options = this.options;\n            if (options &&\n                options.className &&\n                options.className.indexOf('highcharts-current-date-indicator') !== -1 &&\n                options.label &&\n                typeof options.label.formatter === 'function') {\n                options.value = Date.now();\n                return options.label.formatter\n                    .call(this, options.value, options.label.format);\n            }\n            return defaultMethod.call(this, defaultLabelOptions);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var CurrentDateIndication = {\n            compose: compose\n        };\n\n        return CurrentDateIndication;\n    });\n    _registerModule(_modules, 'masters/modules/gantt.src.js', [_modules['Core/Globals.js'], _modules['Gantt/Connection.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Gantt/Pathfinder.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Stock/RangeSelector/RangeSelector.js'], _modules['Extensions/StaticScale.js'], _modules['Series/XRange/XRangeSeries.js'], _modules['Core/Chart/GanttChart.js'], _modules['Extensions/ArrowSymbols.js'], _modules['Extensions/CurrentDateIndication.js']], function (Highcharts, Connection, Navigator, Pathfinder, Scrollbar, RangeSelector, StaticScale, XRangeSeries, GanttChart, ArrowSymbols, CurrentDateIndication) {\n\n        var G = Highcharts;\n        // Classes\n        G.Connection = Connection;\n        G.GanttChart = GanttChart;\n        G.ganttChart = GanttChart.ganttChart;\n        G.Navigator = Navigator;\n        G.Pathfinder = Pathfinder;\n        G.RangeSelector = RangeSelector;\n        G.Scrollbar = Scrollbar;\n        // Compositions\n        ArrowSymbols.compose(G.SVGRenderer);\n        CurrentDateIndication.compose(G.Axis, G.PlotLineOrBand);\n        Pathfinder.compose(G.Chart, G.Point);\n        Navigator.compose(G.Axis, G.Chart, G.Series);\n        RangeSelector.compose(G.Axis, G.Chart);\n        Scrollbar.compose(G.Axis);\n        XRangeSeries.compose(G.Axis);\n        StaticScale.compose(G.Axis, G.Chart);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","H","U","defined","error","merge","objectEach","deg2rad","max","Math","min","Connection","from","to","options","chart","fromPoint","graphics","pathfinder","toPoint","init","prototype","series","renderPath","attribs","animation","styledMode","animate","forExport","anim","pathGraphic","connection","group","renderer","g","addClass","attr","zIndex","add","seriesGroup","translate","plotLeft","plotTop","opacity","d","addMarker","type","markerVector","radians","rotation","box","width","height","pathVector","segment","point","anchor","getPathfinderAnchorPoint","enabled","length","x","y","getRadiansToVector","getMarkerVector","radius","rotationOriginX","rotationOriginY","symbol","colorIndex","fill","color","stroke","lineColor","lineWidth","getPath","algorithm","algorithms","chartObstacles","obstacles","requiresObstacles","getChartObstacles","connectors","algorithmMargin","chartObstacleMetrics","getObstacleMetrics","startMarker","endMarker","lineObstacles","obstacleMetrics","hardBounds","xMin","xMax","plotWidth","yMin","yMax","plotHeight","obstacleOptions","margin","startDirectionX","getAlgorithmStartDirection","render","dashStyle","dashstyle","marker","ceil","pathResult","concat","destroy","val","isTouchDevice","addEvent","correctFloat","isNumber","pick","composedMembers","onAxisInit","axis","navigatorAxis","NavigatorAxisAdditions","onAxisZoom","e","chartOptions","navigator","pinchType","zooming","rangeSelector","zoomType","isXAxis","zoomed","range","previousZoom","newMin","newMax","preventDefault","compose","AxisClass","pushUnique","keepProps","push","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","horiz","fixedRange","halfPointRange","pointRange","dataMin","dataMax","Color","SeriesRegistry","parse","seriesTypes","maskInside","handles","symbols","backgroundColor","borderColor","maskFill","setOpacity","get","outlineColor","outlineWidth","areaspline","fillOpacity","compare","sonification","dataGrouping","approximation","groupPixelWidth","firstAnchor","lastAnchor","units","dataLabels","id","className","threshold","xAxis","overscroll","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","labels","align","style","fontSize","textOutline","crosshair","yAxis","startOnTick","endOnTick","minPadding","maxPadding","title","text","tickWidth","_x","_y","halfWidth","markerPosition","round","D","NavigatorDefaults","NavigatorSymbols","RendererRegistry","NavigatorConstructor","defaultOptions","setOptions","getRendererType","extend","onChartAfterAddSeries","setBaseSeries","onChartAfterSetChartSize","_a","legendOptions","legend","scrollbarHeight","scrollButtonSize","inverted","left","opposite","chartWidth","spacing","top","navigatorOptions","chartHeight","scrollbar","extraBottomMargin","getHeight","verticalAlign","layout","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","redraw","onChartBeforeRender","onChartBeforeShowResetZoom","onChartCallback","extremes","getExtremes","onChartUpdate","scrollbarOptions","onSeriesAfterUpdate","isInternal","ChartClass","NavigatorClass","SeriesClass","chartProto","callbacks","ScrollbarAxis","Scrollbar","axisMin","axisMax","scrollMin","Infinity","scrollMax","onAxisAfterGetOffset","index","scrollbarsOffsets","axisOffset","size","onAxisAfterInit","vertical","unitedMin","unitedMax","reversed","shouldUpdateExtremes","DOMType","setExtremes","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","destroyObjectProperties","fireEvent","removeEvent","_events","chartX","chartY","scrollbarButtons","scrollbarGroup","scrollbarLeft","scrollbarRifles","scrollbarStrokeWidth","scrollbarTop","track","userOptions","swapXY","forEach","seg","temp","len","i","addEvents","buttonsOrder","buttons","bar","element","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","hasTouch","updatePosition","trigger","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","rect","crisp","r","strokeWidth","arrow","pointer","normalize","mousePosition","initPositions","grabbedCenter","change","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","fromPX","newSize","fullWidth","toPX","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","update","Axis","NavigatorComposition","clamp","erase","find","isArray","splat","numExt","extreme","_i","arguments","numbers","filter","call","Navigator","baseSeries","navigatorEnabled","navigatorGroup","navigatorSeries","navigatorSize","outline","shades","zoomedMax","zoomedMin","drawHandle","verb","parseInt","drawOutline","verticalMin","halfOutline","outlineCorrection","navigatorTop","lineTop","lineBtm","drawMasks","navigatorHeight","shade","renderElements","mouseCursor","cursor","visibility","hasMask","css","handlesOptions_1","height_1","width_1","navigatorWidth","scrollbarXAxis","fake","minRange","maxRange","toPixels","abs","toValue","currentRange","grabbedLeft","grabbedRight","fixedWidth","addMouseEvents","container","eventsToUnbind","onMouseMove","onMouseUp","getPartsEvents","renderTo","modifyNavigatorAxisExtremes","eventName","events","name","navigatorItem","shadesMousedown","ext","navigatorPosition","dragOffset","reversedExtremes","getUnionExtremes","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","setTimeout","unionExtremes","triggerOp","Object","keys","unbind","removeBaseSeriesEvents","adaptToUpdatedData","updatedDataHandler","modifyBaseAxisExtremes","scrollbarEnabled","Boolean","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","breaks","ordinal","keepOrdinalPadding","zoomEnabled","offsets","alignTicks","data","updateNavigatorSeries","unbindRedraw","value","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","returnFalseOnNoBaseSeries","ret","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","s","showInNavigator","baseOptions","mergedNavSeriesOptions","baseNavigatorOptions","navSeriesMixin","enableMouseTracking","linkedTo","padXAxis","showInLegend","stacking","states","inactive","navSeries","base","indexOf","chartNavigatorSeriesOptions","linkedNavSeries","userNavOptions","visible","plotOptions","navigatorSeriesData","hasNavigatorData","slice","initSeries","userSeriesOptions","colors","_this","setVisible","remove","getBaseSeriesMin","currentSeriesMin","reduce","xData","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","hasSetExtremes","eventArgs","Number","MAX_VALUE","userMin","userMax","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","applyRadius","prevSeg","nextSeg","x1","y1","x2","y2","directionX","directionY","getLinkPath","pathParams","_b","parentVisible","straight","curved","_c","PathUtilities","findLastObstacleBefore","startIx","cmp","right","findObstacleFromPoint","obstacle","pathFromSegments","segments","start","end","limitObstacleToBounds","bounds","simpleConnect","endSegment","startObstacle","waypoint","useMax","endPoint","startObstacleIx","endObstacleIx","dir","copyFromPoint","fromKey","toKey","getMeOut","prevWaypoint","waypoint2","fastAvoid","dirIsX","extractedEndPoint","endSegments","metrics","softMinX","maxWidth","softMaxX","softMinY","maxHeight","softMaxY","forceObstacleBreak","pivotPoint","directionIsX","firstPoint","lastPoint","highestPoint","lowestPoint","searchDirection","getDodgeDirection","softBounds","soft","hard","toPointMax","toPointMin","maxOutOfSoftBounds","minOutOfSoftBounds","maxOutOfHardBounds","minOutOfHardBounds","minDistance","maxDistance","minPivot","maxPivot","clearPathTo","pivot","waypointUseMax","envelopingObstacle","secondEnvelopingObstacle","envelopWaypoint","obstacleMargin","inside","ConnectorsDefaults","ConnectionComposition","getPointBB","shapeArgs","bb","graphic","getBBox","plotX","plotY","pointGetPathfinderAnchorPoint","markerOptions","pointGetRadiansToVector","v1","v2","atan2","pointGetMarkerVector","markerRadius","twoPI","PI","rectWidth","rectHeight","rAtan","rectHalfWidth","rectHalfHeight","rectHorizontalCenter","rectVerticalCenter","edgePoint","theta","tanTheta","leftOrRightRegion","xFactor","yFactor","tan","cos","sin","PathfinderClass","PointClass","acc","pointProto","PathfinderAlgorithms","PathfinderComposition","Point","Pathfinder","connections","deferRender","oldConnections","points","ganttPointOptions","dependency","connect","connects","isInside","j","k","found","lenOld","lenNew","oldCon","newCon","renderConnections","conns","pathfinderRemoveRenderEvent","calculatedMargin","sLen","pLen","sort","a","b","calculateObstacleMargin","onstacleDistance","distances","calculateObstacleDistance","bbMargin","yOverlap","xOverlap","xDistance","yDistance","xCenter","yCenter","lang","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","allButtonsEnabled","buttonSpacing","dropdown","buttonTheme","padding","inputBoxBorderColor","inputBoxHeight","inputBoxWidth","inputDateFormat","inputDateParser","inputEditDateFormat","inputEnabled","inputPosition","inputSpacing","selected","buttonPosition","inputStyle","labelStyle","RangeSelectorDefaults","RangeSelectorConstructor","chartDestroyEvents","axisMinFromRange","rangeOptions","time","getTrueRange","count","timeName","date","Date","basePeriod","set","getTime","MIN_VALUE","_offsetMin","onChartAfterGetContainer","deferredYTDClick","clickButton","updateNames","setScale","getAxisMargins","extraTopMargin","alignTo","display","spacingBox","placed","onChartDestroy","iEnd","splice","onChartGetMargins","rangeSelectorHeight","marginBottom","onChartRender","optionsRangeSelector","extraBottomMarginWas","extraTopMarginWas","RangeSelectorClass","minFromRange","RangeSelectorComposition","SVGElement","createElement","discardElement","pad","pInt","RangeSelector","buttonOptions","defaultButtons","initialButtonGroupWidth","baseXAxisOptions","rangeMin","minSetting","rangeSetting","ctx","ytdExtremes","_range","addOffsetMin","setSelected","forcedDataGrouping","setDataGrouping","frozenStates","preserveDataGrouping","getYTDExtremes","useUTC","_offsetMax","selectedIndex","rangeSelectorButton","selectedOption","blurInputs","minInput","maxInput","blur","computeButtonRange","updateButtonStates","actualRange","hasNoData","hasVisibleSeries","day","ytdMin","ytdMax","selectedExists","button","offsetRange","isSelected","isTooGreatRange","isTooSmallRange","state","isYTDButNotSelected","isAllButAlreadyShowingAll","isSameRange","month","year","disable","select","setState","disabled","fixedTimes","millisecond","second","minute","hour","week","offsetMin","offsetMax","getInputValue","input","defaultInputDateParser","setInputValue","inputTime","dateBox","minDateBox","maxDateBox","hcTimeAttr","getAttribute","updatedTime","previousTime","setAttribute","dateFormat","inputTypeFormats","setInputExtremes","format","showInput","inputGroup","isTextInput","_d","_e","_f","border","offsetWidth","offsetHeight","hideInput","inputDate","str","split","join","isSafari","lastIndexOf","getTimezoneOffset","parts","UTC","drawInput","div","chartStyle","isMin","updateExtremes","chartAxis","label","on","focus","preferredInputType","some","char","boxShadow","textAlign","fontFamily","onfocus","onblur","doc","activeElement","keyDown","onchange","onkeypress","keyCode","onkeydown","onkeyup","getPosition","buttonTop","inputTop","now","startOfYear","ts","inputsZIndex","renderButtons","parentNode","insertBefore","minElems","minLabel","maxElems","maxLabel","x_1","alignElements","buttonGroup","isMS","currentButtonIndex","zoomText","paddingLeft","paddingRight","textContent","textStr","callDefaultEvent","buttonEvents","click","isActive","hover","navButtonOptions","exporting","navigation","getXOffsetForExportButton","titleCollision","positionButtons","xOffsetForExportButton_1","alignButtonGroup","hasLoaded","xOffsetForExportButton","handleCollision","alignTranslateY","alignAttr","groupHeight","marginTop","buttonLeft","maxButtonWidth","buttonWidth","bBox","groupsOverlap","buttonGroupWidth","inputGroupX","alignOptions","inputGroupWidth","buttonGroupX","moveInputsDown","collapseButtons","expandButtons","userButtonTheme","getAttribs","hasActiveButton","showDropdown","hideDropdown","hasVisibleDropdown","rangeSelectorGroup","yPosition","buttonPositionY","inputPositionY","subtitle","rSelector","key","HTMLElement","onAxisAfterSetOptions","staticScale","scrollablePlotArea","minHeight","chartAdjustHeight","redrawTrigger","_loop_1","chart_1","initiatedScale","brokenAxis","unitLength","tickInterval","diff","scrollablePixelsY","setSize","clipRect","sharedClipKey","sharedClips","adjustHeight","isObject","colorByPoint","formatter","amount","partialFill","tooltip","headerFormat","pointFormat","borderRadius","extendStatics","__extends","setPrototypeOf","__proto__","Array","p","TypeError","String","__","constructor","create","ColumnPoint","column","pointClass","XRangePoint","_super","getColorByCategory","colorCount","resolveColor","drawPoint","getAnimationVerb","getLabelConfig","cfg","yCats","categories","yCategory","category","isValid","ttBelow","tooltipDateKeys","XRangeSeriesDefaults","noop","ColumnSeries","relativeLength","onAxisAfterGetSeriesExtremes","modMax","x2Data","XRangeSeries","getColumnMetrics","swapAxes","cropData","yData","crop","findPointIndex","pointIndex","cropStart","touched","cropped","alignDataLabel","oldPlotX","dlBox","centerX","translatePoint","widthDifference","dlLeft","dlRight","dlWidth","clipRectWidth","columnMetrics","minPointLength","oldColWidth","seriesXOffset","pointXOffset","posX","plotX2","crisper","borderWidth","pointHeight","pointWidth","pointPlacement","tooltipPos","xIndex","yIndex","tooltipYOffset","partShapeArgs","clipRectArgs","seriesOpts","shapeType","pointState","stateOpts","pointStateVerb","pointAttr","pointAttribs","pfOptions","isNull","getClassName","partRect","partialClipRect","clip","shadow","brighten","drawPoints","pointCount","animationLimit","isPointInside","pointArrayMap","getExtremesFromAll","parallelArrays","requireSorting","autoIncrement","buildKDTree","registerSeriesType","xrange","GanttPoint","setGanttPointAliases","addIfExists","completed","applyOptions","ganttPoint","milestone","StackItem","BrokenAxis","setBreaks","hasBreaks","onAxisAfterSetTickPositions","tickPositions","info","newPositions","isInAnyBreak","Additions","onSeriesAfterGeneratePoints","isDirty","connectNulls","isPointInBreak","onSeriesAfterRender","drawBreaks","seriesDrawBreaks","brokenAxis_1","breakArray","breaksOutOfRange","brk","isOut","otherBreak","toUpperCase","seriesGappedPath","currentDataGrouping","groupingSize","gapSize","gapUnit","basePointRange","current","next","xRange","stack","stacks","stackKey","stackLabels","total","getGraphPath","seriesProto","gappedPath","isInBreak","repeat","test","inclusive","lin2Val","nval","val2Lin","findBreakAt","testKeep","inbrk","keep","showPoints","forceRedraw","val2lin","lin2val","eventArguments","breaks_1","axisBreak","setAxisTranslation","inBrk_1","repeat_1","start_1","i_1","breaks_2","breakArrayT_1","breakArray_1","pointRangePadding","length_1","min_1","max_1","move","breakSize","transA","minPixelPadding","minPointOffset","GridAxisSide","dateFormats","timeUnits","wrap","getMaxLabelDimensions","ticks","dimensions","pos","tick","labelHeight","labelWidth","textPxLength","treeGrid","mapOfPosToGridNode","treeDepth","indentation","onAfterGetOffset","grid","columns","getOffset","onAfterGetTitlePosition","gridOptions","axisTitle","axisHeight","axisLeft","options_1","axisTop","axisWidth","tickSize","titleWidth","xOption","yOption","titleMargin","titleFontSize","fontMetrics","f","offAxis","side","bottom","titlePosition","onAfterInit","showLastLabel","labelRotation","minTickInterval","columnIndex","columnOptions","isColumn","onAfterRender","maxLabelDimensions","rightWall","isOuterAxis","axisLine","linePath","getLinePath","startPoint","distance","marginRight","upperBorderEndPoint","upperBorderPath","lowerBorderEndPoint","tickmarkOffset","lowerBorderPath","upperBorder","renderBorder","lowerBorder","axisLineExtra","showAxis","hasRendered","linkedParent","lastTick","firstTick","tickMark","hiddenLabels","pop","hiddenMarks","mark","isLast","onAfterSetAxisTranslation","tickInfo","userLabels","dateTimeLabelFormats","unitName","onAfterSetOptions","gridAxisOptions","list","reserveSpace","tickPositioner","parentInfo","unitIdx","unit_1","unit","counts","unitRange","getTimeTicks","startOfWeek","onAfterSetOptions2","onAfterSetScale","onAfterTickSize","labelPadding","cellHeight","onDestroy","keepEvents","onInit","tickColor","GridAxisAdditions","onTickAfterGetLabelPosition","labelOpts","tickPos","nextTickPos","crispCorr","top_1","slotWidth","lblMetrics","useHTML","lines","h","onTickLabelFormat","isFirst","pointCopy","is","gantt","onTrimTicks","categoryAxis","firstPos","lastPos","linkedMin","linkedMax","isLinked","wrapUnsquish","proceed","parentAxis","thisIndex","lastIndex","otherAxis","extraBorderLine","axisBorder","E","timestamp","charAt","W","unitsToOmit","firstDay","thursday","valueOf","firstThursday","toString","TickClass","getNode","parent","level","mapOfIdToChildren","after","before","node","depth","descendants","children","map","child","childStart","NaN","childEnd","getTree","prev","curr","onTickInit","TreeGridTickAdditions","wrapGetLabelPosition","labelOptions","symbolOptions","lbOptions","isTreeGrid","result","wrapRenderLabel","params","isNew","labelBox","iconCenter","shouldRender","icon","collapsed","addClassName","removeClassName","prefixClassName","isCollapsed","styles","parentGroup","xy","labelIcon","removeClass","object","attachedTreeGridEvents","textDecoration","toggleCollapse","collapse","expand","getColor","colorVariation","colorIndexByPoint","mapOptionsToLevel","parentColor","parentColorIndex","siblings","chartOptionsChart","getLevelOptions","defaults","converted","levels","item","levelIsConstant","setTreeValues","tree","idRoot","nodeRoot","mapIdToNode","optionsPoint","childrenTotal","levelDynamic","newOptions","isLeaf","updateRootId","rootId","rootNode","GridAxis","Tree","TreeGridTick","TU","TickConstructor","isString","getBreakFromNode","collapseEnd","collapseStart","getTreeGridFromData","uniqueNames","numberOfSeries","setValues","collapsedNodes","mapOfIdToNode","uniqueNamesEnabled","posIterator","gridNode","parentGridNode","nodes","seriesIndex","onBeforeRender","target","isDirtyData","arr","optionsToObject","hasNames","axisData","wrapGenerateTick","levelOptions","parameters","addLabel","wrapInit","TreeGridAxisAdditions","n","fontWeight","wrapSetTickInterval","getTickPositions","axisProps","utils","setCollapsedStatus","dataPoint","roundedMin","roundedMax","Chart","Tick","TreeGridAxis","Series","GanttSeries","diamondShape","cutOff","diamond","grouping","pointFormatter","formats","tooltipOptions","ttOptions","xDateFormat","retVal","tooltipFormatter","getDateFormat","closestPointRange","GanttChart","getOptions","callback","defaultLinkedTo","xAxisOptions","yAxisOptions","isGantt","ganttChart","c","w","arrowHalf","triangleLeft","triangleLeftHalf","SVGRendererClass","cdiOptions","currentDateIndicator","plotLineOptions","plotLines","onPlotLineOrBandRender","getLabelText","wrapPlotLineOrBandGetLabelText","defaultMethod","defaultLabelOptions","PlotLineOrBandClass","StaticScale","ArrowSymbols","CurrentDateIndication","G","SVGRenderer","PlotLineOrBand"],"mappings":"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"}