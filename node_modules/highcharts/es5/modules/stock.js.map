{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * Highcharts Stock as a plugin for Highcharts\n *\n * (c) 2010-2021 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/stock', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Axis/BrokenAxis.js', [_modules['Core/Axis/Stacking/StackItem.js'], _modules['Core/Utilities.js']], function (StackItem, U) {\n        /* *\n         *\n         *  (c) 2009-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Axis with support of broken data rows.\n         * @private\n         */\n        var BrokenAxis;\n        (function (BrokenAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedMembers = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Adds support for broken axes.\n             * @private\n             */\n            function compose(AxisClass, SeriesClass) {\n                if (U.pushUnique(composedMembers, AxisClass)) {\n                    AxisClass.keepProps.push('brokenAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterSetTickPositions', onAxisAfterSetTickPositions);\n                    addEvent(AxisClass, 'afterSetOptions', onAxisAfterSetOptions);\n                }\n                if (U.pushUnique(composedMembers, SeriesClass)) {\n                    var seriesProto = SeriesClass.prototype;\n                    seriesProto.drawBreaks = seriesDrawBreaks;\n                    seriesProto.gappedPath = seriesGappedPath;\n                    addEvent(SeriesClass, 'afterGeneratePoints', onSeriesAfterGeneratePoints);\n                    addEvent(SeriesClass, 'afterRender', onSeriesAfterRender);\n                }\n                return AxisClass;\n            }\n            BrokenAxis.compose = compose;\n            /**\n             * @private\n             */\n            function onAxisAfterInit() {\n                if (typeof this.brokenAxis !== 'undefined') {\n                    this.brokenAxis.setBreaks(this.options.breaks, false);\n                }\n            }\n            /**\n             * Force Axis to be not-ordinal when breaks are defined.\n             * @private\n             */\n            function onAxisAfterSetOptions() {\n                var _a;\n                var axis = this;\n                if ((_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    axis.options.ordinal = false;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisAfterSetTickPositions() {\n                var axis = this, brokenAxis = axis.brokenAxis;\n                if (brokenAxis === null || brokenAxis === void 0 ? void 0 : brokenAxis.hasBreaks) {\n                    var tickPositions = axis.tickPositions, info = axis.tickPositions.info, newPositions = [];\n                    for (var i = 0; i < tickPositions.length; i++) {\n                        if (!brokenAxis.isInAnyBreak(tickPositions[i])) {\n                            newPositions.push(tickPositions[i]);\n                        }\n                    }\n                    axis.tickPositions = newPositions;\n                    axis.tickPositions.info = info;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInit() {\n                var axis = this;\n                if (!axis.brokenAxis) {\n                    axis.brokenAxis = new Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterGeneratePoints() {\n                var _a, _b;\n                var _c = this, isDirty = _c.isDirty, connectNulls = _c.options.connectNulls, points = _c.points, xAxis = _c.xAxis, yAxis = _c.yAxis;\n                // Set, or reset visibility of the points. Axis.setBreaks marks\n                // the series as isDirty\n                if (isDirty) {\n                    var i = points.length;\n                    while (i--) {\n                        var point = points[i];\n                        // Respect nulls inside the break (#4275)\n                        var nullGap = point.y === null && connectNulls === false;\n                        var isPointInBreak = (!nullGap && (((_a = xAxis === null || xAxis === void 0 ? void 0 : xAxis.brokenAxis) === null || _a === void 0 ? void 0 : _a.isInAnyBreak(point.x, true)) ||\n                            ((_b = yAxis === null || yAxis === void 0 ? void 0 : yAxis.brokenAxis) === null || _b === void 0 ? void 0 : _b.isInAnyBreak(point.y, true))));\n                        // Set point.visible if in any break.\n                        // If not in break, reset visible to original value.\n                        point.visible = isPointInBreak ?\n                            false :\n                            point.options.visible !== false;\n                    }\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesAfterRender() {\n                this.drawBreaks(this.xAxis, ['x']);\n                this.drawBreaks(this.yAxis, pick(this.pointArrayMap, ['y']));\n            }\n            /**\n             * @private\n             */\n            function seriesDrawBreaks(axis, keys) {\n                var _a;\n                var series = this, points = series.points;\n                var breaks, threshold, y;\n                if ((_a = axis === null || axis === void 0 ? void 0 : axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks) {\n                    var brokenAxis_1 = axis.brokenAxis;\n                    keys.forEach(function (key) {\n                        var _a, _b;\n                        breaks = (brokenAxis_1 === null || brokenAxis_1 === void 0 ? void 0 : brokenAxis_1.breakArray) || [];\n                        threshold = axis.isXAxis ?\n                            axis.min :\n                            pick(series.options.threshold, axis.min);\n                        // Array of breaks that have been \"zoomed-out\" which means that\n                        // they were shown previously, but now after zoom, they are not\n                        // (#19885).\n                        var breaksOutOfRange = (_b = (_a = axis === null || axis === void 0 ? void 0 : axis.options) === null || _a === void 0 ? void 0 : _a.breaks) === null || _b === void 0 ? void 0 : _b.filter(function (brk) {\n                            var isOut = true;\n                            // Iterate to see if \"brk\" is in axis range\n                            for (var i = 0; i < breaks.length; i++) {\n                                var otherBreak = breaks[i];\n                                if (otherBreak.from === brk.from &&\n                                    otherBreak.to === brk.to) {\n                                    isOut = false;\n                                    break;\n                                }\n                            }\n                            return isOut;\n                        });\n                        points.forEach(function (point) {\n                            y = pick(point['stack' + key.toUpperCase()], point[key]);\n                            breaks.forEach(function (brk) {\n                                if (isNumber(threshold) && isNumber(y)) {\n                                    var eventName = '';\n                                    if ((threshold < brk.from && y > brk.to) ||\n                                        (threshold > brk.from && y < brk.from)) {\n                                        eventName = 'pointBreak';\n                                    }\n                                    else if ((threshold < brk.from &&\n                                        y > brk.from &&\n                                        y < brk.to) || (threshold > brk.from &&\n                                        y > brk.to &&\n                                        y < brk.from)) {\n                                        eventName = 'pointInBreak';\n                                    }\n                                    if (eventName) {\n                                        fireEvent(axis, eventName, { point: point, brk: brk });\n                                    }\n                                }\n                            });\n                            breaksOutOfRange === null || breaksOutOfRange === void 0 ? void 0 : breaksOutOfRange.forEach(function (brk) {\n                                fireEvent(axis, 'pointOutsideOfBreak', { point: point, brk: brk });\n                            });\n                        });\n                    });\n                }\n            }\n            /**\n             * Extend getGraphPath by identifying gaps in the data so that we\n             * can draw a gap in the line or area. This was moved from ordinal\n             * axis module to broken axis module as of #5045.\n             *\n             * @private\n             * @function Highcharts.Series#gappedPath\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Gapped path\n             */\n            function seriesGappedPath() {\n                var currentDataGrouping = this.currentDataGrouping, groupingSize = currentDataGrouping === null || currentDataGrouping === void 0 ? void 0 : currentDataGrouping.gapSize, points = this.points.slice(), yAxis = this.yAxis;\n                var gapSize = this.options.gapSize, i = points.length - 1, stack;\n                /**\n                 * Defines when to display a gap in the graph, together with the\n                 * [gapUnit](plotOptions.series.gapUnit) option.\n                 *\n                 * In case when `dataGrouping` is enabled, points can be grouped\n                 * into a larger time span. This can make the grouped points to\n                 * have a greater distance than the absolute value of `gapSize`\n                 * property, which will result in disappearing graph completely.\n                 * To prevent this situation the mentioned distance between\n                 * grouped points is used instead of previously defined\n                 * `gapSize`.\n                 *\n                 * In practice, this option is most often used to visualize gaps\n                 * in time series. In a stock chart, intraday data is available\n                 * for daytime hours, while gaps will appear in nights and\n                 * weekends.\n                 *\n                 * @see [gapUnit](plotOptions.series.gapUnit)\n                 * @see [xAxis.breaks](#xAxis.breaks)\n                 *\n                 * @sample {highstock} stock/plotoptions/series-gapsize/\n                 * Setting the gap size to 2 introduces gaps for weekends in\n                 * daily datasets.\n                 *\n                 * @type      {number}\n                 * @default   0\n                 * @product   highstock\n                 * @requires  modules/broken-axis\n                 * @apioption plotOptions.series.gapSize\n                 */\n                /**\n                 * Together with [gapSize](plotOptions.series.gapSize), this\n                 * option defines where to draw gaps in the graph.\n                 *\n                 * When the `gapUnit` is `\"relative\"` (default), a gap size of 5\n                 * means that if the distance between two points is greater than\n                 * 5 times that of the two closest points, the graph will be\n                 * broken.\n                 *\n                 * When the `gapUnit` is `\"value\"`, the gap is based on absolute\n                 * axis values, which on a datetime axis is milliseconds. This\n                 * also applies to the navigator series that inherits gap\n                 * options from the base series.\n                 *\n                 * @see [gapSize](plotOptions.series.gapSize)\n                 *\n                 * @type       {string}\n                 * @default    relative\n                 * @since      5.0.13\n                 * @product    highstock\n                 * @validvalue [\"relative\", \"value\"]\n                 * @requires   modules/broken-axis\n                 * @apioption  plotOptions.series.gapUnit\n                 */\n                if (gapSize && i > 0) { // #5008\n                    // Gap unit is relative\n                    if (this.options.gapUnit !== 'value') {\n                        gapSize *= this.basePointRange;\n                    }\n                    // Setting a new gapSize in case dataGrouping is enabled\n                    // (#7686)\n                    if (groupingSize &&\n                        groupingSize > gapSize &&\n                        // Except when DG is forced (e.g. from other series)\n                        // and has lower granularity than actual points (#11351)\n                        groupingSize >= this.basePointRange) {\n                        gapSize = groupingSize;\n                    }\n                    // extension for ordinal breaks\n                    var current = void 0, next = void 0;\n                    while (i--) {\n                        // Reassign next if it is not visible\n                        if (!(next && next.visible !== false)) {\n                            next = points[i + 1];\n                        }\n                        current = points[i];\n                        // Skip iteration if one of the points is not visible\n                        if (next.visible === false || current.visible === false) {\n                            continue;\n                        }\n                        if (next.x - current.x > gapSize) {\n                            var xRange = (current.x + next.x) / 2;\n                            points.splice(// insert after this one\n                            i + 1, 0, {\n                                isNull: true,\n                                x: xRange\n                            });\n                            // For stacked chart generate empty stack items, #6546\n                            if (yAxis.stacking && this.options.stacking) {\n                                stack = yAxis.stacking.stacks[this.stackKey][xRange] = new StackItem(yAxis, yAxis.options.stackLabels, false, xRange, this.stack);\n                                stack.total = 0;\n                            }\n                        }\n                        // Assign current to next for the upcoming iteration\n                        next = current;\n                    }\n                }\n                // Call base method\n                return this.getGraphPath(points);\n            }\n            /* *\n             *\n             *  Class\n             *\n             * */\n            /**\n             * Provides support for broken axes.\n             * @private\n             * @class\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                function Additions(axis) {\n                    this.hasBreaks = false;\n                    this.axis = axis;\n                }\n                /* *\n                 *\n                 *  Static Functions\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                Additions.isInBreak = function (brk, val) {\n                    var repeat = brk.repeat || Infinity, from = brk.from, length = brk.to - brk.from, test = (val >= from ?\n                        (val - from) % repeat :\n                        repeat - ((from - val) % repeat));\n                    var ret;\n                    if (!brk.inclusive) {\n                        ret = test < length && test !== 0;\n                    }\n                    else {\n                        ret = test <= length;\n                    }\n                    return ret;\n                };\n                /**\n                 * @private\n                 */\n                Additions.lin2Val = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.from >= nval) {\n                            break;\n                        }\n                        else if (brk.to < nval) {\n                            nval += brk.len;\n                        }\n                        else if (Additions.isInBreak(brk, nval)) {\n                            nval += brk.len;\n                        }\n                    }\n                    return nval;\n                };\n                /**\n                 * @private\n                 */\n                Additions.val2Lin = function (val) {\n                    var axis = this;\n                    var brokenAxis = axis.brokenAxis;\n                    var breakArray = brokenAxis && brokenAxis.breakArray;\n                    if (!breakArray || !isNumber(val)) {\n                        return val;\n                    }\n                    var nval = val, brk, i;\n                    for (i = 0; i < breakArray.length; i++) {\n                        brk = breakArray[i];\n                        if (brk.to <= val) {\n                            nval -= brk.len;\n                        }\n                        else if (brk.from >= val) {\n                            break;\n                        }\n                        else if (Additions.isInBreak(brk, val)) {\n                            nval -= (val - brk.from);\n                            break;\n                        }\n                    }\n                    return nval;\n                };\n                /* *\n                 *\n                 *  Functions\n                 *\n                 * */\n                /**\n                 * Returns the first break found where the x is larger then break.from\n                 * and smaller then break.to.\n                 *\n                 * @param {number} x\n                 * The number which should be within a break.\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} breaks\n                 * The array of breaks to search within.\n                 *\n                 * @return {Highcharts.XAxisBreaksOptions|undefined}\n                 * Returns the first break found that matches, returns false if no break\n                 * is found.\n                 */\n                Additions.prototype.findBreakAt = function (x, breaks) {\n                    return find(breaks, function (b) {\n                        return b.from < x && x < b.to;\n                    });\n                };\n                /**\n                 * @private\n                 */\n                Additions.prototype.isInAnyBreak = function (val, testKeep) {\n                    var brokenAxis = this, axis = brokenAxis.axis, breaks = axis.options.breaks || [];\n                    var i = breaks.length, inbrk, keep, ret;\n                    if (i && isNumber(val)) {\n                        while (i--) {\n                            if (Additions.isInBreak(breaks[i], val)) {\n                                inbrk = true;\n                                if (!keep) {\n                                    keep = pick(breaks[i].showPoints, !axis.isXAxis);\n                                }\n                            }\n                        }\n                        if (inbrk && testKeep) {\n                            ret = inbrk && !keep;\n                        }\n                        else {\n                            ret = inbrk;\n                        }\n                    }\n                    return ret;\n                };\n                /**\n                 * Dynamically set or unset breaks in an axis. This function in lighter\n                 * than usin Axis.update, and it also preserves animation.\n                 *\n                 * @private\n                 * @function Highcharts.Axis#setBreaks\n                 *\n                 * @param {Array<Highcharts.XAxisBreaksOptions>} [breaks]\n                 * The breaks to add. When `undefined` it removes existing breaks.\n                 *\n                 * @param {boolean} [redraw=true]\n                 * Whether to redraw the chart immediately.\n                 */\n                Additions.prototype.setBreaks = function (breaks, redraw) {\n                    var brokenAxis = this;\n                    var axis = brokenAxis.axis;\n                    var hasBreaks = isArray(breaks) &&\n                        !!breaks.length &&\n                        !!Object.keys(breaks[0]).length; // Check for [{}], #16368.\n                    axis.isDirty = brokenAxis.hasBreaks !== hasBreaks;\n                    brokenAxis.hasBreaks = hasBreaks;\n                    if (breaks !== axis.options.breaks) {\n                        axis.options.breaks = axis.userOptions.breaks = breaks;\n                    }\n                    axis.forceRedraw = true; // Force recalculation in setScale\n                    // Recalculate series related to the axis.\n                    axis.series.forEach(function (series) {\n                        series.isDirty = true;\n                    });\n                    if (!hasBreaks && axis.val2lin === Additions.val2Lin) {\n                        // Revert to prototype functions\n                        delete axis.val2lin;\n                        delete axis.lin2val;\n                    }\n                    if (hasBreaks) {\n                        axis.userOptions.ordinal = false;\n                        axis.lin2val = Additions.lin2Val;\n                        axis.val2lin = Additions.val2Lin;\n                        axis.setExtremes = function (newMin, newMax, redraw, animation, eventArguments) {\n                            // If trying to set extremes inside a break, extend min to\n                            // after, and max to before the break ( #3857 )\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_1 = (this.options.breaks || []);\n                                var axisBreak = void 0;\n                                while ((axisBreak = brokenAxis.findBreakAt(newMin, breaks_1))) {\n                                    newMin = axisBreak.to;\n                                }\n                                while ((axisBreak = brokenAxis.findBreakAt(newMax, breaks_1))) {\n                                    newMax = axisBreak.from;\n                                }\n                                // If both min and max is within the same break.\n                                if (newMax < newMin) {\n                                    newMax = newMin;\n                                }\n                            }\n                            axis.constructor.prototype.setExtremes.call(this, newMin, newMax, redraw, animation, eventArguments);\n                        };\n                        axis.setAxisTranslation = function () {\n                            axis.constructor.prototype.setAxisTranslation.call(this);\n                            brokenAxis.unitLength = void 0;\n                            if (brokenAxis.hasBreaks) {\n                                var breaks_2 = axis.options.breaks || [], \n                                // Temporary one:\n                                breakArrayT_1 = [], breakArray_1 = [], pointRangePadding = pick(axis.pointRangePadding, 0);\n                                var length_1 = 0, inBrk_1, repeat_1, min_1 = axis.userMin || axis.min, max_1 = axis.userMax || axis.max, start_1, i_1;\n                                // Min & max check (#4247)\n                                breaks_2.forEach(function (brk) {\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        if (Additions.isInBreak(brk, min_1)) {\n                                            min_1 += ((brk.to % repeat_1) -\n                                                (min_1 % repeat_1));\n                                        }\n                                        if (Additions.isInBreak(brk, max_1)) {\n                                            max_1 -= ((max_1 % repeat_1) -\n                                                (brk.from % repeat_1));\n                                        }\n                                    }\n                                });\n                                // Construct an array holding all breaks in the axis\n                                breaks_2.forEach(function (brk) {\n                                    start_1 = brk.from;\n                                    repeat_1 = brk.repeat || Infinity;\n                                    if (isNumber(min_1) && isNumber(max_1)) {\n                                        while (start_1 - repeat_1 > min_1) {\n                                            start_1 -= repeat_1;\n                                        }\n                                        while (start_1 < min_1) {\n                                            start_1 += repeat_1;\n                                        }\n                                        for (i_1 = start_1; i_1 < max_1; i_1 += repeat_1) {\n                                            breakArrayT_1.push({\n                                                value: i_1,\n                                                move: 'in'\n                                            });\n                                            breakArrayT_1.push({\n                                                value: i_1 + brk.to - brk.from,\n                                                move: 'out',\n                                                size: brk.breakSize\n                                            });\n                                        }\n                                    }\n                                });\n                                breakArrayT_1.sort(function (a, b) {\n                                    return ((a.value === b.value) ?\n                                        ((a.move === 'in' ? 0 : 1) -\n                                            (b.move === 'in' ? 0 : 1)) :\n                                        a.value - b.value);\n                                });\n                                // Simplify the breaks\n                                inBrk_1 = 0;\n                                start_1 = min_1;\n                                breakArrayT_1.forEach(function (brk) {\n                                    inBrk_1 += (brk.move === 'in' ? 1 : -1);\n                                    if (inBrk_1 === 1 && brk.move === 'in') {\n                                        start_1 = brk.value;\n                                    }\n                                    if (inBrk_1 === 0 && isNumber(start_1)) {\n                                        breakArray_1.push({\n                                            from: start_1,\n                                            to: brk.value,\n                                            len: brk.value - start_1 - (brk.size || 0)\n                                        });\n                                        length_1 += (brk.value -\n                                            start_1 -\n                                            (brk.size || 0));\n                                    }\n                                });\n                                brokenAxis.breakArray = breakArray_1;\n                                // Used with staticScale, and below the actual axis\n                                // length, when breaks are substracted.\n                                if (isNumber(min_1) &&\n                                    isNumber(max_1) &&\n                                    isNumber(axis.min)) {\n                                    brokenAxis.unitLength = max_1 - min_1 - length_1 +\n                                        pointRangePadding;\n                                    fireEvent(axis, 'afterBreaks');\n                                    if (axis.staticScale) {\n                                        axis.transA = axis.staticScale;\n                                    }\n                                    else if (brokenAxis.unitLength) {\n                                        axis.transA *=\n                                            (max_1 - axis.min + pointRangePadding) /\n                                                brokenAxis.unitLength;\n                                    }\n                                    if (pointRangePadding) {\n                                        axis.minPixelPadding =\n                                            axis.transA * (axis.minPointOffset || 0);\n                                    }\n                                    axis.min = min_1;\n                                    axis.max = max_1;\n                                }\n                            }\n                        };\n                    }\n                    if (pick(redraw, true)) {\n                        axis.chart.redraw();\n                    }\n                };\n                return Additions;\n            }());\n            BrokenAxis.Additions = Additions;\n        })(BrokenAxis || (BrokenAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return BrokenAxis;\n    });\n    _registerModule(_modules, 'masters/modules/broken-axis.src.js', [_modules['Core/Globals.js'], _modules['Core/Axis/BrokenAxis.js']], function (Highcharts, BrokenAxis) {\n\n        var G = Highcharts;\n        // Compositions\n        BrokenAxis.compose(G.Axis, G.Series);\n\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/ApproximationRegistry.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Define the available approximation types. The data grouping\n         * approximations takes an array or numbers as the first parameter. In case\n         * of ohlc, four arrays are sent in as four parameters. Each array consists\n         * only of numbers. In case null values belong to the group, the property\n         * .hasNulls will be set to true on the array.\n         *\n         * @product highstock\n         *\n         * @private\n         */\n        var ApproximationRegistry = {\n        // approximations added programmatically\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ApproximationRegistry;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/ApproximationDefaults.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var arrayMax = U.arrayMax, arrayMin = U.arrayMin, correctFloat = U.correctFloat, extend = U.extend, isNumber = U.isNumber;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function average(arr) {\n            var len = arr.length;\n            var ret = sum(arr);\n            // If we have a number, return it divided by the length. If not,\n            // return null or undefined based on what the sum method finds.\n            if (isNumber(ret) && len) {\n                ret = correctFloat(ret / len);\n            }\n            return ret;\n        }\n        /**\n         * The same as average, but for series with multiple values, like area ranges.\n         * @private\n         */\n        function averages() {\n            var ret = [];\n            [].forEach.call(arguments, function (arr) {\n                ret.push(average(arr));\n            });\n            // Return undefined when first elem. is undefined and let\n            // sum method handle null (#7377)\n            return typeof ret[0] === 'undefined' ? void 0 : ret;\n        }\n        /**\n         * @private\n         */\n        function close(arr) {\n            return arr.length ?\n                arr[arr.length - 1] :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function high(arr) {\n            return arr.length ?\n                arrayMax(arr) :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * HLC, OHLC and range are special cases where a multidimensional array is input\n         * and an array is output.\n         * @private\n         */\n        function hlc(high, low, close) {\n            high = ApproximationRegistry.high(high);\n            low = ApproximationRegistry.low(low);\n            close = ApproximationRegistry.close(close);\n            if (isNumber(high) ||\n                isNumber(low) ||\n                isNumber(close)) {\n                return [high, low, close];\n            }\n        }\n        /**\n         * @private\n         */\n        function low(arr) {\n            return arr.length ?\n                arrayMin(arr) :\n                (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function ohlc(open, high, low, close) {\n            open = ApproximationRegistry.open(open);\n            high = ApproximationRegistry.high(high);\n            low = ApproximationRegistry.low(low);\n            close = ApproximationRegistry.close(close);\n            if (isNumber(open) ||\n                isNumber(high) ||\n                isNumber(low) ||\n                isNumber(close)) {\n                return [open, high, low, close];\n            }\n        }\n        /**\n         * @private\n         */\n        function open(arr) {\n            return arr.length ? arr[0] : (arr.hasNulls ? null : void 0);\n        }\n        /**\n         * @private\n         */\n        function range(low, high) {\n            low = ApproximationRegistry.low(low);\n            high = ApproximationRegistry.high(high);\n            if (isNumber(low) || isNumber(high)) {\n                return [low, high];\n            }\n            if (low === null && high === null) {\n                return null;\n            }\n            // else, return is undefined\n        }\n        /**\n         * @private\n         */\n        function sum(arr) {\n            var len = arr.length, ret;\n            // 1. it consists of nulls exclusive\n            if (!len && arr.hasNulls) {\n                ret = null;\n                // 2. it has a length and real values\n            }\n            else if (len) {\n                ret = 0;\n                while (len--) {\n                    ret += arr[len];\n                }\n            }\n            // 3. it has zero length, so just return undefined\n            // => doNothing()\n            return ret;\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var ApproximationDefaults = {\n            average: average,\n            averages: averages,\n            close: close,\n            high: high,\n            hlc: hlc,\n            low: low,\n            ohlc: ohlc,\n            open: open,\n            range: range,\n            sum: sum\n        };\n        extend(ApproximationRegistry, ApproximationDefaults);\n\n        return ApproximationDefaults;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Common options\n         * @private\n         */\n        var common = {\n            // enabled: null, // (true for stock charts, false for basic),\n            // forced: undefined,\n            groupPixelWidth: 2,\n            // the first one is the point or start value, the second is the start\n            // value if we're dealing with range, the third one is the end value if\n            // dealing with a range\n            dateTimeLabelFormats: {\n                millisecond: [\n                    '%A, %e %b, %H:%M:%S.%L',\n                    '%A, %e %b, %H:%M:%S.%L',\n                    '-%H:%M:%S.%L'\n                ],\n                second: [\n                    '%A, %e %b, %H:%M:%S',\n                    '%A, %e %b, %H:%M:%S',\n                    '-%H:%M:%S'\n                ],\n                minute: [\n                    '%A, %e %b, %H:%M',\n                    '%A, %e %b, %H:%M',\n                    '-%H:%M'\n                ],\n                hour: [\n                    '%A, %e %b, %H:%M',\n                    '%A, %e %b, %H:%M',\n                    '-%H:%M'\n                ],\n                day: [\n                    '%A, %e %b %Y',\n                    '%A, %e %b',\n                    '-%A, %e %b %Y'\n                ],\n                week: [\n                    'Week from %A, %e %b %Y',\n                    '%A, %e %b',\n                    '-%A, %e %b %Y'\n                ],\n                month: [\n                    '%B %Y',\n                    '%B',\n                    '-%B %Y'\n                ],\n                year: [\n                    '%Y',\n                    '%Y',\n                    '-%Y'\n                ]\n            }\n            // smoothed = false, // enable this for navigator series only\n        };\n        /**\n         * Extends common options\n         * @private\n         */\n        var seriesSpecific = {\n            line: {},\n            spline: {},\n            area: {},\n            areaspline: {},\n            arearange: {},\n            column: {\n                groupPixelWidth: 10\n            },\n            columnrange: {\n                groupPixelWidth: 10\n            },\n            candlestick: {\n                groupPixelWidth: 10\n            },\n            ohlc: {\n                groupPixelWidth: 5\n            },\n            hlc: {\n                groupPixelWidth: 5\n                // Move to HeikinAshiSeries.ts aftre refactoring data grouping.\n            },\n            heikinashi: {\n                groupPixelWidth: 10\n            }\n        };\n        /**\n         * Units are defined in a separate array to allow complete overriding in\n         * case of a user option.\n         * @private\n         */\n        var units = [\n            [\n                'millisecond',\n                [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples\n            ], [\n                'second',\n                [1, 2, 5, 10, 15, 30]\n            ], [\n                'minute',\n                [1, 2, 5, 10, 15, 30]\n            ], [\n                'hour',\n                [1, 2, 3, 4, 6, 8, 12]\n            ], [\n                'day',\n                [1]\n            ], [\n                'week',\n                [1]\n            ], [\n                'month',\n                [1, 3, 6]\n            ], [\n                'year',\n                null\n            ]\n        ];\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingDefaults = {\n            common: common,\n            seriesSpecific: seriesSpecific,\n            units: units\n        };\n\n        return DataGroupingDefaults;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingAxisComposition.js', [_modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Core/Utilities.js']], function (DataGroupingDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var AxisConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Check the groupPixelWidth and apply the grouping if needed.\n         * Fired only after processing the data.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Axis#applyGrouping\n         */\n        function applyGrouping(e) {\n            var axis = this, series = axis.series;\n            // Reset the groupPixelWidth for all series, #17141.\n            series.forEach(function (series) {\n                series.groupPixelWidth = void 0; // #2110\n            });\n            series.forEach(function (series) {\n                series.groupPixelWidth = (axis.getGroupPixelWidth &&\n                    axis.getGroupPixelWidth());\n                if (series.groupPixelWidth) {\n                    series.hasProcessed = true; // #2692\n                }\n                // Fire independing on series.groupPixelWidth to always set a proper\n                // dataGrouping state, (#16238)\n                series.applyGrouping(!!e.hasExtremesChanged);\n            });\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass) {\n            AxisConstructor = AxisClass;\n            if (U.pushUnique(composedMembers, AxisClass)) {\n                addEvent(AxisClass, 'afterSetScale', onAfterSetScale);\n                // When all series are processed, calculate the group pixel width and\n                // then if this value is different than zero apply groupings.\n                addEvent(AxisClass, 'postProcessData', applyGrouping);\n                extend(AxisClass.prototype, {\n                    applyGrouping: applyGrouping,\n                    getGroupPixelWidth: getGroupPixelWidth,\n                    setDataGrouping: setDataGrouping\n                });\n            }\n        }\n        /**\n         * Get the data grouping pixel width based on the greatest defined individual\n         * width of the axis' series, and if whether one of the axes need grouping.\n         * @private\n         */\n        function getGroupPixelWidth() {\n            var series = this.series;\n            var i = series.length, groupPixelWidth = 0, doGrouping = false, dataLength, dgOptions;\n            // If one of the series needs grouping, apply it to all (#1634)\n            while (i--) {\n                dgOptions = series[i].options.dataGrouping;\n                if (dgOptions) { // #2692\n                    // If multiple series are compared on the same x axis, give them the\n                    // same group pixel width (#334)\n                    groupPixelWidth = Math.max(groupPixelWidth, \n                    // Fallback to commonOptions (#9693)\n                    pick(dgOptions.groupPixelWidth, DataGroupingDefaults.common.groupPixelWidth));\n                    dataLength = (series[i].processedXData || series[i].data).length;\n                    // Execute grouping if the amount of points is greater than the\n                    // limit defined in groupPixelWidth\n                    if (series[i].groupPixelWidth ||\n                        (dataLength >\n                            (this.chart.plotSizeX / groupPixelWidth)) ||\n                        (dataLength && dgOptions.forced)) {\n                        doGrouping = true;\n                    }\n                }\n            }\n            return doGrouping ? groupPixelWidth : 0;\n        }\n        /**\n         * When resetting the scale reset the hasProccessed flag to avoid taking\n         * previous data grouping of neighbour series into accound when determining\n         * group pixel width (#2692).\n         * @private\n         */\n        function onAfterSetScale() {\n            this.series.forEach(function (series) {\n                series.hasProcessed = false;\n            });\n        }\n        /**\n         * Highcharts Stock only. Force data grouping on all the axis' series.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Axis#setDataGrouping\n         *\n         * @param {boolean|Highcharts.DataGroupingOptionsObject} [dataGrouping]\n         *        A `dataGrouping` configuration. Use `false` to disable data grouping\n         *        dynamically.\n         *\n         * @param {boolean} [redraw=true]\n         *        Whether to redraw the chart or wait for a later call to\n         *        {@link Chart#redraw}.\n         */\n        function setDataGrouping(dataGrouping, redraw) {\n            var axis = this;\n            var i;\n            redraw = pick(redraw, true);\n            if (!dataGrouping) {\n                dataGrouping = {\n                    forced: false,\n                    units: null\n                };\n            }\n            // Axis is instantiated, update all series\n            if (this instanceof AxisConstructor) {\n                i = this.series.length;\n                while (i--) {\n                    this.series[i].update({\n                        dataGrouping: dataGrouping\n                    }, false);\n                }\n                // Axis not yet instanciated, alter series options\n            }\n            else {\n                this.chart.options.series.forEach(function (seriesOptions) {\n                    // Merging dataGrouping options with already defined options #16759\n                    seriesOptions.dataGrouping = typeof dataGrouping === 'boolean' ?\n                        dataGrouping :\n                        merge(dataGrouping, seriesOptions.dataGrouping);\n                });\n            }\n            // Clear ordinal slope, so we won't accidentaly use the old one (#7827)\n            if (axis.ordinal) {\n                axis.ordinal.slope = void 0;\n            }\n            if (redraw) {\n                this.chart.redraw();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingAxisComposition = {\n            compose: compose\n        };\n\n        return DataGroupingAxisComposition;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGroupingSeriesComposition.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Core/Axis/DateTimeAxis.js'], _modules['Core/Defaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, DataGroupingDefaults, DateTimeAxis, D, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var seriesProto = SeriesRegistry.series.prototype;\n        var addEvent = U.addEvent, defined = U.defined, error = U.error, extend = U.extend, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var baseGeneratePoints = seriesProto.generatePoints;\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function adjustExtremes(xAxis, groupedXData) {\n            // Make sure the X axis extends to show the first group (#2533)\n            // But only for visible series (#5493, #6393)\n            if (defined(groupedXData[0]) &&\n                isNumber(xAxis.min) &&\n                isNumber(xAxis.dataMin) &&\n                groupedXData[0] < xAxis.min) {\n                if ((!defined(xAxis.options.min) &&\n                    xAxis.min <= xAxis.dataMin) ||\n                    xAxis.min === xAxis.dataMin) {\n                    xAxis.min = Math.min(groupedXData[0], xAxis.min);\n                }\n                xAxis.dataMin = Math.min(groupedXData[0], xAxis.dataMin);\n            }\n            // When the last anchor set, change the extremes that\n            // the last point is visible (#12455).\n            if (defined(groupedXData[groupedXData.length - 1]) &&\n                isNumber(xAxis.max) &&\n                isNumber(xAxis.dataMax) &&\n                groupedXData[groupedXData.length - 1] > xAxis.max) {\n                if ((!defined(xAxis.options.max) &&\n                    isNumber(xAxis.dataMax) &&\n                    xAxis.max >= xAxis.dataMax) || xAxis.max === xAxis.dataMax) {\n                    xAxis.max = Math.max(groupedXData[groupedXData.length - 1], xAxis.max);\n                }\n                xAxis.dataMax = Math.max(groupedXData[groupedXData.length - 1], xAxis.dataMax);\n            }\n        }\n        /**\n         * @private\n         */\n        function anchorPoints(series, groupedXData, xMax) {\n            var options = series.options, dataGroupingOptions = options.dataGrouping, totalRange = (series.currentDataGrouping && series.currentDataGrouping.gapSize);\n            var i;\n            // DataGrouping x-coordinates.\n            if (dataGroupingOptions && series.xData && totalRange && series.groupMap) {\n                var groupedDataLength = groupedXData.length - 1, anchor = dataGroupingOptions.anchor, firstAnchor = pick(dataGroupingOptions.firstAnchor, anchor), lastAnchor = pick(dataGroupingOptions.lastAnchor, anchor);\n                // Anchor points that are not extremes.\n                if (anchor && anchor !== 'start') {\n                    var shiftInterval = (totalRange *\n                        { middle: 0.5, end: 1 }[anchor]);\n                    i = groupedXData.length - 1;\n                    while (i-- && i > 0) {\n                        groupedXData[i] += shiftInterval;\n                    }\n                }\n                // Change the first point position, but only when it is\n                // the first point in the data set not in the current zoom.\n                if (firstAnchor &&\n                    firstAnchor !== 'start' &&\n                    series.xData[0] >= groupedXData[0]) {\n                    var groupStart = series.groupMap[0].start, groupLength = series.groupMap[0].length;\n                    var firstGroupstEnd = void 0;\n                    if (isNumber(groupStart) && isNumber(groupLength)) {\n                        firstGroupstEnd = groupStart + (groupLength - 1);\n                    }\n                    groupedXData[0] = {\n                        middle: groupedXData[0] + 0.5 * totalRange,\n                        end: groupedXData[0] + totalRange,\n                        firstPoint: series.xData[0],\n                        lastPoint: firstGroupstEnd && series.xData[firstGroupstEnd]\n                    }[firstAnchor];\n                }\n                // Change the last point position but only when it is\n                // the last point in the data set not in the current zoom.\n                if (lastAnchor &&\n                    lastAnchor !== 'start' &&\n                    totalRange &&\n                    groupedXData[groupedDataLength] >= xMax - totalRange) {\n                    var lastGroupStart = series.groupMap[series.groupMap.length - 1].start;\n                    groupedXData[groupedDataLength] = {\n                        middle: groupedXData[groupedDataLength] + 0.5 * totalRange,\n                        end: groupedXData[groupedDataLength] + totalRange,\n                        firstPoint: lastGroupStart && series.xData[lastGroupStart],\n                        lastPoint: series.xData[series.xData.length - 1]\n                    }[lastAnchor];\n                }\n            }\n        }\n        /**\n         * For the processed data, calculate the grouped data if needed.\n         *\n         * @private\n         * @function Highcharts.Series#applyGrouping\n         */\n        function applyGrouping(hasExtremesChanged) {\n            var series = this, chart = series.chart, options = series.options, dataGroupingOptions = options.dataGrouping, groupingEnabled = series.allowDG !== false && dataGroupingOptions &&\n                pick(dataGroupingOptions.enabled, chart.options.isStock), reserveSpace = series.reserveSpace(), lastDataGrouping = this.currentDataGrouping;\n            var currentDataGrouping, croppedData, revertRequireSorting = false;\n            // Data needs to be sorted for dataGrouping\n            if (groupingEnabled && !series.requireSorting) {\n                series.requireSorting = revertRequireSorting = true;\n            }\n            // Skip if skipDataGrouping method returns false or if grouping is disabled\n            // (in that order).\n            var skip = skipDataGrouping(series, hasExtremesChanged) === false || !groupingEnabled;\n            // Revert original requireSorting value if changed\n            if (revertRequireSorting) {\n                series.requireSorting = false;\n            }\n            if (!skip) {\n                series.destroyGroupedData();\n                var processedXData = dataGroupingOptions.groupAll ?\n                    series.xData :\n                    series.processedXData, processedYData = dataGroupingOptions.groupAll ?\n                    series.yData :\n                    series.processedYData, plotSizeX = chart.plotSizeX, xAxis = series.xAxis, ordinal = xAxis.options.ordinal, groupPixelWidth = series.groupPixelWidth;\n                var i = void 0, hasGroupedData = void 0;\n                // Execute grouping if the amount of points is greater than the limit\n                // defined in groupPixelWidth\n                if (groupPixelWidth &&\n                    processedXData &&\n                    processedXData.length &&\n                    plotSizeX) {\n                    hasGroupedData = true;\n                    // Force recreation of point instances in series.translate, #5699\n                    series.isDirty = true;\n                    series.points = null; // #6709\n                    var extremes = xAxis.getExtremes(), xMin = extremes.min, xMax = extremes.max, groupIntervalFactor = (ordinal &&\n                        xAxis.ordinal &&\n                        xAxis.ordinal.getGroupIntervalFactor(xMin, xMax, series)) || 1, interval = (groupPixelWidth * (xMax - xMin) / plotSizeX) *\n                        groupIntervalFactor, groupPositions = xAxis.getTimeTicks(DateTimeAxis.Additions.prototype.normalizeTimeTickInterval(interval, dataGroupingOptions.units ||\n                        DataGroupingDefaults.units), \n                    // Processed data may extend beyond axis (#4907)\n                    Math.min(xMin, processedXData[0]), Math.max(xMax, processedXData[processedXData.length - 1]), xAxis.options.startOfWeek, processedXData, series.closestPointRange), groupedData = seriesProto.groupData.apply(series, [\n                        processedXData,\n                        processedYData,\n                        groupPositions,\n                        dataGroupingOptions.approximation\n                    ]);\n                    var groupedXData = groupedData.groupedXData, groupedYData = groupedData.groupedYData, gapSize = 0;\n                    // The smoothed option is deprecated, instead, there is a fallback\n                    // to the new anchoring mechanism. #12455.\n                    if (dataGroupingOptions &&\n                        dataGroupingOptions.smoothed &&\n                        groupedXData.length) {\n                        dataGroupingOptions.firstAnchor = 'firstPoint';\n                        dataGroupingOptions.anchor = 'middle';\n                        dataGroupingOptions.lastAnchor = 'lastPoint';\n                        error(32, false, chart, {\n                            'dataGrouping.smoothed': 'use dataGrouping.anchor'\n                        });\n                    }\n                    // Record what data grouping values were used\n                    for (i = 1; i < groupPositions.length; i++) {\n                        // The grouped gapSize needs to be the largest distance between\n                        // the group to capture varying group sizes like months or DST\n                        // crossing (#10000). Also check that the gap is not at the\n                        // start of a segment.\n                        if (!groupPositions.info.segmentStarts ||\n                            groupPositions.info.segmentStarts.indexOf(i) === -1) {\n                            gapSize = Math.max(groupPositions[i] - groupPositions[i - 1], gapSize);\n                        }\n                    }\n                    currentDataGrouping = groupPositions.info;\n                    currentDataGrouping.gapSize = gapSize;\n                    series.closestPointRange = groupPositions.info.totalRange;\n                    series.groupMap = groupedData.groupMap;\n                    series.currentDataGrouping = currentDataGrouping;\n                    anchorPoints(series, groupedXData, xMax);\n                    if (reserveSpace) {\n                        adjustExtremes(xAxis, groupedXData);\n                    }\n                    // We calculated all group positions but we should render\n                    // only the ones within the visible range\n                    if (dataGroupingOptions.groupAll) {\n                        // Keep the reference to all grouped points\n                        // for further calculation (eg. heikinashi).\n                        series.allGroupedData = groupedYData;\n                        croppedData = series.cropData(groupedXData, groupedYData, xAxis.min, xAxis.max);\n                        groupedXData = croppedData.xData;\n                        groupedYData = croppedData.yData;\n                        series.cropStart = croppedData.start; // #15005\n                    }\n                    // Set series props\n                    series.processedXData = groupedXData;\n                    series.processedYData = groupedYData;\n                }\n                else {\n                    series.groupMap = null;\n                }\n                series.hasGroupedData = hasGroupedData;\n                series.preventGraphAnimation =\n                    (lastDataGrouping && lastDataGrouping.totalRange) !==\n                        (currentDataGrouping && currentDataGrouping.totalRange);\n            }\n        }\n        /**\n         * @private\n         */\n        function compose(SeriesClass) {\n            var PointClass = SeriesClass.prototype.pointClass;\n            if (U.pushUnique(composedMembers, PointClass)) {\n                // Override point prototype to throw a warning when trying to update\n                // grouped points.\n                addEvent(PointClass, 'update', function () {\n                    if (this.dataGroup) {\n                        error(24, false, this.series.chart);\n                        return false;\n                    }\n                });\n            }\n            if (U.pushUnique(composedMembers, SeriesClass)) {\n                addEvent(SeriesClass, 'afterSetOptions', onAfterSetOptions);\n                addEvent(SeriesClass, 'destroy', destroyGroupedData);\n                extend(SeriesClass.prototype, {\n                    applyGrouping: applyGrouping,\n                    destroyGroupedData: destroyGroupedData,\n                    generatePoints: generatePoints,\n                    getDGApproximation: getDGApproximation,\n                    groupData: groupData\n                });\n            }\n        }\n        /**\n         * Destroy the grouped data points. #622, #740\n         * @private\n         */\n        function destroyGroupedData() {\n            // Clear previous groups\n            if (this.groupedData) {\n                this.groupedData.forEach(function (point, i) {\n                    if (point) {\n                        this.groupedData[i] = point.destroy ?\n                            point.destroy() : null;\n                    }\n                }, this);\n                // Clears all:\n                // - `this.groupedData`\n                // - `this.points`\n                // - `preserve` object in series.update()\n                this.groupedData.length = 0;\n            }\n        }\n        /**\n         * Override the generatePoints method by adding a reference to grouped data\n         * @private\n         */\n        function generatePoints() {\n            baseGeneratePoints.apply(this);\n            // Record grouped data in order to let it be destroyed the next time\n            // processData runs\n            this.destroyGroupedData(); // #622\n            this.groupedData = this.hasGroupedData ? this.points : null;\n        }\n        /**\n         * Set default approximations to the prototypes if present. Properties are\n         * inherited down. Can be overridden for individual series types.\n         * @private\n         */\n        function getDGApproximation() {\n            if (this.is('arearange')) {\n                return 'range';\n            }\n            if (this.is('ohlc')) {\n                return 'ohlc';\n            }\n            if (this.is('hlc')) {\n                return 'hlc';\n            }\n            if (\n            // #18974, default approximation for cumulative\n            // should be `sum` when `dataGrouping` is enabled\n            this.is('column') ||\n                this.options.cumulative) {\n                return 'sum';\n            }\n            return 'average';\n        }\n        /**\n         * Highcharts Stock only. Takes parallel arrays of x and y data and groups the\n         * data into intervals defined by groupPositions, a collection of starting x\n         * values for each group.\n         *\n         * @product highstock\n         *\n         * @function Highcharts.Series#groupData\n         * @param {Array<number>} xData\n         *        Parallel array of x data.\n         * @param {Array<(number|null|undefined)>|Array<Array<(number|null|undefined)>>} yData\n         *        Parallel array of y data.\n         * @param {Array<number>} groupPositions\n         *        Group positions.\n         * @param {string|Function} [approximation]\n         *        Approximation to use.\n         * @return {Highcharts.DataGroupingResultObject}\n         *         Mapped groups.\n         */\n        function groupData(xData, yData, groupPositions, approximation) {\n            var series = this, data = series.data, dataOptions = series.options && series.options.data, groupedXData = [], groupedYData = [], groupMap = [], dataLength = xData.length, \n            // when grouping the fake extended axis for panning,\n            // we don't need to consider y\n            handleYData = !!yData, values = [], pointArrayMap = series.pointArrayMap, pointArrayMapLength = pointArrayMap && pointArrayMap.length, extendedPointArrayMap = ['x'].concat(pointArrayMap || ['y']), groupAll = (this.options.dataGrouping &&\n                this.options.dataGrouping.groupAll);\n            var pointX, pointY, groupedY, pos = 0, start = 0;\n            var approximationFn = (typeof approximation === 'function' ?\n                approximation :\n                approximation && ApproximationRegistry[approximation] ?\n                    ApproximationRegistry[approximation] :\n                    ApproximationRegistry[(series.getDGApproximation && series.getDGApproximation() ||\n                        'average')]);\n            // Calculate values array size from pointArrayMap length\n            if (pointArrayMapLength) {\n                var len = pointArrayMap.length;\n                while (len--) {\n                    values.push([]);\n                }\n            }\n            else {\n                values.push([]);\n            }\n            var valuesLen = pointArrayMapLength || 1;\n            for (var i = 0; i <= dataLength; i++) {\n                // Start with the first point within the X axis range (#2696)\n                if (xData[i] < groupPositions[0]) {\n                    continue; // with next point\n                }\n                // when a new group is entered, summarize and initialize\n                // the previous group\n                while ((typeof groupPositions[pos + 1] !== 'undefined' &&\n                    xData[i] >= groupPositions[pos + 1]) ||\n                    i === dataLength) { // get the last group\n                    // get group x and y\n                    pointX = groupPositions[pos];\n                    series.dataGroupInfo = {\n                        start: groupAll ? start : (series.cropStart + start),\n                        length: values[0].length\n                    };\n                    groupedY = approximationFn.apply(series, values);\n                    // By default, let options of the first grouped point be passed over\n                    // to the grouped point. This allows preserving properties like\n                    // `name` and `color` or custom properties. Implementers can\n                    // override this from the approximation function, where they can\n                    // write custom options to `this.dataGroupInfo.options`.\n                    if (series.pointClass && !defined(series.dataGroupInfo.options)) {\n                        // Convert numbers and arrays into objects\n                        series.dataGroupInfo.options = merge(series.pointClass.prototype\n                            .optionsToObject.call({ series: series }, series.options.data[series.cropStart + start]));\n                        // Make sure the raw data (x, y, open, high etc) is not copied\n                        // over and overwriting approximated data.\n                        extendedPointArrayMap.forEach(function (key) {\n                            delete series.dataGroupInfo.options[key];\n                        });\n                    }\n                    // push the grouped data\n                    if (typeof groupedY !== 'undefined') {\n                        groupedXData.push(pointX);\n                        groupedYData.push(groupedY);\n                        groupMap.push(series.dataGroupInfo);\n                    }\n                    // reset the aggregate arrays\n                    start = i;\n                    for (var j = 0; j < valuesLen; j++) {\n                        values[j].length = 0; // faster than values[j] = []\n                        values[j].hasNulls = false;\n                    }\n                    // Advance on the group positions\n                    pos += 1;\n                    // don't loop beyond the last group\n                    if (i === dataLength) {\n                        break;\n                    }\n                }\n                // break out\n                if (i === dataLength) {\n                    break;\n                }\n                // for each raw data point, push it to an array that contains all values\n                // for this specific group\n                if (pointArrayMap) {\n                    var index = (series.options.dataGrouping &&\n                        series.options.dataGrouping.groupAll ?\n                        i : series.cropStart + i), point = (data && data[index]) ||\n                        series.pointClass.prototype.applyOptions.apply({\n                            series: series\n                        }, [dataOptions[index]]);\n                    var val = void 0;\n                    for (var j = 0; j < pointArrayMapLength; j++) {\n                        val = point[pointArrayMap[j]];\n                        if (isNumber(val)) {\n                            values[j].push(val);\n                        }\n                        else if (val === null) {\n                            values[j].hasNulls = true;\n                        }\n                    }\n                }\n                else {\n                    pointY = handleYData ? yData[i] : null;\n                    if (isNumber(pointY)) {\n                        values[0].push(pointY);\n                    }\n                    else if (pointY === null) {\n                        values[0].hasNulls = true;\n                    }\n                }\n            }\n            return {\n                groupedXData: groupedXData,\n                groupedYData: groupedYData,\n                groupMap: groupMap\n            };\n        }\n        /**\n         * Handle default options for data grouping. This must be set at runtime because\n         * some series types are defined after this.\n         * @private\n         */\n        function onAfterSetOptions(e) {\n            var options = e.options, type = this.type, plotOptions = this.chart.options.plotOptions, \n            // External series, for example technical indicators should also inherit\n            // commonOptions which are not available outside this module\n            baseOptions = (this.useCommonDataGrouping &&\n                DataGroupingDefaults.common), seriesSpecific = DataGroupingDefaults.seriesSpecific;\n            var defaultOptions = D.defaultOptions.plotOptions[type].dataGrouping;\n            if (plotOptions && (seriesSpecific[type] || baseOptions)) { // #1284\n                var rangeSelector = this.chart.rangeSelector;\n                if (!defaultOptions) {\n                    defaultOptions = merge(DataGroupingDefaults.common, seriesSpecific[type]);\n                }\n                options.dataGrouping = merge(baseOptions, defaultOptions, plotOptions.series && plotOptions.series.dataGrouping, // #1228\n                // Set by the StockChart constructor:\n                plotOptions[type].dataGrouping, this.userOptions.dataGrouping, !options.isInternal &&\n                    rangeSelector &&\n                    isNumber(rangeSelector.selected) &&\n                    rangeSelector.buttonOptions[rangeSelector.selected].dataGrouping);\n            }\n        }\n        /**\n         * @private\n         */\n        function skipDataGrouping(series, force) {\n            return !(series.isCartesian &&\n                !series.isDirty &&\n                !series.xAxis.isDirty &&\n                !series.yAxis.isDirty &&\n                !force);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingSeriesComposition = {\n            compose: compose,\n            groupData: groupData\n        };\n\n        return DataGroupingSeriesComposition;\n    });\n    _registerModule(_modules, 'Extensions/DataGrouping/DataGrouping.js', [_modules['Extensions/DataGrouping/DataGroupingAxisComposition.js'], _modules['Extensions/DataGrouping/DataGroupingDefaults.js'], _modules['Extensions/DataGrouping/DataGroupingSeriesComposition.js'], _modules['Core/Templating.js'], _modules['Core/Utilities.js']], function (DataGroupingAxisComposition, DataGroupingDefaults, DataGroupingSeriesComposition, F, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var format = F.format;\n        var addEvent = U.addEvent, extend = U.extend, isNumber = U.isNumber;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, SeriesClass, TooltipClass) {\n            DataGroupingAxisComposition.compose(AxisClass);\n            DataGroupingSeriesComposition.compose(SeriesClass);\n            if (TooltipClass &&\n                U.pushUnique(composedMembers, TooltipClass)) {\n                addEvent(TooltipClass, 'headerFormatter', onTooltipHeaderFormatter);\n            }\n        }\n        /**\n         * Extend the original method, make the tooltip's header reflect the grouped\n         * range.\n         * @private\n         */\n        function onTooltipHeaderFormatter(e) {\n            var chart = this.chart, time = chart.time, labelConfig = e.labelConfig, series = labelConfig.series, options = series.options, tooltipOptions = series.tooltipOptions, dataGroupingOptions = options.dataGrouping, xAxis = series.xAxis;\n            var xDateFormat = tooltipOptions.xDateFormat, xDateFormatEnd, currentDataGrouping, dateTimeLabelFormats, labelFormats, formattedKey, formatString = tooltipOptions[e.isFooter ? 'footerFormat' : 'headerFormat'];\n            // apply only to grouped series\n            if (xAxis &&\n                xAxis.options.type === 'datetime' &&\n                dataGroupingOptions &&\n                isNumber(labelConfig.key)) {\n                // set variables\n                currentDataGrouping = series.currentDataGrouping;\n                dateTimeLabelFormats = dataGroupingOptions.dateTimeLabelFormats ||\n                    // Fallback to commonOptions (#9693)\n                    DataGroupingDefaults.common.dateTimeLabelFormats;\n                // if we have grouped data, use the grouping information to get the\n                // right format\n                if (currentDataGrouping) {\n                    labelFormats = dateTimeLabelFormats[currentDataGrouping.unitName];\n                    if (currentDataGrouping.count === 1) {\n                        xDateFormat = labelFormats[0];\n                    }\n                    else {\n                        xDateFormat = labelFormats[1];\n                        xDateFormatEnd = labelFormats[2];\n                    }\n                    // if not grouped, and we don't have set the xDateFormat option, get the\n                    // best fit, so if the least distance between points is one minute, show\n                    // it, but if the least distance is one day, skip hours and minutes etc.\n                }\n                else if (!xDateFormat && dateTimeLabelFormats && xAxis.dateTime) {\n                    xDateFormat = xAxis.dateTime.getXDateFormat(labelConfig.x, tooltipOptions.dateTimeLabelFormats);\n                }\n                // now format the key\n                formattedKey = time.dateFormat(xDateFormat, labelConfig.key);\n                if (xDateFormatEnd) {\n                    formattedKey += time.dateFormat(xDateFormatEnd, labelConfig.key + currentDataGrouping.totalRange - 1);\n                }\n                // Replace default header style with class name\n                if (series.chart.styledMode) {\n                    formatString = this.styledModeFormat(formatString);\n                }\n                // return the replaced format\n                e.text = format(formatString, {\n                    point: extend(labelConfig.point, { key: formattedKey }),\n                    series: series\n                }, chart);\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var DataGroupingComposition = {\n            compose: compose,\n            groupData: DataGroupingSeriesComposition.groupData\n        };\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * @typedef {\"average\"|\"averages\"|\"open\"|\"high\"|\"low\"|\"close\"|\"sum\"} Highcharts.DataGroupingApproximationValue\n         */\n        /**\n         * The position of the point inside the group.\n         *\n         * @typedef    {\"start\"|\"middle\"|\"end\"} Highcharts.DataGroupingAnchor\n         */\n        /**\n         * The position of the first or last point in the series inside the group.\n         *\n         * @typedef    {\"start\"|\"middle\"|\"end\"|\"firstPoint\"|\"lastPoint\"} Highcharts.DataGroupingAnchorExtremes\n         */\n        /**\n         * Highcharts Stock only.\n         *\n         * @product highstock\n         * @interface Highcharts.DataGroupingInfoObject\n         */ /**\n        * @name Highcharts.DataGroupingInfoObject#length\n        * @type {number}\n        */ /**\n        * @name Highcharts.DataGroupingInfoObject#options\n        * @type {Highcharts.SeriesOptionsType|undefined}\n        */ /**\n        * @name Highcharts.DataGroupingInfoObject#start\n        * @type {number}\n        */\n        /**\n         * Highcharts Stock only.\n         *\n         * @product highstock\n         * @interface Highcharts.DataGroupingResultObject\n         */ /**\n        * @name Highcharts.DataGroupingResultObject#groupedXData\n        * @type {Array<number>}\n        */ /**\n        * @name Highcharts.DataGroupingResultObject#groupedYData\n        * @type {Array<(number|null|undefined)>|Array<Array<(number|null|undefined)>>}\n        */ /**\n        * @name Highcharts.DataGroupingResultObject#groupMap\n        * @type {Array<DataGroupingInfoObject>}\n        */\n        /**\n         * Highcharts Stock only. If a point object is created by data\n         * grouping, it doesn't reflect actual points in the raw\n         * data. In this case, the `dataGroup` property holds\n         * information that points back to the raw data.\n         *\n         * - `dataGroup.start` is the index of the first raw data\n         *   point in the group.\n         *\n         * - `dataGroup.length` is the amount of points in the\n         *   group.\n         *\n         * @sample stock/members/point-datagroup\n         *         Click to inspect raw data points\n         *\n         * @product highstock\n         *\n         * @name Highcharts.Point#dataGroup\n         * @type {Highcharts.DataGroupingInfoObject|undefined}\n         */\n        (''); // detach doclets above\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Data grouping is the concept of sampling the data values into larger\n         * blocks in order to ease readability and increase performance of the\n         * JavaScript charts. Highcharts Stock by default applies data grouping when\n         * the points become closer than a certain pixel value, determined by\n         * the `groupPixelWidth` option.\n         *\n         * If data grouping is applied, the grouping information of grouped\n         * points can be read from the [Point.dataGroup](\n         * /class-reference/Highcharts.Point#dataGroup). If point options other than\n         * the data itself are set, for example `name` or `color` or custom properties,\n         * the grouping logic doesn't know how to group it. In this case the options of\n         * the first point instance are copied over to the group point. This can be\n         * altered through a custom `approximation` callback function.\n         *\n         * @declare   Highcharts.DataGroupingOptionsObject\n         * @product   highstock\n         * @requires  product:highstock\n         * @requires  module:modules/datagrouping\n         * @apioption plotOptions.series.dataGrouping\n         */\n        /**\n         * Specifies how the points should be located on the X axis inside the group.\n         * Points that are extremes can be set separately. Available options:\n         *\n         * - `start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * - `middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * - `end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-anchor\n         *         Changing the point x-coordinate inside the group.\n         *\n         * @see [dataGrouping.firstAnchor](#plotOptions.series.dataGrouping.firstAnchor)\n         * @see [dataGrouping.lastAnchor](#plotOptions.series.dataGrouping.lastAnchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchor}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.anchor\n         */\n        /**\n         * The method of approximation inside a group. When for example 30 days\n         * are grouped into one month, this determines what value should represent\n         * the group. Possible values are \"average\", \"averages\", \"open\", \"high\",\n         * \"low\", \"close\" and \"sum\". For OHLC and candlestick series the approximation\n         * is \"ohlc\" by default, which finds the open, high, low and close values\n         * within all the grouped data. For ranges, the approximation is \"range\",\n         * which finds the low and high values. For multi-dimensional data,\n         * like ranges and OHLC, \"averages\" will compute the average for each\n         * dimension.\n         *\n         * Custom aggregate methods can be added by assigning a callback function\n         * as the approximation. This function takes a numeric array as the\n         * argument and should return a single numeric value or `null`. Note\n         * that the numeric array will never contain null values, only true\n         * numbers. Instead, if null values are present in the raw data, the\n         * numeric array will have an `.hasNulls` property set to `true`. For\n         * single-value data sets the data is available in the first argument\n         * of the callback function. For OHLC data sets, all the open values\n         * are in the first argument, all high values in the second etc.\n         *\n         * Since v4.2.7, grouping meta data is available in the approximation\n         * callback from `this.dataGroupInfo`. It can be used to extract information\n         * from the raw data.\n         *\n         * Defaults to `average` for line-type series, `sum` for columns, `range`\n         * for range series, `hlc` for HLC, and `ohlc` for OHLC and candlestick.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-approximation\n         *         Approximation callback with custom data\n         * @sample {highstock} stock/plotoptions/series-datagrouping-simple-approximation\n         *         Simple approximation demo\n         *\n         * @type       {Highcharts.DataGroupingApproximationValue|Function}\n         * @apioption  plotOptions.series.dataGrouping.approximation\n         */\n        /**\n         * Datetime formats for the header of the tooltip in a stock chart.\n         * The format can vary within a chart depending on the currently selected\n         * time range and the current data grouping.\n         *\n         * The default formats are:\n         * ```js\n         * {\n         *     millisecond: [\n         *         '%A, %e %b, %H:%M:%S.%L', '%A, %e %b, %H:%M:%S.%L', '-%H:%M:%S.%L'\n         *     ],\n         *     second: ['%A, %e %b, %H:%M:%S', '%A, %e %b, %H:%M:%S', '-%H:%M:%S'],\n         *     minute: ['%A, %e %b, %H:%M', '%A, %e %b, %H:%M', '-%H:%M'],\n         *     hour: ['%A, %e %b, %H:%M', '%A, %e %b, %H:%M', '-%H:%M'],\n         *     day: ['%A, %e %b %Y', '%A, %e %b', '-%A, %e %b %Y'],\n         *     week: ['Week from %A, %e %b %Y', '%A, %e %b', '-%A, %e %b %Y'],\n         *     month: ['%B %Y', '%B', '-%B %Y'],\n         *     year: ['%Y', '%Y', '-%Y']\n         * }\n         * ```\n         *\n         * For each of these array definitions, the first item is the format\n         * used when the active time span is one unit. For instance, if the\n         * current data applies to one week, the first item of the week array\n         * is used. The second and third items are used when the active time\n         * span is more than two units. For instance, if the current data applies\n         * to two weeks, the second and third item of the week array are used,\n         *  and applied to the start and end date of the time span.\n         *\n         * @type      {Object}\n         * @apioption plotOptions.series.dataGrouping.dateTimeLabelFormats\n         */\n        /**\n         * Enable or disable data grouping.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @apioption plotOptions.series.dataGrouping.enabled\n         */\n        /**\n         * Specifies how the first grouped point is positioned on the xAxis.\n         * If firstAnchor and/or lastAnchor are defined, then those options take\n         * precedence over anchor for the first and/or last grouped points.\n         * Available options:\n         *\n         * -`start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * -`middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * -`end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * -`firstPoint` the first point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:13)\n         *\n         * -`lastPoint` the last point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-first-anchor\n         *         Applying first and last anchor.\n         *\n         * @see [dataGrouping.anchor](#plotOptions.series.dataGrouping.anchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchorExtremes}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.firstAnchor\n         */\n        /**\n         * When data grouping is forced, it runs no matter how small the intervals\n         * are. This can be handy for example when the sum should be calculated\n         * for values appearing at random times within each hour.\n         *\n         * @type      {boolean}\n         * @default   false\n         * @apioption plotOptions.series.dataGrouping.forced\n         */\n        /**\n         * The approximate pixel width of each group. If for example a series\n         * with 30 points is displayed over a 600 pixel wide plot area, no grouping\n         * is performed. If however the series contains so many points that\n         * the spacing is less than the groupPixelWidth, Highcharts will try\n         * to group it into appropriate groups so that each is more or less\n         * two pixels wide. If multiple series with different group pixel widths\n         * are drawn on the same x axis, all series will take the greatest width.\n         * For example, line series have 2px default group width, while column\n         * series have 10px. If combined, both the line and the column will\n         * have 10px by default.\n         *\n         * @type      {number}\n         * @default   2\n         * @apioption plotOptions.series.dataGrouping.groupPixelWidth\n         */\n        /**\n         * By default only points within the visible range are grouped. Enabling this\n         * option will force data grouping to calculate all grouped points for a given\n         * dataset. That option prevents for example a column series from calculating\n         * a grouped point partially. The effect is similar to\n         * [Series.getExtremesFromAll](#plotOptions.series.getExtremesFromAll) but does\n         * not affect yAxis extremes.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-groupall/\n         *         Two series with the same data but different groupAll setting\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since     6.1.0\n         * @apioption plotOptions.series.dataGrouping.groupAll\n         */\n        /**\n         * Specifies how the last grouped point is positioned on the xAxis.\n         * If firstAnchor and/or lastAnchor are defined, then those options take\n         * precedence over anchor for the first and/or last grouped points.\n         * Available options:\n         *\n         * -`start` places the point at the beginning of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 00:00:00)\n         *\n         * -`middle` places the point in the middle of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 12:00:00)\n         *\n         * -`end` places the point at the end of the group\n         * (e.g. range 00:00:00 - 23:59:59 -> 23:59:59)\n         *\n         * -`firstPoint` the first point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:13)\n         *\n         * -`lastPoint` the last point in the group\n         * (e.g. points at 00:13, 00:35, 00:59 -> 00:59)\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-first-anchor\n         *         Applying first and last anchor.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-last-anchor\n         *         Applying the last anchor in the chart with live data.\n         *\n         * @see [dataGrouping.anchor](#plotOptions.series.dataGrouping.anchor)\n         *\n         * @type       {Highcharts.DataGroupingAnchorExtremes}\n         * @since 9.1.0\n         * @default    start\n         * @apioption  plotOptions.series.dataGrouping.lastAnchor\n         */\n        /**\n         * Normally, a group is indexed by the start of that group, so for example\n         * when 30 daily values are grouped into one month, that month's x value\n         * will be the 1st of the month. This apparently shifts the data to\n         * the left. When the smoothed option is true, this is compensated for.\n         * The data is shifted to the middle of the group, and min and max\n         * values are preserved. Internally, this is used in the Navigator series.\n         *\n         * @type      {boolean}\n         * @default   false\n         * @deprecated\n         * @apioption plotOptions.series.dataGrouping.smoothed\n         */\n        /**\n         * An array determining what time intervals the data is allowed to be\n         * grouped to. Each array item is an array where the first value is\n         * the time unit and the second value another array of allowed multiples.\n         *\n         * Defaults to:\n         * ```js\n         * units: [[\n         *     'millisecond', // unit name\n         *     [1, 2, 5, 10, 20, 25, 50, 100, 200, 500] // allowed multiples\n         * ], [\n         *     'second',\n         *     [1, 2, 5, 10, 15, 30]\n         * ], [\n         *     'minute',\n         *     [1, 2, 5, 10, 15, 30]\n         * ], [\n         *     'hour',\n         *     [1, 2, 3, 4, 6, 8, 12]\n         * ], [\n         *     'day',\n         *     [1]\n         * ], [\n         *     'week',\n         *     [1]\n         * ], [\n         *     'month',\n         *     [1, 3, 6]\n         * ], [\n         *     'year',\n         *     null\n         * ]]\n         * ```\n         *\n         * @type      {Array<Array<string,(Array<number>|null)>>}\n         * @apioption plotOptions.series.dataGrouping.units\n         */\n        /**\n         * The approximate pixel width of each group. If for example a series\n         * with 30 points is displayed over a 600 pixel wide plot area, no grouping\n         * is performed. If however the series contains so many points that\n         * the spacing is less than the groupPixelWidth, Highcharts will try\n         * to group it into appropriate groups so that each is more or less\n         * two pixels wide. Defaults to `10`.\n         *\n         * @sample {highstock} stock/plotoptions/series-datagrouping-grouppixelwidth/\n         *         Two series with the same data density but different groupPixelWidth\n         *\n         * @type      {number}\n         * @default   10\n         * @apioption plotOptions.column.dataGrouping.groupPixelWidth\n         */\n        ''; // required by JSDoc parsing\n\n        return DataGroupingComposition;\n    });\n    _registerModule(_modules, 'masters/modules/datagrouping.src.js', [_modules['Core/Globals.js'], _modules['Extensions/DataGrouping/ApproximationDefaults.js'], _modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Extensions/DataGrouping/DataGrouping.js']], function (Highcharts, ApproximationDefaults, ApproximationRegistry, DataGrouping) {\n\n        var G = Highcharts;\n        G.dataGrouping = {\n            approximationDefaults: ApproximationDefaults,\n            approximations: ApproximationRegistry\n        };\n        DataGrouping.compose(G.Axis, G.Series, G.Tooltip);\n\n    });\n    _registerModule(_modules, 'Extensions/Annotations/NavigationBindingsUtilities.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2009-2021 Highsoft, Black Label\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Define types for editable fields per annotation. There is no need to define\n         * numbers, because they won't change their type to string.\n         * @private\n         */\n        var annotationsFieldsTypes = {\n            backgroundColor: 'string',\n            borderColor: 'string',\n            borderRadius: 'string',\n            color: 'string',\n            fill: 'string',\n            fontSize: 'string',\n            labels: 'string',\n            name: 'string',\n            stroke: 'string',\n            title: 'string'\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Returns the first xAxis or yAxis that was clicked with its value.\n         *\n         * @private\n         *\n         * @param {Array<Highcharts.PointerAxisCoordinateObject>} coords\n         *        All the chart's x or y axes with a current pointer's axis value.\n         *\n         * @return {Highcharts.PointerAxisCoordinateObject}\n         *         Object with a first found axis and its value that pointer\n         *         is currently pointing.\n         */\n        function getAssignedAxis(coords) {\n            return coords.filter(function (coord) {\n                var extremes = coord.axis.getExtremes(), axisMin = extremes.min, axisMax = extremes.max, \n                // Correct axis edges when axis has series\n                // with pointRange (like column)\n                minPointOffset = pick(coord.axis.minPointOffset, 0);\n                return isNumber(axisMin) && isNumber(axisMax) &&\n                    coord.value >= (axisMin - minPointOffset) &&\n                    coord.value <= (axisMax + minPointOffset) &&\n                    // don't count navigator axis\n                    !coord.axis.options.isInternal;\n            })[0]; // If the axes overlap, return the first axis that was found.\n        }\n        /**\n         * Get field type according to value\n         *\n         * @private\n         *\n         * @param {'boolean'|'number'|'string'} value\n         * Atomic type (one of: string, number, boolean)\n         *\n         * @return {'checkbox'|'number'|'text'}\n         * Field type (one of: text, number, checkbox)\n         */\n        function getFieldType(key, value) {\n            var predefinedType = annotationsFieldsTypes[key];\n            var fieldType = typeof value;\n            if (defined(predefinedType)) {\n                fieldType = predefinedType;\n            }\n            return {\n                'string': 'text',\n                'number': 'number',\n                'boolean': 'checkbox'\n            }[fieldType];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigationBindingUtilities = {\n            annotationsFieldsTypes: annotationsFieldsTypes,\n            getAssignedAxis: getAssignedAxis,\n            getFieldType: getFieldType\n        };\n\n        return NavigationBindingUtilities;\n    });\n    _registerModule(_modules, 'Extensions/MouseWheelZoom/MouseWheelZoom.js', [_modules['Core/Utilities.js'], _modules['Extensions/Annotations/NavigationBindingsUtilities.js']], function (U, NBU) {\n        /* *\n         *\n         *  (c) 2023 Torstein Honsi, Askel Eirik Johansson\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, isObject = U.isObject, pick = U.pick, defined = U.defined, merge = U.merge, isNumber = U.isNumber;\n        var getAssignedAxis = NBU.getAssignedAxis;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedClasses = [], defaultOptions = {\n            enabled: true,\n            sensitivity: 1.1\n        };\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        var optionsToObject = function (options) {\n            if (!isObject(options)) {\n                return merge(defaultOptions, { enabled: defined(options) ? options : true });\n            }\n            return merge(defaultOptions, options);\n        };\n        /**\n         * Fit a segment inside a range.\n         * @private\n         * @param {number} outerStart\n         * Beginning of the range.\n         * @param {number} outerWidth\n         * Width of the range.\n         * @param {number} innerStart\n         * Beginning of the segment.\n         * @param {number} innerWidth\n         * Width of the segment.\n         * @return {Object}\n         * Object containing rangeStart and rangeWidth.\n         */\n        var fitToRange = function (outerStart, outerWidth, innerStart, innerWidth) {\n            if (innerStart + innerWidth > outerStart + outerWidth) {\n                if (innerWidth > outerWidth) {\n                    innerWidth = outerWidth;\n                    innerStart = outerStart;\n                }\n                else {\n                    innerStart = outerStart + outerWidth - innerWidth;\n                }\n            }\n            if (innerWidth > outerWidth) {\n                innerWidth = outerWidth;\n            }\n            if (innerStart < outerStart) {\n                innerStart = outerStart;\n            }\n            return {\n                rangeStart: innerStart,\n                rangeWidth: innerWidth\n            };\n        };\n        var wheelTimer, startOnTick, endOnTick;\n        /**\n         * Temporarly disable `axis.startOnTick` and `axis.endOnTick` to allow zooming\n         * for small values.\n         * @private\n        */\n        var waitForAutomaticExtremes = function (axis) {\n            var axisOptions = axis.options;\n            // Options interfering with yAxis zoom by setExtremes() returning\n            // integers by default.\n            if (defined(wheelTimer)) {\n                clearTimeout(wheelTimer);\n            }\n            if (!defined(startOnTick)) {\n                startOnTick = axisOptions.startOnTick;\n                endOnTick = axisOptions.endOnTick;\n            }\n            // Temporarily disable start and end on tick, because they would\n            // prevent small increments of zooming.\n            if (startOnTick || endOnTick) {\n                axisOptions.startOnTick = false;\n                axisOptions.endOnTick = false;\n            }\n            wheelTimer = setTimeout(function () {\n                if (defined(startOnTick) && defined(endOnTick)) {\n                    // Repeat merge after the wheel zoom is finished, #19178\n                    axisOptions.startOnTick = startOnTick;\n                    axisOptions.endOnTick = endOnTick;\n                    // Set the extremes to the same as they already are, but now\n                    // with the original startOnTick and endOnTick. We need\n                    // `forceRedraw` otherwise it will detect that the values\n                    // haven't changed. We do not use a simple yAxis.update()\n                    // because it will destroy the ticks and prevent animation.\n                    var _a = axis.getExtremes(), min = _a.min, max = _a.max;\n                    axis.forceRedraw = true;\n                    axis.setExtremes(min, max);\n                    startOnTick = endOnTick = void 0;\n                }\n            }, 400);\n        };\n        /**\n        * Calulate the ratio of mouse position on the axis to it's length. If mousePos\n        * doesn't exist, returns 0.5;\n        * @private\n        */\n        var getMouseAxisRatio = function (chart, axis, mousePos) {\n            if (!defined(mousePos)) {\n                return 0.5;\n            }\n            var mouseAxisRatio = (mousePos - axis.pos) / axis.len, isXAxis = axis.isXAxis;\n            if (isXAxis && (!axis.reversed !== !chart.inverted) ||\n                !isXAxis && axis.reversed) {\n                // We are taking into account that xAxis automatically gets\n                // reversed when chart.inverted\n                return 1 - mouseAxisRatio;\n            }\n            return mouseAxisRatio;\n        };\n        /**\n        * Perform zooming on the passed axis.\n        * @private\n        * @param {Highcharts.Chart} chart\n        * Chart object.\n        * @param {Highcharts.Axis} axis\n        * Axis to zoom.\n        * @param {number} mousePos\n        * Mouse position on the plot.\n        * @param {number} howMuch\n        * Amount of zoom to apply.\n        * @param {number} centerArg\n        * Mouse position in axis units.\n        * @return {boolean}\n        * True if axis extremes were changed.\n        */\n        var zoomOnDirection = function (chart, axis, mousePos, howMuch, centerArg) {\n            var isXAxis = axis.isXAxis;\n            var hasZoomed = false;\n            if (defined(axis.max) && defined(axis.min) &&\n                defined(axis.dataMax) && defined(axis.dataMin)) {\n                if (!isXAxis) {\n                    waitForAutomaticExtremes(axis);\n                }\n                var range = axis.max - axis.min, center = isNumber(centerArg) ? centerArg :\n                    axis.min + range / 2, mouseAxisRatio = getMouseAxisRatio(chart, axis, mousePos), newRange = range * howMuch, newMin = center - newRange * mouseAxisRatio, dataRange = pick(axis.options.max, axis.dataMax) -\n                    pick(axis.options.min, axis.dataMin), minPaddingOffset = axis.options.min ? 0 :\n                    dataRange * axis.options.minPadding, maxPaddingOffset = axis.options.max ? 0 :\n                    dataRange * axis.options.maxPadding, outerMin = pick(axis.options.min, axis.dataMin) - minPaddingOffset, outerRange = dataRange + maxPaddingOffset + minPaddingOffset, newExt = fitToRange(outerMin, outerRange, newMin, newRange), zoomOut = (newExt.rangeStart < pick(axis.options.min, outerMin) ||\n                    newExt.rangeStart === axis.min &&\n                        (newExt.rangeWidth > outerRange &&\n                            newExt.rangeStart + newExt.rangeWidth <\n                                pick(axis.options.max, Number.MIN_VALUE)) ||\n                    newExt.rangeWidth === axis.max - axis.min);\n                if (defined(howMuch) && !zoomOut) { // Zoom\n                    axis.setExtremes(newExt.rangeStart, newExt.rangeStart + newExt.rangeWidth, false);\n                    hasZoomed = true;\n                }\n                else { // Reset zoom\n                    axis.setExtremes(void 0, void 0, false);\n                }\n            }\n            return hasZoomed;\n        };\n        /**\n         * @private\n         */\n        var zoomBy = function (chart, howMuch, xAxis, yAxis, mouseX, mouseY, options) {\n            var type = pick(options.type, chart.zooming.type, ''), zoomX = /x/.test(type), zoomY = /y/.test(type);\n            var centerXArg = xAxis.toValue(mouseX), centerYArg = yAxis.toValue(mouseY);\n            if (chart.inverted) {\n                var emulateRoof = yAxis.pos + yAxis.len;\n                // Get the correct values\n                centerXArg = xAxis.toValue(mouseY);\n                centerYArg = yAxis.toValue(mouseX);\n                // Swapping x and y for simplicity when chart is inverted.\n                var tmp = mouseX;\n                mouseX = mouseY;\n                mouseY = emulateRoof - tmp + yAxis.pos;\n            }\n            var hasZoomedX = zoomX && zoomOnDirection(chart, xAxis, mouseX, howMuch, centerXArg), hasZoomedY = zoomY && zoomOnDirection(chart, yAxis, mouseY, howMuch, centerYArg), hasZoomed = hasZoomedX || hasZoomedY;\n            if (hasZoomed) {\n                chart.redraw(false);\n            }\n            return hasZoomed;\n        };\n        /**\n         * @private\n         */\n        function onAfterGetContainer() {\n            var _this = this;\n            var chart = this, wheelZoomOptions = optionsToObject(chart.zooming.mouseWheel);\n            if (wheelZoomOptions.enabled) {\n                addEvent(this.container, 'wheel', function (e) {\n                    e = _this.pointer.normalize(e);\n                    var allowZoom = !chart.pointer.inClass(e.target, 'highcharts-no-mousewheel');\n                    // Firefox uses e.detail, WebKit and IE uses deltaX, deltaY, deltaZ.\n                    if (chart.isInsidePlot(e.chartX - chart.plotLeft, e.chartY - chart.plotTop) && allowZoom) {\n                        var wheelSensitivity = wheelZoomOptions.sensitivity || 1.1, delta = e.detail || ((e.deltaY || 0) / 120), xAxisCoords = getAssignedAxis(_this.pointer.getCoordinates(e).xAxis), yAxisCoords = getAssignedAxis(_this.pointer.getCoordinates(e).yAxis);\n                        var hasZoomed = zoomBy(chart, Math.pow(wheelSensitivity, delta), xAxisCoords ? xAxisCoords.axis : chart.xAxis[0], yAxisCoords ? yAxisCoords.axis : chart.yAxis[0], e.chartX, e.chartY, wheelZoomOptions);\n                        // Prevent page scroll\n                        if (hasZoomed && e.preventDefault) {\n                            e.preventDefault();\n                        }\n                    }\n                });\n            }\n        }\n        /**\n         * @private\n         */\n        function compose(ChartClass) {\n            if (composedClasses.indexOf(ChartClass) === -1) {\n                composedClasses.push(ChartClass);\n                addEvent(ChartClass, 'afterGetContainer', onAfterGetContainer);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var MouseWheelZoomComposition = {\n            compose: compose\n        };\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The mouse wheel zoom is a feature included in Highcharts Stock, but is also\n         * available for Highcharts Core as a module. Zooming with the mouse wheel is\n         * enabled by default in Highcharts Stock. In Highcharts Core it is enabled if\n         * [chart.zooming.type](chart.zooming.type) is set. It can be disabled by\n         * setting this option to `false`.\n         *\n         * @type      {boolean|object}\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @sample    {highcharts} highcharts/mouse-wheel-zoom/enabled\n         *            Enable or disable\n         * @sample    {highstock} stock/mouse-wheel-zoom/enabled\n         *            Enable or disable\n         * @apioption chart.zooming.mouseWheel\n         */\n        /**\n         * Zooming with the mouse wheel can be disabled by setting this option to\n         * `false`.\n         *\n         * @type      {boolean}\n         * @default   true\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @apioption chart.zooming.mouseWheel.enabled\n         */\n        /**\n         * Adjust the sensitivity of the zoom. Sensitivity of mouse wheel or trackpad\n         * scrolling. `1` is no sensitivity, while with `2`, one mouse wheel delta will\n         * zoom in `50%`.\n         *\n         * @type      {number}\n         * @default   1.1\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @sample    {highcharts} highcharts/mouse-wheel-zoom/sensitivity\n         *            Change mouse wheel zoom sensitivity\n         * @sample    {highstock} stock/mouse-wheel-zoom/sensitivity\n         *            Change mouse wheel zoom sensitivity\n         * @apioption chart.zooming.mouseWheel.sensitivity\n         */\n        /**\n         * Decides in what dimensions the user can zoom scrolling the wheel. Can be one\n         * of `x`, `y` or `xy`. In Highcharts Core, if not specified here, it will\n         * inherit the type from [chart.zooming.type](chart.zooming.type). In Highcharts\n         * Stock, it defaults to `x`.\n         *\n         * Note that particularly with mouse wheel in the y direction, the zoom is\n         * affected by the default [yAxis.startOnTick](#yAxis.startOnTick) and\n         * [endOnTick]((#yAxis.endOnTick)) settings. In order to respect these settings,\n         * the zoom level will adjust after the user has stopped zooming. To prevent\n         * this, consider setting `startOnTick` and `endOnTick` to `false`.\n         *\n         * @type      {string}\n         * @default   {highcharts} undefined\n         * @default   {highstock} x\n         * @validvalue [\"x\", \"y\", \"xy\"]\n         * @since 11.1.0\n         * @requires  modules/mouse-wheel-zoom\n         * @apioption chart.zooming.mouseWheel.type\n         */\n        (''); // Keeps doclets above in JS file\n\n        return MouseWheelZoomComposition;\n    });\n    _registerModule(_modules, 'masters/modules/mouse-wheel-zoom.src.js', [_modules['Core/Globals.js'], _modules['Extensions/MouseWheelZoom/MouseWheelZoom.js']], function (Highcharts, MouseWheelZoom) {\n\n        var G = Highcharts;\n        MouseWheelZoom.compose(G.Chart);\n\n    });\n    _registerModule(_modules, 'Series/DataModifyComposition.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Series/Point.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Axis, Point, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var pointTooltipFormatter = Point.prototype.tooltipFormatter;\n        var addEvent = U.addEvent, arrayMax = U.arrayMax, arrayMin = U.arrayMin, correctFloat = U.correctFloat, defined = U.defined, isArray = U.isArray, isNumber = U.isNumber, isString = U.isString, pick = U.pick;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var DataModifyComposition;\n        (function (DataModifyComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedMembers = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Extends the series, axis and point classes with\n             * compare and cumulative support.\n             *\n             * @private\n             *\n             * @param SeriesClass\n             * Series class to use.\n             *\n             * @param AxisClass\n             * Axis class to extend.\n             *\n             * @param PointClass\n             * Point class to use.\n             */\n            function compose(SeriesClass, AxisClass, PointClass) {\n                if (U.pushUnique(composedMembers, SeriesClass)) {\n                    var seriesProto = SeriesClass.prototype;\n                    seriesProto.setCompare = seriesSetCompare;\n                    seriesProto.setCumulative = seriesSetCumulative;\n                    addEvent(SeriesClass, 'afterInit', afterInit);\n                    addEvent(SeriesClass, 'afterGetExtremes', afterGetExtremes);\n                    addEvent(SeriesClass, 'afterProcessData', afterProcessData);\n                }\n                if (U.pushUnique(composedMembers, AxisClass)) {\n                    var axisProto = AxisClass.prototype;\n                    axisProto.setCompare = axisSetCompare;\n                    axisProto.setModifier = setModifier;\n                    axisProto.setCumulative = axisSetCumulative;\n                }\n                if (U.pushUnique(composedMembers, PointClass)) {\n                    var pointProto = PointClass.prototype;\n                    pointProto.tooltipFormatter = tooltipFormatter;\n                }\n                return SeriesClass;\n            }\n            DataModifyComposition.compose = compose;\n            /* ********************************************************************** *\n             *  Start shared compare and cumulative logic                             *\n             * ********************************************************************** */\n            /**\n             * Shared code for the axis.setCompare() and the axis.setCumulative()\n             * methods. Inits the 'compare' or the 'cumulative' mode.\n             * @private\n             */\n            function setModifier(mode, modeState, redraw) {\n                if (!this.isXAxis) {\n                    this.series.forEach(function (series) {\n                        if (mode === 'compare' &&\n                            typeof modeState !== 'boolean') {\n                            series.setCompare(modeState, false);\n                        }\n                        else if (mode === 'cumulative' &&\n                            !isString(modeState)) {\n                            series.setCumulative(modeState, false);\n                        }\n                    });\n                    if (pick(redraw, true)) {\n                        this.chart.redraw();\n                    }\n                }\n            }\n            /**\n             * Extend the tooltip formatter by adding support for the point.change\n             * variable as well as the changeDecimals option.\n             *\n             * @ignore\n             * @function Highcharts.Point#tooltipFormatter\n             *\n             * @param {string} pointFormat\n             */\n            function tooltipFormatter(pointFormat) {\n                var point = this, numberFormatter = point.series.chart.numberFormatter, replace = function (value) {\n                    pointFormat = pointFormat.replace('{point.' + value + '}', (point[value] > 0 && value === 'change' ? '+' : '') +\n                        numberFormatter(point[value], pick(point.series.tooltipOptions.changeDecimals, 2)));\n                };\n                if (defined(point.change)) {\n                    replace('change');\n                }\n                if (defined(point.cumulativeSum)) {\n                    replace('cumulativeSum');\n                }\n                return pointTooltipFormatter.apply(this, [pointFormat]);\n            }\n            /**\n             * Extend series.init by adding a methods to modify the y values used\n             * for plotting on the y axis. For compare mode, this method is called both\n             * from the axis when finding dataMin and dataMax,\n             * and from the series.translate method.\n             *\n             * @ignore\n             * @function Highcharts.Series#init\n             */\n            function afterInit() {\n                var compare = this.options.compare;\n                var dataModify;\n                if (compare === 'percent' ||\n                    compare === 'value' ||\n                    this.options.cumulative) {\n                    dataModify = new Additions(this);\n                    if (compare === 'percent' || compare === 'value') {\n                        // Set comparison mode\n                        dataModify.initCompare(compare);\n                    }\n                    else {\n                        // Set Cumulative Sum mode\n                        dataModify.initCumulative();\n                    }\n                }\n                this.dataModify = dataModify;\n            }\n            /**\n             * Adjust the extremes (compare and cumulative modify the data).\n             * @private\n             */\n            function afterGetExtremes(e) {\n                var dataExtremes = e.dataExtremes, activeYData = dataExtremes.activeYData;\n                if (this.dataModify && dataExtremes) {\n                    var extremes = void 0;\n                    if (this.options.compare) {\n                        extremes = [\n                            this.dataModify.modifyValue(dataExtremes.dataMin),\n                            this.dataModify.modifyValue(dataExtremes.dataMax)\n                        ];\n                    }\n                    else if (this.options.cumulative &&\n                        isArray(activeYData) &&\n                        // If only one y visible, sum doesn't change\n                        // so no need to change extremes\n                        activeYData.length >= 2) {\n                        extremes = Additions.getCumulativeExtremes(activeYData);\n                    }\n                    if (extremes) {\n                        dataExtremes.dataMin = arrayMin(extremes);\n                        dataExtremes.dataMax = arrayMax(extremes);\n                    }\n                }\n            }\n            /* ********************************************************************** *\n             *  End shared compare and cumulative logic                               *\n             * ********************************************************************** */\n            /* ********************************************************************** *\n             *  Start value compare logic                                             *\n             * ********************************************************************** */\n            /**\n             * Highcharts Stock only. Set the\n             * [compare](https://api.highcharts.com/highstock/plotOptions.series.compare)\n             * mode of the series after render time.\n             * In most cases it is more useful running\n             * {@link Axis#setCompare} on the X axis to update all its series.\n             *\n             * @function Highcharts.Series#setCompare\n             *\n             * @param {string|null} [compare]\n             *        Can be one of `undefined` (default), `null`, `\"percent\"`\n             *        or `\"value\"`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function seriesSetCompare(compare, redraw) {\n                // Survive to export, #5485 (and for options generally)\n                this.options.compare = this.userOptions.compare = compare;\n                // Fire series.init() that will set or delete series.dataModify\n                this.update({}, pick(redraw, true));\n                if (this.dataModify && (compare === 'value' || compare === 'percent')) {\n                    this.dataModify.initCompare(compare);\n                }\n                else {\n                    // When disabling, clear the points\n                    this.points.forEach(function (point) {\n                        delete point.change;\n                    });\n                }\n            }\n            /**\n             * Extend series.processData by finding the first y value in the plot area,\n             * used for comparing the following values\n             *\n             * @ignore\n             * @function Highcharts.Series#processData\n             */\n            function afterProcessData() {\n                var series = this;\n                if (series.xAxis && // not pies\n                    series.processedYData &&\n                    series.dataModify) {\n                    var processedXData = series.processedXData, processedYData = series.processedYData, length_1 = processedYData.length, compareStart = series.options.compareStart === true ? 0 : 1;\n                    var keyIndex = -1, i = void 0;\n                    // For series with more than one value (range, OHLC etc), compare\n                    // against close or the pointValKey (#4922, #3112, #9854)\n                    if (series.pointArrayMap) {\n                        keyIndex = series.pointArrayMap.indexOf(series.options.pointValKey || series.pointValKey || 'y');\n                    }\n                    // find the first value for comparison\n                    for (i = 0; i < length_1 - compareStart; i++) {\n                        var compareValue = processedYData[i] && keyIndex > -1 ?\n                            processedYData[i][keyIndex] : processedYData[i];\n                        if (isNumber(compareValue) &&\n                            compareValue !== 0 &&\n                            processedXData[i + compareStart] >= (series.xAxis.min || 0)) {\n                            series.dataModify.compareValue = compareValue;\n                            break;\n                        }\n                    }\n                }\n            }\n            /**\n             * Highcharts Stock only. Set the compare mode on all series\n             * belonging to a Y axis.\n             *\n             * @see [plotOptions.series.compare](https://api.highcharts.com/highstock/plotOptions.series.compare)\n             *\n             * @sample stock/members/axis-setcompare/\n             *         Set compare\n             *\n             * @function Highcharts.Axis#setCompare\n             *\n             * @param {string|null} [compare]\n             *        The compare mode. Can be one of `undefined` (default), `null`,\n             *        `\"value\"` or `\"percent\"`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function axisSetCompare(compare, redraw) {\n                this.setModifier('compare', compare, redraw);\n            }\n            /* ********************************************************************** *\n             *  End value compare logic                                               *\n             * ********************************************************************** */\n            /* ********************************************************************** *\n             *  Start Cumulative Sum logic, author: Rafal Sebestjanski                *\n             * ********************************************************************** */\n            /**\n             * Highcharts Stock only. Set the\n             * [cumulative](https://api.highcharts.com/highstock/plotOptions.series.cumulative)\n             * mode of the series after render time.\n             * In most cases it is more useful running\n             * {@link Axis#setCumulative} on the Y axis to update all its series.\n             *\n             * @function Highcharts.Series#setCumulative\n             *\n             * @param {boolean} [cumulative=false]\n             *        Either enable or disable Cumulative Sum mode.\n             *        Can be one of `false` (default) or `true`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function seriesSetCumulative(cumulative, redraw) {\n                // Set default value to false\n                cumulative = pick(cumulative, false);\n                // Survive to export, #5485 (and for options generally)\n                this.options.cumulative = this.userOptions.cumulative = cumulative;\n                // Fire series.init() that will set or delete series.dataModify\n                this.update({}, pick(redraw, true));\n                // If should, turn on the Cumulative Sum mode\n                if (this.dataModify) {\n                    this.dataModify.initCumulative();\n                }\n                else {\n                    // When disabling, clear the points\n                    this.points.forEach(function (point) {\n                        delete point.cumulativeSum;\n                    });\n                }\n            }\n            /**\n             * Highcharts Stock only. Set the cumulative mode on all series\n             * belonging to a Y axis.\n             *\n             * @see [plotOptions.series.cumulative](https://api.highcharts.com/highstock/plotOptions.series.cumulative)\n             *\n             * @sample stock/members/axis-setcumulative/\n             *         Set cumulative\n             *\n             * @function Highcharts.Axis#setCumulative\n             *\n             * @param {boolean} [cumulative]\n             *        Whether to disable or enable the cumulative mode.\n             *        Can be one of `undefined` (default, treated as `false`),\n             *        `false` or `true`.\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart or to wait for a later call to\n             *        {@link Chart#redraw}.\n             */\n            function axisSetCumulative(cumulative, redraw) {\n                this.setModifier('cumulative', cumulative, redraw);\n            }\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            /**\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Additions(series) {\n                    this.series = series;\n                }\n                /* *\n                *\n                *  Functions\n                *\n                * */\n                /**\n                 * @private\n                 */\n                Additions.prototype.modifyValue = function () {\n                    return 0;\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#getCumulativeExtremes\n                 *\n                 * @param {Array} [activeYData]\n                 *        An array cointaining all the points' y values\n                 *        in a visible range.\n                 */\n                Additions.getCumulativeExtremes = function (activeYData) {\n                    var cumulativeDataMin = Infinity, cumulativeDataMax = -Infinity;\n                    activeYData.reduce(function (prev, cur) {\n                        var sum = prev + cur;\n                        cumulativeDataMin = Math.min(cumulativeDataMin, sum, prev);\n                        cumulativeDataMax = Math.max(cumulativeDataMax, sum, prev);\n                        return sum;\n                    });\n                    return [cumulativeDataMin, cumulativeDataMax];\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#initCompare\n                 *\n                 * @param {string} [compare]\n                 *        Can be one of `\"percent\"` or `\"value\"`.\n                 */\n                Additions.prototype.initCompare = function (compare) {\n                    // Set the modifyValue method\n                    this.modifyValue = function (value, index) {\n                        if (value === null) {\n                            value = 0;\n                        }\n                        var compareValue = this.compareValue;\n                        if (typeof value !== 'undefined' &&\n                            typeof compareValue !== 'undefined') { // #2601, #5814\n                            // Get the modified value\n                            if (compare === 'value') {\n                                value -= compareValue;\n                                // Compare percent\n                            }\n                            else {\n                                var compareBase = this.series.options.compareBase;\n                                value = 100 * (value / compareValue) -\n                                    (compareBase === 100 ? 0 : 100);\n                            }\n                            // record for tooltip etc.\n                            if (typeof index !== 'undefined') {\n                                var point = this.series.points[index];\n                                if (point) {\n                                    point.change = value;\n                                }\n                            }\n                            return value;\n                        }\n                        return 0;\n                    };\n                };\n                /**\n                 * @ignore\n                 * @function Highcharts.Series#initCumulative\n                 */\n                Additions.prototype.initCumulative = function () {\n                    // Set the modifyValue method\n                    this.modifyValue = function (value, index) {\n                        if (value === null) {\n                            value = 0;\n                        }\n                        if (value !== void 0 && index !== void 0) {\n                            var prevPoint = index > 0 ?\n                                this.series.points[index - 1] : null;\n                            // Get the modified value\n                            if (prevPoint && prevPoint.cumulativeSum) {\n                                value = correctFloat(prevPoint.cumulativeSum + value);\n                            }\n                            // Record for tooltip etc.\n                            var point = this.series.points[index];\n                            if (point) {\n                                point.cumulativeSum = value;\n                            }\n                            return value;\n                        }\n                        return 0;\n                    };\n                };\n                return Additions;\n            }());\n            DataModifyComposition.Additions = Additions;\n        })(DataModifyComposition || (DataModifyComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Compare the values of the series against the first non-null, non-\n         * zero value in the visible range. The y axis will show percentage\n         * or absolute change depending on whether `compare` is set to `\"percent\"`\n         * or `\"value\"`. When this is applied to multiple series, it allows\n         * comparing the development of the series against each other. Adds\n         * a `change` field to every point object.\n         *\n         * @see [compareBase](#plotOptions.series.compareBase)\n         * @see [Axis.setCompare()](/class-reference/Highcharts.Axis#setCompare)\n         * @see [Series.setCompare()](/class-reference/Highcharts.Series#setCompare)\n         *\n         * @sample {highstock} stock/plotoptions/series-compare-percent/\n         *         Percent\n         * @sample {highstock} stock/plotoptions/series-compare-value/\n         *         Value\n         *\n         * @type      {string}\n         * @since     1.0.1\n         * @product   highstock\n         * @validvalue [\"percent\", \"value\"]\n         * @apioption plotOptions.series.compare\n         */\n        /**\n         * Defines if comparison should start from the first point within the visible\n         * range or should start from the first point **before** the range.\n         *\n         * In other words, this flag determines if first point within the visible range\n         * will have 0% (`compareStart=true`) or should have been already calculated\n         * according to the previous point (`compareStart=false`).\n         *\n         * @sample {highstock} stock/plotoptions/series-comparestart/\n         *         Calculate compare within visible range\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since     6.0.0\n         * @product   highstock\n         * @apioption plotOptions.series.compareStart\n         */\n        /**\n         * When [compare](#plotOptions.series.compare) is `percent`, this option\n         * dictates whether to use 0 or 100 as the base of comparison.\n         *\n         * @sample {highstock} stock/plotoptions/series-comparebase/\n         *         Compare base is 100\n         *\n         * @type       {number}\n         * @default    0\n         * @since      5.0.6\n         * @product    highstock\n         * @validvalue [0, 100]\n         * @apioption  plotOptions.series.compareBase\n         */\n        /**\n         * Cumulative Sum feature replaces points' values with the following formula:\n         * `sum of all previous points' values + current point's value`.\n         * Works only for points in a visible range.\n         * Adds the `cumulativeSum` field to each point object that can be accessed\n         * e.g. in the [tooltip.pointFormat](https://api.highcharts.com/highstock/tooltip.pointFormat).\n         *\n         * With `dataGrouping` enabled, default grouping approximation is set to `sum`.\n         *\n         * @see [Axis.setCumulative()](/class-reference/Highcharts.Axis#setCumulative)\n         * @see [Series.setCumulative()](/class-reference/Highcharts.Series#setCumulative)\n         *\n         * @sample {highstock} stock/plotoptions/series-cumulative-sum/\n         *         Cumulative Sum\n         *\n         * @type      {boolean}\n         * @default   false\n         * @since 9.3.0\n         * @product   highstock\n         * @apioption plotOptions.series.cumulative\n         */\n        ''; // keeps doclets above in transpiled file\n\n        return DataModifyComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/NavigatorAxisComposition.js', [_modules['Core/Globals.js'], _modules['Core/Utilities.js']], function (H, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, isNumber = U.isNumber, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onAxisInit() {\n            var axis = this;\n            if (!axis.navigatorAxis) {\n                axis.navigatorAxis = new NavigatorAxisAdditions(axis);\n            }\n        }\n        /**\n         * For Stock charts, override selection zooming with some special features\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector.\n         * @private\n         */\n        function onAxisZoom(e) {\n            var axis = this, chart = axis.chart, chartOptions = chart.options, navigator = chartOptions.navigator, navigatorAxis = axis.navigatorAxis, pinchType = chart.zooming.pinchType, rangeSelector = chartOptions.rangeSelector, zoomType = chart.zooming.type;\n            if (axis.isXAxis && ((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled))) {\n                // For y only zooming, ignore the X axis completely\n                if (zoomType === 'y') {\n                    e.zoomed = false;\n                    // For xy zooming, record the state of the zoom before zoom\n                    // selection, then when the reset button is pressed, revert to\n                    // this state. This should apply only if the chart is\n                    // initialized with a range (#6612), otherwise zoom all the way\n                    // out.\n                }\n                else if (((!isTouchDevice && zoomType === 'xy') ||\n                    (isTouchDevice && pinchType === 'xy')) &&\n                    axis.options.range) {\n                    var previousZoom = navigatorAxis.previousZoom;\n                    if (defined(e.newMin)) {\n                        navigatorAxis.previousZoom = [axis.min, axis.max];\n                    }\n                    else if (previousZoom) {\n                        e.newMin = previousZoom[0];\n                        e.newMax = previousZoom[1];\n                        navigatorAxis.previousZoom = void 0;\n                    }\n                }\n            }\n            if (typeof e.zoomed !== 'undefined') {\n                e.preventDefault();\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         */\n        var NavigatorAxisAdditions = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function NavigatorAxisAdditions(axis) {\n                this.axis = axis;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.compose = function (AxisClass) {\n                if (U.pushUnique(composedMembers, AxisClass)) {\n                    AxisClass.keepProps.push('navigatorAxis');\n                    addEvent(AxisClass, 'init', onAxisInit);\n                    addEvent(AxisClass, 'zoom', onAxisZoom);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            NavigatorAxisAdditions.prototype.destroy = function () {\n                this.axis = void 0;\n            };\n            /**\n             * Add logic to normalize the zoomed range in order to preserve the pressed\n             * state of range selector buttons\n             *\n             * @private\n             * @function Highcharts.Axis#toFixedRange\n             */\n            NavigatorAxisAdditions.prototype.toFixedRange = function (pxMin, pxMax, fixedMin, fixedMax) {\n                var axis = this.axis, chart = axis.chart;\n                var newMin = pick(fixedMin, axis.translate(pxMin, true, !axis.horiz)), newMax = pick(fixedMax, axis.translate(pxMax, true, !axis.horiz));\n                var fixedRange = chart && chart.fixedRange, halfPointRange = (axis.pointRange || 0) / 2;\n                // Add/remove half point range to/from the extremes (#1172)\n                if (!defined(fixedMin)) {\n                    newMin = correctFloat(newMin + halfPointRange);\n                }\n                if (!defined(fixedMax)) {\n                    newMax = correctFloat(newMax - halfPointRange);\n                }\n                // Make sure panning to the edges does not decrease the zoomed range\n                if (fixedRange && axis.dataMin && axis.dataMax) {\n                    if (newMax >= axis.dataMax) {\n                        newMin = correctFloat(axis.dataMax - fixedRange);\n                    }\n                    if (newMin <= axis.dataMin) {\n                        newMax = correctFloat(axis.dataMin + fixedRange);\n                    }\n                }\n                if (!isNumber(newMin) || !isNumber(newMax)) { // #1195, #7411\n                    newMin = newMax = void 0;\n                }\n                return {\n                    min: newMin,\n                    max: newMax\n                };\n            };\n            return NavigatorAxisAdditions;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return NavigatorAxisAdditions;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorDefaults.js', [_modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js']], function (Color, SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var seriesTypes = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * The navigator is a small series below the main series, displaying\n         * a view of the entire data set. It provides tools to zoom in and\n         * out on parts of the data as well as panning across the dataset.\n         *\n         * @product      highstock gantt\n         * @optionparent navigator\n         */\n        var NavigatorDefaults = {\n            /**\n             * Whether the navigator and scrollbar should adapt to updated data\n             * in the base X axis. When loading data async, as in the demo below,\n             * this should be `false`. Otherwise new data will trigger navigator\n             * redraw, which will cause unwanted looping. In the demo below, the\n             * data in the navigator is set only once. On navigating, only the main\n             * chart content is updated.\n             *\n             * @sample {highstock} stock/demo/lazy-loading/\n             *         Set to false with async data loading\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.adaptToUpdatedData\n             */\n            /**\n             * An integer identifying the index to use for the base series, or a\n             * string representing the id of the series.\n             *\n             * **Note**: As of Highcharts 5.0, this is now a deprecated option.\n             * Prefer [series.showInNavigator](#plotOptions.series.showInNavigator).\n             *\n             * @see [series.showInNavigator](#plotOptions.series.showInNavigator)\n             *\n             * @deprecated\n             * @type      {number|string}\n             * @default   0\n             * @apioption navigator.baseSeries\n             */\n            /**\n             * Enable or disable the navigator.\n             *\n             * @sample {highstock} stock/navigator/enabled/\n             *         Disable the navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption navigator.enabled\n             */\n            /**\n             * When the chart is inverted, whether to draw the navigator on the\n             * opposite side.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     5.0.8\n             * @apioption navigator.opposite\n             */\n            /**\n             * The height of the navigator.\n             *\n             * @sample {highstock} stock/navigator/height/\n             *         A higher navigator\n             */\n            height: 40,\n            /**\n             * The distance from the nearest element, the X axis or X axis labels.\n             *\n             * @sample {highstock} stock/navigator/margin/\n             *         A margin of 2 draws the navigator closer to the X axis labels\n             */\n            margin: 25,\n            /**\n             * Whether the mask should be inside the range marking the zoomed\n             * range, or outside. In Highcharts Stock 1.x it was always `false`.\n             *\n             * @sample {highstock} stock/demo/maskinside-false/\n             *         False, mask outside\n             *\n             * @since   2.0\n             */\n            maskInside: true,\n            /**\n             * Options for the handles for dragging the zoomed area.\n             *\n             * @sample {highstock} stock/navigator/handles/\n             *         Colored handles\n             */\n            handles: {\n                /**\n                 * Width for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                width: 7,\n                /**\n                 * Height for handles.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since   6.0.0\n                 */\n                height: 15,\n                /**\n                 * Array to define shapes of handles. 0-index for left, 1-index for\n                 * right.\n                 *\n                 * Additionally, the URL to a graphic can be given on this form:\n                 * `url(graphic.png)`. Note that for the image to be applied to\n                 * exported charts, its URL needs to be accessible by the export\n                 * server.\n                 *\n                 * Custom callbacks for symbol path generation can also be added to\n                 * `Highcharts.SVGRenderer.prototype.symbols`. The callback is then\n                 * used by its method name, as shown in the demo.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @type    {Array<string>}\n                 * @default [\"navigator-handle\", \"navigator-handle\"]\n                 * @since   6.0.0\n                 */\n                symbols: ['navigator-handle', 'navigator-handle'],\n                /**\n                 * Allows to enable/disable handles.\n                 *\n                 * @since   6.0.0\n                 */\n                enabled: true,\n                /**\n                 * The width for the handle border and the stripes inside.\n                 *\n                 * @sample {highstock} stock/navigator/styled-handles/\n                 *         Styled handles\n                 *\n                 * @since     6.0.0\n                 * @apioption navigator.handles.lineWidth\n                 */\n                lineWidth: 1,\n                /**\n                 * The fill for the handle.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                backgroundColor: \"#f2f2f2\" /* Palette.neutralColor5 */,\n                /**\n                 * The stroke for the handle border and the stripes inside.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 */\n                borderColor: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The color of the mask covering the areas of the navigator series\n             * that are currently not visible in the main series. The default\n             * color is bluish with an opacity of 0.3 to see the series below.\n             *\n             * @see In styled mode, the mask is styled with the\n             *      `.highcharts-navigator-mask` and\n             *      `.highcharts-navigator-mask-inside` classes.\n             *\n             * @sample {highstock} stock/navigator/maskfill/\n             *         Blue, semi transparent mask\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default rgba(102,133,194,0.3)\n             */\n            maskFill: color(\"#667aff\" /* Palette.highlightColor60 */).setOpacity(0.3).get(),\n            /**\n             * The color of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #cccccc\n             */\n            outlineColor: \"#999999\" /* Palette.neutralColor40 */,\n            /**\n             * The width of the line marking the currently zoomed area in the\n             * navigator.\n             *\n             * @see In styled mode, the outline stroke width is set with the\n             *      `.highcharts-navigator-outline` class.\n             *\n             * @sample {highstock} stock/navigator/outline/\n             *         2px blue outline\n             *\n             * @type    {number}\n             */\n            outlineWidth: 1,\n            /**\n             * Options for the navigator series. Available options are the same\n             * as any series, documented at [plotOptions](#plotOptions.series)\n             * and [series](#series).\n             *\n             * Unless data is explicitly defined on navigator.series, the data\n             * is borrowed from the first series in the chart.\n             *\n             * Default series options for the navigator series are:\n             * ```js\n             * series: {\n             *     type: 'areaspline',\n             *     fillOpacity: 0.05,\n             *     dataGrouping: {\n             *         smoothed: true\n             *     },\n             *     lineWidth: 1,\n             *     marker: {\n             *         enabled: false\n             *     }\n             * }\n             * ```\n             *\n             * @see In styled mode, the navigator series is styled with the\n             *      `.highcharts-navigator-series` class.\n             *\n             * @sample {highstock} stock/navigator/series-data/\n             *         Using a separate data set for the navigator\n             * @sample {highstock} stock/navigator/series/\n             *         A green navigator series\n             *\n             * @type {*|Array<*>|Highcharts.SeriesOptionsType|Array<Highcharts.SeriesOptionsType>}\n             */\n            series: {\n                /**\n                 * The type of the navigator series.\n                 *\n                 * Heads up:\n                 * In column-type navigator, zooming is limited to at least one\n                 * point with its `pointRange`.\n                 *\n                 * @sample {highstock} stock/navigator/column/\n                 *         Column type navigator\n                 *\n                 * @type    {string}\n                 * @default {highstock} `areaspline` if defined, otherwise `line`\n                 * @default {gantt} gantt\n                 */\n                type: (typeof seriesTypes.areaspline === 'undefined' ?\n                    'line' :\n                    'areaspline'),\n                /**\n                 * The fill opacity of the navigator series.\n                 */\n                fillOpacity: 0.05,\n                /**\n                 * The pixel line width of the navigator series.\n                 */\n                lineWidth: 1,\n                /**\n                 * @ignore-option\n                 */\n                compare: null,\n                /**\n                 * @ignore-option\n                 */\n                sonification: {\n                    enabled: false\n                },\n                /**\n                 * Unless data is explicitly defined, the data is borrowed from the\n                 * first series in the chart.\n                 *\n                 * @type      {Array<number|Array<number|string|null>|object|null>}\n                 * @product   highstock\n                 * @apioption navigator.series.data\n                 */\n                /**\n                 * Data grouping options for the navigator series.\n                 *\n                 * @extends plotOptions.series.dataGrouping\n                 */\n                dataGrouping: {\n                    approximation: 'average',\n                    enabled: true,\n                    groupPixelWidth: 2,\n                    // Replace smoothed property by anchors, #12455.\n                    firstAnchor: 'firstPoint',\n                    anchor: 'middle',\n                    lastAnchor: 'lastPoint',\n                    // Day and week differs from plotOptions.series.dataGrouping\n                    units: [\n                        ['millisecond', [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],\n                        ['second', [1, 2, 5, 10, 15, 30]],\n                        ['minute', [1, 2, 5, 10, 15, 30]],\n                        ['hour', [1, 2, 3, 4, 6, 8, 12]],\n                        ['day', [1, 2, 3, 4]],\n                        ['week', [1, 2, 3]],\n                        ['month', [1, 3, 6]],\n                        ['year', null]\n                    ]\n                },\n                /**\n                 * Data label options for the navigator series. Data labels are\n                 * disabled by default on the navigator series.\n                 *\n                 * @extends plotOptions.series.dataLabels\n                 */\n                dataLabels: {\n                    enabled: false,\n                    zIndex: 2 // #1839\n                },\n                id: 'highcharts-navigator-series',\n                className: 'highcharts-navigator-series',\n                /**\n                 * Sets the fill color of the navigator series.\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption navigator.series.color\n                 */\n                /**\n                 * Line color for the navigator series. Allows setting the color\n                 * while disallowing the default candlestick setting.\n                 *\n                 * @type {Highcharts.ColorString|null}\n                 */\n                lineColor: null,\n                marker: {\n                    enabled: false\n                },\n                /**\n                 * Since Highcharts Stock v8, default value is the same as default\n                 * `pointRange` defined for a specific type (e.g. `null` for\n                 * column type).\n                 *\n                 * In Highcharts Stock version < 8, defaults to 0.\n                 *\n                 * @extends plotOptions.series.pointRange\n                 * @type {number|null}\n                 * @apioption navigator.series.pointRange\n                 */\n                /**\n                 * The threshold option. Setting it to 0 will make the default\n                 * navigator area series draw its area from the 0 value and up.\n                 *\n                 * @type {number|null}\n                 */\n                threshold: null\n            },\n            /**\n             * Enable or disable navigator sticking to right, while adding new\n             * points. If `undefined`, the navigator sticks to the axis maximum only\n             * if it was already at the maximum prior to adding points.\n             *\n             * @type      {boolean}\n             * @default   undefined\n             * @since 10.2.1\n             * @sample {highstock} stock/navigator/sticktomax-false/\n             * stickToMax set to false\n             * @apioption navigator.stickToMax\n             */\n            /**\n             * Options for the navigator X axis. Default series options for the\n             * navigator xAxis are:\n             * ```js\n             * xAxis: {\n             *     tickWidth: 0,\n             *     lineWidth: 0,\n             *     gridLineWidth: 1,\n             *     tickPixelInterval: 200,\n             *     labels: {\n             *            align: 'left',\n             *         style: {\n             *             color: '#888'\n             *         },\n             *         x: 3,\n             *         y: -4\n             *     }\n             * }\n             * ```\n             *\n             * @extends   xAxis\n             * @excluding linkedTo, maxZoom, minRange, opposite, range, scrollbar,\n             *            showEmpty, maxRange\n             */\n            xAxis: {\n                /**\n                 * Additional range on the right side of the xAxis. Works similar to\n                 * xAxis.maxPadding, but value is set in milliseconds.\n                 * Can be set for both, main xAxis and navigator's xAxis.\n                 *\n                 * @since   6.0.0\n                 */\n                overscroll: 0,\n                className: 'highcharts-navigator-xaxis',\n                tickLength: 0,\n                lineWidth: 0,\n                gridLineColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n                gridLineWidth: 1,\n                tickPixelInterval: 200,\n                labels: {\n                    align: 'left',\n                    /**\n                     * @type {Highcharts.CSSObject}\n                     */\n                    style: {\n                        /** @ignore */\n                        color: \"#000000\" /* Palette.neutralColor100 */,\n                        /** @ignore */\n                        fontSize: '0.7em',\n                        /** @ignore */\n                        opacity: 0.6,\n                        /** @ignore */\n                        textOutline: '2px contrast'\n                    },\n                    x: 3,\n                    y: -4\n                },\n                crosshair: false\n            },\n            /**\n             * Options for the navigator Y axis. Default series options for the\n             * navigator yAxis are:\n             * ```js\n             * yAxis: {\n             *     gridLineWidth: 0,\n             *     startOnTick: false,\n             *     endOnTick: false,\n             *     minPadding: 0.1,\n             *     maxPadding: 0.1,\n             *     labels: {\n             *         enabled: false\n             *     },\n             *     title: {\n             *         text: null\n             *     },\n             *     tickWidth: 0\n             * }\n             * ```\n             *\n             * @extends   yAxis\n             * @excluding height, linkedTo, maxZoom, minRange, ordinal, range,\n             *            showEmpty, scrollbar, top, units, maxRange, minLength,\n             *            maxLength, resize\n             */\n            yAxis: {\n                className: 'highcharts-navigator-yaxis',\n                gridLineWidth: 0,\n                startOnTick: false,\n                endOnTick: false,\n                minPadding: 0.1,\n                maxPadding: 0.1,\n                labels: {\n                    enabled: false\n                },\n                crosshair: false,\n                title: {\n                    text: null\n                },\n                tickLength: 0,\n                tickWidth: 0\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Maximum range which can be set using the navigator's handles.\n         * Opposite of [xAxis.minRange](#xAxis.minRange).\n         *\n         * @sample {highstock} stock/navigator/maxrange/\n         *         Defined max and min range\n         *\n         * @type      {number}\n         * @since     6.0.0\n         * @product   highstock gantt\n         * @apioption xAxis.maxRange\n         */\n        (''); // keeps doclets above in JS file\n\n        return NavigatorDefaults;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorSymbols.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /**\n         * Draw one of the handles on the side of the zoomed range in the navigator.\n         * @private\n         */\n        function navigatorHandle(_x, _y, width, height, options) {\n            if (options === void 0) { options = {}; }\n            var halfWidth = options.width ? options.width / 2 : width, markerPosition = Math.round(halfWidth / 3) + 0.5;\n            height = options.height || height;\n            return [\n                ['M', -halfWidth - 1, 0.5],\n                ['L', halfWidth, 0.5],\n                ['L', halfWidth, height + 0.5],\n                ['L', -halfWidth - 1, height + 0.5],\n                ['L', -halfWidth - 1, 0.5],\n                ['M', -markerPosition, 4],\n                ['L', -markerPosition, height - 3],\n                ['M', markerPosition - 1, 4],\n                ['L', markerPosition - 1, height - 3]\n            ];\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorSymbols = {\n            'navigator-handle': navigatorHandle\n        };\n\n        return NavigatorSymbols;\n    });\n    _registerModule(_modules, 'Stock/Navigator/NavigatorComposition.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/Navigator/NavigatorSymbols.js'], _modules['Core/Renderer/RendererRegistry.js'], _modules['Core/Utilities.js']], function (D, H, NavigatorAxisAdditions, NavigatorDefaults, NavigatorSymbols, RendererRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions, setOptions = D.setOptions;\n        var isTouchDevice = H.isTouchDevice;\n        var getRendererType = RendererRegistry.getRendererType;\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var NavigatorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, NavigatorClass, SeriesClass) {\n            NavigatorAxisAdditions.compose(AxisClass);\n            NavigatorConstructor = NavigatorClass;\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                var chartProto = ChartClass.prototype;\n                chartProto.callbacks.push(onChartCallback);\n                addEvent(ChartClass, 'afterAddSeries', onChartAfterAddSeries);\n                addEvent(ChartClass, 'afterSetChartSize', onChartAfterSetChartSize);\n                addEvent(ChartClass, 'afterUpdate', onChartAfterUpdate);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'beforeShowResetZoom', onChartBeforeShowResetZoom);\n                addEvent(ChartClass, 'update', onChartUpdate);\n            }\n            if (U.pushUnique(composedMembers, SeriesClass)) {\n                addEvent(SeriesClass, 'afterUpdate', onSeriesAfterUpdate);\n            }\n            if (U.pushUnique(composedMembers, getRendererType)) {\n                extend(getRendererType().prototype.symbols, NavigatorSymbols);\n            }\n            if (U.pushUnique(composedMembers, setOptions)) {\n                extend(defaultOptions, { navigator: NavigatorDefaults });\n            }\n        }\n        /**\n         * Handle adding new series.\n         * @private\n         */\n        function onChartAfterAddSeries() {\n            if (this.navigator) {\n                // Recompute which series should be shown in navigator, and add them\n                this.navigator.setBaseSeries(null, false);\n            }\n        }\n        /**\n         * For stock charts, extend the Chart.setChartSize method so that we can set the\n         * final top position of the navigator once the height of the chart, including\n         * the legend, is determined. #367. We can't use Chart.getMargins, because\n         * labels offsets are not calculated yet.\n         * @private\n         */\n        function onChartAfterSetChartSize() {\n            var _a;\n            var legend = this.legend, navigator = this.navigator;\n            var legendOptions, xAxis, yAxis;\n            if (navigator) {\n                legendOptions = legend && legend.options;\n                xAxis = navigator.xAxis;\n                yAxis = navigator.yAxis;\n                var scrollbarHeight = navigator.scrollbarHeight, scrollButtonSize = navigator.scrollButtonSize;\n                // Compute the top position\n                if (this.inverted) {\n                    navigator.left = navigator.opposite ?\n                        this.chartWidth - scrollbarHeight -\n                            navigator.height :\n                        this.spacing[3] + scrollbarHeight;\n                    navigator.top = this.plotTop + scrollButtonSize;\n                }\n                else {\n                    navigator.left = pick(xAxis.left, this.plotLeft + scrollButtonSize);\n                    navigator.top = navigator.navigatorOptions.top ||\n                        this.chartHeight -\n                            navigator.height -\n                            scrollbarHeight -\n                            (((_a = this.scrollbar) === null || _a === void 0 ? void 0 : _a.options.margin) || 0) -\n                            this.spacing[2] -\n                            (this.rangeSelector && this.extraBottomMargin ?\n                                this.rangeSelector.getHeight() :\n                                0) -\n                            ((legendOptions &&\n                                legendOptions.verticalAlign === 'bottom' &&\n                                legendOptions.layout !== 'proximate' && // #13392\n                                legendOptions.enabled &&\n                                !legendOptions.floating) ?\n                                legend.legendHeight +\n                                    pick(legendOptions.margin, 10) :\n                                0) -\n                            (this.titleOffset ? this.titleOffset[2] : 0);\n                }\n                if (xAxis && yAxis) { // false if navigator is disabled (#904)\n                    if (this.inverted) {\n                        xAxis.options.left = yAxis.options.left = navigator.left;\n                    }\n                    else {\n                        xAxis.options.top = yAxis.options.top = navigator.top;\n                    }\n                    xAxis.setAxisSize();\n                    yAxis.setAxisSize();\n                }\n            }\n        }\n        /**\n         * Initialize navigator, if no scrolling exists yet.\n         * @private\n         */\n        function onChartAfterUpdate(event) {\n            if (!this.navigator && !this.scroller &&\n                (this.options.navigator.enabled ||\n                    this.options.scrollbar.enabled)) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n                if (pick(event.redraw, true)) {\n                    this.redraw(event.animation); // #7067\n                }\n            }\n        }\n        /**\n         * Initialize navigator for stock charts\n         * @private\n         */\n        function onChartBeforeRender() {\n            var options = this.options;\n            if (options.navigator.enabled ||\n                options.scrollbar.enabled) {\n                this.scroller = this.navigator = new NavigatorConstructor(this);\n            }\n        }\n        /**\n         * For Stock charts. For x only zooming, do not to create the zoom button\n         * because X axis zooming is already allowed by the Navigator and Range\n         * selector. (#9285)\n         * @private\n         */\n        function onChartBeforeShowResetZoom() {\n            var chartOptions = this.options, navigator = chartOptions.navigator, rangeSelector = chartOptions.rangeSelector;\n            if (((navigator && navigator.enabled) ||\n                (rangeSelector && rangeSelector.enabled)) &&\n                ((!isTouchDevice &&\n                    this.zooming.type === 'x') ||\n                    (isTouchDevice && this.zooming.pinchType === 'x'))) {\n                return false;\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var navigator = chart.navigator;\n            // Initialize the navigator\n            if (navigator && chart.xAxis[0]) {\n                var extremes = chart.xAxis[0].getExtremes();\n                navigator.render(extremes.min, extremes.max);\n            }\n        }\n        /**\n         * Merge options, if no scrolling exists yet\n         * @private\n         */\n        function onChartUpdate(e) {\n            var navigatorOptions = (e.options.navigator || {}), scrollbarOptions = (e.options.scrollbar || {});\n            if (!this.navigator && !this.scroller &&\n                (navigatorOptions.enabled || scrollbarOptions.enabled)) {\n                merge(true, this.options.navigator, navigatorOptions);\n                merge(true, this.options.scrollbar, scrollbarOptions);\n                delete e.options.navigator;\n                delete e.options.scrollbar;\n            }\n        }\n        /**\n         * Handle updating series\n         * @private\n         */\n        function onSeriesAfterUpdate() {\n            if (this.chart.navigator && !this.options.isInternal) {\n                this.chart.navigator.setBaseSeries(null, false);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var NavigatorComposition = {\n            compose: compose\n        };\n\n        return NavigatorComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/ScrollbarAxis.js', [_modules['Core/Utilities.js']], function (U) {\n        /* *\n         *\n         *  (c) 2010-2023 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, defined = U.defined, pick = U.pick, pushUnique = U.pushUnique;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ScrollbarAxis;\n        (function (ScrollbarAxis) {\n            /* *\n            *\n            *  Constants\n            *\n            * */\n            var composedMembers = [];\n            /* *\n            *\n            *  Variables\n            *\n            * */\n            var Scrollbar;\n            /* *\n            *\n            *  Functions\n            *\n            * */\n            /**\n             * Attaches to axis events to create scrollbars if enabled.\n             *\n             * @private\n             *\n             * @param {Highcharts.Axis} AxisClass\n             * Axis class to extend.\n             *\n             * @param {Highcharts.Scrollbar} ScrollbarClass\n             * Scrollbar class to use.\n             */\n            function compose(AxisClass, ScrollbarClass) {\n                if (pushUnique(composedMembers, ScrollbarClass)) {\n                    Scrollbar = ScrollbarClass;\n                }\n                if (pushUnique(composedMembers, AxisClass)) {\n                    addEvent(AxisClass, 'afterGetOffset', onAxisAfterGetOffset);\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'afterRender', onAxisAfterRender);\n                }\n            }\n            ScrollbarAxis.compose = compose;\n            /** @private */\n            function getExtremes(axis) {\n                var axisMin = pick(axis.options && axis.options.min, axis.min);\n                var axisMax = pick(axis.options && axis.options.max, axis.max);\n                return {\n                    axisMin: axisMin,\n                    axisMax: axisMax,\n                    scrollMin: defined(axis.dataMin) ?\n                        Math.min(axisMin, axis.min, axis.dataMin, pick(axis.threshold, Infinity)) : axisMin,\n                    scrollMax: defined(axis.dataMax) ?\n                        Math.max(axisMax, axis.max, axis.dataMax, pick(axis.threshold, -Infinity)) : axisMax\n                };\n            }\n            /**\n             * Make space for a scrollbar.\n             * @private\n             */\n            function onAxisAfterGetOffset() {\n                var axis = this, scrollbar = axis.scrollbar, opposite = scrollbar && !scrollbar.options.opposite, index = axis.horiz ? 2 : opposite ? 3 : 1;\n                if (scrollbar) {\n                    // Reset scrollbars offsets\n                    axis.chart.scrollbarsOffsets = [0, 0];\n                    axis.chart.axisOffset[index] +=\n                        scrollbar.size + (scrollbar.options.margin || 0);\n                }\n            }\n            /**\n             * Wrap axis initialization and create scrollbar if enabled.\n             * @private\n             */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (axis.options &&\n                    axis.options.scrollbar &&\n                    axis.options.scrollbar.enabled) {\n                    // Predefined options:\n                    axis.options.scrollbar.vertical = !axis.horiz;\n                    axis.options.startOnTick = axis.options.endOnTick = false;\n                    axis.scrollbar = new Scrollbar(axis.chart.renderer, axis.options.scrollbar, axis.chart);\n                    addEvent(axis.scrollbar, 'changed', function (e) {\n                        var _a = getExtremes(axis), axisMin = _a.axisMin, axisMax = _a.axisMax, unitedMin = _a.scrollMin, unitedMax = _a.scrollMax, range = unitedMax - unitedMin;\n                        var to, from;\n                        // #12834, scroll when show/hide series, wrong extremes\n                        if (!defined(axisMin) || !defined(axisMax)) {\n                            return;\n                        }\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            to = unitedMin + range * this.to;\n                            from = unitedMin + range * this.from;\n                        }\n                        else {\n                            // Y-values in browser are reversed, but this also\n                            // applies for reversed horizontal axis:\n                            to = unitedMin + range * (1 - this.from);\n                            from = unitedMin + range * (1 - this.to);\n                        }\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            // #17977, set animation to undefined instead of true\n                            var animate = e.DOMType === 'mousemove' ||\n                                e.DOMType === 'touchmove' ? false : void 0;\n                            axis.setExtremes(from, to, true, animate, e);\n                        }\n                        else {\n                            // When live redraw is disabled, don't change extremes\n                            // Only change the position of the scollbar thumb\n                            this.setRange(this.from, this.to);\n                        }\n                    });\n                }\n            }\n            /**\n             * Wrap rendering axis, and update scrollbar if one is created.\n             * @private\n             */\n            function onAxisAfterRender() {\n                var axis = this, _a = getExtremes(axis), scrollMin = _a.scrollMin, scrollMax = _a.scrollMax, scrollbar = axis.scrollbar, offset = (axis.axisTitleMargin + (axis.titleOffset || 0)), scrollbarsOffsets = axis.chart.scrollbarsOffsets, axisMargin = axis.options.margin || 0;\n                var offsetsIndex, from, to;\n                if (scrollbar && scrollbarsOffsets) {\n                    if (axis.horiz) {\n                        // Reserve space for labels/title\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += offset;\n                        }\n                        scrollbar.position(axis.left, (axis.top +\n                            axis.height +\n                            2 +\n                            scrollbarsOffsets[1] -\n                            (axis.opposite ? axisMargin : 0)), axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (!axis.opposite) {\n                            scrollbarsOffsets[1] += axisMargin;\n                        }\n                        offsetsIndex = 1;\n                    }\n                    else {\n                        // Reserve space for labels/title\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += offset;\n                        }\n                        var xPosition = void 0;\n                        if (!scrollbar.options.opposite) {\n                            xPosition = axis.opposite ? 0 : axisMargin;\n                        }\n                        else {\n                            xPosition = axis.left +\n                                axis.width +\n                                2 +\n                                scrollbarsOffsets[0] -\n                                (axis.opposite ? 0 : axisMargin);\n                        }\n                        scrollbar.position(xPosition, axis.top, axis.width, axis.height);\n                        // Next scrollbar should reserve space for margin (if set)\n                        if (axis.opposite) {\n                            scrollbarsOffsets[0] += axisMargin;\n                        }\n                        offsetsIndex = 0;\n                    }\n                    scrollbarsOffsets[offsetsIndex] += scrollbar.size +\n                        (scrollbar.options.margin || 0);\n                    if (isNaN(scrollMin) ||\n                        isNaN(scrollMax) ||\n                        !defined(axis.min) ||\n                        !defined(axis.max) ||\n                        axis.min === axis.max // #10733\n                    ) {\n                        // Default action: when extremes are the same or there is\n                        // not extremes on the axis, but scrollbar exists, make it\n                        // full size\n                        scrollbar.setRange(0, 1);\n                    }\n                    else {\n                        from = ((axis.min - scrollMin) /\n                            (scrollMax - scrollMin));\n                        to = ((axis.max - scrollMin) /\n                            (scrollMax - scrollMin));\n                        if ((axis.horiz && !axis.reversed) ||\n                            (!axis.horiz && axis.reversed)) {\n                            scrollbar.setRange(from, to);\n                        }\n                        else {\n                            // Inverse vertical axis\n                            scrollbar.setRange(1 - to, 1 - from);\n                        }\n                    }\n                }\n            }\n        })(ScrollbarAxis || (ScrollbarAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarAxis;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/ScrollbarDefaults.js', [_modules['Core/Globals.js']], function (H) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var isTouchDevice = H.isTouchDevice;\n        /* *\n         *\n         *  Constant\n         *\n         * */\n        /**\n         *\n         * The scrollbar is a means of panning over the X axis of a stock chart.\n         * Scrollbars can  also be applied to other types of axes.\n         *\n         * Another approach to scrollable charts is the [chart.scrollablePlotArea](\n         * https://api.highcharts.com/highcharts/chart.scrollablePlotArea) option that\n         * is especially suitable for simpler cartesian charts on mobile.\n         *\n         * In styled mode, all the presentational options for the\n         * scrollbar are replaced by the classes `.highcharts-scrollbar-thumb`,\n         * `.highcharts-scrollbar-arrow`, `.highcharts-scrollbar-button`,\n         * `.highcharts-scrollbar-rifles` and `.highcharts-scrollbar-track`.\n         *\n         * @sample stock/yaxis/inverted-bar-scrollbar/\n         *         A scrollbar on a simple bar chart\n         *\n         * @product highstock gantt\n         * @optionparent scrollbar\n         *\n         * @private\n         */\n        var ScrollbarDefaults = {\n            /**\n             * The height of the scrollbar. If `buttonsEnabled` is true , the height\n             * also applies to the width of the scroll arrows so that they are always\n             * squares.\n             *\n             * @sample stock/scrollbar/style/\n             *         Non-default height\n             *\n             * @type    {number}\n             */\n            height: 10,\n            /**\n             * The border rounding radius of the bar.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderRadius: 5,\n            /**\n             * The corner radius of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderRadius: 0,\n            /**\n             * Enable or disable the buttons at the end of the scrollbar.\n             *\n             * @since 11.0.0\n             */\n            buttonsEnabled: false,\n            /**\n             * Enable or disable the scrollbar.\n             *\n             * @sample stock/scrollbar/enabled/\n             *         Disable the scrollbar, only use navigator\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.enabled\n             */\n            /**\n             * Whether to redraw the main chart as the scrollbar or the navigator\n             * zoomed window is moved. Defaults to `true` for modern browsers and\n             * `false` for legacy IE browsers as well as mobile devices.\n             *\n             * @sample stock/scrollbar/liveredraw\n             *         Setting live redraw to false\n             *\n             * @type  {boolean}\n             * @since 1.3\n             */\n            liveRedraw: void 0,\n            /**\n             * The margin between the scrollbar and its axis when the scrollbar is\n             * applied directly to an axis, or the navigator in case that is enabled.\n             * Defaults to 10 for axis, 0 for navigator.\n             *\n             * @type {number|undefined}\n             */\n            margin: void 0,\n            /**\n             * The minimum width of the scrollbar.\n             *\n             * @since 1.2.5\n             */\n            minWidth: 6,\n            /** @ignore-option */\n            opposite: true,\n            /**\n             * Whether to show or hide the scrollbar when the scrolled content is\n             * zoomed out to it full extent.\n             *\n             * @type      {boolean}\n             * @default   true\n             * @apioption scrollbar.showFull\n             */\n            step: 0.2,\n            /**\n             * The z index of the scrollbar group.\n             */\n            zIndex: 3,\n            /**\n             * The background color of the scrollbar itself.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBackgroundColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The width of the bar's border.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            barBorderWidth: 0,\n            /**\n             * The color of the scrollbar's border.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            barBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The color of the small arrow inside the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonArrowColor: \"#333333\" /* Palette.neutralColor80 */,\n            /**\n             * The color of scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBackgroundColor: \"#e6e6e6\" /* Palette.neutralColor10 */,\n            /**\n             * The color of the border of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            buttonBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The border width of the scrollbar buttons.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            buttonBorderWidth: 1,\n            /**\n             * The color of the small rifles in the middle of the scrollbar.\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            rifleColor: 'none',\n            /**\n             * The color of the track background.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBackgroundColor: 'rgba(255, 255, 255, 0.001)',\n            /**\n             * The color of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            trackBorderColor: \"#cccccc\" /* Palette.neutralColor20 */,\n            /**\n             * The corner radius of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderRadius: 5,\n            /**\n             * The width of the border of the scrollbar track.\n             *\n             * @sample stock/scrollbar/style/\n             *         Scrollbar styling\n             */\n            trackBorderWidth: 1\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ScrollbarDefaults;\n    });\n    _registerModule(_modules, 'Stock/Scrollbar/Scrollbar.js', [_modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/ScrollbarAxis.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (D, H, ScrollbarAxis, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, fireEvent = U.fireEvent, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        /* eslint-disable no-invalid-this, valid-jsdoc */\n        /**\n         * A reusable scrollbar, internally used in Highcharts Stock's\n         * navigator and optionally on individual axes.\n         *\n         * @private\n         * @class\n         * @name Highcharts.Scrollbar\n         * @param {Highcharts.SVGRenderer} renderer\n         * @param {Highcharts.ScrollbarOptions} options\n         * @param {Highcharts.Chart} chart\n         */\n        var Scrollbar = /** @class */ (function () {\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            function Scrollbar(renderer, options, chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this._events = [];\n                this.chart = void 0;\n                this.chartX = 0;\n                this.chartY = 0;\n                this.from = 0;\n                this.group = void 0;\n                this.options = void 0;\n                this.renderer = void 0;\n                this.scrollbar = void 0;\n                this.scrollbarButtons = [];\n                this.scrollbarGroup = void 0;\n                this.scrollbarLeft = 0;\n                this.scrollbarRifles = void 0;\n                this.scrollbarStrokeWidth = 1;\n                this.scrollbarTop = 0;\n                this.size = 0;\n                this.to = 0;\n                this.track = void 0;\n                this.trackBorderWidth = 1;\n                this.userOptions = void 0;\n                this.x = 0;\n                this.y = 0;\n                this.init(renderer, options, chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Scrollbar.compose = function (AxisClass) {\n                ScrollbarAxis.compose(AxisClass, Scrollbar);\n            };\n            /**\n             * When we have vertical scrollbar, rifles and arrow in buttons should be\n             * rotated. The same method is used in Navigator's handles, to rotate them.\n             *\n             * @function Highcharts.swapXY\n             *\n             * @param {Highcharts.SVGPathArray} path\n             * Path to be rotated.\n             *\n             * @param {boolean} [vertical]\n             * If vertical scrollbar, swap x-y values.\n             *\n             * @return {Highcharts.SVGPathArray}\n             * Rotated path.\n             *\n             * @requires modules/stock\n             */\n            Scrollbar.swapXY = function (path, vertical) {\n                if (vertical) {\n                    path.forEach(function (seg) {\n                        var len = seg.length;\n                        var temp;\n                        for (var i = 0; i < len; i += 2) {\n                            temp = seg[i + 1];\n                            if (typeof temp === 'number') {\n                                seg[i + 1] = seg[i + 2];\n                                seg[i + 2] = temp;\n                            }\n                        }\n                    });\n                }\n                return path;\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Set up the mouse and touch events for the Scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#addEvents\n             */\n            Scrollbar.prototype.addEvents = function () {\n                var buttonsOrder = this.options.inverted ? [1, 0] : [0, 1], buttons = this.scrollbarButtons, bar = this.scrollbarGroup.element, track = this.track.element, mouseDownHandler = this.mouseDownHandler.bind(this), mouseMoveHandler = this.mouseMoveHandler.bind(this), mouseUpHandler = this.mouseUpHandler.bind(this);\n                // Mouse events\n                var _events = [\n                    [\n                        buttons[buttonsOrder[0]].element,\n                        'click',\n                        this.buttonToMinClick.bind(this)\n                    ],\n                    [\n                        buttons[buttonsOrder[1]].element,\n                        'click',\n                        this.buttonToMaxClick.bind(this)\n                    ],\n                    [track, 'click', this.trackClick.bind(this)],\n                    [bar, 'mousedown', mouseDownHandler],\n                    [bar.ownerDocument, 'mousemove', mouseMoveHandler],\n                    [bar.ownerDocument, 'mouseup', mouseUpHandler]\n                ];\n                // Touch events\n                if (H.hasTouch) {\n                    _events.push([bar, 'touchstart', mouseDownHandler], [bar.ownerDocument, 'touchmove', mouseMoveHandler], [bar.ownerDocument, 'touchend', mouseUpHandler]);\n                }\n                // Add them all\n                _events.forEach(function (args) {\n                    addEvent.apply(null, args);\n                });\n                this._events = _events;\n            };\n            Scrollbar.prototype.buttonToMaxClick = function (e) {\n                var scroller = this;\n                var range = ((scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2));\n                scroller.updatePosition(scroller.from + range, scroller.to + range);\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            Scrollbar.prototype.buttonToMinClick = function (e) {\n                var scroller = this;\n                var range = correctFloat(scroller.to - scroller.from) *\n                    pick(scroller.options.step, 0.2);\n                scroller.updatePosition(correctFloat(scroller.from - range), correctFloat(scroller.to - range));\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Get normalized (0-1) cursor position over the scrollbar\n             *\n             * @private\n             * @function Highcharts.Scrollbar#cursorToScrollbarPosition\n             *\n             * @param  {*} normalizedEvent\n             *         normalized event, with chartX and chartY values\n             *\n             * @return {Highcharts.Dictionary<number>}\n             *         Local position {chartX, chartY}\n             */\n            Scrollbar.prototype.cursorToScrollbarPosition = function (normalizedEvent) {\n                var scroller = this, options = scroller.options, minWidthDifference = options.minWidth > scroller.calculatedWidth ?\n                    options.minWidth :\n                    0; // minWidth distorts translation\n                return {\n                    chartX: (normalizedEvent.chartX - scroller.x -\n                        scroller.xOffset) /\n                        (scroller.barWidth - minWidthDifference),\n                    chartY: (normalizedEvent.chartY - scroller.y -\n                        scroller.yOffset) /\n                        (scroller.barWidth - minWidthDifference)\n                };\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#destroy\n             */\n            Scrollbar.prototype.destroy = function () {\n                var scroller = this, navigator = scroller.chart.scroller;\n                // Disconnect events added in addEvents\n                scroller.removeEvents();\n                // Destroy properties\n                [\n                    'track',\n                    'scrollbarRifles',\n                    'scrollbar',\n                    'scrollbarGroup',\n                    'group'\n                ].forEach(function (prop) {\n                    if (scroller[prop] && scroller[prop].destroy) {\n                        scroller[prop] = scroller[prop].destroy();\n                    }\n                });\n                // #6421, chart may have more scrollbars\n                if (navigator && scroller === navigator.scrollbar) {\n                    navigator.scrollbar = null;\n                    // Destroy elements in collection\n                    destroyObjectProperties(navigator.scrollbarButtons);\n                }\n            };\n            /**\n             * Draw the scrollbar buttons with arrows\n             *\n             * @private\n             * @function Highcharts.Scrollbar#drawScrollbarButton\n             * @param {number} index\n             *        0 is left, 1 is right\n             */\n            Scrollbar.prototype.drawScrollbarButton = function (index) {\n                var scroller = this, renderer = scroller.renderer, scrollbarButtons = scroller.scrollbarButtons, options = scroller.options, size = scroller.size, group = renderer.g().add(scroller.group);\n                scrollbarButtons.push(group);\n                if (options.buttonsEnabled) {\n                    // Create a rectangle for the scrollbar button\n                    var rect = renderer.rect()\n                        .addClass('highcharts-scrollbar-button')\n                        .add(group);\n                    // Presentational attributes\n                    if (!scroller.chart.styledMode) {\n                        rect.attr({\n                            stroke: options.buttonBorderColor,\n                            'stroke-width': options.buttonBorderWidth,\n                            fill: options.buttonBackgroundColor\n                        });\n                    }\n                    // Place the rectangle based on the rendered stroke width\n                    rect.attr(rect.crisp({\n                        x: -0.5,\n                        y: -0.5,\n                        // +1 to compensate for crispifying in rect method\n                        width: size + 1,\n                        height: size + 1,\n                        r: options.buttonBorderRadius\n                    }, rect.strokeWidth()));\n                    // Button arrow\n                    var arrow = renderer\n                        .path(Scrollbar.swapXY([[\n                            'M',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 - 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? -1 : 1),\n                            size / 2 + 3\n                        ], [\n                            'L',\n                            size / 2 + (index ? 2 : -2),\n                            size / 2\n                        ]], options.vertical))\n                        .addClass('highcharts-scrollbar-arrow')\n                        .add(scrollbarButtons[index]);\n                    if (!scroller.chart.styledMode) {\n                        arrow.attr({\n                            fill: options.buttonArrowColor\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.Scrollbar#init\n             * @param {Highcharts.SVGRenderer} renderer\n             * @param {Highcharts.ScrollbarOptions} options\n             * @param {Highcharts.Chart} chart\n             */\n            Scrollbar.prototype.init = function (renderer, options, chart) {\n                var scroller = this;\n                scroller.scrollbarButtons = [];\n                scroller.renderer = renderer;\n                scroller.userOptions = options;\n                scroller.options = merge(ScrollbarDefaults, defaultOptions.scrollbar, options);\n                scroller.options.margin = pick(scroller.options.margin, 10);\n                scroller.chart = chart;\n                // backward compatibility\n                scroller.size = pick(scroller.options.size, scroller.options.height);\n                // Init\n                if (options.enabled) {\n                    scroller.render();\n                    scroller.addEvents();\n                }\n            };\n            Scrollbar.prototype.mouseDownHandler = function (e) {\n                var scroller = this, normalizedEvent = scroller.chart.pointer.normalize(e), mousePosition = scroller.cursorToScrollbarPosition(normalizedEvent);\n                scroller.chartX = mousePosition.chartX;\n                scroller.chartY = mousePosition.chartY;\n                scroller.initPositions = [scroller.from, scroller.to];\n                scroller.grabbedCenter = true;\n            };\n            /**\n             * Event handler for the mouse move event.\n             * @private\n             */\n            Scrollbar.prototype.mouseMoveHandler = function (e) {\n                var scroller = this, normalizedEvent = scroller.chart.pointer.normalize(e), options = scroller.options, direction = options.vertical ?\n                    'chartY' : 'chartX', initPositions = scroller.initPositions || [];\n                var scrollPosition, chartPosition, change;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when\n                // holding the finger down in the center of the scrollbar. This\n                // should be ignored.\n                if (scroller.grabbedCenter &&\n                    // #4696, scrollbar failed on Android\n                    (!e.touches || e.touches[0][direction] !== 0)) {\n                    chartPosition = scroller.cursorToScrollbarPosition(normalizedEvent)[direction];\n                    scrollPosition = scroller[direction];\n                    change = chartPosition - scrollPosition;\n                    scroller.hasDragged = true;\n                    scroller.updatePosition(initPositions[0] + change, initPositions[1] + change);\n                    if (scroller.hasDragged) {\n                        fireEvent(scroller, 'changed', {\n                            from: scroller.from,\n                            to: scroller.to,\n                            trigger: 'scrollbar',\n                            DOMType: e.type,\n                            DOMEvent: e\n                        });\n                    }\n                }\n            };\n            /**\n             * Event handler for the mouse up event.\n             * @private\n             */\n            Scrollbar.prototype.mouseUpHandler = function (e) {\n                var scroller = this;\n                if (scroller.hasDragged) {\n                    fireEvent(scroller, 'changed', {\n                        from: scroller.from,\n                        to: scroller.to,\n                        trigger: 'scrollbar',\n                        DOMType: e.type,\n                        DOMEvent: e\n                    });\n                }\n                scroller.grabbedCenter =\n                    scroller.hasDragged =\n                        scroller.chartX =\n                            scroller.chartY = null;\n            };\n            /**\n             * Position the scrollbar, method called from a parent with defined\n             * dimensions.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#position\n             * @param {number} x\n             *        x-position on the chart\n             * @param {number} y\n             *        y-position on the chart\n             * @param {number} width\n             *        width of the scrollbar\n             * @param {number} height\n             *        height of the scorllbar\n             */\n            Scrollbar.prototype.position = function (x, y, width, height) {\n                var scroller = this, options = scroller.options, buttonsEnabled = options.buttonsEnabled, _a = options.margin, margin = _a === void 0 ? 0 : _a, vertical = options.vertical, method = scroller.rendered ? 'animate' : 'attr';\n                var xOffset = height, yOffset = 0;\n                // Make the scrollbar visible when it is repositioned, #15763.\n                scroller.group.show();\n                scroller.x = x;\n                scroller.y = y + this.trackBorderWidth;\n                scroller.width = width; // width with buttons\n                scroller.height = height;\n                scroller.xOffset = xOffset;\n                scroller.yOffset = yOffset;\n                // If Scrollbar is a vertical type, swap options:\n                if (vertical) {\n                    scroller.width = scroller.yOffset = width = yOffset = scroller.size;\n                    scroller.xOffset = xOffset = 0;\n                    scroller.yOffset = yOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = height - (buttonsEnabled ? width * 2 : 0);\n                    scroller.x = x = x + margin;\n                }\n                else {\n                    scroller.height = height = scroller.size;\n                    scroller.xOffset = xOffset = buttonsEnabled ? scroller.size : 0;\n                    // width without buttons\n                    scroller.barWidth = width - (buttonsEnabled ? height * 2 : 0);\n                    scroller.y = scroller.y + margin;\n                }\n                // Set general position for a group:\n                scroller.group[method]({\n                    translateX: x,\n                    translateY: scroller.y\n                });\n                // Resize background/track:\n                scroller.track[method]({\n                    width: width,\n                    height: height\n                });\n                // Move right/bottom button to its place:\n                scroller.scrollbarButtons[1][method]({\n                    translateX: vertical ? 0 : width - xOffset,\n                    translateY: vertical ? height - yOffset : 0\n                });\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#removeEvents\n             */\n            Scrollbar.prototype.removeEvents = function () {\n                this._events.forEach(function (args) {\n                    removeEvent.apply(null, args);\n                });\n                this._events.length = 0;\n            };\n            /**\n             * Render scrollbar with all required items.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#render\n             */\n            Scrollbar.prototype.render = function () {\n                var scroller = this, renderer = scroller.renderer, options = scroller.options, size = scroller.size, styledMode = scroller.chart.styledMode, group = renderer.g('scrollbar')\n                    .attr({\n                    zIndex: options.zIndex\n                })\n                    .hide() // initially hide the scrollbar #15863\n                    .add();\n                // Draw the scrollbar group\n                scroller.group = group;\n                // Draw the scrollbar track:\n                scroller.track = renderer.rect()\n                    .addClass('highcharts-scrollbar-track')\n                    .attr({\n                    r: options.trackBorderRadius || 0,\n                    height: size,\n                    width: size\n                }).add(group);\n                if (!styledMode) {\n                    scroller.track.attr({\n                        fill: options.trackBackgroundColor,\n                        stroke: options.trackBorderColor,\n                        'stroke-width': options.trackBorderWidth\n                    });\n                }\n                var trackBorderWidth = scroller.trackBorderWidth =\n                    scroller.track.strokeWidth();\n                scroller.track.attr({\n                    x: -trackBorderWidth % 2 / 2,\n                    y: -trackBorderWidth % 2 / 2\n                });\n                // Draw the scrollbar itself\n                scroller.scrollbarGroup = renderer.g().add(group);\n                scroller.scrollbar = renderer.rect()\n                    .addClass('highcharts-scrollbar-thumb')\n                    .attr({\n                    height: size - trackBorderWidth,\n                    width: size - trackBorderWidth,\n                    r: options.barBorderRadius || 0\n                }).add(scroller.scrollbarGroup);\n                scroller.scrollbarRifles = renderer\n                    .path(Scrollbar.swapXY([\n                    ['M', -3, size / 4],\n                    ['L', -3, 2 * size / 3],\n                    ['M', 0, size / 4],\n                    ['L', 0, 2 * size / 3],\n                    ['M', 3, size / 4],\n                    ['L', 3, 2 * size / 3]\n                ], options.vertical))\n                    .addClass('highcharts-scrollbar-rifles')\n                    .add(scroller.scrollbarGroup);\n                if (!styledMode) {\n                    scroller.scrollbar.attr({\n                        fill: options.barBackgroundColor,\n                        stroke: options.barBorderColor,\n                        'stroke-width': options.barBorderWidth\n                    });\n                    scroller.scrollbarRifles.attr({\n                        stroke: options.rifleColor,\n                        'stroke-width': 1\n                    });\n                }\n                scroller.scrollbarStrokeWidth = scroller.scrollbar.strokeWidth();\n                scroller.scrollbarGroup.translate(-scroller.scrollbarStrokeWidth % 2 / 2, -scroller.scrollbarStrokeWidth % 2 / 2);\n                // Draw the buttons:\n                scroller.drawScrollbarButton(0);\n                scroller.drawScrollbarButton(1);\n            };\n            /**\n             * Set scrollbar size, with a given scale.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#setRange\n             * @param {number} from\n             *        scale (0-1) where bar should start\n             * @param {number} to\n             *        scale (0-1) where bar should end\n             */\n            Scrollbar.prototype.setRange = function (from, to) {\n                var scroller = this, options = scroller.options, vertical = options.vertical, minWidth = options.minWidth, fullWidth = scroller.barWidth, method = (this.rendered &&\n                    !this.hasDragged &&\n                    !(this.chart.navigator && this.chart.navigator.hasDragged)) ? 'animate' : 'attr';\n                if (!defined(fullWidth)) {\n                    return;\n                }\n                var toPX = fullWidth * Math.min(to, 1);\n                var fromPX, newSize;\n                from = Math.max(from, 0);\n                fromPX = Math.ceil(fullWidth * from);\n                scroller.calculatedWidth = newSize = correctFloat(toPX - fromPX);\n                // We need to recalculate position, if minWidth is used\n                if (newSize < minWidth) {\n                    fromPX = (fullWidth - minWidth + newSize) * from;\n                    newSize = minWidth;\n                }\n                var newPos = Math.floor(fromPX + scroller.xOffset + scroller.yOffset);\n                var newRiflesPos = newSize / 2 - 0.5; // -0.5 -> rifle line width / 2\n                // Store current position:\n                scroller.from = from;\n                scroller.to = to;\n                if (!vertical) {\n                    scroller.scrollbarGroup[method]({\n                        translateX: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        width: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateX: newRiflesPos\n                    });\n                    scroller.scrollbarLeft = newPos;\n                    scroller.scrollbarTop = 0;\n                }\n                else {\n                    scroller.scrollbarGroup[method]({\n                        translateY: newPos\n                    });\n                    scroller.scrollbar[method]({\n                        height: newSize\n                    });\n                    scroller.scrollbarRifles[method]({\n                        translateY: newRiflesPos\n                    });\n                    scroller.scrollbarTop = newPos;\n                    scroller.scrollbarLeft = 0;\n                }\n                if (newSize <= 12) {\n                    scroller.scrollbarRifles.hide();\n                }\n                else {\n                    scroller.scrollbarRifles.show();\n                }\n                // Show or hide the scrollbar based on the showFull setting\n                if (options.showFull === false) {\n                    if (from <= 0 && to >= 1) {\n                        scroller.group.hide();\n                    }\n                    else {\n                        scroller.group.show();\n                    }\n                }\n                scroller.rendered = true;\n            };\n            /**\n             * Checks if the extremes should be updated in response to a scrollbar\n             * change event.\n             *\n             * @private\n             * @function Highcharts.Scrollbar#shouldUpdateExtremes\n             */\n            Scrollbar.prototype.shouldUpdateExtremes = function (eventType) {\n                return (pick(this.options.liveRedraw, H.svg &&\n                    !H.isTouchDevice &&\n                    !this.chart.boosted) ||\n                    // Mouseup always should change extremes\n                    eventType === 'mouseup' ||\n                    eventType === 'touchend' ||\n                    // Internal events\n                    !defined(eventType));\n            };\n            Scrollbar.prototype.trackClick = function (e) {\n                var scroller = this;\n                var normalizedEvent = scroller.chart.pointer.normalize(e), range = scroller.to - scroller.from, top = scroller.y + scroller.scrollbarTop, left = scroller.x + scroller.scrollbarLeft;\n                if ((scroller.options.vertical && normalizedEvent.chartY > top) ||\n                    (!scroller.options.vertical && normalizedEvent.chartX > left)) {\n                    // On the top or on the left side of the track:\n                    scroller.updatePosition(scroller.from + range, scroller.to + range);\n                }\n                else {\n                    // On the bottom or the right side of the track:\n                    scroller.updatePosition(scroller.from - range, scroller.to - range);\n                }\n                fireEvent(scroller, 'changed', {\n                    from: scroller.from,\n                    to: scroller.to,\n                    trigger: 'scrollbar',\n                    DOMEvent: e\n                });\n            };\n            /**\n             * Update the scrollbar with new options\n             *\n             * @private\n             * @function Highcharts.Scrollbar#update\n             * @param  {Highcharts.ScrollbarOptions} options\n             */\n            Scrollbar.prototype.update = function (options) {\n                this.destroy();\n                this.init(this.chart.renderer, merge(true, this.options, options), this.chart);\n            };\n            /**\n             * Update position option in the Scrollbar, with normalized 0-1 scale\n             *\n             * @private\n             * @function Highcharts.Scrollbar#updatePosition\n             * @param  {number} from\n             * @param  {number} to\n             */\n            Scrollbar.prototype.updatePosition = function (from, to) {\n                if (to > 1) {\n                    from = correctFloat(1 - correctFloat(to - from));\n                    to = 1;\n                }\n                if (from < 0) {\n                    to = correctFloat(to - from);\n                    from = 0;\n                }\n                this.from = from;\n                this.to = to;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            Scrollbar.defaultOptions = ScrollbarDefaults;\n            return Scrollbar;\n        }());\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        defaultOptions.scrollbar = merge(true, Scrollbar.defaultOptions, defaultOptions.scrollbar);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Scrollbar;\n    });\n    _registerModule(_modules, 'Stock/Navigator/Navigator.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Core/Axis/NavigatorAxisComposition.js'], _modules['Stock/Navigator/NavigatorComposition.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Utilities.js']], function (Axis, D, H, NavigatorAxisAdditions, NavigatorComposition, Scrollbar, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var hasTouch = H.hasTouch, isTouchDevice = H.isTouchDevice;\n        var addEvent = U.addEvent, clamp = U.clamp, correctFloat = U.correctFloat, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, erase = U.erase, extend = U.extend, find = U.find, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick, removeEvent = U.removeEvent, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Finding the min or max of a set of variables where we don't know if they are\n         * defined, is a pattern that is repeated several places in Highcharts. Consider\n         * making this a global utility method.\n         * @private\n         */\n        function numExt(extreme) {\n            var args = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n            }\n            var numbers = [].filter.call(args, isNumber);\n            if (numbers.length) {\n                return Math[extreme].apply(0, numbers);\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Navigator class\n         *\n         * @private\n         * @class\n         * @name Highcharts.Navigator\n         *\n         * @param {Highcharts.Chart} chart\n         *        Chart object\n         */\n        var Navigator = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function Navigator(chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.baseSeries = void 0;\n                this.chart = void 0;\n                this.handles = void 0;\n                this.height = void 0;\n                this.left = void 0;\n                this.navigatorEnabled = void 0;\n                this.navigatorGroup = void 0;\n                this.navigatorOptions = void 0;\n                this.navigatorSeries = void 0;\n                this.navigatorSize = void 0;\n                this.opposite = void 0;\n                this.outline = void 0;\n                this.range = void 0;\n                this.rendered = void 0;\n                this.scrollbarHeight = 0;\n                this.scrollButtonSize = void 0;\n                this.shades = void 0;\n                this.size = void 0;\n                this.top = void 0;\n                this.xAxis = void 0;\n                this.yAxis = void 0;\n                this.zoomedMax = void 0;\n                this.zoomedMin = void 0;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            Navigator.compose = function (AxisClass, ChartClass, SeriesClass) {\n                NavigatorComposition.compose(AxisClass, ChartClass, Navigator, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Draw one of the handles on the side of the zoomed range in the navigator.\n             *\n             * @private\n             * @function Highcharts.Navigator#drawHandle\n             *\n             * @param {number} x\n             *        The x center for the handle\n             *\n             * @param {number} index\n             *        0 for left and 1 for right\n             *\n             * @param {boolean|undefined} inverted\n             *        Flag for chart.inverted\n             *\n             * @param {string} verb\n             *        Use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawHandle = function (x, index, inverted, verb) {\n                var navigator = this, height = navigator.navigatorOptions.handles.height;\n                // Place it\n                navigator.handles[index][verb](inverted ? {\n                    translateX: Math.round(navigator.left + navigator.height / 2),\n                    translateY: Math.round(navigator.top + parseInt(x, 10) + 0.5 - height)\n                } : {\n                    translateX: Math.round(navigator.left + parseInt(x, 10)),\n                    translateY: Math.round(navigator.top + navigator.height / 2 - height / 2 - 1)\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawOutline\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawOutline = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, maskInside = navigator.navigatorOptions.maskInside, outlineWidth = navigator.outline.strokeWidth(), halfOutline = outlineWidth / 2, outlineCorrection = (outlineWidth % 2) / 2, // #5800\n                scrollButtonSize = navigator.scrollButtonSize, navigatorSize = navigator.size, navigatorTop = navigator.top, height = navigator.height, lineTop = navigatorTop - halfOutline, lineBtm = navigatorTop + height;\n                var left = navigator.left, verticalMin, path;\n                if (inverted) {\n                    verticalMin = navigatorTop + zoomedMax + outlineCorrection;\n                    zoomedMax = navigatorTop + zoomedMin + outlineCorrection;\n                    path = [\n                        [\n                            'M',\n                            left + height,\n                            navigatorTop - scrollButtonSize - outlineCorrection\n                        ],\n                        // top right of zoomed range\n                        ['L', left + height, verticalMin],\n                        ['L', left, verticalMin],\n                        ['M', left, zoomedMax],\n                        ['L', left + height, zoomedMax],\n                        [\n                            'L',\n                            left + height,\n                            navigatorTop + navigatorSize + scrollButtonSize\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', left + height, verticalMin - halfOutline], \n                        // upper right of z.r.\n                        [\n                            'L',\n                            left + height,\n                            zoomedMax + halfOutline\n                        ]);\n                    }\n                }\n                else {\n                    left -= scrollButtonSize;\n                    zoomedMin += left + scrollButtonSize - outlineCorrection;\n                    zoomedMax += left + scrollButtonSize - outlineCorrection;\n                    path = [\n                        // left\n                        ['M', left, lineTop],\n                        // upper left of zoomed range\n                        ['L', zoomedMin, lineTop],\n                        // lower left of z.r.\n                        ['L', zoomedMin, lineBtm],\n                        // lower right of z.r.\n                        ['M', zoomedMax, lineBtm],\n                        // upper right of z.r.\n                        ['L', zoomedMax, lineTop],\n                        // right\n                        [\n                            'L',\n                            left + navigatorSize + scrollButtonSize * 2,\n                            navigatorTop + halfOutline\n                        ]\n                    ];\n                    if (maskInside) {\n                        path.push(\n                        // upper left of zoomed range\n                        ['M', zoomedMin - halfOutline, lineTop], \n                        // upper right of z.r.\n                        ['L', zoomedMax + halfOutline, lineTop]);\n                    }\n                }\n                navigator.outline[verb]({\n                    d: path\n                });\n            };\n            /**\n             * Render outline around the zoomed range\n             *\n             * @private\n             * @function Highcharts.Navigator#drawMasks\n             *\n             * @param {number} zoomedMin\n             *        in pixels position where zoomed range starts\n             *\n             * @param {number} zoomedMax\n             *        in pixels position where zoomed range ends\n             *\n             * @param {boolean|undefined} inverted\n             *        flag if chart is inverted\n             *\n             * @param {string} verb\n             *        use 'animate' or 'attr'\n             */\n            Navigator.prototype.drawMasks = function (zoomedMin, zoomedMax, inverted, verb) {\n                var navigator = this, left = navigator.left, top = navigator.top, navigatorHeight = navigator.height;\n                var height, width, x, y;\n                // Determine rectangle position & size\n                // According to (non)inverted position:\n                if (inverted) {\n                    x = [left, left, left];\n                    y = [top, top + zoomedMin, top + zoomedMax];\n                    width = [navigatorHeight, navigatorHeight, navigatorHeight];\n                    height = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                }\n                else {\n                    x = [left, left + zoomedMin, left + zoomedMax];\n                    y = [top, top, top];\n                    width = [\n                        zoomedMin,\n                        zoomedMax - zoomedMin,\n                        navigator.size - zoomedMax\n                    ];\n                    height = [navigatorHeight, navigatorHeight, navigatorHeight];\n                }\n                navigator.shades.forEach(function (shade, i) {\n                    shade[verb]({\n                        x: x[i],\n                        y: y[i],\n                        width: width[i],\n                        height: height[i]\n                    });\n                });\n            };\n            /**\n             * Generate DOM elements for a navigator:\n             *\n             * - main navigator group\n             *\n             * - all shades\n             *\n             * - outline\n             *\n             * - handles\n             *\n             * @private\n             * @function Highcharts.Navigator#renderElements\n             */\n            Navigator.prototype.renderElements = function () {\n                var navigator = this, navigatorOptions = navigator.navigatorOptions, maskInside = navigatorOptions.maskInside, chart = navigator.chart, inverted = chart.inverted, renderer = chart.renderer, mouseCursor = {\n                    cursor: inverted ? 'ns-resize' : 'ew-resize'\n                }, \n                // Create the main navigator group\n                navigatorGroup = navigator.navigatorGroup = renderer\n                    .g('navigator')\n                    .attr({\n                    zIndex: 8,\n                    visibility: 'hidden'\n                })\n                    .add();\n                // Create masks, each mask will get events and fill:\n                [\n                    !maskInside,\n                    maskInside,\n                    !maskInside\n                ].forEach(function (hasMask, index) {\n                    var shade = renderer.rect()\n                        .addClass('highcharts-navigator-mask' +\n                        (index === 1 ? '-inside' : '-outside'))\n                        .add(navigatorGroup);\n                    if (!chart.styledMode) {\n                        shade.attr({\n                            fill: hasMask ?\n                                navigatorOptions.maskFill :\n                                'rgba(0,0,0,0)'\n                        });\n                        if (index === 1) {\n                            shade.css(mouseCursor);\n                        }\n                    }\n                    navigator.shades[index] = shade;\n                });\n                // Create the outline:\n                navigator.outline = renderer.path()\n                    .addClass('highcharts-navigator-outline')\n                    .add(navigatorGroup);\n                if (!chart.styledMode) {\n                    navigator.outline.attr({\n                        'stroke-width': navigatorOptions.outlineWidth,\n                        stroke: navigatorOptions.outlineColor\n                    });\n                }\n                // Create the handlers:\n                if (navigatorOptions.handles && navigatorOptions.handles.enabled) {\n                    var handlesOptions_1 = navigatorOptions.handles, height_1 = handlesOptions_1.height, width_1 = handlesOptions_1.width;\n                    [0, 1].forEach(function (index) {\n                        navigator.handles[index] = renderer.symbol(handlesOptions_1.symbols[index], -width_1 / 2 - 1, 0, width_1, height_1, handlesOptions_1);\n                        if (chart.inverted) {\n                            navigator.handles[index].attr({\n                                rotation: 90,\n                                rotationOriginX: Math.floor(-width_1 / 2),\n                                rotationOriginY: (height_1 + width_1) / 2\n                            });\n                        }\n                        // zIndex = 6 for right handle, 7 for left.\n                        // Can't be 10, because of the tooltip in inverted chart #2908\n                        navigator.handles[index].attr({ zIndex: 7 - index })\n                            .addClass('highcharts-navigator-handle ' +\n                            'highcharts-navigator-handle-' +\n                            ['left', 'right'][index]).add(navigatorGroup);\n                        if (!chart.styledMode) {\n                            navigator.handles[index]\n                                .attr({\n                                fill: handlesOptions_1.backgroundColor,\n                                stroke: handlesOptions_1.borderColor,\n                                'stroke-width': handlesOptions_1.lineWidth\n                            })\n                                .css(mouseCursor);\n                        }\n                    });\n                }\n            };\n            /**\n             * Update navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#update\n             *\n             * @param {Highcharts.NavigatorOptions} options\n             *        Options to merge in when updating navigator\n             */\n            Navigator.prototype.update = function (options) {\n                // Remove references to old navigator series in base series\n                (this.series || []).forEach(function (series) {\n                    if (series.baseSeries) {\n                        delete series.baseSeries.navigatorSeries;\n                    }\n                });\n                // Destroy and rebuild navigator\n                this.destroy();\n                var chartOptions = this.chart.options;\n                merge(true, chartOptions.navigator, options);\n                this.init(this.chart);\n            };\n            /**\n             * Render the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#render\n             * @param {number} min\n             *        X axis value minimum\n             * @param {number} max\n             *        X axis value maximum\n             * @param {number} [pxMin]\n             *        Pixel value minimum\n             * @param {number} [pxMax]\n             *        Pixel value maximum\n             */\n            Navigator.prototype.render = function (min, max, pxMin, pxMax) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, pointRange = xAxis.pointRange || 0, scrollbarXAxis = xAxis.navigatorAxis.fake ? chart.xAxis[0] : xAxis, navigatorEnabled = navigator.navigatorEnabled, rendered = navigator.rendered, inverted = chart.inverted, minRange = chart.xAxis[0].minRange, maxRange = chart.xAxis[0].options.maxRange, scrollButtonSize = navigator.scrollButtonSize;\n                var navigatorWidth, scrollbarLeft, scrollbarTop, scrollbarHeight = navigator.scrollbarHeight, navigatorSize, verb;\n                // Don't redraw while moving the handles (#4703).\n                if (this.hasDragged && !defined(pxMin)) {\n                    return;\n                }\n                min = correctFloat(min - pointRange / 2);\n                max = correctFloat(max + pointRange / 2);\n                // Don't render the navigator until we have data (#486, #4202, #5172).\n                if (!isNumber(min) || !isNumber(max)) {\n                    // However, if navigator was already rendered, we may need to resize\n                    // it. For example hidden series, but visible navigator (#6022).\n                    if (rendered) {\n                        pxMin = 0;\n                        pxMax = pick(xAxis.width, scrollbarXAxis.width);\n                    }\n                    else {\n                        return;\n                    }\n                }\n                navigator.left = pick(xAxis.left, \n                // in case of scrollbar only, without navigator\n                chart.plotLeft + scrollButtonSize +\n                    (inverted ? chart.plotWidth : 0));\n                var zoomedMax = navigator.size = navigatorSize = pick(xAxis.len, (inverted ? chart.plotHeight : chart.plotWidth) -\n                    2 * scrollButtonSize);\n                if (inverted) {\n                    navigatorWidth = scrollbarHeight;\n                }\n                else {\n                    navigatorWidth = navigatorSize + 2 * scrollButtonSize;\n                }\n                // Get the pixel position of the handles\n                pxMin = pick(pxMin, xAxis.toPixels(min, true));\n                pxMax = pick(pxMax, xAxis.toPixels(max, true));\n                // Verify (#1851, #2238)\n                if (!isNumber(pxMin) || Math.abs(pxMin) === Infinity) {\n                    pxMin = 0;\n                    pxMax = navigatorWidth;\n                }\n                // Are we below the minRange? (#2618, #6191)\n                var newMin = xAxis.toValue(pxMin, true), newMax = xAxis.toValue(pxMax, true), currentRange = Math.abs(correctFloat(newMax - newMin));\n                if (currentRange < minRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - minRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + minRange + pointRange, true);\n                    }\n                }\n                else if (defined(maxRange) &&\n                    correctFloat(currentRange - pointRange) > maxRange) {\n                    if (this.grabbedLeft) {\n                        pxMin = xAxis.toPixels(newMax - maxRange - pointRange, true);\n                    }\n                    else if (this.grabbedRight) {\n                        pxMax = xAxis.toPixels(newMin + maxRange + pointRange, true);\n                    }\n                }\n                // Handles are allowed to cross, but never exceed the plot area\n                navigator.zoomedMax = clamp(Math.max(pxMin, pxMax), 0, zoomedMax);\n                navigator.zoomedMin = clamp(navigator.fixedWidth ?\n                    navigator.zoomedMax - navigator.fixedWidth :\n                    Math.min(pxMin, pxMax), 0, zoomedMax);\n                navigator.range = navigator.zoomedMax - navigator.zoomedMin;\n                zoomedMax = Math.round(navigator.zoomedMax);\n                var zoomedMin = Math.round(navigator.zoomedMin);\n                if (navigatorEnabled) {\n                    navigator.navigatorGroup.attr({\n                        visibility: 'inherit'\n                    });\n                    // Place elements\n                    verb = rendered && !navigator.hasDragged ? 'animate' : 'attr';\n                    navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    if (navigator.navigatorOptions.handles.enabled) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n                if (navigator.scrollbar) {\n                    if (inverted) {\n                        scrollbarTop = navigator.top - scrollButtonSize;\n                        scrollbarLeft = navigator.left - scrollbarHeight +\n                            (navigatorEnabled || !scrollbarXAxis.opposite ? 0 :\n                                // Multiple axes has offsets:\n                                (scrollbarXAxis.titleOffset || 0) +\n                                    // Self margin from the axis.title\n                                    scrollbarXAxis.axisTitleMargin);\n                        scrollbarHeight = navigatorSize + 2 * scrollButtonSize;\n                    }\n                    else {\n                        scrollbarTop = navigator.top + (navigatorEnabled ?\n                            navigator.height :\n                            -scrollbarHeight);\n                        scrollbarLeft = navigator.left - scrollButtonSize;\n                    }\n                    // Reposition scrollbar\n                    navigator.scrollbar.position(scrollbarLeft, scrollbarTop, navigatorWidth, scrollbarHeight);\n                    // Keep scale 0-1\n                    navigator.scrollbar.setRange(\n                    // Use real value, not rounded because range can be very small\n                    // (#1716)\n                    navigator.zoomedMin / (navigatorSize || 1), navigator.zoomedMax / (navigatorSize || 1));\n                }\n                navigator.rendered = true;\n                fireEvent(this, 'afterRender');\n            };\n            /**\n             * Set up the mouse and touch events for the navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#addMouseEvents\n             */\n            Navigator.prototype.addMouseEvents = function () {\n                var navigator = this, chart = navigator.chart, container = chart.container;\n                var eventsToUnbind = [], mouseMoveHandler, mouseUpHandler;\n                /**\n                 * Create mouse events' handlers.\n                 * Make them as separate functions to enable wrapping them:\n                 */\n                navigator.mouseMoveHandler = mouseMoveHandler = function (e) {\n                    navigator.onMouseMove(e);\n                };\n                navigator.mouseUpHandler = mouseUpHandler = function (e) {\n                    navigator.onMouseUp(e);\n                };\n                // Add shades and handles mousedown events\n                eventsToUnbind = navigator.getPartsEvents('mousedown');\n                // Add mouse move and mouseup events. These are bind to doc/container,\n                // because Navigator.grabbedSomething flags are stored in mousedown\n                // events\n                eventsToUnbind.push(addEvent(chart.renderTo, 'mousemove', mouseMoveHandler), addEvent(container.ownerDocument, 'mouseup', mouseUpHandler));\n                // Touch events\n                if (hasTouch) {\n                    eventsToUnbind.push(addEvent(chart.renderTo, 'touchmove', mouseMoveHandler), addEvent(container.ownerDocument, 'touchend', mouseUpHandler));\n                    eventsToUnbind.concat(navigator.getPartsEvents('touchstart'));\n                }\n                navigator.eventsToUnbind = eventsToUnbind;\n                // Data events\n                if (navigator.series && navigator.series[0]) {\n                    eventsToUnbind.push(addEvent(navigator.series[0].xAxis, 'foundExtremes', function () {\n                        chart.navigator.modifyNavigatorAxisExtremes();\n                    }));\n                }\n            };\n            /**\n             * Generate events for handles and masks\n             *\n             * @private\n             * @function Highcharts.Navigator#getPartsEvents\n             *\n             * @param {string} eventName\n             *        Event name handler, 'mousedown' or 'touchstart'\n             *\n             * @return {Array<Function>}\n             *         An array of functions to remove navigator functions from the\n             *         events again.\n             */\n            Navigator.prototype.getPartsEvents = function (eventName) {\n                var navigator = this, events = [];\n                ['shades', 'handles'].forEach(function (name) {\n                    navigator[name].forEach(function (navigatorItem, index) {\n                        events.push(addEvent(navigatorItem.element, eventName, function (e) {\n                            navigator[name + 'Mousedown'](e, index);\n                        }));\n                    });\n                });\n                return events;\n            };\n            /**\n             * Mousedown on a shaded mask, either:\n             *\n             * - will be stored for future drag&drop\n             *\n             * - will directly shift to a new range\n             *\n             * @private\n             * @function Highcharts.Navigator#shadesMousedown\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             *\n             * @param {number} index\n             *        Index of a mask in Navigator.shades array\n             */\n            Navigator.prototype.shadesMousedown = function (e, index) {\n                e = this.chart.pointer.normalize(e);\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, zoomedMin = navigator.zoomedMin, navigatorSize = navigator.size, range = navigator.range;\n                var navigatorPosition = navigator.left, chartX = e.chartX, fixedMax, fixedMin, ext, left;\n                // For inverted chart, swap some options:\n                if (chart.inverted) {\n                    chartX = e.chartY;\n                    navigatorPosition = navigator.top;\n                }\n                if (index === 1) {\n                    // Store information for drag&drop\n                    navigator.grabbedCenter = chartX;\n                    navigator.fixedWidth = range;\n                    navigator.dragOffset = chartX - zoomedMin;\n                }\n                else {\n                    // Shift the range by clicking on shaded areas\n                    left = chartX - navigatorPosition - range / 2;\n                    if (index === 0) {\n                        left = Math.max(0, left);\n                    }\n                    else if (index === 2 && left + range >= navigatorSize) {\n                        left = navigatorSize - range;\n                        if (navigator.reversedExtremes) {\n                            // #7713\n                            left -= range;\n                            fixedMin = navigator.getUnionExtremes().dataMin;\n                        }\n                        else {\n                            // #2293, #3543\n                            fixedMax = navigator.getUnionExtremes().dataMax;\n                        }\n                    }\n                    if (left !== zoomedMin) { // it has actually moved\n                        navigator.fixedWidth = range; // #1370\n                        ext = xAxis.navigatorAxis.toFixedRange(left, left + range, fixedMin, fixedMax);\n                        if (defined(ext.min)) { // #7411\n                            chart.xAxis[0].setExtremes(Math.min(ext.min, ext.max), Math.max(ext.min, ext.max), true, null, // auto animation\n                            { trigger: 'navigator' });\n                        }\n                    }\n                }\n            };\n            /**\n             * Mousedown on a handle mask.\n             * Will store necessary information for drag&drop.\n             *\n             * @private\n             * @function Highcharts.Navigator#handlesMousedown\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             * @param {number} index\n             *        Index of a handle in Navigator.handles array\n             */\n            Navigator.prototype.handlesMousedown = function (e, index) {\n                e = this.chart.pointer.normalize(e);\n                var navigator = this, chart = navigator.chart, baseXAxis = chart.xAxis[0], \n                // For reversed axes, min and max are changed,\n                // so the other extreme should be stored\n                reverse = navigator.reversedExtremes;\n                if (index === 0) {\n                    // Grab the left handle\n                    navigator.grabbedLeft = true;\n                    navigator.otherHandlePos = navigator.zoomedMax;\n                    navigator.fixedExtreme = reverse ? baseXAxis.min : baseXAxis.max;\n                }\n                else {\n                    // Grab the right handle\n                    navigator.grabbedRight = true;\n                    navigator.otherHandlePos = navigator.zoomedMin;\n                    navigator.fixedExtreme = reverse ? baseXAxis.max : baseXAxis.min;\n                }\n                chart.fixedRange = null;\n            };\n            /**\n             * Mouse move event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseMove\n             *\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseMove = function (e) {\n                var navigator = this, chart = navigator.chart, navigatorSize = navigator.navigatorSize, range = navigator.range, dragOffset = navigator.dragOffset, inverted = chart.inverted;\n                var left = navigator.left, chartX;\n                // In iOS, a mousemove event with e.pageX === 0 is fired when holding\n                // the finger down in the center of the scrollbar. This should be\n                // ignored.\n                if (!e.touches || e.touches[0].pageX !== 0) { // #4696\n                    e = chart.pointer.normalize(e);\n                    chartX = e.chartX;\n                    // Swap some options for inverted chart\n                    if (inverted) {\n                        left = navigator.top;\n                        chartX = e.chartY;\n                    }\n                    // Drag left handle or top handle\n                    if (navigator.grabbedLeft) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, chartX - left, navigator.otherHandlePos);\n                        // Drag right handle or bottom handle\n                    }\n                    else if (navigator.grabbedRight) {\n                        navigator.hasDragged = true;\n                        navigator.render(0, 0, navigator.otherHandlePos, chartX - left);\n                        // Drag scrollbar or open area in navigator\n                    }\n                    else if (navigator.grabbedCenter) {\n                        navigator.hasDragged = true;\n                        if (chartX < dragOffset) { // outside left\n                            chartX = dragOffset;\n                            // outside right\n                        }\n                        else if (chartX >\n                            navigatorSize + dragOffset - range) {\n                            chartX = navigatorSize + dragOffset - range;\n                        }\n                        navigator.render(0, 0, chartX - dragOffset, chartX - dragOffset + range);\n                    }\n                    if (navigator.hasDragged &&\n                        navigator.scrollbar &&\n                        pick(navigator.scrollbar.options.liveRedraw, \n                        // By default, don't run live redraw on touch\n                        // devices or if the chart is in boost.\n                        !isTouchDevice &&\n                            !this.chart.boosted)) {\n                        e.DOMType = e.type;\n                        setTimeout(function () {\n                            navigator.onMouseUp(e);\n                        }, 0);\n                    }\n                }\n            };\n            /**\n             * Mouse up event based on x/y mouse position.\n             *\n             * @private\n             * @function Highcharts.Navigator#onMouseUp\n             * @param {Highcharts.PointerEventObject} e\n             *        Mouse event\n             */\n            Navigator.prototype.onMouseUp = function (e) {\n                var navigator = this, chart = navigator.chart, xAxis = navigator.xAxis, scrollbar = navigator.scrollbar, DOMEvent = e.DOMEvent || e, inverted = chart.inverted, verb = navigator.rendered && !navigator.hasDragged ?\n                    'animate' : 'attr';\n                var zoomedMax, zoomedMin, unionExtremes, fixedMin, fixedMax, ext;\n                if (\n                // MouseUp is called for both, navigator and scrollbar (that order),\n                // which causes calling afterSetExtremes twice. Prevent first call\n                // by checking if scrollbar is going to set new extremes (#6334)\n                (navigator.hasDragged && (!scrollbar || !scrollbar.hasDragged)) ||\n                    e.trigger === 'scrollbar') {\n                    unionExtremes = navigator.getUnionExtremes();\n                    // When dragging one handle, make sure the other one doesn't change\n                    if (navigator.zoomedMin === navigator.otherHandlePos) {\n                        fixedMin = navigator.fixedExtreme;\n                    }\n                    else if (navigator.zoomedMax === navigator.otherHandlePos) {\n                        fixedMax = navigator.fixedExtreme;\n                    }\n                    // Snap to right edge (#4076)\n                    if (navigator.zoomedMax === navigator.size) {\n                        fixedMax = navigator.reversedExtremes ?\n                            unionExtremes.dataMin :\n                            unionExtremes.dataMax;\n                    }\n                    // Snap to left edge (#7576)\n                    if (navigator.zoomedMin === 0) {\n                        fixedMin = navigator.reversedExtremes ?\n                            unionExtremes.dataMax :\n                            unionExtremes.dataMin;\n                    }\n                    ext = xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin, navigator.zoomedMax, fixedMin, fixedMax);\n                    if (defined(ext.min)) {\n                        chart.xAxis[0].setExtremes(Math.min(ext.min, ext.max), Math.max(ext.min, ext.max), true, \n                        // Run animation when clicking buttons, scrollbar track etc,\n                        // but not when dragging handles or scrollbar\n                        navigator.hasDragged ? false : null, {\n                            trigger: 'navigator',\n                            triggerOp: 'navigator-drag',\n                            DOMEvent: DOMEvent // #1838\n                        });\n                    }\n                }\n                if (e.DOMType !== 'mousemove' &&\n                    e.DOMType !== 'touchmove') {\n                    navigator.grabbedLeft = navigator.grabbedRight =\n                        navigator.grabbedCenter = navigator.fixedWidth =\n                            navigator.fixedExtreme = navigator.otherHandlePos =\n                                navigator.hasDragged = navigator.dragOffset = null;\n                }\n                // Update position of navigator shades, outline and handles (#12573)\n                if (navigator.navigatorEnabled &&\n                    isNumber(navigator.zoomedMin) &&\n                    isNumber(navigator.zoomedMax)) {\n                    zoomedMin = Math.round(navigator.zoomedMin);\n                    zoomedMax = Math.round(navigator.zoomedMax);\n                    if (navigator.shades) {\n                        navigator.drawMasks(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.outline) {\n                        navigator.drawOutline(zoomedMin, zoomedMax, inverted, verb);\n                    }\n                    if (navigator.navigatorOptions.handles.enabled &&\n                        Object.keys(navigator.handles).length ===\n                            navigator.handles.length) {\n                        navigator.drawHandle(zoomedMin, 0, inverted, verb);\n                        navigator.drawHandle(zoomedMax, 1, inverted, verb);\n                    }\n                }\n            };\n            /**\n             * Removes the event handlers attached previously with addEvents.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeEvents\n             */\n            Navigator.prototype.removeEvents = function () {\n                if (this.eventsToUnbind) {\n                    this.eventsToUnbind.forEach(function (unbind) {\n                        unbind();\n                    });\n                    this.eventsToUnbind = void 0;\n                }\n                this.removeBaseSeriesEvents();\n            };\n            /**\n             * Remove data events.\n             *\n             * @private\n             * @function Highcharts.Navigator#removeBaseSeriesEvents\n             */\n            Navigator.prototype.removeBaseSeriesEvents = function () {\n                var baseSeries = this.baseSeries || [];\n                if (this.navigatorEnabled && baseSeries[0]) {\n                    if (this.navigatorOptions.adaptToUpdatedData !== false) {\n                        baseSeries.forEach(function (series) {\n                            removeEvent(series, 'updatedData', this.updatedDataHandler);\n                        }, this);\n                    }\n                    // We only listen for extremes-events on the first baseSeries\n                    if (baseSeries[0].xAxis) {\n                        removeEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes);\n                    }\n                }\n            };\n            /**\n             * Initialize the Navigator object\n             *\n             * @private\n             * @function Highcharts.Navigator#init\n             */\n            Navigator.prototype.init = function (chart) {\n                var chartOptions = chart.options, navigatorOptions = chartOptions.navigator || {}, navigatorEnabled = navigatorOptions.enabled, scrollbarOptions = chartOptions.scrollbar || {}, scrollbarEnabled = scrollbarOptions.enabled, height = navigatorEnabled && navigatorOptions.height || 0, scrollbarHeight = scrollbarEnabled && scrollbarOptions.height || 0, scrollButtonSize = scrollbarOptions.buttonsEnabled && scrollbarHeight || 0;\n                this.handles = [];\n                this.shades = [];\n                this.chart = chart;\n                this.setBaseSeries();\n                this.height = height;\n                this.scrollbarHeight = scrollbarHeight;\n                this.scrollButtonSize = scrollButtonSize;\n                this.scrollbarEnabled = scrollbarEnabled;\n                this.navigatorEnabled = navigatorEnabled;\n                this.navigatorOptions = navigatorOptions;\n                this.scrollbarOptions = scrollbarOptions;\n                this.opposite = pick(navigatorOptions.opposite, Boolean(!navigatorEnabled && chart.inverted)); // #6262\n                var navigator = this, baseSeries = navigator.baseSeries, xAxisIndex = chart.xAxis.length, yAxisIndex = chart.yAxis.length, baseXaxis = baseSeries && baseSeries[0] && baseSeries[0].xAxis ||\n                    chart.xAxis[0] || { options: {} };\n                chart.isDirtyBox = true;\n                if (navigator.navigatorEnabled) {\n                    // an x axis is required for scrollbar also\n                    navigator.xAxis = new Axis(chart, merge({\n                        // inherit base xAxis' break and ordinal options\n                        breaks: baseXaxis.options.breaks,\n                        ordinal: baseXaxis.options.ordinal\n                    }, navigatorOptions.xAxis, {\n                        id: 'navigator-x-axis',\n                        yAxis: 'navigator-y-axis',\n                        type: 'datetime',\n                        index: xAxisIndex,\n                        isInternal: true,\n                        offset: 0,\n                        keepOrdinalPadding: true,\n                        startOnTick: false,\n                        endOnTick: false,\n                        minPadding: 0,\n                        maxPadding: 0,\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        offsets: [scrollButtonSize, 0, -scrollButtonSize, 0],\n                        width: height\n                    } : {\n                        offsets: [0, -scrollButtonSize, 0, scrollButtonSize],\n                        height: height\n                    }), 'xAxis');\n                    navigator.yAxis = new Axis(chart, merge(navigatorOptions.yAxis, {\n                        id: 'navigator-y-axis',\n                        alignTicks: false,\n                        offset: 0,\n                        index: yAxisIndex,\n                        isInternal: true,\n                        reversed: pick((navigatorOptions.yAxis &&\n                            navigatorOptions.yAxis.reversed), (chart.yAxis[0] && chart.yAxis[0].reversed), false),\n                        zoomEnabled: false\n                    }, chart.inverted ? {\n                        width: height\n                    } : {\n                        height: height\n                    }), 'yAxis');\n                    // If we have a base series, initialize the navigator series\n                    if (baseSeries || navigatorOptions.series.data) {\n                        navigator.updateNavigatorSeries(false);\n                        // If not, set up an event to listen for added series\n                    }\n                    else if (chart.series.length === 0) {\n                        navigator.unbindRedraw = addEvent(chart, 'beforeRedraw', function () {\n                            // We've got one, now add it as base\n                            if (chart.series.length > 0 && !navigator.series) {\n                                navigator.setBaseSeries();\n                                navigator.unbindRedraw(); // reset\n                            }\n                        });\n                    }\n                    navigator.reversedExtremes = (chart.inverted && !navigator.xAxis.reversed) || (!chart.inverted && navigator.xAxis.reversed);\n                    // Render items, so we can bind events to them:\n                    navigator.renderElements();\n                    // Add mouse events\n                    navigator.addMouseEvents();\n                    // in case of scrollbar only, fake an x axis to get translation\n                }\n                else {\n                    navigator.xAxis = {\n                        chart: chart,\n                        navigatorAxis: {\n                            fake: true\n                        },\n                        translate: function (value, reverse) {\n                            var axis = chart.xAxis[0], ext = axis.getExtremes(), scrollTrackWidth = axis.len - 2 * scrollButtonSize, min = numExt('min', axis.options.min, ext.dataMin), valueRange = numExt('max', axis.options.max, ext.dataMax) - min;\n                            return reverse ?\n                                // from pixel to value\n                                (value * valueRange / scrollTrackWidth) + min :\n                                // from value to pixel\n                                scrollTrackWidth * (value - min) / valueRange;\n                        },\n                        toPixels: function (value) {\n                            return this.translate(value);\n                        },\n                        toValue: function (value) {\n                            return this.translate(value, true);\n                        }\n                    };\n                    navigator.xAxis.navigatorAxis.axis = navigator.xAxis;\n                    navigator.xAxis.navigatorAxis.toFixedRange = (NavigatorAxisAdditions.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis));\n                }\n                // Initialize the scrollbar\n                if (chart.options.scrollbar.enabled) {\n                    var options = merge(chart.options.scrollbar, { vertical: chart.inverted });\n                    if (!isNumber(options.margin) && navigator.navigatorEnabled) {\n                        options.margin = chart.inverted ? -3 : 3;\n                    }\n                    chart.scrollbar = navigator.scrollbar = new Scrollbar(chart.renderer, options, chart);\n                    addEvent(navigator.scrollbar, 'changed', function (e) {\n                        var range = navigator.size, to = range * this.to, from = range * this.from;\n                        navigator.hasDragged = navigator.scrollbar.hasDragged;\n                        navigator.render(0, 0, from, to);\n                        if (this.shouldUpdateExtremes(e.DOMType)) {\n                            setTimeout(function () {\n                                navigator.onMouseUp(e);\n                            });\n                        }\n                    });\n                }\n                // Add data events\n                navigator.addBaseSeriesEvents();\n                // Add redraw events\n                navigator.addChartEvents();\n            };\n            /**\n             * Get the union data extremes of the chart - the outer data extremes of the\n             * base X axis and the navigator axis.\n             *\n             * @private\n             * @function Highcharts.Navigator#getUnionExtremes\n             */\n            Navigator.prototype.getUnionExtremes = function (returnFalseOnNoBaseSeries) {\n                var baseAxis = this.chart.xAxis[0], navAxis = this.xAxis, navAxisOptions = navAxis.options, baseAxisOptions = baseAxis.options;\n                var ret;\n                if (!returnFalseOnNoBaseSeries || baseAxis.dataMin !== null) {\n                    ret = {\n                        dataMin: pick(// #4053\n                        navAxisOptions && navAxisOptions.min, numExt('min', baseAxisOptions.min, baseAxis.dataMin, navAxis.dataMin, navAxis.min)),\n                        dataMax: pick(navAxisOptions && navAxisOptions.max, numExt('max', baseAxisOptions.max, baseAxis.dataMax, navAxis.dataMax, navAxis.max))\n                    };\n                }\n                return ret;\n            };\n            /**\n             * Set the base series and update the navigator series from this. With a bit\n             * of modification we should be able to make this an API method to be called\n             * from the outside\n             *\n             * @private\n             * @function Highcharts.Navigator#setBaseSeries\n             * @param {Highcharts.SeriesOptionsType} [baseSeriesOptions]\n             *        Additional series options for a navigator\n             * @param {boolean} [redraw]\n             *        Whether to redraw after update.\n             */\n            Navigator.prototype.setBaseSeries = function (baseSeriesOptions, redraw) {\n                var chart = this.chart, baseSeries = this.baseSeries = [];\n                baseSeriesOptions = (baseSeriesOptions ||\n                    chart.options && chart.options.navigator.baseSeries ||\n                    (chart.series.length ?\n                        // Find the first non-navigator series (#8430)\n                        find(chart.series, function (s) { return (!s.options.isInternal); }).index :\n                        0));\n                // Iterate through series and add the ones that should be shown in\n                // navigator.\n                (chart.series || []).forEach(function (series, i) {\n                    if (\n                    // Don't include existing nav series\n                    !series.options.isInternal &&\n                        (series.options.showInNavigator ||\n                            (i === baseSeriesOptions ||\n                                series.options.id === baseSeriesOptions) &&\n                                series.options.showInNavigator !== false)) {\n                        baseSeries.push(series);\n                    }\n                });\n                // When run after render, this.xAxis already exists\n                if (this.xAxis && !this.xAxis.navigatorAxis.fake) {\n                    this.updateNavigatorSeries(true, redraw);\n                }\n            };\n            /**\n             * Update series in the navigator from baseSeries, adding new if does not\n             * exist.\n             *\n             * @private\n             * @function Highcharts.Navigator.updateNavigatorSeries\n             */\n            Navigator.prototype.updateNavigatorSeries = function (addEvents, redraw) {\n                var navigator = this, chart = navigator.chart, baseSeries = navigator.baseSeries, navSeriesMixin = {\n                    enableMouseTracking: false,\n                    index: null,\n                    linkedTo: null,\n                    group: 'nav',\n                    padXAxis: false,\n                    xAxis: 'navigator-x-axis',\n                    yAxis: 'navigator-y-axis',\n                    showInLegend: false,\n                    stacking: void 0,\n                    isInternal: true,\n                    states: {\n                        inactive: {\n                            opacity: 1\n                        }\n                    }\n                }, \n                // Remove navigator series that are no longer in the baseSeries\n                navigatorSeries = navigator.series =\n                    (navigator.series || []).filter(function (navSeries) {\n                        var base = navSeries.baseSeries;\n                        if (baseSeries.indexOf(base) < 0) { // Not in array\n                            // If there is still a base series connected to this\n                            // series, remove event handler and reference.\n                            if (base) {\n                                removeEvent(base, 'updatedData', navigator.updatedDataHandler);\n                                delete base.navigatorSeries;\n                            }\n                            // Kill the nav series. It may already have been\n                            // destroyed (#8715).\n                            if (navSeries.chart) {\n                                navSeries.destroy();\n                            }\n                            return false;\n                        }\n                        return true;\n                    });\n                var baseOptions, mergedNavSeriesOptions, chartNavigatorSeriesOptions = navigator.navigatorOptions.series, baseNavigatorOptions;\n                // Go through each base series and merge the options to create new\n                // series\n                if (baseSeries && baseSeries.length) {\n                    baseSeries.forEach(function (base) {\n                        var linkedNavSeries = base.navigatorSeries, userNavOptions = extend(\n                        // Grab color and visibility from base as default\n                        {\n                            color: base.color,\n                            visible: base.visible\n                        }, !isArray(chartNavigatorSeriesOptions) ?\n                            chartNavigatorSeriesOptions :\n                            defaultOptions.navigator.series);\n                        // Don't update if the series exists in nav and we have disabled\n                        // adaptToUpdatedData.\n                        if (linkedNavSeries &&\n                            navigator.navigatorOptions.adaptToUpdatedData === false) {\n                            return;\n                        }\n                        navSeriesMixin.name = 'Navigator ' + baseSeries.length;\n                        baseOptions = base.options || {};\n                        baseNavigatorOptions = baseOptions.navigatorOptions || {};\n                        // The dataLabels options are not merged correctly\n                        // if the settings are an array, #13847.\n                        userNavOptions.dataLabels = splat(userNavOptions.dataLabels);\n                        mergedNavSeriesOptions = merge(baseOptions, navSeriesMixin, userNavOptions, baseNavigatorOptions);\n                        // Once nav series type is resolved, pick correct pointRange\n                        mergedNavSeriesOptions.pointRange = pick(\n                        // Stricte set pointRange in options\n                        userNavOptions.pointRange, baseNavigatorOptions.pointRange, \n                        // Fallback to default values, e.g. `null` for column\n                        defaultOptions.plotOptions[mergedNavSeriesOptions.type || 'line'].pointRange);\n                        // Merge data separately. Do a slice to avoid mutating the\n                        // navigator options from base series (#4923).\n                        var navigatorSeriesData = baseNavigatorOptions.data || userNavOptions.data;\n                        navigator.hasNavigatorData =\n                            navigator.hasNavigatorData || !!navigatorSeriesData;\n                        mergedNavSeriesOptions.data =\n                            navigatorSeriesData ||\n                                baseOptions.data && baseOptions.data.slice(0);\n                        // Update or add the series\n                        if (linkedNavSeries && linkedNavSeries.options) {\n                            linkedNavSeries.update(mergedNavSeriesOptions, redraw);\n                        }\n                        else {\n                            base.navigatorSeries = chart.initSeries(mergedNavSeriesOptions);\n                            base.navigatorSeries.baseSeries = base; // Store ref\n                            navigatorSeries.push(base.navigatorSeries);\n                        }\n                    });\n                }\n                // If user has defined data (and no base series) or explicitly defined\n                // navigator.series as an array, we create these series on top of any\n                // base series.\n                if (chartNavigatorSeriesOptions.data &&\n                    !(baseSeries && baseSeries.length) ||\n                    isArray(chartNavigatorSeriesOptions)) {\n                    navigator.hasNavigatorData = false;\n                    // Allow navigator.series to be an array\n                    chartNavigatorSeriesOptions =\n                        splat(chartNavigatorSeriesOptions);\n                    chartNavigatorSeriesOptions.forEach(function (userSeriesOptions, i) {\n                        navSeriesMixin.name =\n                            'Navigator ' + (navigatorSeries.length + 1);\n                        mergedNavSeriesOptions = merge(defaultOptions.navigator.series, {\n                            // Since we don't have a base series to pull color from,\n                            // try to fake it by using color from series with same\n                            // index. Otherwise pull from the colors array. We need\n                            // an explicit color as otherwise updates will increment\n                            // color counter and we'll get a new color for each\n                            // update of the nav series.\n                            color: chart.series[i] &&\n                                !chart.series[i].options.isInternal &&\n                                chart.series[i].color ||\n                                chart.options.colors[i] ||\n                                chart.options.colors[0]\n                        }, navSeriesMixin, userSeriesOptions);\n                        mergedNavSeriesOptions.data = userSeriesOptions.data;\n                        if (mergedNavSeriesOptions.data) {\n                            navigator.hasNavigatorData = true;\n                            navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions));\n                        }\n                    });\n                }\n                if (addEvents) {\n                    this.addBaseSeriesEvents();\n                }\n            };\n            /**\n             * Add data events.\n             * For example when main series is updated we need to recalculate extremes\n             *\n             * @private\n             * @function Highcharts.Navigator#addBaseSeriesEvent\n             */\n            Navigator.prototype.addBaseSeriesEvents = function () {\n                var _this = this;\n                var navigator = this, baseSeries = navigator.baseSeries || [];\n                // Bind modified extremes event to first base's xAxis only.\n                // In event of > 1 base-xAxes, the navigator will ignore those.\n                // Adding this multiple times to the same axis is no problem, as\n                // duplicates should be discarded by the browser.\n                if (baseSeries[0] && baseSeries[0].xAxis) {\n                    baseSeries[0].eventsToUnbind.push(addEvent(baseSeries[0].xAxis, 'foundExtremes', this.modifyBaseAxisExtremes));\n                }\n                baseSeries.forEach(function (base) {\n                    // Link base series show/hide to navigator series visibility\n                    base.eventsToUnbind.push(addEvent(base, 'show', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(true, false);\n                        }\n                    }));\n                    base.eventsToUnbind.push(addEvent(base, 'hide', function () {\n                        if (this.navigatorSeries) {\n                            this.navigatorSeries.setVisible(false, false);\n                        }\n                    }));\n                    // Respond to updated data in the base series, unless explicitily\n                    // not adapting to data changes.\n                    if (_this.navigatorOptions.adaptToUpdatedData !== false) {\n                        if (base.xAxis) {\n                            base.eventsToUnbind.push(addEvent(base, 'updatedData', _this.updatedDataHandler));\n                        }\n                    }\n                    // Handle series removal\n                    base.eventsToUnbind.push(addEvent(base, 'remove', function () {\n                        if (this.navigatorSeries) {\n                            erase(navigator.series, this.navigatorSeries);\n                            if (defined(this.navigatorSeries.options)) {\n                                this.navigatorSeries.remove(false);\n                            }\n                            delete this.navigatorSeries;\n                        }\n                    }));\n                });\n            };\n            /**\n             * Get minimum from all base series connected to the navigator\n             * @private\n             * @param {number} currentSeriesMin\n             *        Minium from the current series\n             * @return {number}\n             *         Minimum from all series\n             */\n            Navigator.prototype.getBaseSeriesMin = function (currentSeriesMin) {\n                return this.baseSeries.reduce(function (min, series) {\n                    // (#10193)\n                    return Math.min(min, series.xData && series.xData.length ?\n                        series.xData[0] : min);\n                }, currentSeriesMin);\n            };\n            /**\n             * Set the navigator x axis extremes to reflect the total. The navigator\n             * extremes should always be the extremes of the union of all series in the\n             * chart as well as the navigator series.\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyNavigatorAxisExtremes\n             */\n            Navigator.prototype.modifyNavigatorAxisExtremes = function () {\n                var xAxis = this.xAxis;\n                if (typeof xAxis.getExtremes !== 'undefined') {\n                    var unionExtremes = this.getUnionExtremes(true);\n                    if (unionExtremes &&\n                        (unionExtremes.dataMin !== xAxis.min ||\n                            unionExtremes.dataMax !== xAxis.max)) {\n                        xAxis.min = unionExtremes.dataMin;\n                        xAxis.max = unionExtremes.dataMax;\n                    }\n                }\n            };\n            /**\n             * Hook to modify the base axis extremes with information from the Navigator\n             *\n             * @private\n             * @function Highcharts.Navigator#modifyBaseAxisExtremes\n             */\n            Navigator.prototype.modifyBaseAxisExtremes = function () {\n                var baseXAxis = this, navigator = baseXAxis.chart.navigator, baseExtremes = baseXAxis.getExtremes(), baseMin = baseExtremes.min, baseMax = baseExtremes.max, baseDataMin = baseExtremes.dataMin, baseDataMax = baseExtremes.dataMax, range = baseMax - baseMin, stickToMin = navigator.stickToMin, stickToMax = navigator.stickToMax, overscroll = pick(baseXAxis.options.overscroll, 0), navigatorSeries = navigator.series && navigator.series[0], hasSetExtremes = !!baseXAxis.setExtremes, \n                // When the extremes have been set by range selector button, don't\n                // stick to min or max. The range selector buttons will handle the\n                // extremes. (#5489)\n                unmutable = baseXAxis.eventArgs &&\n                    baseXAxis.eventArgs.trigger === 'rangeSelectorButton';\n                var newMax, newMin;\n                if (!unmutable) {\n                    // If the zoomed range is already at the min, move it to the right\n                    // as new data comes in\n                    if (stickToMin) {\n                        newMin = baseDataMin;\n                        newMax = newMin + range;\n                    }\n                    // If the zoomed range is already at the max, move it to the right\n                    // as new data comes in\n                    if (stickToMax) {\n                        newMax = baseDataMax + overscroll;\n                        // If stickToMin is true, the new min value is set above\n                        if (!stickToMin) {\n                            newMin = Math.max(baseDataMin, // don't go below data extremes (#13184)\n                            newMax - range, navigator.getBaseSeriesMin(navigatorSeries && navigatorSeries.xData ?\n                                navigatorSeries.xData[0] :\n                                -Number.MAX_VALUE));\n                        }\n                    }\n                    // Update the extremes\n                    if (hasSetExtremes && (stickToMin || stickToMax)) {\n                        if (isNumber(newMin)) {\n                            baseXAxis.min = baseXAxis.userMin = newMin;\n                            baseXAxis.max = baseXAxis.userMax = newMax;\n                        }\n                    }\n                }\n                // Reset\n                navigator.stickToMin =\n                    navigator.stickToMax = null;\n            };\n            /**\n             * Handler for updated data on the base series. When data is modified, the\n             * navigator series must reflect it. This is called from the Chart.redraw\n             * function before axis and series extremes are computed.\n             *\n             * @private\n             * @function Highcharts.Navigator#updateDataHandler\n             */\n            Navigator.prototype.updatedDataHandler = function () {\n                var navigator = this.chart.navigator, baseSeries = this, navigatorSeries = this.navigatorSeries, shouldStickToMax = navigator.reversedExtremes ?\n                    Math.round(navigator.zoomedMin) === 0 :\n                    Math.round(navigator.zoomedMax) >= Math.round(navigator.size);\n                // If the scrollbar is scrolled all the way to the right, keep right as\n                // new data comes in, unless user set navigator.stickToMax to false.\n                navigator.stickToMax = pick(this.chart.options.navigator &&\n                    this.chart.options.navigator.stickToMax, shouldStickToMax);\n                navigator.stickToMin = navigator.shouldStickToMin(baseSeries, navigator);\n                // Set the navigator series data to the new data of the base series\n                if (navigatorSeries && !navigator.hasNavigatorData) {\n                    navigatorSeries.options.pointStart = baseSeries.xData[0];\n                    navigatorSeries.setData(baseSeries.options.data, false, null, false); // #5414\n                }\n            };\n            /**\n             * Detect if the zoomed area should stick to the minimum, #14742.\n             *\n             * @private\n             * @function Highcharts.Navigator#shouldStickToMin\n             */\n            Navigator.prototype.shouldStickToMin = function (baseSeries, navigator) {\n                var xDataMin = navigator.getBaseSeriesMin(baseSeries.xData[0]), xAxis = baseSeries.xAxis, max = xAxis.max, min = xAxis.min, range = xAxis.options.range;\n                var stickToMin = true;\n                if (isNumber(max) && isNumber(min)) {\n                    // If range declared, stick to the minimum only if the range\n                    // is smaller than the data set range.\n                    if (range && max - xDataMin > 0) {\n                        stickToMin = max - xDataMin < range;\n                    }\n                    else {\n                        // If the current axis minimum falls outside the new\n                        // updated dataset, we must adjust.\n                        stickToMin = min <= xDataMin;\n                    }\n                }\n                else {\n                    stickToMin = false; // #15864\n                }\n                return stickToMin;\n            };\n            /**\n             * Add chart events, like redrawing navigator, when chart requires that.\n             *\n             * @private\n             * @function Highcharts.Navigator#addChartEvents\n             */\n            Navigator.prototype.addChartEvents = function () {\n                if (!this.eventsToUnbind) {\n                    this.eventsToUnbind = [];\n                }\n                this.eventsToUnbind.push(\n                // Move the scrollbar after redraw, like after data updata even if\n                // axes don't redraw\n                addEvent(this.chart, 'redraw', function () {\n                    var navigator = this.navigator, xAxis = navigator && (navigator.baseSeries &&\n                        navigator.baseSeries[0] &&\n                        navigator.baseSeries[0].xAxis ||\n                        this.xAxis[0]); // #5709, #13114\n                    if (xAxis) {\n                        navigator.render(xAxis.min, xAxis.max);\n                    }\n                }), \n                // Make room for the navigator, can be placed around the chart:\n                addEvent(this.chart, 'getMargins', function () {\n                    var chart = this, navigator = chart.navigator, marginName = navigator.opposite ?\n                        'plotTop' : 'marginBottom';\n                    if (chart.inverted) {\n                        marginName = navigator.opposite ?\n                            'marginRight' : 'plotLeft';\n                    }\n                    chart[marginName] =\n                        (chart[marginName] || 0) + (navigator.navigatorEnabled || !chart.inverted ?\n                            navigator.height + navigator.scrollbarHeight :\n                            0) + navigator.navigatorOptions.margin;\n                }));\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.Navigator#destroy\n             */\n            Navigator.prototype.destroy = function () {\n                var _this = this;\n                // Disconnect events added in addEvents\n                this.removeEvents();\n                if (this.xAxis) {\n                    erase(this.chart.xAxis, this.xAxis);\n                    erase(this.chart.axes, this.xAxis);\n                }\n                if (this.yAxis) {\n                    erase(this.chart.yAxis, this.yAxis);\n                    erase(this.chart.axes, this.yAxis);\n                }\n                // Destroy series\n                (this.series || []).forEach(function (s) {\n                    if (s.destroy) {\n                        s.destroy();\n                    }\n                });\n                // Destroy properties\n                [\n                    'series', 'xAxis', 'yAxis', 'shades', 'outline', 'scrollbarTrack',\n                    'scrollbarRifles', 'scrollbarGroup', 'scrollbar', 'navigatorGroup',\n                    'rendered'\n                ].forEach(function (prop) {\n                    if (_this[prop] && _this[prop].destroy) {\n                        _this[prop].destroy();\n                    }\n                    _this[prop] = null;\n                });\n                // Destroy elements in collection\n                [this.handles].forEach(function (coll) {\n                    destroyObjectProperties(coll);\n                });\n            };\n            return Navigator;\n        }());\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return Navigator;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Declarations\n         *\n         * */\n        /**\n         * Language object. The language object is global and it can't be set\n         * on each chart initialization. Instead, use `Highcharts.setOptions` to\n         * set it before any chart is initialized.\n         *\n         * ```js\n         * Highcharts.setOptions({\n         *     lang: {\n         *         months: [\n         *             'Janvier', 'Février', 'Mars', 'Avril',\n         *             'Mai', 'Juin', 'Juillet', 'Août',\n         *             'Septembre', 'Octobre', 'Novembre', 'Décembre'\n         *         ],\n         *         weekdays: [\n         *             'Dimanche', 'Lundi', 'Mardi', 'Mercredi',\n         *             'Jeudi', 'Vendredi', 'Samedi'\n         *         ]\n         *     }\n         * });\n         * ```\n         *\n         * @optionparent lang\n         */\n        var lang = {\n            /**\n             * The text for the label for the range selector buttons.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorZoom: 'Zoom',\n            /**\n             * The text for the label for the \"from\" input box in the range\n             * selector. Since v9.0, this string is empty as the label is not\n             * rendered by default.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorFrom: '',\n            /**\n             * The text for the label for the \"to\" input box in the range selector.\n             *\n             * @product highstock gantt\n             */\n            rangeSelectorTo: '→'\n        };\n        /**\n         * The range selector is a tool for selecting ranges to display within\n         * the chart. It provides buttons to select preconfigured ranges in\n         * the chart, like 1 day, 1 week, 1 month etc. It also provides input\n         * boxes where min and max dates can be manually input.\n         *\n         * @product      highstock gantt\n         * @optionparent rangeSelector\n         */\n        var rangeSelector = {\n            /**\n             * Whether to enable all buttons from the start. By default buttons are\n             * only enabled if the corresponding time range exists on the X axis,\n             * but enabling all buttons allows for dynamically loading different\n             * time ranges.\n             *\n             * @sample {highstock} stock/rangeselector/allbuttonsenabled-true/\n             *         All buttons enabled\n             *\n             * @since     2.0.3\n             */\n            allButtonsEnabled: false,\n            /**\n             * An array of configuration objects for the buttons.\n             *\n             * Defaults to:\n             * ```js\n             * buttons: [{\n             *     type: 'month',\n             *     count: 1,\n             *     text: '1m',\n             *     title: 'View 1 month'\n             * }, {\n             *     type: 'month',\n             *     count: 3,\n             *     text: '3m',\n             *     title: 'View 3 months'\n             * }, {\n             *     type: 'month',\n             *     count: 6,\n             *     text: '6m',\n             *     title: 'View 6 months'\n             * }, {\n             *     type: 'ytd',\n             *     text: 'YTD',\n             *     title: 'View year to date'\n             * }, {\n             *     type: 'year',\n             *     count: 1,\n             *     text: '1y',\n             *     title: 'View 1 year'\n             * }, {\n             *     type: 'all',\n             *     text: 'All',\n             *     title: 'View all'\n             * }]\n             * ```\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by buttons\n             *\n             * @type      {Array<*>}\n             */\n            buttons: void 0,\n            /**\n             * How many units of the defined type the button should span. If `type`\n             * is \"month\" and `count` is 3, the button spans three months.\n             *\n             * @type      {number}\n             * @default   1\n             * @apioption rangeSelector.buttons.count\n             */\n            /**\n             * Fires when clicking on the rangeSelector button. One parameter,\n             * event, is passed to the function, containing common event\n             * information.\n             *\n             * ```js\n             * click: function(e) {\n             *   console.log(this);\n             * }\n             * ```\n             *\n             * Return false to stop default button's click action.\n             *\n             * @sample {highstock} stock/rangeselector/button-click/\n             *         Click event on the button\n             *\n             * @type      {Highcharts.RangeSelectorClickCallbackFunction}\n             * @apioption rangeSelector.buttons.events.click\n             */\n            /**\n             * Additional range (in milliseconds) added to the end of the calculated\n             * time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMax\n             */\n            /**\n             * Additional range (in milliseconds) added to the start of the\n             * calculated time span.\n             *\n             * @sample {highstock} stock/rangeselector/min-max-offsets/\n             *         Button offsets\n             *\n             * @type      {number}\n             * @default   0\n             * @since     6.0.0\n             * @apioption rangeSelector.buttons.offsetMin\n             */\n            /**\n             * When buttons apply dataGrouping on a series, by default zooming\n             * in/out will deselect buttons and unset dataGrouping. Enable this\n             * option to keep buttons selected when extremes change.\n             *\n             * @sample {highstock} stock/rangeselector/preserve-datagrouping/\n             *         Different preserveDataGrouping settings\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     6.1.2\n             * @apioption rangeSelector.buttons.preserveDataGrouping\n             */\n            /**\n             * A custom data grouping object for each button.\n             *\n             * @see [series.dataGrouping](#plotOptions.series.dataGrouping)\n             *\n             * @sample {highstock} stock/demo/rangeselector-datagrouping/\n             *         Data grouping by range selector buttons\n             *\n             * @type      {*}\n             * @extends   plotOptions.series.dataGrouping\n             * @apioption rangeSelector.buttons.dataGrouping\n             */\n            /**\n             * The text for the button itself.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.text\n             */\n            /**\n             * Explanation for the button, shown as a tooltip on hover, and used by\n             * assistive technology.\n             *\n             * @type      {string}\n             * @apioption rangeSelector.buttons.title\n             */\n            /**\n             * Defined the time span for the button. Can be one of `millisecond`,\n             * `second`, `minute`, `hour`, `day`, `week`, `month`, `year`, `ytd`,\n             * and `all`.\n             *\n             * @type       {Highcharts.RangeSelectorButtonTypeValue}\n             * @apioption  rangeSelector.buttons.type\n             */\n            /**\n             * The space in pixels between the buttons in the range selector.\n             */\n            buttonSpacing: 5,\n            /**\n             * Whether to collapse the range selector buttons into a dropdown when\n             * there is not enough room to show everything in a single row, instead\n             * of dividing the range selector into multiple rows.\n             * Can be one of the following:\n             *  - `always`: Always collapse\n             *  - `responsive`: Only collapse when there is not enough room\n             *  - `never`: Never collapse\n             *\n             * @sample {highstock} stock/rangeselector/dropdown/\n             *         Dropdown option\n             *\n             * @validvalue [\"always\", \"responsive\", \"never\"]\n             * @since 9.0.0\n             */\n            dropdown: 'responsive',\n            /**\n             * Enable or disable the range selector. Default to `true` for stock\n             * charts, using the `stockChart` factory.\n             *\n             * @sample {highstock} stock/rangeselector/enabled/\n             *         Disable the range selector\n             *\n             * @type {boolean|undefined}\n             * @default {highstock} true\n             */\n            enabled: void 0,\n            /**\n             * The vertical alignment of the rangeselector box. Allowed properties\n             * are `top`, `middle`, `bottom`.\n             *\n             * @sample {highstock} stock/rangeselector/vertical-align-middle/\n             *         Middle\n             * @sample {highstock} stock/rangeselector/vertical-align-bottom/\n             *         Bottom\n             *\n             * @type  {Highcharts.VerticalAlignValue}\n             * @since 6.0.0\n             */\n            verticalAlign: 'top',\n            /**\n             * A collection of attributes for the buttons. The object takes SVG\n             * attributes like `fill`, `stroke`, `stroke-width`, as well as `style`,\n             * a collection of CSS properties for the text.\n             *\n             * The object can also be extended with states, so you can set\n             * presentational options for `hover`, `select` or `disabled` button\n             * states.\n             *\n             * CSS styles for the text label.\n             *\n             * In styled mode, the buttons are styled by the\n             * `.highcharts-range-selector-buttons .highcharts-button` rule with its\n             * different states.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.SVGAttributes}\n             */\n            buttonTheme: {\n                /** @ignore */\n                width: 28,\n                /** @ignore */\n                height: 18,\n                /** @ignore */\n                padding: 2,\n                /** @ignore */\n                zIndex: 7 // #484, #852\n            },\n            /**\n             * When the rangeselector is floating, the plot area does not reserve\n             * space for it. This opens for positioning anywhere on the chart.\n             *\n             * @sample {highstock} stock/rangeselector/floating/\n             *         Placing the range selector between the plot area and the\n             *         navigator\n             *\n             * @since 6.0.0\n             */\n            floating: false,\n            /**\n             * The x offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            x: 0,\n            /**\n             * The y offset of the range selector relative to its horizontal\n             * alignment within `chart.spacingLeft` and `chart.spacingRight`.\n             *\n             * @since 6.0.0\n             */\n            y: 0,\n            /**\n             * Deprecated. The height of the range selector. Currently it is\n             * calculated dynamically.\n             *\n             * @deprecated\n             * @type  {number|undefined}\n             * @since 2.1.9\n             */\n            height: void 0,\n            /**\n             * The border color of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.ColorString}\n             * @since     1.3.7\n             */\n            inputBoxBorderColor: 'none',\n            /**\n             * The pixel height of the date input boxes.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @since     1.3.7\n             */\n            inputBoxHeight: 17,\n            /**\n             * The pixel width of the date input boxes. When `undefined`, the width\n             * is fitted to the rendered content.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type   {number|undefined}\n             * @since  1.3.7\n             */\n            inputBoxWidth: void 0,\n            /**\n             * The date format in the input boxes when not selected for editing.\n             * Defaults to `%e %b %Y`.\n             *\n             * This is used to determine which type of input to show,\n             * `datetime-local`, `date` or `time` and falling back to `text` when\n             * the browser does not support the input type or the format contains\n             * milliseconds.\n             *\n             * @sample {highstock} stock/rangeselector/input-type/\n             *         Input types\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputDateFormat: '%e %b %Y',\n            /**\n             * A custom callback function to parse values entered in the input boxes\n             * and return a valid JavaScript time as milliseconds since 1970.\n             * The first argument passed is a value to parse,\n             * second is a boolean indicating use of the UTC time.\n             *\n             * This will only get called for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             * @type      {Highcharts.RangeSelectorParseCallbackFunction}\n             * @since     1.3.3\n             */\n            inputDateParser: void 0,\n            /**\n             * The date format in the input boxes when they are selected for\n             * editing. This must be a format that is recognized by JavaScript\n             * Date.parse.\n             *\n             * This will only be used for inputs of type `text`. Since v8.2.3,\n             * the input type is dynamically determined based on the granularity\n             * of the `inputDateFormat` and the browser support.\n             *\n             * @sample {highstock} stock/rangeselector/input-format/\n             *         Milliseconds in the range selector\n             *\n             */\n            inputEditDateFormat: '%Y-%m-%d',\n            /**\n             * Enable or disable the date input boxes.\n             */\n            inputEnabled: true,\n            /**\n             * Positioning for the input boxes. Allowed properties are `align`,\n             *  `x` and `y`.\n             *\n             * @since 1.2.4\n             */\n            inputPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'right',\n                /**\n                 * X offset of the input row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the input row.\n                 */\n                y: 0\n            },\n            /**\n             * The space in pixels between the labels and the date input boxes in\n             * the range selector.\n             *\n             * @since 9.0.0\n             */\n            inputSpacing: 5,\n            /**\n             * The index of the button to appear pre-selected.\n             *\n             * @type      {number}\n             */\n            selected: void 0,\n            /**\n             * Positioning for the button row.\n             *\n             * @since 1.2.4\n             */\n            buttonPosition: {\n                /**\n                 * The alignment of the input box. Allowed properties are `left`,\n                 * `center`, `right`.\n                 *\n                 * @sample {highstock} stock/rangeselector/input-button-position/\n                 *         Alignment\n                 *\n                 * @type  {Highcharts.AlignValue}\n                 * @since 6.0.0\n                 */\n                align: 'left',\n                /**\n                 * X offset of the button row.\n                 */\n                x: 0,\n                /**\n                 * Y offset of the button row.\n                 */\n                y: 0\n            },\n            /**\n             * CSS for the HTML inputs in the range selector.\n             *\n             * In styled mode, the inputs are styled by the\n             * `.highcharts-range-input text` rule in SVG mode, and\n             * `input.highcharts-range-selector` when active.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type      {Highcharts.CSSObject}\n             * @apioption rangeSelector.inputStyle\n             */\n            inputStyle: {\n                /** @ignore */\n                color: \"#334eff\" /* Palette.highlightColor80 */,\n                /** @ignore */\n                cursor: 'pointer',\n                /** @ignore */\n                fontSize: '0.8em'\n            },\n            /**\n             * CSS styles for the labels - the Zoom, From and To texts.\n             *\n             * In styled mode, the labels are styled by the\n             * `.highcharts-range-label` class.\n             *\n             * @sample {highstock} stock/rangeselector/styling/\n             *         Styling the buttons and inputs\n             *\n             * @type {Highcharts.CSSObject}\n             */\n            labelStyle: {\n                /** @ignore */\n                color: \"#666666\" /* Palette.neutralColor60 */,\n                /** @ignore */\n                fontSize: '0.8em'\n            }\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorDefaults = {\n            lang: lang,\n            rangeSelector: rangeSelector\n        };\n\n        return RangeSelectorDefaults;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelectorComposition.js', [_modules['Core/Defaults.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Core/Utilities.js']], function (D, RangeSelectorDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions, setOptions = D.setOptions;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var chartDestroyEvents = [];\n        var composedMembers = [];\n        /* *\n         *\n         *  Variables\n         *\n         * */\n        var RangeSelectorConstructor;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the axis min value based on the range option and the current max. For\n         * stock charts this is extended via the {@link RangeSelector} so that if the\n         * selected range is a multiple of months or years, it is compensated for\n         * various month lengths.\n         *\n         * @private\n         * @function Highcharts.Axis#minFromRange\n         * @return {number|undefined}\n         *         The new minimum value.\n         */\n        function axisMinFromRange() {\n            var rangeOptions = this.range, type = rangeOptions.type, max = this.max, time = this.chart.time, \n            // Get the true range from a start date\n            getTrueRange = function (base, count) {\n                var timeName = type === 'year' ?\n                    'FullYear' : 'Month';\n                var date = new time.Date(base);\n                var basePeriod = time.get(timeName, date);\n                time.set(timeName, date, basePeriod + count);\n                if (basePeriod === time.get(timeName, date)) {\n                    time.set('Date', date, 0); // #6537\n                }\n                return date.getTime() - base;\n            };\n            var min, range;\n            if (isNumber(rangeOptions)) {\n                min = max - rangeOptions;\n                range = rangeOptions;\n            }\n            else if (rangeOptions) {\n                min = max + getTrueRange(max, -(rangeOptions.count || 1));\n                // Let the fixedRange reflect initial settings (#5930)\n                if (this.chart) {\n                    this.chart.fixedRange = max - min;\n                }\n            }\n            var dataMin = pick(this.dataMin, Number.MIN_VALUE);\n            if (!isNumber(min)) {\n                min = dataMin;\n            }\n            if (min <= dataMin) {\n                min = dataMin;\n                if (typeof range === 'undefined') { // #4501\n                    range = getTrueRange(min, rangeOptions.count);\n                }\n                this.newMax = Math.min(min + range, pick(this.dataMax, Number.MAX_VALUE));\n            }\n            if (!isNumber(max)) {\n                min = void 0;\n            }\n            else if (!isNumber(rangeOptions) &&\n                rangeOptions &&\n                rangeOptions._offsetMin) {\n                min += rangeOptions._offsetMin;\n            }\n            return min;\n        }\n        /**\n         * @private\n         */\n        function compose(AxisClass, ChartClass, RangeSelectorClass) {\n            RangeSelectorConstructor = RangeSelectorClass;\n            if (U.pushUnique(composedMembers, AxisClass)) {\n                AxisClass.prototype.minFromRange = axisMinFromRange;\n            }\n            if (U.pushUnique(composedMembers, ChartClass)) {\n                addEvent(ChartClass, 'afterGetContainer', onChartAfterGetContainer);\n                addEvent(ChartClass, 'beforeRender', onChartBeforeRender);\n                addEvent(ChartClass, 'destroy', onChartDestroy);\n                addEvent(ChartClass, 'getMargins', onChartGetMargins);\n                addEvent(ChartClass, 'render', onChartRender);\n                addEvent(ChartClass, 'update', onChartUpdate);\n                var chartProto = ChartClass.prototype;\n                chartProto.callbacks.push(onChartCallback);\n            }\n            if (U.pushUnique(composedMembers, setOptions)) {\n                extend(defaultOptions, { rangeSelector: RangeSelectorDefaults.rangeSelector });\n                extend(defaultOptions.lang, RangeSelectorDefaults.lang);\n            }\n        }\n        /**\n         * Initialize rangeselector for stock charts\n         * @private\n         */\n        function onChartAfterGetContainer() {\n            if (this.options.rangeSelector &&\n                this.options.rangeSelector.enabled) {\n                this.rangeSelector = new RangeSelectorConstructor(this);\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartBeforeRender() {\n            var chart = this, axes = chart.axes, rangeSelector = chart.rangeSelector;\n            if (rangeSelector) {\n                if (isNumber(rangeSelector.deferredYTDClick)) {\n                    rangeSelector.clickButton(rangeSelector.deferredYTDClick);\n                    delete rangeSelector.deferredYTDClick;\n                }\n                axes.forEach(function (axis) {\n                    axis.updateNames();\n                    axis.setScale();\n                });\n                chart.getAxisMargins();\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartCallback(chart) {\n            var extremes, legend, alignTo, verticalAlign;\n            var rangeSelector = chart.rangeSelector, redraw = function () {\n                if (rangeSelector) {\n                    extremes = chart.xAxis[0].getExtremes();\n                    legend = chart.legend;\n                    verticalAlign = (rangeSelector &&\n                        rangeSelector.options.verticalAlign);\n                    if (isNumber(extremes.min)) {\n                        rangeSelector.render(extremes.min, extremes.max);\n                    }\n                    // Re-align the legend so that it's below the rangeselector\n                    if (legend.display &&\n                        verticalAlign === 'top' &&\n                        verticalAlign === legend.options.verticalAlign) {\n                        // Create a new alignment box for the legend.\n                        alignTo = merge(chart.spacingBox);\n                        if (legend.options.layout === 'vertical') {\n                            alignTo.y = chart.plotTop;\n                        }\n                        else {\n                            alignTo.y += rangeSelector.getHeight();\n                        }\n                        legend.group.placed = false; // Don't animate the alignment.\n                        legend.align(alignTo);\n                    }\n                }\n            };\n            if (rangeSelector) {\n                var events = find(chartDestroyEvents, function (e) { return e[0] === chart; });\n                if (!events) {\n                    chartDestroyEvents.push([chart, [\n                            // redraw the scroller on setExtremes\n                            addEvent(chart.xAxis[0], 'afterSetExtremes', function (e) {\n                                if (rangeSelector) {\n                                    rangeSelector.render(e.min, e.max);\n                                }\n                            }),\n                            // redraw the scroller chart resize\n                            addEvent(chart, 'redraw', redraw)\n                        ]]);\n                }\n                // do it now\n                redraw();\n            }\n        }\n        /**\n         * Remove resize/afterSetExtremes at chart destroy.\n         * @private\n         */\n        function onChartDestroy() {\n            for (var i = 0, iEnd = chartDestroyEvents.length; i < iEnd; ++i) {\n                var events = chartDestroyEvents[i];\n                if (events[0] === this) {\n                    events[1].forEach(function (unbind) { return unbind(); });\n                    chartDestroyEvents.splice(i, 1);\n                    return;\n                }\n            }\n        }\n        function onChartGetMargins() {\n            var rangeSelector = this.rangeSelector;\n            if (rangeSelector) {\n                var rangeSelectorHeight = rangeSelector.getHeight();\n                if (this.extraTopMargin) {\n                    this.plotTop += rangeSelectorHeight;\n                }\n                if (this.extraBottomMargin) {\n                    this.marginBottom += rangeSelectorHeight;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartRender() {\n            var chart = this, rangeSelector = chart.rangeSelector;\n            if (rangeSelector && !rangeSelector.options.floating) {\n                rangeSelector.render();\n                var verticalAlign = rangeSelector.options.verticalAlign;\n                if (verticalAlign === 'bottom') {\n                    this.extraBottomMargin = true;\n                }\n                else if (verticalAlign !== 'middle') {\n                    this.extraTopMargin = true;\n                }\n            }\n        }\n        /**\n         * @private\n         */\n        function onChartUpdate(e) {\n            var chart = this, options = e.options, optionsRangeSelector = options.rangeSelector, extraBottomMarginWas = this.extraBottomMargin, extraTopMarginWas = this.extraTopMargin;\n            var rangeSelector = chart.rangeSelector;\n            if (optionsRangeSelector &&\n                optionsRangeSelector.enabled &&\n                !defined(rangeSelector) &&\n                this.options.rangeSelector) {\n                this.options.rangeSelector.enabled = true;\n                this.rangeSelector = rangeSelector = new RangeSelectorConstructor(this);\n            }\n            this.extraBottomMargin = false;\n            this.extraTopMargin = false;\n            if (rangeSelector) {\n                onChartCallback(this);\n                var verticalAlign = (optionsRangeSelector &&\n                    optionsRangeSelector.verticalAlign) || (rangeSelector.options && rangeSelector.options.verticalAlign);\n                if (!rangeSelector.options.floating) {\n                    if (verticalAlign === 'bottom') {\n                        this.extraBottomMargin = true;\n                    }\n                    else if (verticalAlign !== 'middle') {\n                        this.extraTopMargin = true;\n                    }\n                }\n                if (this.extraBottomMargin !== extraBottomMarginWas ||\n                    this.extraTopMargin !== extraTopMarginWas) {\n                    this.isDirtyBox = true;\n                }\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        var RangeSelectorComposition = {\n            compose: compose\n        };\n\n        return RangeSelectorComposition;\n    });\n    _registerModule(_modules, 'Stock/RangeSelector/RangeSelector.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Defaults.js'], _modules['Core/Globals.js'], _modules['Stock/RangeSelector/RangeSelectorComposition.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (Axis, D, H, RangeSelectorComposition, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var addEvent = U.addEvent, createElement = U.createElement, css = U.css, defined = U.defined, destroyObjectProperties = U.destroyObjectProperties, discardElement = U.discardElement, extend = U.extend, fireEvent = U.fireEvent, isNumber = U.isNumber, merge = U.merge, objectEach = U.objectEach, pad = U.pad, pick = U.pick, pInt = U.pInt, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get the preferred input type based on a date format string.\n         *\n         * @private\n         * @function preferredInputType\n         */\n        function preferredInputType(format) {\n            var ms = format.indexOf('%L') !== -1;\n            if (ms) {\n                return 'text';\n            }\n            var date = ['a', 'A', 'd', 'e', 'w', 'b', 'B', 'm', 'o', 'y', 'Y']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            var time = ['H', 'k', 'I', 'l', 'M', 'S']\n                .some(function (char) { return format.indexOf('%' + char) !== -1; });\n            if (date && time) {\n                return 'datetime-local';\n            }\n            if (date) {\n                return 'date';\n            }\n            if (time) {\n                return 'time';\n            }\n            return 'text';\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The range selector.\n         *\n         * @private\n         * @class\n         * @name Highcharts.RangeSelector\n         * @param {Highcharts.Chart} chart\n         */\n        var RangeSelector = /** @class */ (function () {\n            /* *\n             *\n             *  Constructor\n             *\n             * */\n            function RangeSelector(chart) {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.buttons = void 0;\n                this.buttonOptions = RangeSelector.prototype.defaultButtons;\n                this.initialButtonGroupWidth = 0;\n                this.options = void 0;\n                this.chart = chart;\n                this.init(chart);\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            RangeSelector.compose = function (AxisClass, ChartClass) {\n                RangeSelectorComposition.compose(AxisClass, ChartClass, RangeSelector);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * The method to run when one of the buttons in the range selectors is\n             * clicked\n             *\n             * @private\n             * @function Highcharts.RangeSelector#clickButton\n             * @param {number} i\n             *        The index of the button\n             * @param {boolean} [redraw]\n             */\n            RangeSelector.prototype.clickButton = function (i, redraw) {\n                var rangeSelector = this, chart = rangeSelector.chart, rangeOptions = rangeSelector.buttonOptions[i], baseAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || baseAxis || {}, type = rangeOptions.type, dataGrouping = rangeOptions.dataGrouping;\n                var dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, newMin, newMax = baseAxis && Math.round(Math.min(baseAxis.max, pick(dataMax, baseAxis.max))), // #1568\n                baseXAxisOptions, range = rangeOptions._range, rangeMin, minSetting, rangeSetting, ctx, ytdExtremes, addOffsetMin = true;\n                // chart has no data, base series is removed\n                if (dataMin === null || dataMax === null) {\n                    return;\n                }\n                // Set the fixed range before range is altered\n                chart.fixedRange = range;\n                rangeSelector.setSelected(i);\n                // Apply dataGrouping associated to button\n                if (dataGrouping) {\n                    this.forcedDataGrouping = true;\n                    Axis.prototype.setDataGrouping.call(baseAxis || { chart: this.chart }, dataGrouping, false);\n                    this.frozenStates = rangeOptions.preserveDataGrouping;\n                }\n                // Apply range\n                if (type === 'month' || type === 'year') {\n                    if (!baseAxis) {\n                        // This is set to the user options and picked up later when the\n                        // axis is instantiated so that we know the min and max.\n                        range = rangeOptions;\n                    }\n                    else {\n                        ctx = {\n                            range: rangeOptions,\n                            max: newMax,\n                            chart: chart,\n                            dataMin: dataMin,\n                            dataMax: dataMax\n                        };\n                        newMin = baseAxis.minFromRange.call(ctx);\n                        if (isNumber(ctx.newMax)) {\n                            newMax = ctx.newMax;\n                        }\n                        // #15799: offsetMin is added in minFromRange so that it works\n                        // with pre-selected buttons as well\n                        addOffsetMin = false;\n                    }\n                    // Fixed times like minutes, hours, days\n                }\n                else if (range) {\n                    newMin = Math.max(newMax - range, dataMin);\n                    newMax = Math.min(newMin + range, dataMax);\n                    addOffsetMin = false;\n                }\n                else if (type === 'ytd') {\n                    // On user clicks on the buttons, or a delayed action running from\n                    // the beforeRender event (below), the baseAxis is defined.\n                    if (baseAxis) {\n                        // When \"ytd\" is the pre-selected button for the initial view,\n                        // its calculation is delayed and rerun in the beforeRender\n                        // event (below). When the series are initialized, but before\n                        // the chart is rendered, we have access to the xData array\n                        // (#942).\n                        if (typeof dataMax === 'undefined' ||\n                            typeof dataMin === 'undefined') {\n                            dataMin = Number.MAX_VALUE;\n                            dataMax = Number.MIN_VALUE;\n                            chart.series.forEach(function (series) {\n                                // reassign it to the last item\n                                var xData = series.xData;\n                                if (xData) {\n                                    dataMin = Math.min(xData[0], dataMin);\n                                    dataMax = Math.max(xData[xData.length - 1], dataMax);\n                                }\n                            });\n                            redraw = false;\n                        }\n                        ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC);\n                        newMin = rangeMin = ytdExtremes.min;\n                        newMax = ytdExtremes.max;\n                        // \"ytd\" is pre-selected. We don't yet have access to processed\n                        // point and extremes data (things like pointStart and pointInterval\n                        // are missing), so we delay the process (#942)\n                    }\n                    else {\n                        rangeSelector.deferredYTDClick = i;\n                        return;\n                    }\n                }\n                else if (type === 'all' && baseAxis) {\n                    // If the navigator exist and the axis range is declared reset that\n                    // range and from now on only use the range set by a user, #14742.\n                    if (chart.navigator && chart.navigator.baseSeries[0]) {\n                        chart.navigator.baseSeries[0].xAxis.options.range = void 0;\n                    }\n                    newMin = dataMin;\n                    newMax = dataMax;\n                }\n                if (addOffsetMin && rangeOptions._offsetMin && defined(newMin)) {\n                    newMin += rangeOptions._offsetMin;\n                }\n                if (rangeOptions._offsetMax && defined(newMax)) {\n                    newMax += rangeOptions._offsetMax;\n                }\n                if (this.dropdown) {\n                    this.dropdown.selectedIndex = i + 1;\n                }\n                // Update the chart\n                if (!baseAxis) {\n                    // Axis not yet instanciated. Temporarily set min and range\n                    // options and remove them on chart load (#4317).\n                    baseXAxisOptions = splat(chart.options.xAxis)[0];\n                    rangeSetting = baseXAxisOptions.range;\n                    baseXAxisOptions.range = range;\n                    minSetting = baseXAxisOptions.min;\n                    baseXAxisOptions.min = rangeMin;\n                    addEvent(chart, 'load', function resetMinAndRange() {\n                        baseXAxisOptions.range = rangeSetting;\n                        baseXAxisOptions.min = minSetting;\n                    });\n                }\n                else {\n                    // Existing axis object. Set extremes after render time.\n                    baseAxis.setExtremes(newMin, newMax, pick(redraw, true), void 0, // auto animation\n                    {\n                        trigger: 'rangeSelectorButton',\n                        rangeSelectorButton: rangeOptions\n                    });\n                }\n                fireEvent(this, 'afterBtnClick');\n            };\n            /**\n             * Set the selected option. This method only sets the internal flag, it\n             * doesn't update the buttons or the actual zoomed range.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setSelected\n             * @param {number} [selected]\n             */\n            RangeSelector.prototype.setSelected = function (selected) {\n                this.selected = this.options.selected = selected;\n            };\n            /**\n             * Initialize the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#init\n             * @param {Highcharts.Chart} chart\n             */\n            RangeSelector.prototype.init = function (chart) {\n                var rangeSelector = this, options = chart.options.rangeSelector, buttonOptions = (options.buttons || rangeSelector.defaultButtons.slice()), selectedOption = options.selected, blurInputs = function () {\n                    var minInput = rangeSelector.minInput, maxInput = rangeSelector.maxInput;\n                    // #3274 in some case blur is not defined\n                    if (minInput && !!minInput.blur) {\n                        fireEvent(minInput, 'blur');\n                    }\n                    if (maxInput && !!maxInput.blur) {\n                        fireEvent(maxInput, 'blur');\n                    }\n                };\n                rangeSelector.chart = chart;\n                rangeSelector.options = options;\n                rangeSelector.buttons = [];\n                rangeSelector.buttonOptions = buttonOptions;\n                this.eventsToUnbind = [];\n                this.eventsToUnbind.push(addEvent(chart.container, 'mousedown', blurInputs));\n                this.eventsToUnbind.push(addEvent(chart, 'resize', blurInputs));\n                // Extend the buttonOptions with actual range\n                buttonOptions.forEach(rangeSelector.computeButtonRange);\n                // zoomed range based on a pre-selected button index\n                if (typeof selectedOption !== 'undefined' &&\n                    buttonOptions[selectedOption]) {\n                    this.clickButton(selectedOption, false);\n                }\n                this.eventsToUnbind.push(addEvent(chart, 'load', function () {\n                    // If a data grouping is applied to the current button, release it\n                    // when extremes change\n                    if (chart.xAxis && chart.xAxis[0]) {\n                        addEvent(chart.xAxis[0], 'setExtremes', function (e) {\n                            if (this.max - this.min !==\n                                chart.fixedRange &&\n                                e.trigger !== 'rangeSelectorButton' &&\n                                e.trigger !== 'updatedData' &&\n                                rangeSelector.forcedDataGrouping &&\n                                !rangeSelector.frozenStates) {\n                                this.setDataGrouping(false, false);\n                            }\n                        });\n                    }\n                }));\n            };\n            /**\n             * Dynamically update the range selector buttons after a new range has been\n             * set\n             *\n             * @private\n             * @function Highcharts.RangeSelector#updateButtonStates\n             */\n            RangeSelector.prototype.updateButtonStates = function () {\n                var rangeSelector = this, chart = this.chart, dropdown = this.dropdown, baseAxis = chart.xAxis[0], actualRange = Math.round(baseAxis.max - baseAxis.min), hasNoData = !baseAxis.hasVisibleSeries, day = 24 * 36e5, // A single day in milliseconds\n                unionExtremes = (chart.scroller &&\n                    chart.scroller.getUnionExtremes()) || baseAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax, ytdExtremes = rangeSelector.getYTDExtremes(dataMax, dataMin, chart.time.useUTC), ytdMin = ytdExtremes.min, ytdMax = ytdExtremes.max, selected = rangeSelector.selected, allButtonsEnabled = rangeSelector.options.allButtonsEnabled, buttons = rangeSelector.buttons;\n                var selectedExists = isNumber(selected);\n                rangeSelector.buttonOptions.forEach(function (rangeOptions, i) {\n                    var range = rangeOptions._range, type = rangeOptions.type, count = rangeOptions.count || 1, button = buttons[i], offsetRange = rangeOptions._offsetMax -\n                        rangeOptions._offsetMin, isSelected = i === selected, \n                    // Disable buttons where the range exceeds what is allowed in\n                    // the current view\n                    isTooGreatRange = range >\n                        dataMax - dataMin, \n                    // Disable buttons where the range is smaller than the minimum\n                    // range\n                    isTooSmallRange = range < baseAxis.minRange;\n                    var state = 0, \n                    // Do not select the YTD button if not explicitly told so\n                    isYTDButNotSelected = false, \n                    // Disable the All button if we're already showing all\n                    isAllButAlreadyShowingAll = false, isSameRange = range === actualRange;\n                    // Months and years have a variable range so we check the extremes\n                    if ((type === 'month' || type === 'year') &&\n                        (actualRange + 36e5 >=\n                            { month: 28, year: 365 }[type] * day * count - offsetRange) &&\n                        (actualRange - 36e5 <=\n                            { month: 31, year: 366 }[type] * day * count + offsetRange)) {\n                        isSameRange = true;\n                    }\n                    else if (type === 'ytd') {\n                        isSameRange = (ytdMax - ytdMin + offsetRange) === actualRange;\n                        isYTDButNotSelected = !isSelected;\n                    }\n                    else if (type === 'all') {\n                        isSameRange = (baseAxis.max - baseAxis.min >=\n                            dataMax - dataMin);\n                        isAllButAlreadyShowingAll = (!isSelected &&\n                            selectedExists &&\n                            isSameRange);\n                    }\n                    // The new zoom area happens to match the range for a button - mark\n                    // it selected. This happens when scrolling across an ordinal gap.\n                    // It can be seen in the intraday demos when selecting 1h and scroll\n                    // across the night gap.\n                    var disable = (!allButtonsEnabled &&\n                        (isTooGreatRange ||\n                            isTooSmallRange ||\n                            isAllButAlreadyShowingAll ||\n                            hasNoData));\n                    var select = ((isSelected && isSameRange) ||\n                        (isSameRange && !selectedExists && !isYTDButNotSelected) ||\n                        (isSelected && rangeSelector.frozenStates));\n                    if (disable) {\n                        state = 3;\n                    }\n                    else if (select) {\n                        selectedExists = true; // Only one button can be selected\n                        state = 2;\n                    }\n                    // If state has changed, update the button\n                    if (button.state !== state) {\n                        button.setState(state);\n                        if (dropdown) {\n                            dropdown.options[i + 1].disabled = disable;\n                            if (state === 2) {\n                                dropdown.selectedIndex = i + 1;\n                            }\n                        }\n                        // Reset (#9209)\n                        if (state === 0 && selected === i) {\n                            rangeSelector.setSelected();\n                        }\n                    }\n                });\n            };\n            /**\n             * Compute and cache the range for an individual button\n             *\n             * @private\n             * @function Highcharts.RangeSelector#computeButtonRange\n             * @param {Highcharts.RangeSelectorButtonsOptions} rangeOptions\n             */\n            RangeSelector.prototype.computeButtonRange = function (rangeOptions) {\n                var type = rangeOptions.type, count = rangeOptions.count || 1, \n                // these time intervals have a fixed number of milliseconds, as\n                // opposed to month, ytd and year\n                fixedTimes = {\n                    millisecond: 1,\n                    second: 1000,\n                    minute: 60 * 1000,\n                    hour: 3600 * 1000,\n                    day: 24 * 3600 * 1000,\n                    week: 7 * 24 * 3600 * 1000\n                };\n                // Store the range on the button object\n                if (fixedTimes[type]) {\n                    rangeOptions._range = fixedTimes[type] * count;\n                }\n                else if (type === 'month' || type === 'year') {\n                    rangeOptions._range = {\n                        month: 30,\n                        year: 365\n                    }[type] * 24 * 36e5 * count;\n                }\n                rangeOptions._offsetMin = pick(rangeOptions.offsetMin, 0);\n                rangeOptions._offsetMax = pick(rangeOptions.offsetMax, 0);\n                rangeOptions._range +=\n                    rangeOptions._offsetMax - rangeOptions._offsetMin;\n            };\n            /**\n             * Get the unix timestamp of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getInputValue\n             */\n            RangeSelector.prototype.getInputValue = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                var options = this.chart.options\n                    .rangeSelector;\n                var time = this.chart.time;\n                if (input) {\n                    return ((input.type === 'text' && options.inputDateParser) ||\n                        this.defaultInputDateParser)(input.value, time.useUTC, time);\n                }\n                return 0;\n            };\n            /**\n             * Set the internal and displayed value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputValue\n             */\n            RangeSelector.prototype.setInputValue = function (name, inputTime) {\n                var options = this.options, time = this.chart.time, input = name === 'min' ? this.minInput : this.maxInput, dateBox = name === 'min' ? this.minDateBox : this.maxDateBox;\n                if (input) {\n                    var hcTimeAttr = input.getAttribute('data-hc-time');\n                    var updatedTime = defined(hcTimeAttr) ? Number(hcTimeAttr) : void 0;\n                    if (defined(inputTime)) {\n                        var previousTime = updatedTime;\n                        if (defined(previousTime)) {\n                            input.setAttribute('data-hc-time-previous', previousTime);\n                        }\n                        input.setAttribute('data-hc-time', inputTime);\n                        updatedTime = inputTime;\n                    }\n                    input.value = time.dateFormat((this.inputTypeFormats[input.type] ||\n                        options.inputEditDateFormat), updatedTime);\n                    if (dateBox) {\n                        dateBox.attr({\n                            text: time.dateFormat(options.inputDateFormat, updatedTime)\n                        });\n                    }\n                }\n            };\n            /**\n             * Set the min and max value of a HTML input for the dates\n             *\n             * @private\n             * @function Highcharts.RangeSelector#setInputExtremes\n             */\n            RangeSelector.prototype.setInputExtremes = function (name, min, max) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    var format = this.inputTypeFormats[input.type];\n                    var time = this.chart.time;\n                    if (format) {\n                        var newMin = time.dateFormat(format, min);\n                        if (input.min !== newMin) {\n                            input.min = newMin;\n                        }\n                        var newMax = time.dateFormat(format, max);\n                        if (input.max !== newMax) {\n                            input.max = newMax;\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#showInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.showInput = function (name) {\n                var dateBox = name === 'min' ? this.minDateBox : this.maxDateBox, input = name === 'min' ? this.minInput : this.maxInput;\n                if (input && dateBox && this.inputGroup) {\n                    var isTextInput = input.type === 'text', _a = this.inputGroup, _b = _a.translateX, translateX = _b === void 0 ? 0 : _b, _c = _a.translateY, translateY = _c === void 0 ? 0 : _c, _d = dateBox.x, x = _d === void 0 ? 0 : _d, _e = dateBox.width, width = _e === void 0 ? 0 : _e, _f = dateBox.height, height = _f === void 0 ? 0 : _f, inputBoxWidth = this.options.inputBoxWidth;\n                    css(input, {\n                        width: isTextInput ?\n                            ((width + (inputBoxWidth ? -2 : 20)) + 'px') :\n                            'auto',\n                        height: (height - 2) + 'px',\n                        border: '2px solid silver'\n                    });\n                    if (isTextInput && inputBoxWidth) {\n                        css(input, {\n                            left: (translateX + x) + 'px',\n                            top: translateY + 'px'\n                        });\n                        // Inputs of types date, time or datetime-local should be centered\n                        // on top of the dateBox\n                    }\n                    else {\n                        css(input, {\n                            left: Math.min(Math.round(x +\n                                translateX -\n                                (input.offsetWidth - width) / 2), this.chart.chartWidth - input.offsetWidth) + 'px',\n                            top: (translateY - (input.offsetHeight - height) / 2) + 'px'\n                        });\n                    }\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideInput\n             * @param {string} name\n             */\n            RangeSelector.prototype.hideInput = function (name) {\n                var input = name === 'min' ? this.minInput : this.maxInput;\n                if (input) {\n                    css(input, {\n                        top: '-9999em',\n                        border: 0,\n                        width: '1px',\n                        height: '1px'\n                    });\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#defaultInputDateParser\n             */\n            RangeSelector.prototype.defaultInputDateParser = function (inputDate, useUTC, time) {\n                var hasTimezone = function (str) {\n                    return str.length > 6 &&\n                        (str.lastIndexOf('-') === str.length - 6 ||\n                            str.lastIndexOf('+') === str.length - 6);\n                };\n                var input = inputDate.split('/').join('-').split(' ').join('T');\n                if (input.indexOf('T') === -1) {\n                    input += 'T00:00';\n                }\n                if (useUTC) {\n                    input += 'Z';\n                }\n                else if (H.isSafari && !hasTimezone(input)) {\n                    var offset = new Date(input).getTimezoneOffset() / 60;\n                    input += offset <= 0 ? \"+\".concat(pad(-offset), \":00\") : \"-\".concat(pad(offset), \":00\");\n                }\n                var date = Date.parse(input);\n                // If the value isn't parsed directly to a value by the\n                // browser's Date.parse method, try\n                // parsing it a different way\n                if (!isNumber(date)) {\n                    var parts = inputDate.split('-');\n                    date = Date.UTC(pInt(parts[0]), pInt(parts[1]) - 1, pInt(parts[2]));\n                }\n                if (time && useUTC && isNumber(date)) {\n                    date += time.getTimezoneOffset(date);\n                }\n                return date;\n            };\n            /**\n             * Draw either the 'from' or the 'to' HTML input box of the range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#drawInput\n             */\n            RangeSelector.prototype.drawInput = function (name) {\n                var _a = this, chart = _a.chart, div = _a.div, inputGroup = _a.inputGroup;\n                var rangeSelector = this, chartStyle = chart.renderer.style || {}, renderer = chart.renderer, options = chart.options.rangeSelector, lang = defaultOptions.lang, isMin = name === 'min';\n                /**\n                 * @private\n                 */\n                function updateExtremes() {\n                    var maxInput = rangeSelector.maxInput, minInput = rangeSelector.minInput, chartAxis = chart.xAxis[0], unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chartAxis, dataMin = unionExtremes.dataMin, dataMax = unionExtremes.dataMax;\n                    var value = rangeSelector.getInputValue(name);\n                    if (value !== Number(input.getAttribute('data-hc-time-previous')) &&\n                        isNumber(value)) {\n                        input.setAttribute('data-hc-time-previous', value);\n                        // Validate the extremes. If it goes beyound the data min or\n                        // max, use the actual data extreme (#2438).\n                        if (isMin && maxInput && isNumber(dataMin)) {\n                            if (value > Number(maxInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value < dataMin) {\n                                value = dataMin;\n                            }\n                        }\n                        else if (minInput && isNumber(dataMax)) {\n                            if (value < Number(minInput.getAttribute('data-hc-time'))) {\n                                value = void 0;\n                            }\n                            else if (value > dataMax) {\n                                value = dataMax;\n                            }\n                        }\n                        // Set the extremes\n                        if (typeof value !== 'undefined') { // @todo typof undefined\n                            chartAxis.setExtremes(isMin ? value : chartAxis.min, isMin ? chartAxis.max : value, void 0, void 0, { trigger: 'rangeSelectorInput' });\n                        }\n                    }\n                }\n                // Create the text label\n                var text = lang[isMin ? 'rangeSelectorFrom' : 'rangeSelectorTo'] || '';\n                var label = renderer\n                    .label(text, 0)\n                    .addClass('highcharts-range-label')\n                    .attr({\n                    padding: text ? 2 : 0,\n                    height: text ? options.inputBoxHeight : 0\n                })\n                    .add(inputGroup);\n                // Create an SVG label that shows updated date ranges and and records\n                // click events that bring in the HTML input.\n                var dateBox = renderer\n                    .label('', 0)\n                    .addClass('highcharts-range-input')\n                    .attr({\n                    padding: 2,\n                    width: options.inputBoxWidth,\n                    height: options.inputBoxHeight,\n                    'text-align': 'center'\n                })\n                    .on('click', function () {\n                    // If it is already focused, the onfocus event doesn't fire\n                    // (#3713)\n                    rangeSelector.showInput(name);\n                    rangeSelector[name + 'Input'].focus();\n                });\n                if (!chart.styledMode) {\n                    dateBox.attr({\n                        stroke: options.inputBoxBorderColor,\n                        'stroke-width': 1\n                    });\n                }\n                dateBox.add(inputGroup);\n                // Create the HTML input element. This is rendered as 1x1 pixel then set\n                // to the right size when focused.\n                var input = createElement('input', {\n                    name: name,\n                    className: 'highcharts-range-selector'\n                }, void 0, div);\n                // #14788: Setting input.type to an unsupported type throws in IE, so\n                // we need to use setAttribute instead\n                input.setAttribute('type', preferredInputType(options.inputDateFormat || '%e %b %Y'));\n                if (!chart.styledMode) {\n                    // Styles\n                    label.css(merge(chartStyle, options.labelStyle));\n                    dateBox.css(merge({\n                        color: \"#333333\" /* Palette.neutralColor80 */\n                    }, chartStyle, options.inputStyle));\n                    css(input, extend({\n                        position: 'absolute',\n                        border: 0,\n                        boxShadow: '0 0 15px rgba(0,0,0,0.3)',\n                        width: '1px',\n                        height: '1px',\n                        padding: 0,\n                        textAlign: 'center',\n                        fontSize: chartStyle.fontSize,\n                        fontFamily: chartStyle.fontFamily,\n                        top: '-9999em' // #4798\n                    }, options.inputStyle));\n                }\n                // Blow up the input box\n                input.onfocus = function () {\n                    rangeSelector.showInput(name);\n                };\n                // Hide away the input box\n                input.onblur = function () {\n                    // update extermes only when inputs are active\n                    if (input === H.doc.activeElement) { // Only when focused\n                        // Update also when no `change` event is triggered, like when\n                        // clicking inside the SVG (#4710)\n                        updateExtremes();\n                    }\n                    // #10404 - move hide and blur outside focus\n                    rangeSelector.hideInput(name);\n                    rangeSelector.setInputValue(name);\n                    input.blur(); // #4606\n                };\n                var keyDown = false;\n                // handle changes in the input boxes\n                input.onchange = function () {\n                    // Update extremes and blur input when clicking date input calendar\n                    if (!keyDown) {\n                        updateExtremes();\n                        rangeSelector.hideInput(name);\n                        input.blur();\n                    }\n                };\n                input.onkeypress = function (event) {\n                    // IE does not fire onchange on enter\n                    if (event.keyCode === 13) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeydown = function (event) {\n                    keyDown = true;\n                    // Arrow keys\n                    if (event.keyCode === 38 || event.keyCode === 40) {\n                        updateExtremes();\n                    }\n                };\n                input.onkeyup = function () {\n                    keyDown = false;\n                };\n                return { dateBox: dateBox, input: input, label: label };\n            };\n            /**\n             * Get the position of the range selector buttons and inputs. This can be\n             * overridden from outside for custom positioning.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getPosition\n             */\n            RangeSelector.prototype.getPosition = function () {\n                var chart = this.chart, options = chart.options.rangeSelector, top = options.verticalAlign === 'top' ?\n                    chart.plotTop - chart.axisOffset[0] :\n                    0; // set offset only for varticalAlign top\n                return {\n                    buttonTop: top + options.buttonPosition.y,\n                    inputTop: top + options.inputPosition.y - 10\n                };\n            };\n            /**\n             * Get the extremes of YTD. Will choose dataMax if its value is lower than\n             * the current timestamp. Will choose dataMin if its value is higher than\n             * the timestamp for the start of current year.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getYTDExtremes\n             * @return {*}\n             * Returns min and max for the YTD\n             */\n            RangeSelector.prototype.getYTDExtremes = function (dataMax, dataMin, useUTC) {\n                var time = this.chart.time, now = new time.Date(dataMax), year = time.get('FullYear', now), startOfYear = useUTC ?\n                    time.Date.UTC(year, 0, 1) : // eslint-disable-line new-cap\n                    +new time.Date(year, 0, 1), min = Math.max(dataMin, startOfYear), ts = now.getTime();\n                return {\n                    max: Math.min(dataMax || ts, ts),\n                    min: min\n                };\n            };\n            /**\n             * Render the range selector including the buttons and the inputs. The first\n             * time render is called, the elements are created and positioned. On\n             * subsequent calls, they are moved and updated.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#render\n             * @param {number} [min]\n             *        X axis minimum\n             * @param {number} [max]\n             *        X axis maximum\n             */\n            RangeSelector.prototype.render = function (min, max) {\n                var chart = this.chart, renderer = chart.renderer, container = chart.container, chartOptions = chart.options, options = chartOptions.rangeSelector, \n                // Place inputs above the container\n                inputsZIndex = pick(chartOptions.chart.style &&\n                    chartOptions.chart.style.zIndex, 0) + 1, inputEnabled = options.inputEnabled, rendered = this.rendered;\n                if (options.enabled === false) {\n                    return;\n                }\n                // create the elements\n                if (!rendered) {\n                    this.group = renderer.g('range-selector-group')\n                        .attr({\n                        zIndex: 7\n                    })\n                        .add();\n                    this.div = createElement('div', void 0, {\n                        position: 'relative',\n                        height: 0,\n                        zIndex: inputsZIndex\n                    });\n                    if (this.buttonOptions.length) {\n                        this.renderButtons();\n                    }\n                    // First create a wrapper outside the container in order to make\n                    // the inputs work and make export correct\n                    if (container.parentNode) {\n                        container.parentNode.insertBefore(this.div, container);\n                    }\n                    if (inputEnabled) {\n                        // Create the group to keep the inputs\n                        this.inputGroup = renderer.g('input-group').add(this.group);\n                        var minElems = this.drawInput('min');\n                        this.minDateBox = minElems.dateBox;\n                        this.minLabel = minElems.label;\n                        this.minInput = minElems.input;\n                        var maxElems = this.drawInput('max');\n                        this.maxDateBox = maxElems.dateBox;\n                        this.maxLabel = maxElems.label;\n                        this.maxInput = maxElems.input;\n                    }\n                }\n                if (inputEnabled) {\n                    // Set or reset the input values\n                    this.setInputValue('min', min);\n                    this.setInputValue('max', max);\n                    var unionExtremes = (chart.scroller && chart.scroller.getUnionExtremes()) || chart.xAxis[0] || {};\n                    if (defined(unionExtremes.dataMin) &&\n                        defined(unionExtremes.dataMax)) {\n                        var minRange = chart.xAxis[0].minRange || 0;\n                        this.setInputExtremes('min', unionExtremes.dataMin, Math.min(unionExtremes.dataMax, this.getInputValue('max')) - minRange);\n                        this.setInputExtremes('max', Math.max(unionExtremes.dataMin, this.getInputValue('min')) + minRange, unionExtremes.dataMax);\n                    }\n                    // Reflow\n                    if (this.inputGroup) {\n                        var x_1 = 0;\n                        [\n                            this.minLabel,\n                            this.minDateBox,\n                            this.maxLabel,\n                            this.maxDateBox\n                        ].forEach(function (label) {\n                            if (label) {\n                                var width = label.getBBox().width;\n                                if (width) {\n                                    label.attr({ x: x_1 });\n                                    x_1 += width + options.inputSpacing;\n                                }\n                            }\n                        });\n                    }\n                }\n                this.alignElements();\n                this.rendered = true;\n            };\n            /**\n             * Render the range buttons. This only runs the first time, later the\n             * positioning is laid out in alignElements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#renderButtons\n             */\n            RangeSelector.prototype.renderButtons = function () {\n                var _this = this;\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options;\n                var lang = defaultOptions.lang;\n                var renderer = chart.renderer;\n                var buttonTheme = merge(options.buttonTheme);\n                var states = buttonTheme && buttonTheme.states;\n                // Prevent the button from resetting the width when the button state\n                // changes since we need more control over the width when collapsing\n                // the buttons\n                var width = buttonTheme.width || 28;\n                delete buttonTheme.width;\n                delete buttonTheme.states;\n                this.buttonGroup = renderer.g('range-selector-buttons').add(this.group);\n                var dropdown = this.dropdown = createElement('select', void 0, {\n                    position: 'absolute',\n                    width: '1px',\n                    height: '1px',\n                    padding: 0,\n                    border: 0,\n                    top: '-9999em',\n                    cursor: 'pointer',\n                    opacity: 0.0001\n                }, this.div);\n                // Prevent page zoom on iPhone\n                addEvent(dropdown, 'touchstart', function () {\n                    dropdown.style.fontSize = '16px';\n                });\n                // Forward events from select to button\n                [\n                    [H.isMS ? 'mouseover' : 'mouseenter'],\n                    [H.isMS ? 'mouseout' : 'mouseleave'],\n                    ['change', 'click']\n                ].forEach(function (_a) {\n                    var from = _a[0], to = _a[1];\n                    addEvent(dropdown, from, function () {\n                        var button = buttons[_this.currentButtonIndex()];\n                        if (button) {\n                            fireEvent(button.element, to || from);\n                        }\n                    });\n                });\n                this.zoomText = renderer\n                    .label((lang && lang.rangeSelectorZoom) || '', 0)\n                    .attr({\n                    padding: options.buttonTheme.padding,\n                    height: options.buttonTheme.height,\n                    paddingLeft: 0,\n                    paddingRight: 0\n                })\n                    .add(this.buttonGroup);\n                if (!this.chart.styledMode) {\n                    this.zoomText.css(options.labelStyle);\n                    buttonTheme['stroke-width'] = pick(buttonTheme['stroke-width'], 0);\n                }\n                createElement('option', {\n                    textContent: this.zoomText.textStr,\n                    disabled: true\n                }, void 0, dropdown);\n                this.buttonOptions.forEach(function (rangeOptions, i) {\n                    createElement('option', {\n                        textContent: rangeOptions.title || rangeOptions.text\n                    }, void 0, dropdown);\n                    buttons[i] = renderer\n                        .button(rangeOptions.text, 0, 0, function (e) {\n                        // extract events from button object and call\n                        var buttonEvents = (rangeOptions.events && rangeOptions.events.click);\n                        var callDefaultEvent;\n                        if (buttonEvents) {\n                            callDefaultEvent =\n                                buttonEvents.call(rangeOptions, e);\n                        }\n                        if (callDefaultEvent !== false) {\n                            _this.clickButton(i);\n                        }\n                        _this.isActive = true;\n                    }, buttonTheme, states && states.hover, states && states.select, states && states.disabled)\n                        .attr({\n                        'text-align': 'center',\n                        width: width\n                    })\n                        .add(_this.buttonGroup);\n                    if (rangeOptions.title) {\n                        buttons[i].attr('title', rangeOptions.title);\n                    }\n                });\n            };\n            /**\n             * Align the elements horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignElements\n             */\n            RangeSelector.prototype.alignElements = function () {\n                var _this = this;\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, group = _a.group, inputGroup = _a.inputGroup, options = _a.options, zoomText = _a.zoomText;\n                var chartOptions = chart.options;\n                var navButtonOptions = (chartOptions.exporting &&\n                    chartOptions.exporting.enabled !== false &&\n                    chartOptions.navigation &&\n                    chartOptions.navigation.buttonOptions);\n                var buttonPosition = options.buttonPosition, inputPosition = options.inputPosition, verticalAlign = options.verticalAlign;\n                // Get the X offset required to avoid overlapping with the exporting\n                // button. This is is used both by the buttonGroup and the inputGroup.\n                var getXOffsetForExportButton = function (group, position) {\n                    if (navButtonOptions &&\n                        _this.titleCollision(chart) &&\n                        verticalAlign === 'top' &&\n                        position.align === 'right' && ((position.y -\n                        group.getBBox().height - 12) <\n                        ((navButtonOptions.y || 0) +\n                            (navButtonOptions.height || 0) +\n                            chart.spacing[0]))) {\n                        return -40;\n                    }\n                    return 0;\n                };\n                var plotLeft = chart.plotLeft;\n                if (group && buttonPosition && inputPosition) {\n                    var translateX = buttonPosition.x - chart.spacing[3];\n                    if (buttonGroup) {\n                        this.positionButtons();\n                        if (!this.initialButtonGroupWidth) {\n                            var width_1 = 0;\n                            if (zoomText) {\n                                width_1 += zoomText.getBBox().width + 5;\n                            }\n                            buttons.forEach(function (button, i) {\n                                width_1 += button.width || 0;\n                                if (i !== buttons.length - 1) {\n                                    width_1 += options.buttonSpacing;\n                                }\n                            });\n                            this.initialButtonGroupWidth = width_1;\n                        }\n                        plotLeft -= chart.spacing[3];\n                        this.updateButtonStates();\n                        // Detect collision between button group and exporting\n                        var xOffsetForExportButton_1 = getXOffsetForExportButton(buttonGroup, buttonPosition);\n                        this.alignButtonGroup(xOffsetForExportButton_1);\n                        // Skip animation\n                        group.placed = buttonGroup.placed = chart.hasLoaded;\n                    }\n                    var xOffsetForExportButton = 0;\n                    if (inputGroup) {\n                        // Detect collision between the input group and exporting button\n                        xOffsetForExportButton = getXOffsetForExportButton(inputGroup, inputPosition);\n                        if (inputPosition.align === 'left') {\n                            translateX = plotLeft;\n                        }\n                        else if (inputPosition.align === 'right') {\n                            translateX = -Math.max(chart.axisOffset[1], -xOffsetForExportButton);\n                        }\n                        // Update the alignment to the updated spacing box\n                        inputGroup.align({\n                            y: inputPosition.y,\n                            width: inputGroup.getBBox().width,\n                            align: inputPosition.align,\n                            // fix wrong getBBox() value on right align\n                            x: inputPosition.x + translateX - 2\n                        }, true, chart.spacingBox);\n                        // Skip animation\n                        inputGroup.placed = chart.hasLoaded;\n                    }\n                    this.handleCollision(xOffsetForExportButton);\n                    // Vertical align\n                    group.align({\n                        verticalAlign: verticalAlign\n                    }, true, chart.spacingBox);\n                    var alignTranslateY = group.alignAttr.translateY;\n                    // Set position\n                    var groupHeight = group.getBBox().height + 20; // # 20 padding\n                    var translateY = 0;\n                    // Calculate bottom position\n                    if (verticalAlign === 'bottom') {\n                        var legendOptions = chart.legend && chart.legend.options;\n                        var legendHeight = (legendOptions &&\n                            legendOptions.verticalAlign === 'bottom' &&\n                            legendOptions.enabled &&\n                            !legendOptions.floating ?\n                            (chart.legend.legendHeight +\n                                pick(legendOptions.margin, 10)) :\n                            0);\n                        groupHeight = groupHeight + legendHeight - 20;\n                        translateY = (alignTranslateY -\n                            groupHeight -\n                            (options.floating ? 0 : options.y) -\n                            (chart.titleOffset ? chart.titleOffset[2] : 0) -\n                            10 // 10 spacing\n                        );\n                    }\n                    if (verticalAlign === 'top') {\n                        if (options.floating) {\n                            translateY = 0;\n                        }\n                        if (chart.titleOffset && chart.titleOffset[0]) {\n                            translateY = chart.titleOffset[0];\n                        }\n                        translateY += ((chart.margin[0] - chart.spacing[0]) || 0);\n                    }\n                    else if (verticalAlign === 'middle') {\n                        if (inputPosition.y === buttonPosition.y) {\n                            translateY = alignTranslateY;\n                        }\n                        else if (inputPosition.y || buttonPosition.y) {\n                            if (inputPosition.y < 0 ||\n                                buttonPosition.y < 0) {\n                                translateY -= Math.min(inputPosition.y, buttonPosition.y);\n                            }\n                            else {\n                                translateY = alignTranslateY - groupHeight;\n                            }\n                        }\n                    }\n                    group.translate(options.x, options.y + Math.floor(translateY));\n                    // Translate HTML inputs\n                    var _b = this, minInput = _b.minInput, maxInput = _b.maxInput, dropdown = _b.dropdown;\n                    if (options.inputEnabled && minInput && maxInput) {\n                        minInput.style.marginTop = group.translateY + 'px';\n                        maxInput.style.marginTop = group.translateY + 'px';\n                    }\n                    if (dropdown) {\n                        dropdown.style.marginTop = group.translateY + 'px';\n                    }\n                }\n            };\n            /**\n             * Align the button group horizontally and vertically.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#alignButtonGroup\n             * @param {number} xOffsetForExportButton\n             * @param {number} [width]\n             */\n            RangeSelector.prototype.alignButtonGroup = function (xOffsetForExportButton, width) {\n                var _a = this, chart = _a.chart, options = _a.options, buttonGroup = _a.buttonGroup, buttons = _a.buttons;\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft - chart.spacing[3];\n                var translateX = buttonPosition.x - chart.spacing[3];\n                if (buttonPosition.align === 'right') {\n                    translateX += xOffsetForExportButton - plotLeft; // #13014\n                }\n                else if (buttonPosition.align === 'center') {\n                    translateX -= plotLeft / 2;\n                }\n                if (buttonGroup) {\n                    // Align button group\n                    buttonGroup.align({\n                        y: buttonPosition.y,\n                        width: pick(width, this.initialButtonGroupWidth),\n                        align: buttonPosition.align,\n                        x: translateX\n                    }, true, chart.spacingBox);\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#positionButtons\n             */\n            RangeSelector.prototype.positionButtons = function () {\n                var _a = this, buttons = _a.buttons, chart = _a.chart, options = _a.options, zoomText = _a.zoomText;\n                var verb = chart.hasLoaded ? 'animate' : 'attr';\n                var buttonPosition = options.buttonPosition;\n                var plotLeft = chart.plotLeft;\n                var buttonLeft = plotLeft;\n                if (zoomText && zoomText.visibility !== 'hidden') {\n                    // #8769, allow dynamically updating margins\n                    zoomText[verb]({\n                        x: pick(plotLeft + buttonPosition.x, plotLeft)\n                    });\n                    // Button start position\n                    buttonLeft += buttonPosition.x +\n                        zoomText.getBBox().width + 5;\n                }\n                for (var i = 0, iEnd = this.buttonOptions.length; i < iEnd; ++i) {\n                    if (buttons[i].visibility !== 'hidden') {\n                        buttons[i][verb]({ x: buttonLeft });\n                        // Increase the button position for the next button\n                        buttonLeft += (buttons[i].width || 0) + options.buttonSpacing;\n                    }\n                    else {\n                        buttons[i][verb]({ x: plotLeft });\n                    }\n                }\n            };\n            /**\n             * Handle collision between the button group and the input group\n             *\n             * @private\n             * @function Highcharts.RangeSelector#handleCollision\n             *\n             * @param  {number} xOffsetForExportButton\n             *                  The X offset of the group required to make room for the\n             *                  exporting button\n             */\n            RangeSelector.prototype.handleCollision = function (xOffsetForExportButton) {\n                var _this = this;\n                var _a = this, chart = _a.chart, buttonGroup = _a.buttonGroup, inputGroup = _a.inputGroup;\n                var _b = this.options, buttonPosition = _b.buttonPosition, dropdown = _b.dropdown, inputPosition = _b.inputPosition;\n                var maxButtonWidth = function () {\n                    var buttonWidth = 0;\n                    _this.buttons.forEach(function (button) {\n                        var bBox = button.getBBox();\n                        if (bBox.width > buttonWidth) {\n                            buttonWidth = bBox.width;\n                        }\n                    });\n                    return buttonWidth;\n                };\n                var groupsOverlap = function (buttonGroupWidth) {\n                    if (inputGroup && buttonGroup) {\n                        var inputGroupX = (inputGroup.alignAttr.translateX +\n                            inputGroup.alignOptions.x -\n                            xOffsetForExportButton +\n                            // getBBox for detecing left margin\n                            inputGroup.getBBox().x +\n                            // 2px padding to not overlap input and label\n                            2);\n                        var inputGroupWidth = inputGroup.alignOptions.width;\n                        var buttonGroupX = buttonGroup.alignAttr.translateX +\n                            buttonGroup.getBBox().x;\n                        return (buttonGroupX + buttonGroupWidth > inputGroupX) &&\n                            (inputGroupX + inputGroupWidth > buttonGroupX) &&\n                            (buttonPosition.y <\n                                (inputPosition.y +\n                                    inputGroup.getBBox().height));\n                    }\n                    return false;\n                };\n                var moveInputsDown = function () {\n                    if (inputGroup && buttonGroup) {\n                        inputGroup.attr({\n                            translateX: inputGroup.alignAttr.translateX + (chart.axisOffset[1] >= -xOffsetForExportButton ?\n                                0 :\n                                -xOffsetForExportButton),\n                            translateY: inputGroup.alignAttr.translateY +\n                                buttonGroup.getBBox().height + 10\n                        });\n                    }\n                };\n                if (buttonGroup) {\n                    if (dropdown === 'always') {\n                        this.collapseButtons(xOffsetForExportButton);\n                        if (groupsOverlap(maxButtonWidth())) {\n                            // Move the inputs down if there is still a collision\n                            // after collapsing the buttons\n                            moveInputsDown();\n                        }\n                        return;\n                    }\n                    if (dropdown === 'never') {\n                        this.expandButtons();\n                    }\n                }\n                // Detect collision\n                if (inputGroup && buttonGroup) {\n                    if ((inputPosition.align === buttonPosition.align) ||\n                        // 20 is minimal spacing between elements\n                        groupsOverlap(this.initialButtonGroupWidth + 20)) {\n                        if (dropdown === 'responsive') {\n                            this.collapseButtons(xOffsetForExportButton);\n                            if (groupsOverlap(maxButtonWidth())) {\n                                moveInputsDown();\n                            }\n                        }\n                        else {\n                            moveInputsDown();\n                        }\n                    }\n                    else if (dropdown === 'responsive') {\n                        this.expandButtons();\n                    }\n                }\n                else if (buttonGroup && dropdown === 'responsive') {\n                    if (this.initialButtonGroupWidth > chart.plotWidth) {\n                        this.collapseButtons(xOffsetForExportButton);\n                    }\n                    else {\n                        this.expandButtons();\n                    }\n                }\n            };\n            /**\n             * Collapse the buttons and put the select element on top.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#collapseButtons\n             * @param {number} xOffsetForExportButton\n             */\n            RangeSelector.prototype.collapseButtons = function (xOffsetForExportButton) {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, chart = _a.chart, dropdown = _a.dropdown, options = _a.options, zoomText = _a.zoomText;\n                var userButtonTheme = (chart.userOptions.rangeSelector &&\n                    chart.userOptions.rangeSelector.buttonTheme) || {};\n                var getAttribs = function (text) { return ({\n                    text: text ? \"\".concat(text, \" \\u25BE\") : '▾',\n                    width: 'auto',\n                    paddingLeft: pick(options.buttonTheme.paddingLeft, userButtonTheme.padding, 8),\n                    paddingRight: pick(options.buttonTheme.paddingRight, userButtonTheme.padding, 8)\n                }); };\n                if (zoomText) {\n                    zoomText.hide();\n                }\n                var hasActiveButton = false;\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    if (button.state !== 2) {\n                        button.hide();\n                    }\n                    else {\n                        button.show();\n                        button.attr(getAttribs(rangeOptions.text));\n                        hasActiveButton = true;\n                    }\n                });\n                if (!hasActiveButton) {\n                    if (dropdown) {\n                        dropdown.selectedIndex = 0;\n                    }\n                    buttons[0].show();\n                    buttons[0].attr(getAttribs(this.zoomText && this.zoomText.textStr));\n                }\n                var align = options.buttonPosition.align;\n                this.positionButtons();\n                if (align === 'right' || align === 'center') {\n                    this.alignButtonGroup(xOffsetForExportButton, buttons[this.currentButtonIndex()].getBBox().width);\n                }\n                this.showDropdown();\n            };\n            /**\n             * Show all the buttons and hide the select element.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#expandButtons\n             */\n            RangeSelector.prototype.expandButtons = function () {\n                var _a = this, buttons = _a.buttons, buttonOptions = _a.buttonOptions, options = _a.options, zoomText = _a.zoomText;\n                this.hideDropdown();\n                if (zoomText) {\n                    zoomText.show();\n                }\n                buttonOptions.forEach(function (rangeOptions, i) {\n                    var button = buttons[i];\n                    button.show();\n                    button.attr({\n                        text: rangeOptions.text,\n                        width: options.buttonTheme.width || 28,\n                        paddingLeft: pick(options.buttonTheme.paddingLeft, 'unset'),\n                        paddingRight: pick(options.buttonTheme.paddingRight, 'unset')\n                    });\n                    if (button.state < 2) {\n                        button.setState(0);\n                    }\n                });\n                this.positionButtons();\n            };\n            /**\n             * Get the index of the visible button when the buttons are collapsed.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#currentButtonIndex\n             */\n            RangeSelector.prototype.currentButtonIndex = function () {\n                var dropdown = this.dropdown;\n                if (dropdown && dropdown.selectedIndex > 0) {\n                    return dropdown.selectedIndex - 1;\n                }\n                return 0;\n            };\n            /**\n             * Position the select element on top of the button.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#showDropdown\n             */\n            RangeSelector.prototype.showDropdown = function () {\n                var _a = this, buttonGroup = _a.buttonGroup, buttons = _a.buttons, chart = _a.chart, dropdown = _a.dropdown;\n                if (buttonGroup && dropdown) {\n                    var _b = buttonGroup.translateX, translateX = _b === void 0 ? 0 : _b, _c = buttonGroup.translateY, translateY = _c === void 0 ? 0 : _c, bBox = buttons[this.currentButtonIndex()].getBBox();\n                    css(dropdown, {\n                        left: (chart.plotLeft + translateX) + 'px',\n                        top: (translateY + 0.5) + 'px',\n                        width: bBox.width + 'px',\n                        height: bBox.height + 'px'\n                    });\n                    this.hasVisibleDropdown = true;\n                }\n            };\n            /**\n             * @private\n             * @function Highcharts.RangeSelector#hideDropdown\n             */\n            RangeSelector.prototype.hideDropdown = function () {\n                var dropdown = this.dropdown;\n                if (dropdown) {\n                    css(dropdown, {\n                        top: '-9999em',\n                        width: '1px',\n                        height: '1px'\n                    });\n                    this.hasVisibleDropdown = false;\n                }\n            };\n            /**\n             * Extracts height of range selector\n             *\n             * @private\n             * @function Highcharts.RangeSelector#getHeight\n             * @return {number}\n             * Returns rangeSelector height\n             */\n            RangeSelector.prototype.getHeight = function () {\n                var rangeSelector = this, options = rangeSelector.options, rangeSelectorGroup = rangeSelector.group, inputPosition = options.inputPosition, buttonPosition = options.buttonPosition, yPosition = options.y, buttonPositionY = buttonPosition.y, inputPositionY = inputPosition.y;\n                var rangeSelectorHeight = 0;\n                if (options.height) {\n                    return options.height;\n                }\n                // Align the elements before we read the height in case we're switching\n                // between wrapped and non-wrapped layout\n                this.alignElements();\n                rangeSelectorHeight = rangeSelectorGroup ?\n                    // 13px to keep back compatibility\n                    (rangeSelectorGroup.getBBox(true).height) + 13 +\n                        yPosition :\n                    0;\n                var minPosition = Math.min(inputPositionY, buttonPositionY);\n                if ((inputPositionY < 0 && buttonPositionY < 0) ||\n                    (inputPositionY > 0 && buttonPositionY > 0)) {\n                    rangeSelectorHeight += Math.abs(minPosition);\n                }\n                return rangeSelectorHeight;\n            };\n            /**\n             * Detect collision with title or subtitle\n             *\n             * @private\n             * @function Highcharts.RangeSelector#titleCollision\n             * @return {boolean}\n             * Returns collision status\n             */\n            RangeSelector.prototype.titleCollision = function (chart) {\n                return !(chart.options.title.text ||\n                    chart.options.subtitle.text);\n            };\n            /**\n             * Update the range selector with new options\n             *\n             * @private\n             * @function Highcharts.RangeSelector#update\n             * @param {Highcharts.RangeSelectorOptions} options\n             */\n            RangeSelector.prototype.update = function (options) {\n                var chart = this.chart;\n                merge(true, chart.options.rangeSelector, options);\n                this.destroy();\n                this.init(chart);\n                this.render();\n            };\n            /**\n             * Destroys allocated elements.\n             *\n             * @private\n             * @function Highcharts.RangeSelector#destroy\n             */\n            RangeSelector.prototype.destroy = function () {\n                var rSelector = this, minInput = rSelector.minInput, maxInput = rSelector.maxInput;\n                if (rSelector.eventsToUnbind) {\n                    rSelector.eventsToUnbind.forEach(function (unbind) { return unbind(); });\n                    rSelector.eventsToUnbind = void 0;\n                }\n                // Destroy elements in collections\n                destroyObjectProperties(rSelector.buttons);\n                // Clear input element events\n                if (minInput) {\n                    minInput.onfocus = minInput.onblur = minInput.onchange = null;\n                }\n                if (maxInput) {\n                    maxInput.onfocus = maxInput.onblur = maxInput.onchange = null;\n                }\n                // Destroy HTML and SVG elements\n                objectEach(rSelector, function (val, key) {\n                    if (val && key !== 'chart') {\n                        if (val instanceof SVGElement) {\n                            // SVGElement\n                            val.destroy();\n                        }\n                        else if (val instanceof window.HTMLElement) {\n                            // HTML element\n                            discardElement(val);\n                        }\n                    }\n                    if (val !== RangeSelector.prototype[key]) {\n                        rSelector[key] = null;\n                    }\n                }, this);\n            };\n            return RangeSelector;\n        }());\n        extend(RangeSelector.prototype, {\n            /**\n             * The default buttons for pre-selecting time frames.\n             * @private\n             */\n            defaultButtons: [{\n                    type: 'month',\n                    count: 1,\n                    text: '1m',\n                    title: 'View 1 month'\n                }, {\n                    type: 'month',\n                    count: 3,\n                    text: '3m',\n                    title: 'View 3 months'\n                }, {\n                    type: 'month',\n                    count: 6,\n                    text: '6m',\n                    title: 'View 6 months'\n                }, {\n                    type: 'ytd',\n                    text: 'YTD',\n                    title: 'View year to date'\n                }, {\n                    type: 'year',\n                    count: 1,\n                    text: '1y',\n                    title: 'View 1 year'\n                }, {\n                    type: 'all',\n                    text: 'All',\n                    title: 'View all'\n                }],\n            /**\n             * The date formats to use when setting min, max and value on date inputs.\n             * @private\n             */\n            inputTypeFormats: {\n                'datetime-local': '%Y-%m-%dT%H:%M:%S',\n                'date': '%Y-%m-%d',\n                'time': '%H:%M:%S'\n            }\n        });\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Define the time span for the button\n         *\n         * @typedef {\"all\"|\"day\"|\"hour\"|\"millisecond\"|\"minute\"|\"month\"|\"second\"|\"week\"|\"year\"|\"ytd\"} Highcharts.RangeSelectorButtonTypeValue\n         */\n        /**\n         * Callback function to react on button clicks.\n         *\n         * @callback Highcharts.RangeSelectorClickCallbackFunction\n         *\n         * @param {global.Event} e\n         *        Event arguments.\n         *\n         * @param {boolean|undefined}\n         *        Return false to cancel the default button event.\n         */\n        /**\n         * Callback function to parse values entered in the input boxes and return a\n         * valid JavaScript time as milliseconds since 1970.\n         *\n         * @callback Highcharts.RangeSelectorParseCallbackFunction\n         *\n         * @param {string} value\n         *        Input value to parse.\n         *\n         * @return {number}\n         *         Parsed JavaScript time value.\n         */\n        (''); // keeps doclets above in JS file\n\n        return RangeSelector;\n    });\n    _registerModule(_modules, 'Core/Axis/OrdinalAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Globals.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (Axis, H, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var addEvent = U.addEvent, correctFloat = U.correctFloat, css = U.css, defined = U.defined, error = U.error, pick = U.pick, timeUnits = U.timeUnits;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* eslint-disable valid-jsdoc */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        /**\n         * Extends the axis with ordinal support.\n         * @private\n         */\n        var OrdinalAxis;\n        (function (OrdinalAxis) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extends the axis with ordinal support.\n             *\n             * @private\n             *\n             * @param AxisClass\n             * Axis class to extend.\n             *\n             * @param ChartClass\n             * Chart class to use.\n             *\n             * @param SeriesClass\n             * Series class to use.\n             */\n            function compose(AxisClass, SeriesClass, ChartClass) {\n                if (U.pushUnique(composedMembers, AxisClass)) {\n                    var axisProto = AxisClass.prototype;\n                    axisProto.getTimeTicks = getTimeTicks;\n                    axisProto.index2val = index2val;\n                    axisProto.lin2val = lin2val;\n                    axisProto.val2lin = val2lin;\n                    // Record this to prevent overwriting by broken-axis module (#5979)\n                    axisProto.ordinal2lin = axisProto.val2lin;\n                    addEvent(AxisClass, 'afterInit', onAxisAfterInit);\n                    addEvent(AxisClass, 'foundExtremes', onAxisFoundExtremes);\n                    addEvent(AxisClass, 'afterSetScale', onAxisAfterSetScale);\n                    addEvent(AxisClass, 'initialAxisTranslation', onAxisInitialAxisTranslation);\n                }\n                if (U.pushUnique(composedMembers, ChartClass)) {\n                    addEvent(ChartClass, 'pan', onChartPan);\n                }\n                if (U.pushUnique(composedMembers, SeriesClass)) {\n                    addEvent(SeriesClass, 'updatedData', onSeriesUpdatedData);\n                }\n                return AxisClass;\n            }\n            OrdinalAxis.compose = compose;\n            /**\n             * In an ordinal axis, there might be areas with dense consentrations of\n             * points, then large gaps between some. Creating equally distributed\n             * ticks over this entire range may lead to a huge number of ticks that\n             * will later be removed. So instead, break the positions up in\n             * segments, find the tick positions for each segment then concatenize\n             * them. This method is used from both data grouping logic and X axis\n             * tick position logic.\n             * @private\n             */\n            function getTimeTicks(normalizedInterval, min, max, startOfWeek, positions, closestDistance, findHigherRanks) {\n                if (positions === void 0) { positions = []; }\n                if (closestDistance === void 0) { closestDistance = 0; }\n                var higherRanks = {}, tickPixelIntervalOption = this.options.tickPixelInterval, time = this.chart.time, \n                // Record all the start positions of a segment, to use when\n                // deciding what's a gap in the data.\n                segmentStarts = [];\n                var end, segmentPositions, hasCrossedHigherRank, info, outsideMax, start = 0, groupPositions = [], lastGroupPosition = -Number.MAX_VALUE;\n                // The positions are not always defined, for example for ordinal\n                // positions when data has regular interval (#1557, #2090)\n                if ((!this.options.ordinal && !this.options.breaks) ||\n                    !positions ||\n                    positions.length < 3 ||\n                    typeof min === 'undefined') {\n                    return time.getTimeTicks.apply(time, arguments);\n                }\n                // Analyze the positions array to split it into segments on gaps\n                // larger than 5 times the closest distance. The closest distance is\n                // already found at this point, so we reuse that instead of\n                // computing it again.\n                var posLength = positions.length;\n                for (end = 0; end < posLength; end++) {\n                    outsideMax = end && positions[end - 1] > max;\n                    if (positions[end] < min) { // Set the last position before min\n                        start = end;\n                    }\n                    if (end === posLength - 1 ||\n                        positions[end + 1] - positions[end] > closestDistance * 5 ||\n                        outsideMax) {\n                        // For each segment, calculate the tick positions from the\n                        // getTimeTicks utility function. The interval will be the\n                        // same regardless of how long the segment is.\n                        if (positions[end] > lastGroupPosition) { // #1475\n                            segmentPositions = time.getTimeTicks(normalizedInterval, positions[start], positions[end], startOfWeek);\n                            // Prevent duplicate groups, for example for multiple\n                            // segments within one larger time frame (#1475)\n                            while (segmentPositions.length &&\n                                segmentPositions[0] <= lastGroupPosition) {\n                                segmentPositions.shift();\n                            }\n                            if (segmentPositions.length) {\n                                lastGroupPosition =\n                                    segmentPositions[segmentPositions.length - 1];\n                            }\n                            segmentStarts.push(groupPositions.length);\n                            groupPositions = groupPositions.concat(segmentPositions);\n                        }\n                        // Set start of next segment\n                        start = end + 1;\n                    }\n                    if (outsideMax) {\n                        break;\n                    }\n                }\n                // Get the grouping info from the last of the segments. The info is\n                // the same for all segments.\n                if (segmentPositions) {\n                    info = segmentPositions.info;\n                    // Optionally identify ticks with higher rank, for example\n                    // when the ticks have crossed midnight.\n                    if (findHigherRanks && info.unitRange <= timeUnits.hour) {\n                        end = groupPositions.length - 1;\n                        // Compare points two by two\n                        for (start = 1; start < end; start++) {\n                            if (time.dateFormat('%d', groupPositions[start]) !==\n                                time.dateFormat('%d', groupPositions[start - 1])) {\n                                higherRanks[groupPositions[start]] = 'day';\n                                hasCrossedHigherRank = true;\n                            }\n                        }\n                        // If the complete array has crossed midnight, we want\n                        // to mark the first positions also as higher rank\n                        if (hasCrossedHigherRank) {\n                            higherRanks[groupPositions[0]] = 'day';\n                        }\n                        info.higherRanks = higherRanks;\n                    }\n                    // Save the info\n                    info.segmentStarts = segmentStarts;\n                    groupPositions.info = info;\n                }\n                else {\n                    error(12, false, this.chart);\n                }\n                // Don't show ticks within a gap in the ordinal axis, where the\n                // space between two points is greater than a portion of the tick\n                // pixel interval\n                if (findHigherRanks && defined(tickPixelIntervalOption)) {\n                    var length_1 = groupPositions.length, translatedArr = [], distances = [];\n                    var itemToRemove = void 0, translated = void 0, lastTranslated = void 0, medianDistance = void 0, distance = void 0, i = length_1;\n                    // Find median pixel distance in order to keep a reasonably even\n                    // distance between ticks (#748)\n                    while (i--) {\n                        translated = this.translate(groupPositions[i]);\n                        if (lastTranslated) {\n                            distances[i] = lastTranslated - translated;\n                        }\n                        translatedArr[i] = lastTranslated = translated;\n                    }\n                    distances.sort();\n                    medianDistance = distances[Math.floor(distances.length / 2)];\n                    if (medianDistance < tickPixelIntervalOption * 0.6) {\n                        medianDistance = null;\n                    }\n                    // Now loop over again and remove ticks where needed\n                    i = groupPositions[length_1 - 1] > max ? length_1 - 1 : length_1; // #817\n                    lastTranslated = void 0;\n                    while (i--) {\n                        translated = translatedArr[i];\n                        distance = Math.abs(lastTranslated - translated);\n                        // #4175 - when axis is reversed, the distance, is negative but\n                        // tickPixelIntervalOption positive, so we need to compare the\n                        // same values\n                        // Remove ticks that are closer than 0.6 times the pixel\n                        // interval from the one to the right, but not if it is close to\n                        // the median distance (#748).\n                        if (lastTranslated &&\n                            distance < tickPixelIntervalOption * 0.8 &&\n                            (medianDistance === null || distance < medianDistance * 0.8)) {\n                            // Is this a higher ranked position with a normal\n                            // position to the right?\n                            if (higherRanks[groupPositions[i]] &&\n                                !higherRanks[groupPositions[i + 1]]) {\n                                // Yes: remove the lower ranked neighbour to the\n                                // right\n                                itemToRemove = i + 1;\n                                lastTranslated = translated; // #709\n                            }\n                            else {\n                                // No: remove this one\n                                itemToRemove = i;\n                            }\n                            groupPositions.splice(itemToRemove, 1);\n                        }\n                        else {\n                            lastTranslated = translated;\n                        }\n                    }\n                }\n                return groupPositions;\n            }\n            /**\n             * Get axis position of given index of the extended ordinal positions.\n             * Used only when panning an ordinal axis.\n             *\n             * @private\n             * @function Highcharts.Axis#index2val\n             * @param {number} index\n             * The index value of searched point\n             */\n            function index2val(index) {\n                var axis = this, ordinal = axis.ordinal, \n                // Context could be changed to extendedOrdinalPositions.\n                ordinalPositions = ordinal.positions;\n                // The visible range contains only equally spaced values.\n                if (!ordinalPositions) {\n                    return index;\n                }\n                var i = ordinalPositions.length - 1, distance;\n                if (index < 0) { // out of range, in effect panning to the left\n                    index = ordinalPositions[0];\n                }\n                else if (index > i) { // out of range, panning to the right\n                    index = ordinalPositions[i];\n                }\n                else { // split it up\n                    i = Math.floor(index);\n                    distance = index - i; // the decimal\n                }\n                if (typeof distance !== 'undefined' &&\n                    typeof ordinalPositions[i] !== 'undefined') {\n                    return ordinalPositions[i] + (distance ?\n                        distance *\n                            (ordinalPositions[i + 1] - ordinalPositions[i]) :\n                        0);\n                }\n                return index;\n            }\n            /**\n             * Translate from linear (internal) to axis value.\n             *\n             * @private\n             * @function Highcharts.Axis#lin2val\n             * @param {number} val\n             * The linear abstracted value.\n             */\n            function lin2val(val) {\n                var axis = this, ordinal = axis.ordinal, localMin = axis.old ? axis.old.min : axis.min, localA = axis.old ? axis.old.transA : axis.transA;\n                var positions = ordinal.positions; // for the current visible range\n                // The visible range contains only equally spaced values.\n                if (!positions) {\n                    return val;\n                }\n                // Convert back from modivied value to pixels. // #15970\n                var pixelVal = correctFloat((val - localMin) * localA +\n                    axis.minPixelPadding), isInside = val >= positions[0] &&\n                    val <= positions[positions.length - 1];\n                // If the value is not inside the plot area, use the extended positions.\n                // (array contains also points that are outside of the plotArea).\n                if (!isInside) {\n                    positions = ordinal.getExtendedPositions();\n                }\n                // In some cases (especially in early stages of the chart creation) the\n                // getExtendedPositions might return undefined.\n                if (positions && positions.length) {\n                    var indexOf = positions.indexOf(val);\n                    var index = indexOf !== -1 ? indexOf : correctFloat(ordinal.getIndexOfPoint(pixelVal, positions)), mantissa = correctFloat(index % 1);\n                    // Check if the index is inside position array. If true,\n                    // read/approximate value for that exact index.\n                    if (index >= 0 && index <= positions.length - 1) {\n                        var leftNeighbour = positions[Math.floor(index)], rightNeighbour = positions[Math.ceil(index)], distance = rightNeighbour - leftNeighbour;\n                        return positions[Math.floor(index)] + mantissa * distance;\n                    }\n                    // If the value is outside positions array, return initial value\n                    return val; // #16784\n                }\n                return val;\n            }\n            /**\n             * Internal function to calculate the precise index in ordinalPositions\n             * array.\n             * @private\n             */\n            function getIndexInArray(ordinalPositions, val) {\n                var index = OrdinalAxis.Additions.findIndexOf(ordinalPositions, val, true);\n                if (ordinalPositions[index] === val) {\n                    return index;\n                }\n                var percent = (val - ordinalPositions[index]) /\n                    (ordinalPositions[index + 1] - ordinalPositions[index]);\n                return index + percent;\n            }\n            /**\n            * @private\n            */\n            function onAxisAfterInit() {\n                var axis = this;\n                if (!axis.ordinal) {\n                    axis.ordinal = new OrdinalAxis.Additions(axis);\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisFoundExtremes() {\n                var axis = this;\n                if (axis.isXAxis &&\n                    defined(axis.options.overscroll) &&\n                    axis.max === axis.dataMax &&\n                    (\n                    // Panning is an execption. We don't want to apply\n                    // overscroll when panning over the dataMax\n                    !axis.chart.mouseIsDown ||\n                        axis.isInternal) && (\n                // Scrollbar buttons are the other execption:\n                !axis.eventArgs ||\n                    axis.eventArgs && axis.eventArgs.trigger !== 'navigator')) {\n                    axis.max += axis.options.overscroll;\n                    // Live data and buttons require translation for the min:\n                    if (!axis.isInternal && defined(axis.userMin)) {\n                        axis.min += axis.options.overscroll;\n                    }\n                }\n            }\n            /**\n             * For ordinal axis, that loads data async, redraw axis after data is\n             * loaded. If we don't do that, axis will have the same extremes as\n             * previously, but ordinal positions won't be calculated. See #10290\n             * @private\n             */\n            function onAxisAfterSetScale() {\n                var axis = this;\n                if (axis.horiz && !axis.isDirty) {\n                    axis.isDirty = axis.isOrdinal &&\n                        axis.chart.navigator &&\n                        !axis.chart.navigator.adaptToUpdatedData;\n                }\n            }\n            /**\n             * @private\n             */\n            function onAxisInitialAxisTranslation() {\n                var axis = this;\n                if (axis.ordinal) {\n                    axis.ordinal.beforeSetTickPositions();\n                    axis.tickInterval = axis.ordinal.postProcessTickInterval(axis.tickInterval);\n                }\n            }\n            /**\n             * Extending the Chart.pan method for ordinal axes\n             * @private\n             */\n            function onChartPan(e) {\n                var chart = this, xAxis = chart.xAxis[0], overscroll = xAxis.options.overscroll, chartX = e.originalEvent.chartX, panning = chart.options.chart.panning;\n                var runBase = false;\n                if (panning &&\n                    panning.type !== 'y' &&\n                    xAxis.options.ordinal &&\n                    xAxis.series.length) {\n                    var mouseDownX = chart.mouseDownX, extremes = xAxis.getExtremes(), dataMax = extremes.dataMax, min = extremes.min, max = extremes.max, hoverPoints = chart.hoverPoints, closestPointRange = (xAxis.closestPointRange ||\n                        (xAxis.ordinal && xAxis.ordinal.overscrollPointsRange)), pointPixelWidth = (xAxis.translationSlope *\n                        (xAxis.ordinal.slope || closestPointRange)), \n                    // how many ordinal units did we move?\n                    movedUnits = Math.round((mouseDownX - chartX) / pointPixelWidth), \n                    // get index of all the chart's points\n                    extendedOrdinalPositions = xAxis.ordinal.getExtendedPositions(), extendedAxis = {\n                        ordinal: {\n                            positions: extendedOrdinalPositions,\n                            extendedOrdinalPositions: extendedOrdinalPositions\n                        }\n                    }, index2val_1 = xAxis.index2val, val2lin_1 = xAxis.val2lin;\n                    var trimmedRange = void 0, ordinalPositions = void 0, searchAxisLeft = void 0, searchAxisRight = void 0;\n                    // we have an ordinal axis, but the data is equally spaced\n                    if (!extendedAxis.ordinal.positions) {\n                        runBase = true;\n                    }\n                    else if (Math.abs(movedUnits) > 1) {\n                        // Remove active points for shared tooltip\n                        if (hoverPoints) {\n                            hoverPoints.forEach(function (point) {\n                                point.setState();\n                            });\n                        }\n                        if (movedUnits < 0) {\n                            searchAxisLeft = extendedAxis;\n                            searchAxisRight = xAxis.ordinal.positions ?\n                                xAxis : extendedAxis;\n                        }\n                        else {\n                            searchAxisLeft = xAxis.ordinal.positions ?\n                                xAxis : extendedAxis;\n                            searchAxisRight = extendedAxis;\n                        }\n                        // In grouped data series, the last ordinal position represents\n                        // the grouped data, which is to the left of the real data max.\n                        // If we don't compensate for this, we will be allowed to pan\n                        // grouped data series passed the right of the plot area.\n                        ordinalPositions = searchAxisRight.ordinal.positions;\n                        if (dataMax >\n                            ordinalPositions[ordinalPositions.length - 1]) {\n                            ordinalPositions.push(dataMax);\n                        }\n                        // Get the new min and max values by getting the ordinal index\n                        // for the current extreme, then add the moved units and\n                        // translate back to values. This happens on the extended\n                        // ordinal positions if the new position is out of range, else\n                        // it happens on the current x axis which is smaller and faster.\n                        chart.fixedRange = max - min;\n                        trimmedRange = xAxis.navigatorAxis\n                            .toFixedRange(void 0, void 0, index2val_1.apply(searchAxisLeft, [\n                            val2lin_1.apply(searchAxisLeft, [min, true]) +\n                                movedUnits\n                        ]), index2val_1.apply(searchAxisRight, [\n                            val2lin_1.apply(searchAxisRight, [max, true]) +\n                                movedUnits\n                        ]));\n                        // Apply it if it is within the available data range\n                        if (trimmedRange.min >= Math.min(extremes.dataMin, min) &&\n                            trimmedRange.max <= Math.max(dataMax, max) +\n                                overscroll) {\n                            xAxis.setExtremes(trimmedRange.min, trimmedRange.max, true, false, { trigger: 'pan' });\n                        }\n                        chart.mouseDownX = chartX; // set new reference for next run\n                        css(chart.container, { cursor: 'move' });\n                    }\n                }\n                else {\n                    runBase = true;\n                }\n                // revert to the linear chart.pan version\n                if (runBase || (panning && /y/.test(panning.type))) {\n                    if (overscroll) {\n                        xAxis.max = xAxis.dataMax + overscroll;\n                    }\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n            /**\n             * @private\n             */\n            function onSeriesUpdatedData() {\n                var xAxis = this.xAxis;\n                // Destroy the extended ordinal index on updated data\n                // and destroy extendedOrdinalPositions, #16055.\n                if (xAxis && xAxis.options.ordinal) {\n                    delete xAxis.ordinal.index;\n                }\n            }\n            /**\n             * Translate from a linear axis value to the corresponding ordinal axis\n             * position. If there are no gaps in the ordinal axis this will be the\n             * same. The translated value is the value that the point would have if\n             * the axis was linear, using the same min and max.\n             *\n             * @private\n             * @function Highcharts.Axis#val2lin\n             * @param {number} val\n             * The axis value.\n             * @param {boolean} [toIndex]\n             * Whether to return the index in the ordinalPositions or the new value.\n             */\n            function val2lin(val, toIndex) {\n                var axis = this, ordinal = axis.ordinal, ordinalPositions = ordinal.positions;\n                var slope = ordinal.slope, extendedOrdinalPositions;\n                if (!ordinalPositions) {\n                    return val;\n                }\n                var ordinalLength = ordinalPositions.length;\n                var ordinalIndex;\n                // If the searched value is inside visible plotArea, ivastigate the\n                // value basing on ordinalPositions.\n                if (ordinalPositions[0] <= val &&\n                    ordinalPositions[ordinalLength - 1] >= val) {\n                    ordinalIndex = getIndexInArray(ordinalPositions, val);\n                    // final return value is based on ordinalIndex\n                }\n                else {\n                    extendedOrdinalPositions =\n                        ordinal.getExtendedPositions &&\n                            ordinal.getExtendedPositions();\n                    if (!(extendedOrdinalPositions && extendedOrdinalPositions.length)) {\n                        return val;\n                    }\n                    var length_2 = extendedOrdinalPositions.length;\n                    if (!slope) {\n                        slope =\n                            (extendedOrdinalPositions[length_2 - 1] -\n                                extendedOrdinalPositions[0]) /\n                                length_2;\n                    }\n                    // OriginalPointReference is equal to the index of\n                    // first point of ordinalPositions in extendedOrdinalPositions.\n                    var originalPositionsReference = getIndexInArray(extendedOrdinalPositions, ordinalPositions[0]);\n                    // If the searched value is outside the visiblePlotArea,\n                    // check if it is inside extendedOrdinalPositions.\n                    if (val >= extendedOrdinalPositions[0] &&\n                        val <=\n                            extendedOrdinalPositions[length_2 - 1]) {\n                        // Return Value\n                        ordinalIndex = getIndexInArray(extendedOrdinalPositions, val) -\n                            originalPositionsReference;\n                    }\n                    else {\n                        if (!toIndex) {\n                            // If the value is outside positions array,\n                            // return initial value, #16784\n                            return val;\n                        }\n                        // Since ordinal.slope is the average distance between 2\n                        // points on visible plotArea, this can be used to calculete\n                        // the approximate position of the point, which is outside\n                        // the extededOrdinalPositions.\n                        if (val < extendedOrdinalPositions[0]) {\n                            var diff = extendedOrdinalPositions[0] - val, approximateIndexOffset = diff / slope;\n                            ordinalIndex =\n                                -originalPositionsReference -\n                                    approximateIndexOffset;\n                        }\n                        else {\n                            var diff = val -\n                                extendedOrdinalPositions[length_2 - 1], approximateIndexOffset = diff / slope;\n                            ordinalIndex =\n                                approximateIndexOffset +\n                                    length_2 -\n                                    originalPositionsReference;\n                        }\n                    }\n                }\n                return toIndex ? ordinalIndex : slope * (ordinalIndex || 0) +\n                    ordinal.offset;\n            }\n            /* *\n             *\n             *  Classes\n             *\n             * */\n            /**\n             * @private\n             */\n            var Additions = /** @class */ (function () {\n                /* *\n                 *\n                 *  Constructors\n                 *\n                 * */\n                /**\n                 * @private\n                 */\n                function Additions(axis) {\n                    this.index = {};\n                    this.axis = axis;\n                }\n                /* *\n                *\n                *  Functions\n                *\n                * */\n                /**\n                 * Calculate the ordinal positions before tick positions are calculated.\n                 * @private\n                 */\n                Additions.prototype.beforeSetTickPositions = function () {\n                    var _a;\n                    var axis = this.axis, ordinal = axis.ordinal, extremes = axis.getExtremes(), min = extremes.min, max = extremes.max, hasBreaks = (_a = axis.brokenAxis) === null || _a === void 0 ? void 0 : _a.hasBreaks, isOrdinal = axis.options.ordinal;\n                    var len, uniqueOrdinalPositions, dist, minIndex, maxIndex, slope, i, ordinalPositions = [], overscrollPointsRange = Number.MAX_VALUE, useOrdinal = false, adjustOrdinalExtremesPoints = false, isBoosted = false;\n                    // Apply the ordinal logic\n                    if (isOrdinal || hasBreaks) { // #4167 YAxis is never ordinal ?\n                        var distanceBetweenPoint_1 = 0;\n                        axis.series.forEach(function (series, i) {\n                            uniqueOrdinalPositions = [];\n                            // For an axis with multiple series, check if the distance\n                            // between points is identical throughout all series.\n                            if (i > 0 &&\n                                series.options.id !== 'highcharts-navigator-series' &&\n                                series.processedXData.length > 1) {\n                                adjustOrdinalExtremesPoints =\n                                    distanceBetweenPoint_1 !== series.processedXData[1] -\n                                        series.processedXData[0];\n                            }\n                            distanceBetweenPoint_1 =\n                                series.processedXData[1] - series.processedXData[0];\n                            if (series.boosted) {\n                                isBoosted = series.boosted;\n                            }\n                            if (series.reserveSpace() &&\n                                (series\n                                    .takeOrdinalPosition !== false || hasBreaks)) {\n                                // concatenate the processed X data into the existing\n                                // positions, or the empty array\n                                ordinalPositions = ordinalPositions.concat(series.processedXData);\n                                len = ordinalPositions.length;\n                                // remove duplicates (#1588)\n                                ordinalPositions.sort(function (a, b) {\n                                    // without a custom function it is sorted as strings\n                                    return a - b;\n                                });\n                                overscrollPointsRange = Math.min(overscrollPointsRange, pick(\n                                // Check for a single-point series:\n                                series.closestPointRange, overscrollPointsRange));\n                                if (len) {\n                                    i = 0;\n                                    while (i < len - 1) {\n                                        if (ordinalPositions[i] !==\n                                            ordinalPositions[i + 1]) {\n                                            uniqueOrdinalPositions.push(ordinalPositions[i + 1]);\n                                        }\n                                        i++;\n                                    }\n                                    // Check first item:\n                                    if (uniqueOrdinalPositions[0] !==\n                                        ordinalPositions[0]) {\n                                        uniqueOrdinalPositions.unshift(ordinalPositions[0]);\n                                    }\n                                    ordinalPositions = uniqueOrdinalPositions;\n                                }\n                            }\n                        });\n                        // If the distance between points is not identical throughout\n                        // all series, remove the first and last ordinal position to\n                        // avoid enabling ordinal logic when it is not needed, #17405.\n                        // Only for boosted series because changes are negligible.\n                        if (adjustOrdinalExtremesPoints && isBoosted) {\n                            ordinalPositions.pop();\n                            ordinalPositions.shift();\n                        }\n                        // cache the length\n                        len = ordinalPositions.length;\n                        // Check if we really need the overhead of mapping axis data\n                        // against the ordinal positions. If the series consist of\n                        // evenly spaced data any way, we don't need any ordinal logic.\n                        if (len > 2) { // two points have equal distance by default\n                            dist = ordinalPositions[1] - ordinalPositions[0];\n                            i = len - 1;\n                            while (i-- && !useOrdinal) {\n                                if (ordinalPositions[i + 1] - ordinalPositions[i] !==\n                                    dist) {\n                                    useOrdinal = true;\n                                }\n                            }\n                            // When zooming in on a week, prevent axis padding for\n                            // weekends even though the data within the week is evenly\n                            // spaced.\n                            if (!axis.options.keepOrdinalPadding &&\n                                (ordinalPositions[0] - min > dist ||\n                                    (max -\n                                        ordinalPositions[ordinalPositions.length - 1]) > dist)) {\n                                useOrdinal = true;\n                            }\n                        }\n                        else if (axis.options.overscroll) {\n                            if (len === 2) {\n                                // Exactly two points, distance for overscroll is fixed:\n                                overscrollPointsRange =\n                                    ordinalPositions[1] - ordinalPositions[0];\n                            }\n                            else if (len === 1) {\n                                // We have just one point, closest distance is unknown.\n                                // Assume then it is last point and overscrolled range:\n                                overscrollPointsRange = axis.options.overscroll;\n                                ordinalPositions = [\n                                    ordinalPositions[0],\n                                    ordinalPositions[0] + overscrollPointsRange\n                                ];\n                            }\n                            else {\n                                // In case of zooming in on overscrolled range, stick to\n                                // the old range:\n                                overscrollPointsRange = ordinal.overscrollPointsRange;\n                            }\n                        }\n                        // Record the slope and offset to compute the linear values from\n                        // the array index. Since the ordinal positions may exceed the\n                        // current range, get the start and end positions within it\n                        // (#719, #665b)\n                        if (useOrdinal || axis.forceOrdinal) {\n                            if (axis.options.overscroll) {\n                                ordinal.overscrollPointsRange = overscrollPointsRange;\n                                ordinalPositions = ordinalPositions.concat(ordinal.getOverscrollPositions());\n                            }\n                            // Register\n                            ordinal.positions = ordinalPositions;\n                            // This relies on the ordinalPositions being set. Use\n                            // Math.max and Math.min to prevent padding on either sides\n                            // of the data.\n                            minIndex = axis.ordinal2lin(// #5979\n                            Math.max(min, ordinalPositions[0]), true);\n                            maxIndex = Math.max(axis.ordinal2lin(Math.min(max, ordinalPositions[ordinalPositions.length - 1]), true), 1); // #3339\n                            // Set the slope and offset of the values compared to the\n                            // indices in the ordinal positions.\n                            ordinal.slope = slope =\n                                (max - min) / (maxIndex - minIndex);\n                            ordinal.offset = min - (minIndex * slope);\n                        }\n                        else {\n                            ordinal.overscrollPointsRange = pick(axis.closestPointRange, ordinal.overscrollPointsRange);\n                            ordinal.positions = axis.ordinal.slope = ordinal.offset =\n                                void 0;\n                        }\n                    }\n                    axis.isOrdinal = isOrdinal && useOrdinal; // #3818, #4196, #4926\n                    ordinal.groupIntervalFactor = null; // reset for next run\n                };\n                /**\n                 * Faster way of using the Array.indexOf method.\n                 * Works for sorted arrays only with unique values.\n                 *\n                 * @param {Array} sortedArray\n                 *        The sorted array inside which we are looking for.\n                 * @param {number} key\n                 *        The key to being found.\n                 * @param {boolean} indirectSearch\n                 *        In case of lack of the point in the array, should return\n                 *        value be equal to -1 or the closest smaller index.\n                 *  @private\n                 */\n                Additions.findIndexOf = function (sortedArray, key, indirectSearch) {\n                    var start = 0, end = sortedArray.length - 1, middle;\n                    while (start < end) {\n                        middle = Math.ceil((start + end) / 2);\n                        // Key found as the middle element.\n                        if (sortedArray[middle] <= key) {\n                            // Continue searching to the right.\n                            start = middle;\n                        }\n                        else {\n                            // Continue searching to the left.\n                            end = middle - 1;\n                        }\n                    }\n                    if (sortedArray[start] === key) {\n                        return start;\n                    }\n                    // Key could not be found.\n                    return !indirectSearch ? -1 : start;\n                };\n                /**\n                 * Get the ordinal positions for the entire data set. This is necessary\n                 * in chart panning because we need to find out what points or data\n                 * groups are available outside the visible range. When a panning\n                 * operation starts, if an index for the given grouping does not exists,\n                 * it is created and cached. This index is deleted on updated data, so\n                 * it will be regenerated the next time a panning operation starts.\n                 * @private\n                 */\n                Additions.prototype.getExtendedPositions = function () {\n                    var ordinal = this, axis = ordinal.axis, axisProto = axis.constructor.prototype, chart = axis.chart, grouping = axis.series[0].currentDataGrouping, key = grouping ?\n                        grouping.count + grouping.unitName :\n                        'raw', overscroll = axis.options.overscroll, extremes = axis.getExtremes();\n                    var fakeAxis, fakeSeries = void 0, ordinalIndex = ordinal.index;\n                    // If this is the first time, or the ordinal index is deleted by\n                    // updatedData,\n                    // create it.\n                    if (!ordinalIndex) {\n                        ordinalIndex = ordinal.index = {};\n                    }\n                    if (!ordinalIndex[key]) {\n                        // Create a fake axis object where the extended ordinal\n                        // positions are emulated\n                        fakeAxis = {\n                            series: [],\n                            chart: chart,\n                            forceOrdinal: false,\n                            getExtremes: function () {\n                                return {\n                                    min: extremes.dataMin,\n                                    max: extremes.dataMax + overscroll\n                                };\n                            },\n                            applyGrouping: axisProto.applyGrouping,\n                            getGroupPixelWidth: axisProto.getGroupPixelWidth,\n                            getTimeTicks: axisProto.getTimeTicks,\n                            options: {\n                                ordinal: true\n                            },\n                            ordinal: {\n                                getGroupIntervalFactor: this.getGroupIntervalFactor\n                            },\n                            ordinal2lin: axisProto.ordinal2lin,\n                            getIndexOfPoint: axisProto.getIndexOfPoint,\n                            val2lin: axisProto.val2lin // #2590\n                        };\n                        fakeAxis.ordinal.axis = fakeAxis;\n                        // Add the fake series to hold the full data, then apply\n                        // processData to it\n                        axis.series.forEach(function (series) {\n                            fakeSeries = {\n                                xAxis: fakeAxis,\n                                xData: series.xData.slice(),\n                                chart: chart,\n                                groupPixelWidth: series.groupPixelWidth,\n                                destroyGroupedData: H.noop,\n                                getProcessedData: Series.prototype.getProcessedData,\n                                applyGrouping: Series.prototype.applyGrouping,\n                                reserveSpace: Series.prototype.reserveSpace,\n                                visible: series.visible\n                            };\n                            fakeSeries.xData = fakeSeries.xData.concat(ordinal.getOverscrollPositions());\n                            fakeSeries.options = {\n                                dataGrouping: grouping ? {\n                                    firstAnchor: 'firstPoint',\n                                    anchor: 'middle',\n                                    lastAnchor: 'lastPoint',\n                                    enabled: true,\n                                    forced: true,\n                                    // doesn't matter which, use the fastest\n                                    approximation: 'open',\n                                    units: [[\n                                            grouping.unitName,\n                                            [grouping.count]\n                                        ]]\n                                } : {\n                                    enabled: false\n                                }\n                            };\n                            fakeAxis.series.push(fakeSeries);\n                            series.processData.apply(fakeSeries);\n                        });\n                        fakeAxis.applyGrouping({ hasExtremesChanged: true });\n                        // Force to use the ordinal when points are evenly spaced (e.g.\n                        // weeks), #3825.\n                        if ((fakeSeries.closestPointRange !==\n                            fakeSeries.basePointRange) &&\n                            fakeSeries.currentDataGrouping) {\n                            fakeAxis.forceOrdinal = true;\n                        }\n                        // Run beforeSetTickPositions to compute the ordinalPositions\n                        axis.ordinal.beforeSetTickPositions.apply({ axis: fakeAxis });\n                        // Cache it\n                        ordinalIndex[key] = fakeAxis.ordinal.positions;\n                    }\n                    return ordinalIndex[key];\n                };\n                /**\n                 * Find the factor to estimate how wide the plot area would have been if\n                 * ordinal gaps were included. This value is used to compute an imagined\n                 * plot width in order to establish the data grouping interval.\n                 *\n                 * A real world case is the intraday-candlestick example. Without this\n                 * logic, it would show the correct data grouping when viewing a range\n                 * within each day, but once moving the range to include the gap between\n                 * two days, the interval would include the cut-away night hours and the\n                 * data grouping would be wrong. So the below method tries to compensate\n                 * by identifying the most common point interval, in this case days.\n                 *\n                 * An opposite case is presented in issue #718. We have a long array of\n                 * daily data, then one point is appended one hour after the last point.\n                 * We expect the data grouping not to change.\n                 *\n                 * In the future, if we find cases where this estimation doesn't work\n                 * optimally, we might need to add a second pass to the data grouping\n                 * logic, where we do another run with a greater interval if the number\n                 * of data groups is more than a certain fraction of the desired group\n                 * count.\n                 * @private\n                 */\n                Additions.prototype.getGroupIntervalFactor = function (xMin, xMax, series) {\n                    var ordinal = this, axis = ordinal.axis, processedXData = series.processedXData, len = processedXData.length, distances = [];\n                    var median, i, groupIntervalFactor = ordinal.groupIntervalFactor;\n                    // Only do this computation for the first series, let the other\n                    // inherit it (#2416)\n                    if (!groupIntervalFactor) {\n                        // Register all the distances in an array\n                        for (i = 0; i < len - 1; i++) {\n                            distances[i] = (processedXData[i + 1] -\n                                processedXData[i]);\n                        }\n                        // Sort them and find the median\n                        distances.sort(function (a, b) {\n                            return a - b;\n                        });\n                        median = distances[Math.floor(len / 2)];\n                        // Compensate for series that don't extend through the entire\n                        // axis extent. #1675.\n                        xMin = Math.max(xMin, processedXData[0]);\n                        xMax = Math.min(xMax, processedXData[len - 1]);\n                        ordinal.groupIntervalFactor = groupIntervalFactor =\n                            (len * median) / (xMax - xMin);\n                    }\n                    // Return the factor needed for data grouping\n                    return groupIntervalFactor;\n                };\n                /**\n                 * Get index of point inside the ordinal positions array.\n                 *\n                 * @private\n                 * @param {number} val\n                 * The pixel value of a point.\n                 *\n                 * @param {Array<number>} [ordinallArray]\n                 * An array of all points available on the axis for the given data set.\n                 * Either ordinalPositions if the value is inside the plotArea or\n                 * extendedOrdinalPositions if not.\n                 */\n                Additions.prototype.getIndexOfPoint = function (val, ordinalArray) {\n                    var ordinal = this, axis = ordinal.axis, firstPointVal = ordinal.positions ? ordinal.positions[0] : 0;\n                    // Check whether the series has at least one point inside the chart\n                    var hasPointsInside = function (series) {\n                        var min = axis.min, max = axis.max;\n                        if (defined(min) && defined(max)) {\n                            return series.points.some(function (point) {\n                                return point.x >= min && point.x <= max;\n                            });\n                        }\n                        return false;\n                    };\n                    var firstPointX;\n                    // When more series assign to axis, find the smallest one, #15987.\n                    axis.series.forEach(function (series) {\n                        var _a;\n                        var firstPoint = (_a = series.points) === null || _a === void 0 ? void 0 : _a[0];\n                        if (defined(firstPoint === null || firstPoint === void 0 ? void 0 : firstPoint.plotX) &&\n                            (firstPoint.plotX < firstPointX ||\n                                !defined(firstPointX)) &&\n                            hasPointsInside(series)) {\n                            firstPointX = firstPoint.plotX;\n                        }\n                    });\n                    // If undefined, give a default value\n                    firstPointX !== null && firstPointX !== void 0 ? firstPointX : (firstPointX = axis.minPixelPadding);\n                    // Distance in pixels between two points on the ordinal axis in the\n                    // current zoom.\n                    var ordinalPointPixelInterval = axis.translationSlope * (ordinal.slope ||\n                        axis.closestPointRange ||\n                        ordinal.overscrollPointsRange), \n                    // toValue for the first point.\n                    shiftIndex = correctFloat((val - firstPointX) / ordinalPointPixelInterval);\n                    return Additions.findIndexOf(ordinalArray, firstPointVal, true) + shiftIndex;\n                };\n                /**\n                 * Get ticks for an ordinal axis within a range where points don't\n                 * exist. It is required when overscroll is enabled. We can't base on\n                 * points, because we may not have any, so we use approximated\n                 * pointRange and generate these ticks between Axis.dataMax,\n                 * Axis.dataMax + Axis.overscroll evenly spaced. Used in panning and\n                 * navigator scrolling.\n                 * @private\n                 */\n                Additions.prototype.getOverscrollPositions = function () {\n                    var ordinal = this, axis = ordinal.axis, extraRange = axis.options.overscroll, distance = ordinal.overscrollPointsRange, positions = [];\n                    var max = axis.dataMax;\n                    if (defined(distance)) {\n                        // Max + pointRange because we need to scroll to the last\n                        while (max <= axis.dataMax + extraRange) {\n                            max += distance;\n                            positions.push(max);\n                        }\n                    }\n                    return positions;\n                };\n                /**\n                 * Make the tick intervals closer because the ordinal gaps make the\n                 * ticks spread out or cluster.\n                 * @private\n                 */\n                Additions.prototype.postProcessTickInterval = function (tickInterval) {\n                    // Problem: https://jsfiddle.net/highcharts/FQm4E/1/. This is a case\n                    // where this algorithm doesn't work optimally. In this case, the\n                    // tick labels are spread out per week, but all the gaps reside\n                    // within weeks. So we have a situation where the labels are courser\n                    // than the ordinal gaps, and thus the tick interval should not be\n                    // altered.\n                    var ordinal = this, axis = ordinal.axis, ordinalSlope = ordinal.slope;\n                    var ret;\n                    if (ordinalSlope) {\n                        if (!axis.options.breaks) {\n                            ret = (tickInterval /\n                                (ordinalSlope / axis.closestPointRange));\n                        }\n                        else {\n                            ret = axis.closestPointRange || tickInterval; // #7275\n                        }\n                    }\n                    else {\n                        ret = tickInterval;\n                    }\n                    return ret;\n                };\n                return Additions;\n            }());\n            OrdinalAxis.Additions = Additions;\n        })(OrdinalAxis || (OrdinalAxis = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OrdinalAxis;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var HLCPoint = /** @class */ (function (_super) {\n            __extends(HLCPoint, _super);\n            function HLCPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.close = void 0;\n                _this.high = void 0;\n                _this.low = void 0;\n                _this.options = void 0;\n                _this.plotClose = void 0;\n                _this.series = void 0;\n                return _this;\n            }\n            return HLCPoint;\n        }(ColumnPoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCPoint;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An HLC chart is a style of financial chart used to describe price\n         * movements over time. It displays high, low and close values per\n         * data point.\n         *\n         * @sample stock/demo/hlc/\n         *         HLC chart\n         *\n         * @extends      plotOptions.column\n         * @excluding    borderColor, borderRadius, borderWidth, crisp, stacking,\n         *               stack\n         * @product      highstock\n         * @optionparent plotOptions.hlc\n         */\n        var HLCSeriesDefaults = {\n            /**\n             * The approximate pixel width of each group. If for example a series\n             * with 30 points is displayed over a 600 pixel wide plot area, no\n             * grouping is performed. If however the series contains so many points\n             * that the spacing is less than the groupPixelWidth, Highcharts will\n             * try to group it into appropriate groups so that each is more or less\n             * two pixels wide. Defaults to `5`.\n             *\n             * @type      {number}\n             * @default   5\n             * @product   highstock\n             * @apioption plotOptions.hlc.dataGrouping.groupPixelWidth\n             */\n            /**\n             * @type      {Highcharts.DataGroupingApproximationValue|Function}\n             * @default   hlc\n             * @product   highstock\n             * @apioption plotOptions.hlc.dataGrouping.approximation\n             */\n            /**\n             * @default   close\n             * @apioption plotOptions.hlc.colorKey\n             */\n            /**\n             * The pixel width of the line/border. Defaults to `1`.\n             *\n             * @sample {highstock} stock/plotoptions/hlc-linewidth/\n             *         A greater line width\n             *\n             * @type    {number}\n             * @default 1\n             * @product highstock\n             *\n             * @public\n             */\n            lineWidth: 1,\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n                    '<b> {series.name}</b><br/>' +\n                    'High: {point.high}<br/>' +\n                    'Low: {point.low}<br/>' +\n                    'Close: {point.close}<br/>'\n            },\n            /**\n             * @type {number|null}\n             */\n            threshold: null,\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The pixel width of the line representing the HLC point.\n                     *\n                     * @type    {number}\n                     * @default 3\n                     * @product highstock\n                     */\n                    lineWidth: 3\n                }\n            },\n            /**\n             * Determines which one of  `high`, `low`, `close` values should\n             * be represented as `point.y`, which is later used to set dataLabel\n             * position and [compare](#plotOptions.series.compare).\n             *\n             * @sample {highstock} stock/plotoptions/hlc-pointvalkey/\n             *         Possible values\n             *\n             * @declare    Highcharts.OptionsHLCPointValKeyValue\n             * @type       {string}\n             * @default    close\n             * @validvalue [\"high\", \"low\", \"close\"]\n             * @product    highstock\n             * @apioption  plotOptions.hlc.pointValKey\n             */\n            /**\n             * @default   close\n             * @apioption plotOptions.hlc.colorKey\n             */\n            stickyTracking: true\n        };\n        /**\n         * A `hlc` series. If the [type](#series.hlc.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.hlc\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @apioption series.hlc\n         */\n        /**\n         * An array of data points for the series. For the `hlc` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of arrays with 4 or 3 values. In this case, the values correspond\n         *    to `x,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length of 3\\.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 5, 6, 7],\n         *        [1, 4, 8, 2],\n         *        [2, 3, 4, 10]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.hlc.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        high: 4,\n         *        low: 5,\n         *        close: 2,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        high: 3,\n         *        low: 6,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number>|Array<(number|string),number,number,number>|*>}\n         * @extends   series.arearange.data\n         * @excluding y, marker\n         * @product   highstock\n         * @apioption series.hlc.data\n         */\n        /**\n         * The closing value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.hlc.data.close\n         */\n        (''); // keeps doclets above in JS file\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/HLC/HLCSeries.js', [_modules['Series/HLC/HLCPoint.js'], _modules['Series/HLC/HLCSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (HLCPoint, HLCSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Pawel Lysy\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var extend = U.extend, merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The hlc series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.hlc\n         *\n         * @augments Highcharts.Series\n         */\n        var HLCSeries = /** @class */ (function (_super) {\n            __extends(HLCSeries, _super);\n            function HLCSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                _this.yData = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extend the path if close is not between high and low.\n             *\n             * @param {SVGPath} path the path array of the point\n             * @param {number} halfStrokeWidth\n             * @param {number} value value of the point to which the stem should be extended\n             */\n            HLCSeries.prototype.extendStem = function (path, halfStrokeWidth, value) {\n                var start = path[0];\n                var end = path[1];\n                // We don't need to worry about crisp - close value\n                // is already crisped and halfStrokeWidth should remove it.\n                if (typeof start[2] === 'number') {\n                    start[2] = Math.max(value + halfStrokeWidth, start[2]);\n                }\n                if (typeof end[2] === 'number') {\n                    end[2] = Math.min(value - halfStrokeWidth, end[2]);\n                }\n            };\n            /**\n             * Function to create SVGPath of the point based on the\n             * plot positions of this point.\n             * @private\n             */\n            HLCSeries.prototype.getPointPath = function (point, graphic) {\n                // crisp vector coordinates\n                var strokeWidth = graphic.strokeWidth(), series = point.series, crispCorr = (strokeWidth % 2) / 2, \n                // #2596:\n                crispX = Math.round(point.plotX) - crispCorr, halfWidth = Math.round(point.shapeArgs.width / 2);\n                var plotClose = point.plotClose;\n                // the vertical stem\n                var path = [\n                    ['M', crispX, Math.round(point.yBottom)],\n                    ['L', crispX, Math.round(point.plotHigh)]\n                ];\n                // close\n                if (point.close !== null) {\n                    plotClose = Math.round(point.plotClose) + crispCorr;\n                    path.push(['M', crispX, plotClose], ['L', crispX + halfWidth, plotClose]);\n                    series.extendStem(path, strokeWidth / 2, plotClose);\n                }\n                return path;\n            };\n            /**\n             * Draw single point\n             * @private\n             */\n            HLCSeries.prototype.drawSinglePoint = function (point) {\n                var series = point.series, chart = series.chart;\n                var path, graphic = point.graphic;\n                if (typeof point.plotY !== 'undefined') {\n                    // Create and/or update the graphic\n                    if (!graphic) {\n                        point.graphic = graphic = chart.renderer.path()\n                            .add(series.group);\n                    }\n                    if (!chart.styledMode) {\n                        graphic.attr(series.pointAttribs(point, (point.selected && 'select'))); // #3897\n                    }\n                    // crisp vector coordinates\n                    path = series.getPointPath(point, graphic);\n                    graphic[!graphic ? 'attr' : 'animate']({ d: path })\n                        .addClass(point.getClassName(), true);\n                }\n            };\n            /**\n             * Draw the data points\n             * @private\n             */\n            HLCSeries.prototype.drawPoints = function () {\n                this.points.forEach(this.drawSinglePoint);\n            };\n            /**\n             * @private\n             * @function Highcharts.seriesTypes.hlc#init\n             */\n            HLCSeries.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                this.options.stacking = void 0; // #8817\n            };\n            /**\n             * Postprocess mapping between options and SVG attributes\n             * @private\n             */\n            HLCSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = _super.prototype.pointAttribs.call(this, point, state);\n                delete attribs.fill;\n                return attribs;\n            };\n            HLCSeries.prototype.toYData = function (point) {\n                // return a plain array for speedy calculation\n                return [point.high, point.low, point.close];\n            };\n            /**\n             * Translate data points from raw values x and y to plotX and plotY\n             *\n             * @private\n             * @function Highcharts.seriesTypes.hlc#translate\n             */\n            HLCSeries.prototype.translate = function () {\n                var series = this, yAxis = series.yAxis, names = (this.pointArrayMap && this.pointArrayMap.slice()) || [], translated = names.map(function (name) {\n                    return \"plot\".concat(name.charAt(0).toUpperCase() + name.slice(1));\n                });\n                translated.push('yBottom');\n                names.push('low');\n                _super.prototype.translate.apply(series);\n                // Do the translation\n                series.points.forEach(function (point) {\n                    names.forEach(function (name, i) {\n                        var value = point[name];\n                        if (value !== null) {\n                            if (series.dataModify) {\n                                value = series.dataModify.modifyValue(value);\n                            }\n                            point[translated[i]] =\n                                yAxis.toPixels(value, true);\n                        }\n                    });\n                    // Align the tooltip to the high value to avoid covering the\n                    // point\n                    point.tooltipPos[1] =\n                        point.plotHigh + yAxis.pos - series.chart.plotTop;\n                });\n            };\n            HLCSeries.defaultOptions = merge(ColumnSeries.defaultOptions, HLCSeriesDefaults);\n            return HLCSeries;\n        }(ColumnSeries));\n        extend(HLCSeries.prototype, {\n            pointClass: HLCPoint,\n            animate: null,\n            directTouch: false,\n            pointArrayMap: ['high', 'low', 'close'],\n            pointAttrToOptions: {\n                stroke: 'color',\n                'stroke-width': 'lineWidth'\n            },\n            pointValKey: 'close'\n        });\n        SeriesRegistry.registerSeriesType('hlc', HLCSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HLCSeries;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var HLCSeries = SeriesRegistry.seriesTypes.hlc;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var OHLCPoint = /** @class */ (function (_super) {\n            __extends(OHLCPoint, _super);\n            function OHLCPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.open = void 0;\n                _this.options = void 0;\n                _this.plotOpen = void 0;\n                _this.series = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Extend the parent method by adding up or down to the class name.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#getClassName\n             */\n            OHLCPoint.prototype.getClassName = function () {\n                return _super.prototype.getClassName.call(this) +\n                    (this.open < this.close ?\n                        ' highcharts-point-up' :\n                        ' highcharts-point-down');\n            };\n            /**\n             * Save upColor as point color (#14826).\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#resolveUpColor\n             */\n            OHLCPoint.prototype.resolveUpColor = function () {\n                if (this.open < this.close &&\n                    !this.options.color &&\n                    this.series.options.upColor) {\n                    this.color = this.series.options.upColor;\n                }\n            };\n            /**\n             * Extend the parent method by saving upColor.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#resolveColor\n             */\n            OHLCPoint.prototype.resolveColor = function () {\n                _super.prototype.resolveColor.call(this);\n                this.resolveUpColor();\n            };\n            /**\n             * Extend the parent method by saving upColor.\n             * @private\n             * @function Highcharts.seriesTypes.ohlc#getZone\n             *\n             * @return {Highcharts.SeriesZonesOptionsObject}\n             *         The zone item.\n             */\n            OHLCPoint.prototype.getZone = function () {\n                var zone = _super.prototype.getZone.call(this);\n                this.resolveUpColor();\n                return zone;\n            };\n            /**\n             * Extend the parent method by resolving up/down colors (#15849)\n             * @private\n             **/\n            OHLCPoint.prototype.applyOptions = function () {\n                _super.prototype.applyOptions.apply(this, arguments);\n                if (this.resolveColor) {\n                    this.resolveColor();\n                }\n                return this;\n            };\n            return OHLCPoint;\n        }(HLCSeries.prototype.pointClass));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCPoint;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An OHLC chart is a style of financial chart used to describe price\n         * movements over time. It displays open, high, low and close values per\n         * data point.\n         *\n         * @sample stock/demo/ohlc\n         *         OHLC chart\n         *\n         * @extends      plotOptions.hlc\n         * @product      highstock\n         * @optionparent plotOptions.ohlc\n         */\n        var OHLCSeriesDefaults = {\n            /**\n             * @type      {Highcharts.DataGroupingApproximationValue|Function}\n             * @default   ohlc\n             * @product   highstock\n             * @apioption plotOptions.ohlc.dataGrouping.approximation\n             */\n            /**\n             * Determines which one of  `open`, `high`, `low`, `close` values should\n             * be represented as `point.y`, which is later used to set dataLabel\n             * position and [compare](#plotOptions.series.compare).\n             *\n             * @declare    Highcharts.OptionsPointValKeyValue\n             * @default    close\n             * @validvalue [\"open\", \"high\", \"low\", \"close\"]\n             * @product    highstock\n             * @apioption  plotOptions.ohlc.pointValKey\n             */\n            /**\n             * Line color for up points.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highstock\n             * @apioption plotOptions.ohlc.upColor\n             */\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n                    '<b> {series.name}</b><br/>' +\n                    'Open: {point.open}<br/>' +\n                    'High: {point.high}<br/>' +\n                    'Low: {point.low}<br/>' +\n                    'Close: {point.close}<br/>'\n            }\n        };\n        /**\n         * The parameter allows setting line series type and use OHLC indicators.\n         * Data in OHLC format is required.\n         *\n         * @sample {highstock} stock/indicators/use-ohlc-data\n         *         Use OHLC data format to plot line chart\n         *\n         * @type      {boolean}\n         * @product   highstock\n         * @apioption plotOptions.line.useOhlcData\n         */\n        /**\n         * A `ohlc` series. If the [type](#series.ohlc.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ohlc\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @apioption series.ohlc\n         */\n        /**\n         * An array of data points for the series. For the `ohlc` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n         *    to `x,open,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length 4\\.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 6, 5, 6, 7],\n         *        [1, 9, 4, 8, 2],\n         *        [2, 6, 3, 4, 10]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.ohlc.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        open: 3,\n         *        high: 4,\n         *        low: 5,\n         *        close: 2,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        open: 4,\n         *        high: 3,\n         *        low: 6,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n         * @extends   series.arearange.data\n         * @excluding y, marker\n         * @product   highstock\n         * @apioption series.ohlc.data\n         */\n        /**\n         * The closing value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.ohlc.data.close\n         */\n        /**\n         * The opening value of each data point.\n         *\n         * @type      {number}\n         * @product   highstock\n         * @apioption series.ohlc.data.open\n         */\n        ''; // adds doclets above to transpilat\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/OHLC/OHLCSeries.js', [_modules['Series/OHLC/OHLCPoint.js'], _modules['Series/OHLC/OHLCSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (OHLCPoint, OHLCSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var HLCSeries = SeriesRegistry.seriesTypes.hlc;\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        var composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function onSeriesAfterSetOptions(e) {\n            var options = e.options, dataGrouping = options.dataGrouping;\n            if (dataGrouping &&\n                options.useOhlcData &&\n                options.id !== 'highcharts-navigator-series') {\n                dataGrouping.approximation = 'ohlc';\n            }\n        }\n        /**\n         * Add useOhlcData option\n         * @private\n         */\n        function onSeriesInit(eventOptions) {\n            // eslint-disable-next-line no-invalid-this\n            var series = this, options = eventOptions.options;\n            if (options.useOhlcData &&\n                options.id !== 'highcharts-navigator-series') {\n                extend(series, {\n                    pointValKey: OHLCSeries.prototype.pointValKey,\n                    // keys: ohlcProto.keys, // @todo potentially nonsense\n                    pointArrayMap: OHLCSeries.prototype.pointArrayMap,\n                    toYData: OHLCSeries.prototype.toYData\n                });\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ohlc series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ohlc\n         *\n         * @augments Highcharts.Series\n         */\n        var OHLCSeries = /** @class */ (function (_super) {\n            __extends(OHLCSeries, _super);\n            function OHLCSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            OHLCSeries.compose = function (SeriesClass) {\n                var _args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    _args[_i - 1] = arguments[_i];\n                }\n                if (U.pushUnique(composedMembers, SeriesClass)) {\n                    addEvent(SeriesClass, 'afterSetOptions', onSeriesAfterSetOptions);\n                    addEvent(SeriesClass, 'init', onSeriesInit);\n                }\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            OHLCSeries.prototype.getPointPath = function (point, graphic) {\n                var path = _super.prototype.getPointPath.call(this, point, graphic), strokeWidth = graphic.strokeWidth(), crispCorr = (strokeWidth % 2) / 2, crispX = Math.round(point.plotX) - crispCorr, halfWidth = Math.round(point.shapeArgs.width / 2);\n                var plotOpen = point.plotOpen;\n                // crisp vector coordinates\n                if (point.open !== null) {\n                    plotOpen = Math.round(point.plotOpen) + crispCorr;\n                    path.push(['M', crispX, plotOpen], ['L', crispX - halfWidth, plotOpen]);\n                    _super.prototype.extendStem.call(this, path, strokeWidth / 2, plotOpen);\n                }\n                return path;\n            };\n            /**\n             * Postprocess mapping between options and SVG attributes\n             * @private\n             */\n            OHLCSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = _super.prototype.pointAttribs.call(this, point, state), options = this.options;\n                delete attribs.fill;\n                if (!point.options.color &&\n                    options.upColor &&\n                    point.open < point.close) {\n                    attribs.stroke = options.upColor;\n                }\n                return attribs;\n            };\n            OHLCSeries.prototype.toYData = function (point) {\n                // return a plain array for speedy calculation\n                return [point.open, point.high, point.low, point.close];\n            };\n            OHLCSeries.defaultOptions = merge(HLCSeries.defaultOptions, OHLCSeriesDefaults);\n            return OHLCSeries;\n        }(HLCSeries));\n        extend(OHLCSeries.prototype, {\n            pointClass: OHLCPoint,\n            pointArrayMap: ['open', 'high', 'low', 'close']\n        });\n        SeriesRegistry.registerSeriesType('ohlc', OHLCSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OHLCSeries;\n    });\n    _registerModule(_modules, 'Series/Candlestick/CandlestickSeriesDefaults.js', [_modules['Core/Defaults.js'], _modules['Core/Utilities.js']], function (D, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var defaultOptions = D.defaultOptions;\n        var merge = U.merge;\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A candlestick chart is a style of financial chart used to describe\n         * price movements over time.\n         *\n         * @sample stock/demo/candlestick/\n         *         Candlestick chart\n         *\n         * @extends      plotOptions.ohlc\n         * @excluding    borderColor,borderRadius,borderWidth\n         * @product      highstock\n         * @optionparent plotOptions.candlestick\n         */\n        var CandlestickSeriesDefaults = {\n            /**\n             * The specific line color for up candle sticks. The default is to\n             * inherit the general `lineColor` setting.\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-linecolor/\n             *         Candlestick line colors\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since     1.3.6\n             * @product   highstock\n             * @apioption plotOptions.candlestick.upLineColor\n             */\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The pixel width of the line/border around the\n                     * candlestick.\n                     *\n                     * @product highstock\n                     */\n                    lineWidth: 2\n                }\n            },\n            /**\n             * @type    {number|null}\n             * @product highstock\n             */\n            threshold: null,\n            /**\n             * The color of the line/border of the candlestick.\n             *\n             * In styled mode, the line stroke can be set with the\n             * `.highcharts-candlestick-series .highcahrts-point` rule.\n             *\n             * @see [upLineColor](#plotOptions.candlestick.upLineColor)\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-linecolor/\n             *         Candlestick line colors\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #000000\n             * @product highstock\n             */\n            lineColor: \"#000000\" /* Palette.neutralColor100 */,\n            /**\n             * The pixel width of the candlestick line/border. Defaults to `1`.\n             *\n             *\n             * In styled mode, the line stroke width can be set with the\n             * `.highcharts-candlestick-series .highcahrts-point` rule.\n             *\n             * @product highstock\n             */\n            lineWidth: 1,\n            /**\n             * The fill color of the candlestick when values are rising.\n             *\n             * In styled mode, the up color can be set with the\n             * `.highcharts-candlestick-series .highcharts-point-up` rule.\n             *\n             * @sample {highstock} stock/plotoptions/candlestick-color/\n             *         Custom colors\n             * @sample {highstock} highcharts/css/candlestick/\n             *         Colors in styled mode\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default #ffffff\n             * @product highstock\n            */\n            upColor: \"#ffffff\" /* Palette.backgroundColor */,\n            /**\n             * @product highstock\n             */\n            stickyTracking: true\n        };\n        /**\n         * A `candlestick` series. If the [type](#series.candlestick.type)\n         * option is not specified, it is inherited from [chart.type](\n         * #chart.type).\n         *\n         * @type      {*}\n         * @extends   series,plotOptions.candlestick\n         * @excluding dataParser, dataURL, marker\n         * @product   highstock\n         * @apioption series.candlestick\n         */\n        /**\n         * An array of data points for the series. For the `candlestick` series\n         * type, points can be given in the following ways:\n         *\n         * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n         *    to `x,open,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length 4.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 7, 2, 0, 4],\n         *        [1, 1, 4, 2, 8],\n         *        [2, 3, 3, 9, 3]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.candlestick.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        open: 9,\n         *        high: 2,\n         *        low: 4,\n         *        close: 6,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        open: 1,\n         *        high: 4,\n         *        low: 7,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n         * @extends   series.ohlc.data\n         * @excluding y\n         * @product   highstock\n         * @apioption series.candlestick.data\n         */\n        ''; // adds doclets above to transpilat\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return CandlestickSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Candlestick/CandlestickSeries.js', [_modules['Series/Candlestick/CandlestickSeriesDefaults.js'], _modules['Core/Defaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (CandlestickSeriesDefaults, D, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var defaultOptions = D.defaultOptions;\n        var _a = SeriesRegistry.seriesTypes, ColumnSeries = _a.column, OHLCSeries = _a.ohlc;\n        var merge = U.merge;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The candlestick series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.candlestick\n         *\n         * @augments Highcharts.seriesTypes.ohlc\n         */\n        var CandlestickSeries = /** @class */ (function (_super) {\n            __extends(CandlestickSeries, _super);\n            function CandlestickSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Postprocess mapping between options and SVG attributes\n             *\n             * @private\n             * @function Highcharts.seriesTypes.candlestick#pointAttribs\n             */\n            CandlestickSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = ColumnSeries.prototype.pointAttribs.call(this, point, state), options = this.options, isUp = point.open < point.close, stroke = options.lineColor || this.color, color = point.color || this.color; // (#14826)\n                attribs['stroke-width'] = options.lineWidth;\n                attribs.fill = point.options.color ||\n                    (isUp ? (options.upColor || color) : color);\n                attribs.stroke = point.options.lineColor ||\n                    (isUp ? (options.upLineColor || stroke) : stroke);\n                // Select or hover states\n                if (state) {\n                    var stateOptions = options.states[state];\n                    attribs.fill = stateOptions.color || attribs.fill;\n                    attribs.stroke = stateOptions.lineColor || attribs.stroke;\n                    attribs['stroke-width'] =\n                        stateOptions.lineWidth || attribs['stroke-width'];\n                }\n                return attribs;\n            };\n            /**\n             * Draw the data points.\n             *\n             * @private\n             * @function Highcharts.seriesTypes.candlestick#drawPoints\n             */\n            CandlestickSeries.prototype.drawPoints = function () {\n                var series = this, points = series.points, chart = series.chart, reversedYAxis = series.yAxis.reversed;\n                for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n                    var point = points_1[_i];\n                    var graphic = point.graphic, plotOpen = void 0, plotClose = void 0, topBox = void 0, bottomBox = void 0, hasTopWhisker = void 0, hasBottomWhisker = void 0, crispCorr = void 0, crispX = void 0, path = void 0, halfWidth = void 0;\n                    var isNew = !graphic;\n                    if (typeof point.plotY !== 'undefined') {\n                        if (!graphic) {\n                            point.graphic = graphic = chart.renderer.path()\n                                .add(series.group);\n                        }\n                        if (!series.chart.styledMode) {\n                            graphic\n                                .attr(series.pointAttribs(point, (point.selected && 'select'))) // #3897\n                                .shadow(series.options.shadow);\n                        }\n                        // Crisp vector coordinates\n                        crispCorr = (graphic.strokeWidth() % 2) / 2;\n                        // #2596:\n                        crispX = Math.round(point.plotX) - crispCorr;\n                        plotOpen = point.plotOpen;\n                        plotClose = point.plotClose;\n                        topBox = Math.min(plotOpen, plotClose);\n                        bottomBox = Math.max(plotOpen, plotClose);\n                        halfWidth = Math.round(point.shapeArgs.width / 2);\n                        hasTopWhisker = reversedYAxis ?\n                            bottomBox !== point.yBottom :\n                            Math.round(topBox) !==\n                                Math.round(point.plotHigh);\n                        hasBottomWhisker = reversedYAxis ?\n                            Math.round(topBox) !==\n                                Math.round(point.plotHigh) :\n                            bottomBox !== point.yBottom;\n                        topBox = Math.round(topBox) + crispCorr;\n                        bottomBox = Math.round(bottomBox) + crispCorr;\n                        // Create the path. Due to a bug in Chrome 49, the path is\n                        // first instanciated with no values, then the values\n                        // pushed. For unknown reasons, instanciating the path array\n                        // with all the values would lead to a crash when updating\n                        // frequently (#5193).\n                        path = [];\n                        path.push(['M', crispX - halfWidth, bottomBox], ['L', crispX - halfWidth, topBox], ['L', crispX + halfWidth, topBox], ['L', crispX + halfWidth, bottomBox], ['Z'], // Ensure a nice rectangle #2602\n                        ['M', crispX, topBox], [\n                            'L',\n                            // #460, #2094\n                            crispX,\n                            hasTopWhisker ?\n                                Math.round(reversedYAxis ?\n                                    point.yBottom :\n                                    point.plotHigh) :\n                                topBox\n                        ], ['M', crispX, bottomBox], [\n                            'L',\n                            // #460, #2094\n                            crispX,\n                            hasBottomWhisker ?\n                                Math.round(reversedYAxis ?\n                                    point.plotHigh :\n                                    point.yBottom) :\n                                bottomBox\n                        ]);\n                        graphic[isNew ? 'attr' : 'animate']({ d: path })\n                            .addClass(point.getClassName(), true);\n                    }\n                }\n            };\n            CandlestickSeries.defaultOptions = merge(OHLCSeries.defaultOptions, defaultOptions.plotOptions, { tooltip: OHLCSeries.defaultOptions.tooltip }, CandlestickSeriesDefaults);\n            return CandlestickSeries;\n        }(OHLCSeries));\n        SeriesRegistry.registerSeriesType('candlestick', CandlestickSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return CandlestickSeries;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var ColumnPoint = SeriesRegistry.seriesTypes.column.prototype.pointClass;\n        var isNumber = U.isNumber;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var FlagsPoint = /** @class */ (function (_super) {\n            __extends(FlagsPoint, _super);\n            function FlagsPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.options = void 0;\n                _this.series = void 0;\n                _this.ttBelow = false;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            FlagsPoint.prototype.isValid = function () {\n                // #9233 - Prevent from treating flags as null points (even if\n                // they have no y values defined).\n                return isNumber(this.y) || typeof this.y === 'undefined';\n            };\n            /**\n             * @private\n             */\n            FlagsPoint.prototype.hasNewShapeType = function () {\n                var shape = this.options.shape || this.series.options.shape;\n                return this.graphic && shape && shape !== this.graphic.symbolKey;\n            };\n            return FlagsPoint;\n        }(ColumnPoint));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsPoint;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * Flags are used to mark events in stock charts. They can be added on the\n         * timeline, or attached to a specific series.\n         *\n         * @sample stock/demo/flags-general/\n         *         Flags on a line series\n         *\n         * @extends      plotOptions.column\n         * @excluding    animation, borderColor, borderRadius, borderWidth,\n         *               colorByPoint, cropThreshold, dataGrouping, pointPadding,\n         *               pointWidth, turboThreshold\n         * @product      highstock\n         * @optionparent plotOptions.flags\n         */\n        var FlagsSeriesDefaults = {\n            /**\n             * In case the flag is placed on a series, on what point key to place\n             * it. Line and columns have one key, `y`. In range or OHLC-type series,\n             * however, the flag can optionally be placed on the `open`, `high`,\n             * `low` or `close` key.\n             *\n             * @sample {highstock} stock/plotoptions/flags-onkey/\n             *         Range series, flag on high\n             *\n             * @type       {string}\n             * @default    y\n             * @since      4.2.2\n             * @product    highstock\n             * @validvalue [\"y\", \"open\", \"high\", \"low\", \"close\"]\n             * @apioption  plotOptions.flags.onKey\n             */\n            /**\n             * The id of the series that the flags should be drawn on. If no id\n             * is given, the flags are drawn on the x axis.\n             *\n             * @sample {highstock} stock/plotoptions/flags/\n             *         Flags on series and on x axis\n             *\n             * @type      {string}\n             * @product   highstock\n             * @apioption plotOptions.flags.onSeries\n             */\n            pointRange: 0,\n            /**\n             * Whether the flags are allowed to overlap sideways. If `false`, the\n             * flags are moved sideways using an algorithm that seeks to place every\n             * flag as close as possible to its original position.\n             *\n             * @sample {highstock} stock/plotoptions/flags-allowoverlapx\n             *         Allow sideways overlap\n             *\n             * @since 6.0.4\n             */\n            allowOverlapX: false,\n            /**\n             * The shape of the marker. Can be one of \"flag\", \"circlepin\",\n             * \"squarepin\", or an image of the format `url(/path-to-image.jpg)`.\n             * Individual shapes can also be set for each point.\n             *\n             * @sample {highstock} stock/plotoptions/flags/\n             *         Different shapes\n             *\n             * @type    {Highcharts.FlagsShapeValue}\n             * @product highstock\n             */\n            shape: 'flag',\n            /**\n             * When multiple flags in the same series fall on the same value, this\n             * number determines the vertical offset between them.\n             *\n             * @sample {highstock} stock/plotoptions/flags-stackdistance/\n             *         A greater stack distance\n             *\n             * @product highstock\n             */\n            stackDistance: 12,\n            /**\n             * Text alignment for the text inside the flag.\n             *\n             * @since      5.0.0\n             * @product    highstock\n             * @validvalue [\"left\", \"center\", \"right\"]\n             */\n            textAlign: 'center',\n            /**\n             * Specific tooltip options for flag series. Flag series tooltips are\n             * different from most other types in that a flag doesn't have a data\n             * value, so the tooltip rather displays the `text` option for each\n             * point.\n             *\n             * @extends   plotOptions.series.tooltip\n             * @excluding changeDecimals, valueDecimals, valuePrefix, valueSuffix\n             * @product   highstock\n             */\n            tooltip: {\n                pointFormat: '{point.text}'\n            },\n            /**\n             * @type {number|null}\n             */\n            threshold: null,\n            /**\n             * The text to display on each flag. This can be defined on series\n             * level, or individually for each point. Defaults to `\"A\"`.\n             *\n             * @type      {string}\n             * @default   A\n             * @product   highstock\n             * @apioption plotOptions.flags.title\n             */\n            /**\n             * The y position of the top left corner of the flag relative to either\n             * the series (if onSeries is defined), or the x axis. Defaults to\n             * `-30`.\n             *\n             * @product highstock\n             */\n            y: -30,\n            /**\n             * Whether to use HTML to render the flag texts. Using HTML allows for\n             * advanced formatting, images and reliable bi-directional text\n             * rendering. Note that exported images won't respect the HTML, and that\n             * HTML won't respect Z-index settings.\n             *\n             * @type      {boolean}\n             * @default   false\n             * @since     1.3\n             * @product   highstock\n             * @apioption plotOptions.flags.useHTML\n             */\n            /**\n             * Fixed width of the flag's shape. By default, width is autocalculated\n             * according to the flag's title.\n             *\n             * @sample {highstock} stock/demo/flags-shapes/\n             *         Flags with fixed width\n             *\n             * @type      {number}\n             * @product   highstock\n             * @apioption plotOptions.flags.width\n             */\n            /**\n             * Fixed height of the flag's shape. By default, height is\n             * autocalculated according to the flag's title.\n             *\n             * @type      {number}\n             * @product   highstock\n             * @apioption plotOptions.flags.height\n             */\n            /**\n             * The fill color for the flags.\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product highstock\n             */\n            fillColor: \"#ffffff\" /* Palette.backgroundColor */,\n            /**\n             * The color of the line/border of the flag.\n             *\n             * In styled mode, the stroke is set in the\n             * `.highcharts-flag-series.highcharts-point` rule.\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @default   #000000\n             * @product   highstock\n             * @apioption plotOptions.flags.lineColor\n             */\n            /**\n             * The pixel width of the flag's line/border.\n             *\n             * @product highstock\n             */\n            lineWidth: 1,\n            states: {\n                /**\n                 * @extends plotOptions.column.states.hover\n                 * @product highstock\n                 */\n                hover: {\n                    /**\n                     * The color of the line/border of the flag.\n                     *\n                     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @product highstock\n                     */\n                    lineColor: \"#000000\" /* Palette.neutralColor100 */,\n                    /**\n                     * The fill or background color of the flag.\n                     *\n                     * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     * @product highstock\n                     */\n                    fillColor: \"#ccd3ff\" /* Palette.highlightColor20 */\n                }\n            },\n            /**\n             * The text styles of the flag.\n             *\n             * In styled mode, the styles are set in the\n             * `.highcharts-flag-series .highcharts-point` rule.\n             *\n             * @type    {Highcharts.CSSObject}\n             * @default {\"fontSize\": \"11px\", \"fontWeight\": \"bold\"}\n             * @product highstock\n             */\n            style: {\n                /** @ignore-option */\n                fontSize: '0.7em',\n                /** @ignore-option */\n                fontWeight: 'bold'\n            }\n        };\n        /**\n         * A `flags` series. If the [type](#series.flags.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.flags\n         * @excluding animation, borderColor, borderRadius, borderWidth, colorByPoint,\n         *            connectNulls, cropThreshold, dashStyle, dataGrouping, dataParser,\n         *            dataURL, gapSize, gapUnit, linecap, lineWidth, marker,\n         *            pointPadding, pointWidth, step, turboThreshold, useOhlcData\n         * @product   highstock\n         * @apioption series.flags\n         */\n        /**\n         * An array of data points for the series. For the `flags` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.flags.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        title: \"A\",\n         *        text: \"First event\"\n         *    }, {\n         *        x: 1,\n         *        title: \"B\",\n         *        text: \"Second event\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<*>}\n         * @extends   series.line.data\n         * @excluding dataLabels, marker, name, y\n         * @product   highstock\n         * @apioption series.flags.data\n         */\n        /**\n         * The fill color of an individual flag. By default it inherits from\n         * the series color.\n         *\n         * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n         * @product   highstock\n         * @apioption series.flags.data.fillColor\n         */\n        /**\n         * The longer text to be shown in the flag's tooltip.\n         *\n         * @type      {string}\n         * @product   highstock\n         * @apioption series.flags.data.text\n         */\n        /**\n         * The short text to be shown on the flag.\n         *\n         * @type      {string}\n         * @product   highstock\n         * @apioption series.flags.data.title\n         */\n        ''; // keeps doclets above in transpiled file\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSymbols.js', [_modules['Core/Renderer/RendererRegistry.js']], function (RendererRegistry) {\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var FlagsSymbols;\n        (function (FlagsSymbols) {\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var modifiedMembers = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(SVGRendererClass) {\n                if (modifiedMembers.indexOf(SVGRendererClass) === -1) {\n                    modifiedMembers.push(SVGRendererClass);\n                    var symbols = SVGRendererClass.prototype.symbols;\n                    symbols.flag = flag;\n                    createPinSymbol(symbols, 'circle');\n                    createPinSymbol(symbols, 'square');\n                }\n                var RendererClass = RendererRegistry.getRendererType();\n                // The symbol callbacks are generated on the SVGRenderer object in all\n                // browsers.\n                if (modifiedMembers.indexOf(RendererClass)) {\n                    modifiedMembers.push(RendererClass);\n                }\n            }\n            FlagsSymbols.compose = compose;\n            /**\n             * Create the flag icon with anchor.\n             * @private\n             */\n            function flag(x, y, w, h, options) {\n                var anchorX = (options && options.anchorX) || x, anchorY = (options && options.anchorY) || y;\n                // To do: unwanted any cast because symbols.circle has wrong type, it\n                // actually returns an SVGPathArray\n                var path = this.circle(anchorX - 1, anchorY - 1, 2, 2);\n                path.push(['M', anchorX, anchorY], ['L', x, y + h], ['L', x, y], ['L', x + w, y], ['L', x + w, y + h], ['L', x, y + h], ['Z']);\n                return path;\n            }\n            /**\n             * Create the circlepin and squarepin icons with anchor.\n             * @private\n             */\n            function createPinSymbol(symbols, shape) {\n                symbols[(shape + 'pin')] = function (x, y, w, h, options) {\n                    var anchorX = options && options.anchorX, anchorY = options && options.anchorY;\n                    var path;\n                    // For single-letter flags, make sure circular flags are not taller\n                    // than their width\n                    if (shape === 'circle' && h > w) {\n                        x -= Math.round((h - w) / 2);\n                        w = h;\n                    }\n                    path = (symbols[shape])(x, y, w, h);\n                    if (anchorX && anchorY) {\n                        /**\n                         * If the label is below the anchor, draw the connecting line\n                         * from the top edge of the label, otherwise start drawing from\n                         * the bottom edge\n                         */\n                        var labelX = anchorX;\n                        if (shape === 'circle') {\n                            labelX = x + w / 2;\n                        }\n                        else {\n                            var startSeg = path[0];\n                            var endSeg = path[1];\n                            if (startSeg[0] === 'M' && endSeg[0] === 'L') {\n                                labelX = (startSeg[1] + endSeg[1]) / 2;\n                            }\n                        }\n                        var labelY = (y > anchorY) ? y : y + h;\n                        path.push([\n                            'M',\n                            labelX,\n                            labelY\n                        ], [\n                            'L',\n                            anchorX,\n                            anchorY\n                        ]);\n                        path = path.concat(symbols.circle(anchorX - 1, anchorY - 1, 2, 2));\n                    }\n                    return path;\n                };\n            }\n        })(FlagsSymbols || (FlagsSymbols = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return FlagsSymbols;\n    });\n    _registerModule(_modules, 'Series/OnSeriesComposition.js', [_modules['Series/Column/ColumnSeries.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (ColumnSeries, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var columnProto = ColumnSeries.prototype;\n        var seriesProto = Series.prototype;\n        var defined = U.defined, stableSort = U.stableSort;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var OnSeriesComposition;\n        (function (OnSeriesComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Properties\n             *\n             * */\n            var composedMembers = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (U.pushUnique(composedMembers, SeriesClass)) {\n                    var seriesProto_1 = SeriesClass.prototype;\n                    seriesProto_1.getPlotBox = getPlotBox;\n                    seriesProto_1.translate = translate;\n                }\n                return SeriesClass;\n            }\n            OnSeriesComposition.compose = compose;\n            /**\n             * Override getPlotBox. If the onSeries option is valid, return the plot box\n             * of the onSeries, otherwise proceed as usual.\n             *\n             * @private\n             */\n            function getPlotBox(name) {\n                return seriesProto.getPlotBox.call((this.options.onSeries &&\n                    this.chart.get(this.options.onSeries)) || this, name);\n            }\n            OnSeriesComposition.getPlotBox = getPlotBox;\n            /**\n             * Extend the translate method by placing the point on the related series\n             *\n             * @private\n             */\n            function translate() {\n                var _a, _b;\n                columnProto.translate.apply(this);\n                var series = this, options = series.options, chart = series.chart, points = series.points, optionsOnSeries = options.onSeries, onSeries = (optionsOnSeries &&\n                    chart.get(optionsOnSeries)), step = onSeries && onSeries.options.step, onData = (onSeries && onSeries.points), inverted = chart.inverted, xAxis = series.xAxis, yAxis = series.yAxis;\n                var cursor = points.length - 1, point, lastPoint, onKey = options.onKey || 'y', i = onData && onData.length, xOffset = 0, leftPoint, lastX, rightPoint, currentDataGrouping, distanceRatio;\n                // relate to a master series\n                if (onSeries && onSeries.visible && i) {\n                    xOffset = (onSeries.pointXOffset || 0) + (onSeries.barW || 0) / 2;\n                    currentDataGrouping = onSeries.currentDataGrouping;\n                    lastX = (onData[i - 1].x +\n                        (currentDataGrouping ? currentDataGrouping.totalRange : 0)); // #2374\n                    // sort the data points\n                    stableSort(points, function (a, b) { return (a.x - b.x); });\n                    onKey = 'plot' + onKey[0].toUpperCase() + onKey.substr(1);\n                    var _loop_1 = function () {\n                        leftPoint = onData[i];\n                        point = points[cursor];\n                        point.y = leftPoint.y;\n                        if (leftPoint.x <= point.x &&\n                            typeof leftPoint[onKey] !== 'undefined') {\n                            if (point.x <= lastX) { // #803\n                                point.plotY = leftPoint[onKey];\n                                // interpolate between points, #666\n                                if (leftPoint.x < point.x &&\n                                    !step) {\n                                    rightPoint = onData[i + 1];\n                                    if (rightPoint &&\n                                        typeof rightPoint[onKey] !== 'undefined') {\n                                        // If the series is spline, calculate Y of the\n                                        // point on the bezier line. #19264\n                                        if (defined(point.plotX) &&\n                                            onSeries.is('spline')) {\n                                            leftPoint = leftPoint;\n                                            rightPoint = rightPoint;\n                                            var p0_1 = [\n                                                leftPoint.plotX || 0,\n                                                leftPoint.plotY || 0\n                                            ], p3_1 = [\n                                                rightPoint.plotX || 0,\n                                                rightPoint.plotY || 0\n                                            ], p1_1 = (((_a = leftPoint.controlPoints) === null || _a === void 0 ? void 0 : _a.high) ||\n                                                p0_1), p2_1 = (((_b = rightPoint.controlPoints) === null || _b === void 0 ? void 0 : _b.low) ||\n                                                p3_1), pixelThreshold = 0.25, maxIterations = 100, calculateCoord = function (t, key) { return (\n                                            // The parametric formula for the\n                                            // cubic Bezier curve.\n                                            Math.pow(1 - t, 3) * p0_1[key] +\n                                                3 * (1 - t) * (1 - t) * t *\n                                                    p1_1[key] + 3 * (1 - t) * t * t *\n                                                p2_1[key] + t * t * t * p3_1[key]); };\n                                            var tMin = 0, tMax = 1, t = void 0;\n                                            // Find `t` of the parametric function of\n                                            // the bezier curve for the given `plotX`.\n                                            for (var i_1 = 0; i_1 < maxIterations; i_1++) {\n                                                var tMid = (tMin + tMax) / 2;\n                                                var xMid = calculateCoord(tMid, 0);\n                                                if (xMid === null) {\n                                                    break;\n                                                }\n                                                if (Math.abs(xMid - point.plotX) < pixelThreshold) {\n                                                    t = tMid;\n                                                    break;\n                                                }\n                                                if (xMid < point.plotX) {\n                                                    tMin = tMid;\n                                                }\n                                                else {\n                                                    tMax = tMid;\n                                                }\n                                            }\n                                            if (defined(t)) {\n                                                point.plotY =\n                                                    calculateCoord(t, 1);\n                                                point.y =\n                                                    yAxis.toValue(point.plotY, true);\n                                            }\n                                        }\n                                        else {\n                                            // the distance ratio, between 0 and 1\n                                            distanceRatio =\n                                                (point.x - leftPoint.x) /\n                                                    (rightPoint.x - leftPoint.x);\n                                            point.plotY +=\n                                                distanceRatio *\n                                                    // the plotY distance\n                                                    (rightPoint[onKey] - leftPoint[onKey]);\n                                            point.y +=\n                                                distanceRatio *\n                                                    (rightPoint.y - leftPoint.y);\n                                        }\n                                    }\n                                }\n                            }\n                            cursor--;\n                            i++; // check again for points in the same x position\n                            if (cursor < 0) {\n                                return \"break\";\n                            }\n                        }\n                    };\n                    while (i-- && points[cursor]) {\n                        var state_1 = _loop_1();\n                        if (state_1 === \"break\")\n                            break;\n                    }\n                }\n                // Add plotY position and handle stacking\n                points.forEach(function (point, i) {\n                    var stackIndex;\n                    point.plotX += xOffset; // #2049\n                    // Undefined plotY means the point is either on axis, outside series\n                    // range or hidden series. If the series is outside the range of the\n                    // x axis it should fall through with an undefined plotY, but then\n                    // we must remove the shapeArgs (#847). For inverted charts, we need\n                    // to calculate position anyway, because series.invertGroups is not\n                    // defined\n                    if (typeof point.plotY === 'undefined' || inverted) {\n                        if (point.plotX >= 0 &&\n                            point.plotX <= xAxis.len) {\n                            // We're inside xAxis range\n                            if (inverted) {\n                                point.plotY = xAxis.translate(point.x, 0, 1, 0, 1);\n                                point.plotX = defined(point.y) ?\n                                    yAxis.translate(point.y, 0, 0, 0, 1) :\n                                    0;\n                            }\n                            else {\n                                point.plotY = (xAxis.opposite ? 0 : series.yAxis.len) +\n                                    xAxis.offset; // For the windbarb demo\n                            }\n                        }\n                        else {\n                            point.shapeArgs = {}; // 847\n                        }\n                    }\n                    // if multiple flags appear at the same x, order them into a stack\n                    lastPoint = points[i - 1];\n                    if (lastPoint && lastPoint.plotX === point.plotX) {\n                        if (typeof lastPoint.stackIndex === 'undefined') {\n                            lastPoint.stackIndex = 0;\n                        }\n                        stackIndex = lastPoint.stackIndex + 1;\n                    }\n                    point.stackIndex = stackIndex; // #3639\n                });\n                this.onSeries = onSeries;\n            }\n            OnSeriesComposition.translate = translate;\n        })(OnSeriesComposition || (OnSeriesComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OnSeriesComposition;\n    });\n    _registerModule(_modules, 'Series/Flags/FlagsSeries.js', [_modules['Series/Flags/FlagsPoint.js'], _modules['Series/Flags/FlagsSeriesDefaults.js'], _modules['Series/Flags/FlagsSymbols.js'], _modules['Core/Globals.js'], _modules['Series/OnSeriesComposition.js'], _modules['Core/Renderer/RendererUtilities.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Renderer/SVG/SVGElement.js'], _modules['Core/Utilities.js']], function (FlagsPoint, FlagsSeriesDefaults, FlagsSymbols, H, OnSeriesComposition, R, SeriesRegistry, SVGElement, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var noop = H.noop;\n        var distribute = R.distribute;\n        var Series = SeriesRegistry.series, ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var addEvent = U.addEvent, defined = U.defined, extend = U.extend, merge = U.merge, objectEach = U.objectEach, wrap = U.wrap;\n        /* *\n         *\n         *  Classes\n         *\n         * */\n        /**\n         * The Flags series.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.flags\n         *\n         * @augments Highcharts.Series\n         */\n        var FlagsSeries = /** @class */ (function (_super) {\n            __extends(FlagsSeries, _super);\n            function FlagsSeries() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Disable animation, but keep clipping (#8546).\n             * @private\n             */\n            FlagsSeries.prototype.animate = function (init) {\n                if (init) {\n                    this.setClip();\n                }\n            };\n            /**\n             * Draw the markers.\n             * @private\n             */\n            FlagsSeries.prototype.drawPoints = function () {\n                var series = this, points = series.points, chart = series.chart, renderer = chart.renderer, inverted = chart.inverted, options = series.options, optionsY = options.y, yAxis = series.yAxis, boxesMap = {}, boxes = [];\n                var plotX, plotY, shape, i, point, graphic, stackIndex, anchorY, attribs, outsideRight, centered;\n                i = points.length;\n                while (i--) {\n                    point = points[i];\n                    outsideRight =\n                        (inverted ? point.plotY : point.plotX) >\n                            series.xAxis.len;\n                    plotX = point.plotX;\n                    stackIndex = point.stackIndex;\n                    shape = point.options.shape || options.shape;\n                    plotY = point.plotY;\n                    if (typeof plotY !== 'undefined') {\n                        plotY = point.plotY + optionsY -\n                            (typeof stackIndex !== 'undefined' &&\n                                (stackIndex * options.stackDistance));\n                    }\n                    // skip connectors for higher level stacked points\n                    point.anchorX = stackIndex ? void 0 : point.plotX;\n                    anchorY = stackIndex ? void 0 : point.plotY;\n                    centered = shape !== 'flag';\n                    graphic = point.graphic;\n                    // Only draw the point if y is defined and the flag is within\n                    // the visible area\n                    if (typeof plotY !== 'undefined' &&\n                        plotX >= 0 &&\n                        !outsideRight) {\n                        // #15384\n                        if (graphic && point.hasNewShapeType()) {\n                            graphic = graphic.destroy();\n                        }\n                        // Create the flag\n                        if (!graphic) {\n                            graphic = point.graphic = renderer.label('', null, null, shape, null, null, options.useHTML)\n                                .addClass('highcharts-point')\n                                .add(series.markerGroup);\n                            // Add reference to the point for tracker (#6303)\n                            if (point.graphic.div) {\n                                point.graphic.div.point = point;\n                            }\n                            graphic.isNew = true;\n                        }\n                        graphic.attr({\n                            align: centered ? 'center' : 'left',\n                            width: options.width,\n                            height: options.height,\n                            'text-align': options.textAlign\n                        });\n                        if (!chart.styledMode) {\n                            graphic\n                                .attr(series.pointAttribs(point))\n                                .css(merge(options.style, point.style))\n                                .shadow(options.shadow);\n                        }\n                        if (plotX > 0) { // #3119\n                            plotX -= graphic.strokeWidth() % 2; // #4285\n                        }\n                        // Plant the flag\n                        attribs = {\n                            y: plotY,\n                            anchorY: anchorY\n                        };\n                        if (options.allowOverlapX) {\n                            attribs.x = plotX;\n                            attribs.anchorX = point.anchorX;\n                        }\n                        graphic.attr({\n                            text: point.options.title || options.title || 'A'\n                        })[graphic.isNew ? 'attr' : 'animate'](attribs);\n                        // Rig for the distribute function\n                        if (!options.allowOverlapX) {\n                            if (!boxesMap[point.plotX]) {\n                                boxesMap[point.plotX] = {\n                                    align: centered ? 0.5 : 0,\n                                    size: graphic.width || 0,\n                                    target: plotX,\n                                    anchorX: plotX\n                                };\n                            }\n                            else {\n                                boxesMap[point.plotX].size = Math.max(boxesMap[point.plotX].size, graphic.width || 0);\n                            }\n                        }\n                        // Set the tooltip anchor position\n                        point.tooltipPos = [\n                            plotX,\n                            plotY + yAxis.pos - chart.plotTop\n                        ]; // #6327\n                    }\n                    else if (graphic) {\n                        point.graphic = graphic.destroy();\n                    }\n                }\n                // Handle X-dimension overlapping\n                if (!options.allowOverlapX) {\n                    var maxDistance_1 = 100;\n                    objectEach(boxesMap, function (box) {\n                        box.plotX = box.anchorX;\n                        boxes.push(box);\n                        maxDistance_1 = Math.max(box.size, maxDistance_1);\n                    });\n                    // If necessary (for overlapping or long labels)  distribute it\n                    // depending on the label width or a hardcoded value, #16041.\n                    distribute(boxes, inverted ? yAxis.len : this.xAxis.len, maxDistance_1);\n                    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n                        var point_1 = points_1[_i];\n                        var plotX_1 = point_1.plotX, graphic_1 = point_1.graphic, box = graphic_1 && boxesMap[plotX_1];\n                        if (box && graphic_1) {\n                            // Hide flag when its box position is not specified\n                            // (#8573, #9299)\n                            if (!defined(box.pos)) {\n                                graphic_1.hide().isNew = true;\n                            }\n                            else {\n                                graphic_1[graphic_1.isNew ? 'attr' : 'animate']({\n                                    x: box.pos + (box.align || 0) * box.size,\n                                    anchorX: point_1.anchorX\n                                }).show().isNew = false;\n                            }\n                        }\n                    }\n                }\n                // Can be a mix of SVG and HTML and we need events for both (#6303)\n                if (options.useHTML && series.markerGroup) {\n                    wrap(series.markerGroup, 'on', function (proceed) {\n                        return SVGElement.prototype.on.apply(\n                        // for HTML\n                        // eslint-disable-next-line no-invalid-this\n                        proceed.apply(this, [].slice.call(arguments, 1)), \n                        // and for SVG\n                        [].slice.call(arguments, 1));\n                    });\n                }\n            };\n            /**\n             * Extend the column trackers with listeners to expand and contract\n             * stacks.\n             * @private\n             */\n            FlagsSeries.prototype.drawTracker = function () {\n                var series = this, points = series.points;\n                _super.prototype.drawTracker.call(this);\n                var _loop_1 = function (point) {\n                    var graphic = point.graphic;\n                    if (graphic) {\n                        if (point.unbindMouseOver) {\n                            point.unbindMouseOver();\n                        }\n                        point.unbindMouseOver = addEvent(graphic.element, 'mouseover', function () {\n                            // Raise this point\n                            if (point.stackIndex > 0 &&\n                                !point.raised) {\n                                point._y = graphic.y;\n                                graphic.attr({\n                                    y: point._y - 8\n                                });\n                                point.raised = true;\n                            }\n                            // Revert other raised points\n                            for (var _i = 0, points_3 = points; _i < points_3.length; _i++) {\n                                var otherPoint = points_3[_i];\n                                if (otherPoint !== point &&\n                                    otherPoint.raised &&\n                                    otherPoint.graphic) {\n                                    otherPoint.graphic.attr({\n                                        y: otherPoint._y\n                                    });\n                                    otherPoint.raised = false;\n                                }\n                            }\n                        });\n                    }\n                };\n                /* *\n                * Bring each stacked flag up on mouse over, this allows readability\n                * of vertically stacked elements as well as tight points on the x\n                * axis. #1924.\n                */\n                for (var _i = 0, points_2 = points; _i < points_2.length; _i++) {\n                    var point = points_2[_i];\n                    _loop_1(point);\n                }\n            };\n            /**\n             * Get presentational attributes\n             * @private\n             */\n            FlagsSeries.prototype.pointAttribs = function (point, state) {\n                var options = this.options, color = (point && point.color) || this.color;\n                var lineColor = options.lineColor, lineWidth = (point && point.lineWidth), fill = (point && point.fillColor) || options.fillColor;\n                if (state) {\n                    fill = options.states[state].fillColor;\n                    lineColor = options.states[state].lineColor;\n                    lineWidth = options.states[state].lineWidth;\n                }\n                return {\n                    fill: fill || color,\n                    stroke: lineColor || color,\n                    'stroke-width': lineWidth || options.lineWidth || 0\n                };\n            };\n            /**\n             * @private\n             */\n            FlagsSeries.prototype.setClip = function () {\n                Series.prototype.setClip.apply(this, arguments);\n                if (this.options.clip !== false &&\n                    this.sharedClipKey &&\n                    this.markerGroup) {\n                    this.markerGroup.clip(this.chart.sharedClips[this.sharedClipKey]);\n                }\n            };\n            FlagsSeries.compose = FlagsSymbols.compose;\n            FlagsSeries.defaultOptions = merge(ColumnSeries.defaultOptions, FlagsSeriesDefaults);\n            return FlagsSeries;\n        }(ColumnSeries));\n        OnSeriesComposition.compose(FlagsSeries);\n        extend(FlagsSeries.prototype, {\n            allowDG: false,\n            forceCrop: true,\n            invertible: false,\n            noSharedTooltip: true,\n            pointClass: FlagsPoint,\n            sorted: false,\n            takeOrdinalPosition: false,\n            trackerGroups: ['markerGroup'],\n            buildKDTree: noop,\n            /**\n             * Inherit the initialization from base Series.\n             * @private\n             */\n            init: Series.prototype.init\n        });\n        SeriesRegistry.registerSeriesType('flags', FlagsSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * @typedef {\"circlepin\"|\"flag\"|\"squarepin\"} Highcharts.FlagsShapeValue\n         */\n        ''; // detach doclets above\n\n        return FlagsSeries;\n    });\n    _registerModule(_modules, 'Core/Chart/StockChart.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Templating.js'], _modules['Core/Defaults.js'], _modules['Stock/Navigator/NavigatorDefaults.js'], _modules['Stock/RangeSelector/RangeSelectorDefaults.js'], _modules['Stock/Scrollbar/ScrollbarDefaults.js'], _modules['Core/Utilities.js']], function (Chart, F, D, NavigatorDefaults, RangeSelectorDefaults, ScrollbarDefaults, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var format = F.format;\n        var getOptions = D.getOptions;\n        var addEvent = U.addEvent, clamp = U.clamp, defined = U.defined, extend = U.extend, find = U.find, isNumber = U.isNumber, isString = U.isString, merge = U.merge, pick = U.pick, pushUnique = U.pushUnique, splat = U.splat;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get stock-specific default axis options.\n         *\n         * @private\n         * @function getDefaultAxisOptions\n         */\n        function getDefaultAxisOptions(type, options) {\n            if (type === 'xAxis') {\n                return {\n                    minPadding: 0,\n                    maxPadding: 0,\n                    overscroll: 0,\n                    ordinal: true,\n                    title: {\n                        text: null\n                    },\n                    labels: {\n                        overflow: 'justify'\n                    },\n                    showLastLabel: true\n                };\n            }\n            if (type === 'yAxis') {\n                return {\n                    labels: {\n                        y: -2\n                    },\n                    opposite: pick(options.opposite, true),\n                    showLastLabel: !!(\n                    // #6104, show last label by default for category axes\n                    options.categories ||\n                        options.type === 'category'),\n                    title: {\n                        text: null\n                    }\n                };\n            }\n            return {};\n        }\n        /**\n         * Get stock-specific forced axis options.\n         *\n         * @private\n         * @function getForcedAxisOptions\n         */\n        function getForcedAxisOptions(type, chartOptions) {\n            if (type === 'xAxis') {\n                // Always disable startOnTick:true on the main axis when the navigator\n                // is enabled (#1090)\n                var navigatorEnabled = pick(chartOptions.navigator && chartOptions.navigator.enabled, NavigatorDefaults.enabled, true);\n                var axisOptions = {\n                    type: 'datetime',\n                    categories: void 0\n                };\n                if (navigatorEnabled) {\n                    axisOptions.startOnTick = false;\n                    axisOptions.endOnTick = false;\n                }\n                return axisOptions;\n            }\n            return {};\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Stock-optimized chart. Use {@link Highcharts.Chart|Chart} for common charts.\n         *\n         * @requires modules/stock\n         *\n         * @class\n         * @name Highcharts.StockChart\n         * @extends Highcharts.Chart\n         */\n        var StockChart = /** @class */ (function (_super) {\n            __extends(StockChart, _super);\n            function StockChart() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initializes the chart. The constructor's arguments are passed on\n             * directly.\n             *\n             * @function Highcharts.StockChart#init\n             *\n             * @param {Highcharts.Options} userOptions\n             *        Custom options.\n             *\n             * @param {Function} [callback]\n             *        Function to run when the chart has loaded and and all external\n             *        images are loaded.\n             *\n             *\n             * @emits Highcharts.StockChart#event:init\n             * @emits Highcharts.StockChart#event:afterInit\n             */\n            StockChart.prototype.init = function (userOptions, callback) {\n                var defaultOptions = getOptions(), xAxisOptions = userOptions.xAxis, yAxisOptions = userOptions.yAxis, \n                // Always disable startOnTick:true on the main axis when the\n                // navigator is enabled (#1090)\n                navigatorEnabled = pick(userOptions.navigator && userOptions.navigator.enabled, NavigatorDefaults.enabled, true);\n                // Avoid doing these twice\n                userOptions.xAxis = userOptions.yAxis = void 0;\n                var options = merge({\n                    chart: {\n                        panning: {\n                            enabled: true,\n                            type: 'x'\n                        },\n                        zooming: {\n                            pinchType: 'x',\n                            mouseWheel: {\n                                type: 'x'\n                            }\n                        }\n                    },\n                    navigator: {\n                        enabled: navigatorEnabled\n                    },\n                    scrollbar: {\n                        // #4988 - check if setOptions was called\n                        enabled: pick(ScrollbarDefaults.enabled, true)\n                    },\n                    rangeSelector: {\n                        // #4988 - check if setOptions was called\n                        enabled: pick(RangeSelectorDefaults.rangeSelector.enabled, true)\n                    },\n                    title: {\n                        text: null\n                    },\n                    tooltip: {\n                        split: pick(defaultOptions.tooltip && defaultOptions.tooltip.split, true),\n                        crosshairs: true\n                    },\n                    legend: {\n                        enabled: false\n                    }\n                }, userOptions, // user's options\n                {\n                    isStock: true // internal flag\n                });\n                userOptions.xAxis = xAxisOptions;\n                userOptions.yAxis = yAxisOptions;\n                // apply X axis options to both single and multi y axes\n                options.xAxis = splat(userOptions.xAxis || {}).map(function (xAxisOptions, i) { return merge(getDefaultAxisOptions('xAxis', xAxisOptions), defaultOptions.xAxis, // #3802\n                // #7690\n                // @todo remove, default axis options are not arrays\n                defaultOptions.xAxis && defaultOptions.xAxis[i], xAxisOptions, // user options\n                getForcedAxisOptions('xAxis', userOptions)); });\n                // apply Y axis options to both single and multi y axes\n                options.yAxis = splat(userOptions.yAxis || {}).map(function (yAxisOptions, i) { return merge(getDefaultAxisOptions('yAxis', yAxisOptions), defaultOptions.yAxis, // #3802\n                // #7690\n                // @todo remove, default axis options are not arrays\n                defaultOptions.yAxis && defaultOptions.yAxis[i], yAxisOptions // user options\n                ); });\n                _super.prototype.init.call(this, options, callback);\n            };\n            /**\n             * Factory for creating different axis types.\n             * Extended to add stock defaults.\n             *\n             * @private\n             * @function Highcharts.StockChart#createAxis\n             * @param {string} coll\n             * An axis type.\n             * @param {Chart.CreateAxisOptionsObject} options\n             * The axis creation options.\n             */\n            StockChart.prototype.createAxis = function (coll, options) {\n                options.axis = merge(getDefaultAxisOptions(coll, options.axis), options.axis, getForcedAxisOptions(coll, this.userOptions));\n                return _super.prototype.createAxis.call(this, coll, options);\n            };\n            return StockChart;\n        }(Chart));\n        addEvent(Chart, 'update', function (e) {\n            var chart = this, options = e.options;\n            // Use case: enabling scrollbar from a disabled state.\n            // Scrollbar needs to be initialized from a controller, Navigator in this\n            // case (#6615)\n            if ('scrollbar' in options && chart.navigator) {\n                merge(true, chart.options.scrollbar, options.scrollbar);\n                chart.navigator.update({});\n                delete options.scrollbar;\n            }\n        });\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        (function (StockChart) {\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedMembers = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /** @private */\n            function compose(AxisClass, SeriesClass, SVGRendererClass) {\n                if (pushUnique(composedMembers, AxisClass)) {\n                    addEvent(AxisClass, 'afterDrawCrosshair', onAxisAfterDrawCrosshair);\n                    addEvent(AxisClass, 'afterHideCrosshair', onAxisAfterHideCrosshair);\n                    addEvent(AxisClass, 'autoLabelAlign', onAxisAutoLabelAlign);\n                    addEvent(AxisClass, 'destroy', onAxisDestroy);\n                    addEvent(AxisClass, 'getPlotLinePath', onAxisGetPlotLinePath);\n                }\n                if (pushUnique(composedMembers, SeriesClass)) {\n                    SeriesClass.prototype.forceCropping = seriesForceCropping;\n                    addEvent(SeriesClass, 'setOptions', onSeriesSetOptions);\n                }\n                if (pushUnique(composedMembers, SVGRendererClass)) {\n                    SVGRendererClass.prototype.crispPolyLine = svgRendererCrispPolyLine;\n                }\n            }\n            StockChart.compose = compose;\n            /**\n             * Extend crosshairs to also draw the label.\n             * @private\n             */\n            function onAxisAfterDrawCrosshair(event) {\n                var axis = this;\n                // Check if the label has to be drawn\n                if (!axis.crosshair ||\n                    !axis.crosshair.label ||\n                    !axis.crosshair.label.enabled ||\n                    !axis.cross ||\n                    !isNumber(axis.min) ||\n                    !isNumber(axis.max)) {\n                    return;\n                }\n                var chart = axis.chart, log = axis.logarithmic, options = axis.crosshair.label, // the label's options\n                horiz = axis.horiz, // axis orientation\n                opposite = axis.opposite, // axis position\n                left = axis.left, // left position\n                top = axis.top, // top position\n                width = axis.width, tickInside = axis.options.tickPosition === 'inside', snap = axis.crosshair.snap !== false, e = event.e || (axis.cross && axis.cross.e), point = event.point;\n                var crossLabel = axis.crossLabel, // the svgElement\n                posx, posy, formatOption = options.format, formatFormat = '', limit, offset = 0, \n                // Use last available event (#5287)\n                min = axis.min, max = axis.max;\n                if (log) {\n                    min = log.lin2log(axis.min);\n                    max = log.lin2log(axis.max);\n                }\n                var align = (horiz ? 'center' : opposite ?\n                    (axis.labelAlign === 'right' ? 'right' : 'left') :\n                    (axis.labelAlign === 'left' ? 'left' : 'center'));\n                // If the label does not exist yet, create it.\n                if (!crossLabel) {\n                    crossLabel = axis.crossLabel = chart.renderer\n                        .label('', 0, void 0, options.shape || 'callout')\n                        .addClass('highcharts-crosshair-label highcharts-color-' + (point && point.series ?\n                        point.series.colorIndex :\n                        axis.series[0] && this.series[0].colorIndex))\n                        .attr({\n                        align: options.align || align,\n                        padding: pick(options.padding, 8),\n                        r: pick(options.borderRadius, 3),\n                        zIndex: 2\n                    })\n                        .add(axis.labelGroup);\n                    // Presentational\n                    if (!chart.styledMode) {\n                        crossLabel\n                            .attr({\n                            fill: options.backgroundColor ||\n                                ( // #14888\n                                point && point.series &&\n                                    point.series.color) ||\n                                \"#666666\" /* Palette.neutralColor60 */,\n                            stroke: options.borderColor || '',\n                            'stroke-width': options.borderWidth || 0\n                        })\n                            .css(extend({\n                            color: \"#ffffff\" /* Palette.backgroundColor */,\n                            fontWeight: 'normal',\n                            fontSize: '0.7em',\n                            textAlign: 'center'\n                        }, options.style || {}));\n                    }\n                }\n                if (horiz) {\n                    posx = snap ? (point.plotX || 0) + left : e.chartX;\n                    posy = top + (opposite ? 0 : axis.height);\n                }\n                else {\n                    posx = left + axis.offset + (opposite ? width : 0);\n                    posy = snap ? (point.plotY || 0) + top : e.chartY;\n                }\n                if (!formatOption && !options.formatter) {\n                    if (axis.dateTime) {\n                        formatFormat = '%b %d, %Y';\n                    }\n                    formatOption =\n                        '{value' + (formatFormat ? ':' + formatFormat : '') + '}';\n                }\n                // Show the label\n                var value = snap ?\n                    (axis.isXAxis ? point.x : point.y) :\n                    axis.toValue(horiz ? e.chartX : e.chartY);\n                // Crosshair should be rendered within Axis range (#7219) and the point\n                // of currentPriceIndicator should be inside the plot area (#14879).\n                var isInside = point && point.series ?\n                    point.series.isPointInside(point) :\n                    (isNumber(value) && value > min && value < max);\n                var text = '';\n                if (formatOption) {\n                    text = format(formatOption, { value: value }, chart);\n                }\n                else if (options.formatter && isNumber(value)) {\n                    text = options.formatter.call(axis, value);\n                }\n                crossLabel.attr({\n                    text: text,\n                    x: posx,\n                    y: posy,\n                    visibility: isInside ? 'inherit' : 'hidden'\n                });\n                var crossBox = crossLabel.getBBox();\n                // Now it is placed we can correct its position\n                if (isNumber(crossLabel.x) && !horiz && !opposite) {\n                    posx = crossLabel.x - (crossBox.width / 2);\n                }\n                if (isNumber(crossLabel.y)) {\n                    if (horiz) {\n                        if ((tickInside && !opposite) || (!tickInside && opposite)) {\n                            posy = crossLabel.y - crossBox.height;\n                        }\n                    }\n                    else {\n                        posy = crossLabel.y - (crossBox.height / 2);\n                    }\n                }\n                // Check the edges\n                if (horiz) {\n                    limit = {\n                        left: left - crossBox.x,\n                        right: left + axis.width - crossBox.x\n                    };\n                }\n                else {\n                    limit = {\n                        left: axis.labelAlign === 'left' ? left : 0,\n                        right: axis.labelAlign === 'right' ?\n                            left + axis.width :\n                            chart.chartWidth\n                    };\n                }\n                var translateX = crossLabel.translateX || 0;\n                // Left edge\n                if (translateX < limit.left) {\n                    offset = limit.left - translateX;\n                }\n                // Right edge\n                if (translateX + crossBox.width >= limit.right) {\n                    offset = -(translateX + crossBox.width - limit.right);\n                }\n                // Show the crosslabel\n                crossLabel.attr({\n                    x: posx + offset,\n                    y: posy,\n                    // First set x and y, then anchorX and anchorY, when box is actually\n                    // calculated, #5702\n                    anchorX: horiz ?\n                        posx :\n                        (axis.opposite ? 0 : chart.chartWidth),\n                    anchorY: horiz ?\n                        (axis.opposite ? chart.chartHeight : 0) :\n                        posy + crossBox.height / 2\n                });\n            }\n            /**\n             * Wrapper to hide the label.\n             * @private\n             */\n            function onAxisAfterHideCrosshair() {\n                var axis = this;\n                if (axis.crossLabel) {\n                    axis.crossLabel = axis.crossLabel.hide();\n                }\n            }\n            /**\n             * Override the automatic label alignment so that the first Y axis' labels\n             * are drawn on top of the grid line, and subsequent axes are drawn outside.\n             * @private\n             */\n            function onAxisAutoLabelAlign(e) {\n                var axis = this, chart = axis.chart, options = axis.options, panes = chart._labelPanes = chart._labelPanes || {}, labelOptions = options.labels;\n                if (chart.options.isStock && axis.coll === 'yAxis') {\n                    var key = options.top + ',' + options.height;\n                    // Do it only for the first Y axis of each pane\n                    if (!panes[key] && labelOptions.enabled) {\n                        if (labelOptions.distance === 15 && // default\n                            axis.side === 1) {\n                            labelOptions.distance = 0;\n                        }\n                        if (typeof labelOptions.align === 'undefined') {\n                            labelOptions.align = 'right';\n                        }\n                        panes[key] = axis;\n                        e.align = 'right';\n                        e.preventDefault();\n                    }\n                }\n            }\n            /**\n             * Clear axis from label panes. (#6071)\n             * @private\n             */\n            function onAxisDestroy() {\n                var axis = this, chart = axis.chart, key = (axis.options &&\n                    (axis.options.top + ',' + axis.options.height));\n                if (key && chart._labelPanes && chart._labelPanes[key] === axis) {\n                    delete chart._labelPanes[key];\n                }\n            }\n            /**\n             * Override getPlotLinePath to allow for multipane charts.\n             * @private\n             */\n            function onAxisGetPlotLinePath(e) {\n                var axis = this, series = (axis.isLinked && !axis.series && axis.linkedParent ?\n                    axis.linkedParent.series :\n                    axis.series), chart = axis.chart, renderer = chart.renderer, axisLeft = axis.left, axisTop = axis.top, result = [], translatedValue = e.translatedValue, value = e.value, force = e.force, \n                /**\n                 * Return the other axis based on either the axis option or on\n                 * related series.\n                 * @private\n                 */\n                getAxis = function (coll) {\n                    var otherColl = coll === 'xAxis' ? 'yAxis' : 'xAxis', opt = axis.options[otherColl];\n                    // Other axis indexed by number\n                    if (isNumber(opt)) {\n                        return [chart[otherColl][opt]];\n                    }\n                    // Other axis indexed by id (like navigator)\n                    if (isString(opt)) {\n                        return [chart.get(opt)];\n                    }\n                    // Auto detect based on existing series\n                    return series.map(function (s) { return s[otherColl]; });\n                };\n                var x1, y1, x2, y2, axes = [], // #3416 need a default array\n                axes2, uniqueAxes, transVal;\n                if ( // For stock chart, by default render paths across the panes\n                // except the case when `acrossPanes` is disabled by user (#6644)\n                (chart.options.isStock && e.acrossPanes !== false) &&\n                    // Ignore in case of colorAxis or zAxis. #3360, #3524, #6720\n                    axis.coll === 'xAxis' || axis.coll === 'yAxis') {\n                    e.preventDefault();\n                    // Get the related axes based on series\n                    axes = getAxis(axis.coll);\n                    // Get the related axes based options.*Axis setting #2810\n                    axes2 = (axis.isXAxis ? chart.yAxis : chart.xAxis);\n                    for (var _i = 0, axes2_1 = axes2; _i < axes2_1.length; _i++) {\n                        var A = axes2_1[_i];\n                        if (defined(A.options.id) ?\n                            A.options.id.indexOf('navigator') === -1 :\n                            true) {\n                            var a = (A.isXAxis ? 'yAxis' : 'xAxis'), rax = (defined(A.options[a]) ?\n                                chart[a][A.options[a]] :\n                                chart[a][0]);\n                            if (axis === rax) {\n                                axes.push(A);\n                            }\n                        }\n                    }\n                    // Remove duplicates in the axes array. If there are no axes in the\n                    // axes array, we are adding an axis without data, so we need to\n                    // populate this with grid lines (#2796).\n                    uniqueAxes = axes.length ?\n                        [] :\n                        [axis.isXAxis ? chart.yAxis[0] : chart.xAxis[0]]; // #3742\n                    var _loop_1 = function (axis2) {\n                        if (uniqueAxes.indexOf(axis2) === -1 &&\n                            // Do not draw on axis which overlap completely. #5424\n                            !find(uniqueAxes, function (unique) { return (unique.pos === axis2.pos &&\n                                unique.len === axis2.len); })) {\n                            uniqueAxes.push(axis2);\n                        }\n                    };\n                    for (var _a = 0, axes_1 = axes; _a < axes_1.length; _a++) {\n                        var axis2 = axes_1[_a];\n                        _loop_1(axis2);\n                    }\n                    transVal = pick(translatedValue, axis.translate(value || 0, void 0, void 0, e.old));\n                    if (isNumber(transVal)) {\n                        if (axis.horiz) {\n                            for (var _b = 0, uniqueAxes_1 = uniqueAxes; _b < uniqueAxes_1.length; _b++) {\n                                var axis2 = uniqueAxes_1[_b];\n                                var skip = void 0;\n                                y1 = axis2.pos;\n                                y2 = y1 + axis2.len;\n                                x1 = x2 = Math.round(transVal + axis.transB);\n                                // outside plot area\n                                if (force !== 'pass' &&\n                                    (x1 < axisLeft || x1 > axisLeft + axis.width)) {\n                                    if (force) {\n                                        x1 = x2 = clamp(x1, axisLeft, axisLeft + axis.width);\n                                    }\n                                    else {\n                                        skip = true;\n                                    }\n                                }\n                                if (!skip) {\n                                    result.push(['M', x1, y1], ['L', x2, y2]);\n                                }\n                            }\n                        }\n                        else {\n                            for (var _c = 0, uniqueAxes_2 = uniqueAxes; _c < uniqueAxes_2.length; _c++) {\n                                var axis2 = uniqueAxes_2[_c];\n                                var skip = void 0;\n                                x1 = axis2.pos;\n                                x2 = x1 + axis2.len;\n                                y1 = y2 = Math.round(axisTop + axis.height - transVal);\n                                // outside plot area\n                                if (force !== 'pass' &&\n                                    (y1 < axisTop || y1 > axisTop + axis.height)) {\n                                    if (force) {\n                                        y1 = y2 = clamp(y1, axisTop, axisTop + axis.height);\n                                    }\n                                    else {\n                                        skip = true;\n                                    }\n                                }\n                                if (!skip) {\n                                    result.push(['M', x1, y1], ['L', x2, y2]);\n                                }\n                            }\n                        }\n                    }\n                    e.path = result.length > 0 ?\n                        renderer.crispPolyLine(result, e.lineWidth || 1) :\n                        // #3557 getPlotLinePath in regular Highcharts also returns null\n                        void 0;\n                }\n            }\n            /**\n             * Handle som Stock-specific series defaults, override the plotOptions\n             * before series options are handled.\n             * @private\n             */\n            function onSeriesSetOptions(e) {\n                var series = this;\n                if (series.chart.options.isStock) {\n                    var overrides = void 0;\n                    if (series.is('column') || series.is('columnrange')) {\n                        overrides = {\n                            borderWidth: 0,\n                            shadow: false\n                        };\n                    }\n                    else if (!series.is('scatter') && !series.is('sma')) {\n                        overrides = {\n                            marker: {\n                                enabled: false,\n                                radius: 2\n                            }\n                        };\n                    }\n                    if (overrides) {\n                        e.plotOptions[series.type] = merge(e.plotOptions[series.type], overrides);\n                    }\n                }\n            }\n            /**\n             * Based on the data grouping options decides whether\n             * the data should be cropped while processing.\n             *\n             * @ignore\n             * @function Highcharts.Series#forceCropping\n             */\n            function seriesForceCropping() {\n                var series = this, chart = series.chart, options = series.options, dataGroupingOptions = options.dataGrouping, groupingEnabled = (series.allowDG !== false &&\n                    dataGroupingOptions &&\n                    pick(dataGroupingOptions.enabled, chart.options.isStock));\n                return groupingEnabled;\n            }\n            /* eslint-disable jsdoc/check-param-names */\n            /**\n             * Factory function for creating new stock charts. Creates a new\n             * {@link Highcharts.StockChart|StockChart} object with different default\n             * options than the basic Chart.\n             *\n             * @example\n             * let chart = Highcharts.stockChart('container', {\n             *     series: [{\n             *         data: [1, 2, 3, 4, 5, 6, 7, 8, 9],\n             *         pointInterval: 24 * 60 * 60 * 1000\n             *     }]\n             * });\n             *\n             * @function Highcharts.stockChart\n             *\n             * @param {string|Highcharts.HTMLDOMElement} [renderTo]\n             *        The DOM element to render to, or its id.\n             *\n             * @param {Highcharts.Options} options\n             *        The chart options structure as described in the\n             *        [options reference](https://api.highcharts.com/highstock).\n             *\n             * @param {Highcharts.ChartCallbackFunction} [callback]\n             *        A function to execute when the chart object is finished\n             *        rendering and all external image files (`chart.backgroundImage`,\n             *        `chart.plotBackgroundImage` etc) are loaded. Defining a\n             *        [chart.events.load](https://api.highcharts.com/highstock/chart.events.load)\n             *        handler is equivalent.\n             *\n             * @return {Highcharts.StockChart}\n             *         The chart object.\n             */\n            function stockChart(a, b, c) {\n                return new StockChart(a, b, c);\n            }\n            StockChart.stockChart = stockChart;\n            /* eslint-enable jsdoc/check-param-names */\n            /**\n             * Function to crisp a line with multiple segments\n             *\n             * @private\n             * @function Highcharts.SVGRenderer#crispPolyLine\n             */\n            function svgRendererCrispPolyLine(points, width) {\n                // points format: [['M', 0, 0], ['L', 100, 0]]\n                // normalize to a crisp line\n                for (var i = 0; i < points.length; i = i + 2) {\n                    var start = points[i], end = points[i + 1];\n                    if (start[1] === end[1]) {\n                        // Substract due to #1129. Now bottom and left axis gridlines\n                        // behave the same.\n                        start[1] = end[1] =\n                            Math.round(start[1]) - (width % 2 / 2);\n                    }\n                    if (start[2] === end[2]) {\n                        start[2] = end[2] =\n                            Math.round(start[2]) + (width % 2 / 2);\n                    }\n                }\n                return points;\n            }\n        })(StockChart || (StockChart = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return StockChart;\n    });\n    _registerModule(_modules, 'masters/modules/stock.src.js', [_modules['Core/Globals.js'], _modules['Series/DataModifyComposition.js'], _modules['Stock/Navigator/Navigator.js'], _modules['Stock/RangeSelector/RangeSelector.js'], _modules['Stock/Scrollbar/Scrollbar.js'], _modules['Core/Axis/OrdinalAxis.js'], _modules['Series/OHLC/OHLCSeries.js'], _modules['Series/Flags/FlagsSeries.js'], _modules['Core/Chart/StockChart.js']], function (Highcharts, DataModifyComposition, Navigator, RangeSelector, Scrollbar, OrdinalAxis, OHLCSeries, FlagsSeries, StockChart) {\n\n        var G = Highcharts;\n        // Classes\n        G.Navigator = Navigator;\n        G.RangeSelector = RangeSelector;\n        G.Scrollbar = Scrollbar;\n        G.StockChart = G.stockChart = StockChart.stockChart;\n        // Compositions\n        DataModifyComposition.compose(G.Series, G.Axis, G.Point);\n        FlagsSeries.compose(G.Renderer);\n        Navigator.compose(G.Axis, G.Chart, G.Series);\n        OHLCSeries.compose(G.Series);\n        OrdinalAxis.compose(G.Axis, G.Series, G.Chart);\n        RangeSelector.compose(G.Axis, G.Chart);\n        Scrollbar.compose(G.Axis);\n        StockChart.compose(G.Axis, G.Series, G.SVGRenderer);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","StackItem","U","BrokenAxis","addEvent","find","fireEvent","isArray","isNumber","pick","composedMembers","onAxisAfterInit","brokenAxis","setBreaks","options","breaks","onAxisAfterSetOptions","_a","axis","hasBreaks","ordinal","onAxisAfterSetTickPositions","tickPositions","info","newPositions","i","length","isInAnyBreak","push","onAxisInit","Additions","onSeriesAfterGeneratePoints","_b","isDirty","_c","connectNulls","points","xAxis","yAxis","point","isPointInBreak","y","x","visible","onSeriesAfterRender","drawBreaks","pointArrayMap","seriesDrawBreaks","keys","threshold","series","brokenAxis_1","forEach","key","breakArray","isXAxis","min","breaksOutOfRange","filter","brk","isOut","otherBreak","from","to","toUpperCase","eventName","seriesGappedPath","currentDataGrouping","groupingSize","gapSize","slice","gapUnit","basePointRange","current","next","xRange","splice","isNull","stacking","stack","stacks","stackKey","stackLabels","total","getGraphPath","compose","AxisClass","SeriesClass","pushUnique","keepProps","seriesProto","prototype","gappedPath","isInBreak","val","repeat","Infinity","test","inclusive","lin2Val","nval","len","val2Lin","findBreakAt","b","testKeep","inbrk","keep","ret","showPoints","redraw","Object","userOptions","forceRedraw","val2lin","lin2val","setExtremes","newMin","newMax","animation","eventArguments","breaks_1","axisBreak","constructor","call","setAxisTranslation","unitLength","inBrk_1","repeat_1","start_1","i_1","breaks_2","breakArrayT_1","breakArray_1","pointRangePadding","length_1","min_1","userMin","max_1","userMax","max","value","move","size","breakSize","sort","a","staticScale","transA","minPixelPadding","minPointOffset","chart","G","Axis","Series","ApproximationRegistry","arrayMax","arrayMin","correctFloat","extend","average","arr","sum","hasNulls","ApproximationDefaults","averages","arguments","close","high","hlc","low","ohlc","open","range","common","groupPixelWidth","dateTimeLabelFormats","millisecond","second","minute","hour","day","week","month","year","seriesSpecific","line","spline","area","areaspline","arearange","column","columnrange","candlestick","heikinashi","units","DataGroupingDefaults","AxisConstructor","merge","applyGrouping","e","getGroupPixelWidth","hasProcessed","hasExtremesChanged","dataLength","dgOptions","doGrouping","dataGrouping","Math","processedXData","data","plotSizeX","forced","onAfterSetScale","setDataGrouping","update","seriesOptions","slope","DateTimeAxis","D","SeriesRegistry","defined","error","baseGeneratePoints","generatePoints","croppedData","dataGroupingOptions","groupingEnabled","allowDG","enabled","isStock","reserveSpace","lastDataGrouping","revertRequireSorting","requireSorting","skip","skipDataGrouping","isCartesian","destroyGroupedData","groupAll","xData","processedYData","yData","hasGroupedData","groupedXData","extremes","getExtremes","xMin","xMax","groupIntervalFactor","getGroupIntervalFactor","interval","groupPositions","getTimeTicks","normalizeTimeTickInterval","startOfWeek","closestPointRange","groupedData","groupData","approximation","groupedYData","smoothed","firstAnchor","anchor","lastAnchor","segmentStarts","indexOf","totalRange","groupMap","anchorPoints","groupedDataLength","shiftInterval","middle","end","groupStart","start","groupLength","firstGroupstEnd","firstPoint","lastPoint","lastGroupStart","dataMin","dataMax","allGroupedData","cropData","cropStart","preventGraphAnimation","destroy","getDGApproximation","is","cumulative","pointX","pointY","groupedY","dataOptions","handleYData","values","pointArrayMapLength","extendedPointArrayMap","concat","pos","approximationFn","valuesLen","dataGroupInfo","pointClass","optionsToObject","j","index","applyOptions","onAfterSetOptions","type","plotOptions","baseOptions","useCommonDataGrouping","defaultOptions","rangeSelector","isInternal","selected","buttonOptions","PointClass","dataGroup","DataGroupingAxisComposition","DataGroupingSeriesComposition","F","format","onTooltipHeaderFormatter","xDateFormatEnd","labelFormats","formattedKey","time","labelConfig","tooltipOptions","xDateFormat","formatString","isFooter","unitName","count","dateTime","getXDateFormat","dateFormat","styledMode","styledModeFormat","text","preventDefault","TooltipClass","DataGrouping","approximationDefaults","approximations","Tooltip","annotationsFieldsTypes","backgroundColor","borderColor","borderRadius","color","fill","fontSize","labels","name","stroke","title","getAssignedAxis","coords","coord","axisMin","axisMax","getFieldType","predefinedType","fieldType","NBU","wheelTimer","startOnTick","endOnTick","isObject","composedClasses","sensitivity","waitForAutomaticExtremes","axisOptions","clearTimeout","setTimeout","getMouseAxisRatio","mousePos","mouseAxisRatio","reversed","inverted","zoomOnDirection","howMuch","centerArg","hasZoomed","innerStart","innerWidth","center","newRange","dataRange","minPaddingOffset","minPadding","maxPaddingOffset","maxPadding","outerMin","outerRange","newExt","outerStart","rangeStart","rangeWidth","zoomOut","Number","MIN_VALUE","zoomBy","mouseX","mouseY","zooming","zoomX","zoomY","centerXArg","toValue","centerYArg","emulateRoof","tmp","hasZoomedX","hasZoomedY","onAfterGetContainer","_this","wheelZoomOptions","mouseWheel","container","pointer","normalize","allowZoom","inClass","target","isInsidePlot","chartX","plotLeft","chartY","plotTop","wheelSensitivity","delta","deltaY","xAxisCoords","getCoordinates","yAxisCoords","pow","ChartClass","MouseWheelZoom","Chart","Point","DataModifyComposition","pointTooltipFormatter","tooltipFormatter","isString","setModifier","mode","modeState","setCompare","setCumulative","pointFormat","numberFormatter","replace","changeDecimals","change","cumulativeSum","afterInit","dataModify","compare","initCompare","initCumulative","afterGetExtremes","dataExtremes","activeYData","modifyValue","getCumulativeExtremes","seriesSetCompare","afterProcessData","compareStart","keyIndex","pointValKey","compareValue","axisSetCompare","seriesSetCumulative","axisSetCumulative","axisProto","pointProto","cumulativeDataMin","cumulativeDataMax","reduce","prev","cur","compareBase","prevPoint","H","isTouchDevice","navigatorAxis","NavigatorAxisAdditions","onAxisZoom","chartOptions","navigator","pinchType","zoomType","zoomed","previousZoom","toFixedRange","pxMin","pxMax","fixedMin","fixedMax","translate","horiz","fixedRange","halfPointRange","pointRange","Color","parse","seriesTypes","height","margin","maskInside","handles","width","symbols","lineWidth","maskFill","setOpacity","get","outlineColor","outlineWidth","fillOpacity","sonification","dataLabels","zIndex","id","className","lineColor","marker","overscroll","tickLength","gridLineColor","gridLineWidth","tickPixelInterval","align","style","opacity","textOutline","crosshair","tickWidth","_x","_y","halfWidth","markerPosition","round","NavigatorDefaults","NavigatorSymbols","RendererRegistry","NavigatorConstructor","setOptions","getRendererType","onChartAfterAddSeries","setBaseSeries","onChartAfterSetChartSize","legendOptions","legend","scrollbarHeight","scrollButtonSize","left","opposite","chartWidth","spacing","top","navigatorOptions","chartHeight","scrollbar","extraBottomMargin","getHeight","verticalAlign","layout","floating","legendHeight","titleOffset","setAxisSize","onChartAfterUpdate","event","scroller","onChartBeforeRender","onChartBeforeShowResetZoom","onChartCallback","render","onChartUpdate","scrollbarOptions","onSeriesAfterUpdate","NavigatorClass","chartProto","callbacks","ScrollbarAxis","Scrollbar","scrollMin","scrollMax","onAxisAfterGetOffset","scrollbarsOffsets","axisOffset","vertical","renderer","unitedMin","unitedMax","shouldUpdateExtremes","DOMType","animate","setRange","onAxisAfterRender","offsetsIndex","offset","axisTitleMargin","axisMargin","position","xPosition","isNaN","ScrollbarClass","barBorderRadius","buttonBorderRadius","buttonsEnabled","liveRedraw","minWidth","step","barBackgroundColor","barBorderWidth","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","buttonBorderWidth","rifleColor","trackBackgroundColor","trackBorderColor","trackBorderRadius","trackBorderWidth","ScrollbarDefaults","destroyObjectProperties","removeEvent","_events","group","scrollbarButtons","scrollbarGroup","scrollbarLeft","scrollbarRifles","scrollbarStrokeWidth","scrollbarTop","track","init","swapXY","seg","temp","addEvents","buttonsOrder","buttons","bar","element","mouseDownHandler","bind","mouseMoveHandler","mouseUpHandler","buttonToMinClick","buttonToMaxClick","trackClick","ownerDocument","hasTouch","updatePosition","trigger","DOMEvent","cursorToScrollbarPosition","normalizedEvent","minWidthDifference","calculatedWidth","xOffset","barWidth","yOffset","removeEvents","prop","drawScrollbarButton","g","add","rect","addClass","attr","crisp","r","strokeWidth","arrow","mousePosition","initPositions","grabbedCenter","direction","touches","chartPosition","hasDragged","method","rendered","show","translateX","translateY","hide","fromPX","newSize","fullWidth","toPX","ceil","newPos","floor","newRiflesPos","showFull","eventType","svg","boosted","NavigatorComposition","clamp","erase","splat","numExt","extreme","_i","numbers","Navigator","baseSeries","navigatorEnabled","navigatorGroup","navigatorSeries","navigatorSize","outline","shades","zoomedMax","zoomedMin","drawHandle","verb","parseInt","drawOutline","verticalMin","halfOutline","outlineCorrection","navigatorTop","lineTop","lineBtm","d","drawMasks","navigatorHeight","shade","renderElements","mouseCursor","cursor","visibility","hasMask","css","handlesOptions_1","height_1","width_1","symbol","rotation","rotationOriginX","rotationOriginY","navigatorWidth","scrollbarXAxis","fake","minRange","maxRange","plotWidth","plotHeight","toPixels","abs","currentRange","grabbedLeft","grabbedRight","fixedWidth","addMouseEvents","eventsToUnbind","onMouseMove","onMouseUp","getPartsEvents","renderTo","modifyNavigatorAxisExtremes","events","navigatorItem","shadesMousedown","ext","navigatorPosition","dragOffset","reversedExtremes","getUnionExtremes","handlesMousedown","baseXAxis","reverse","otherHandlePos","fixedExtreme","pageX","unionExtremes","triggerOp","unbind","removeBaseSeriesEvents","adaptToUpdatedData","updatedDataHandler","modifyBaseAxisExtremes","scrollbarEnabled","Boolean","xAxisIndex","yAxisIndex","baseXaxis","isDirtyBox","keepOrdinalPadding","zoomEnabled","offsets","alignTicks","updateNavigatorSeries","unbindRedraw","scrollTrackWidth","valueRange","addBaseSeriesEvents","addChartEvents","returnFalseOnNoBaseSeries","baseAxis","navAxis","navAxisOptions","baseAxisOptions","baseSeriesOptions","s","showInNavigator","mergedNavSeriesOptions","baseNavigatorOptions","navSeriesMixin","enableMouseTracking","linkedTo","padXAxis","showInLegend","states","inactive","navSeries","base","chartNavigatorSeriesOptions","linkedNavSeries","userNavOptions","navigatorSeriesData","hasNavigatorData","initSeries","userSeriesOptions","colors","setVisible","remove","getBaseSeriesMin","currentSeriesMin","baseExtremes","baseMin","baseMax","baseDataMin","baseDataMax","stickToMin","stickToMax","hasSetExtremes","eventArgs","MAX_VALUE","shouldStickToMax","shouldStickToMin","pointStart","setData","xDataMin","marginName","axes","coll","lang","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","allButtonsEnabled","buttonSpacing","dropdown","buttonTheme","padding","inputBoxBorderColor","inputBoxHeight","inputBoxWidth","inputDateFormat","inputDateParser","inputEditDateFormat","inputEnabled","inputPosition","inputSpacing","buttonPosition","inputStyle","labelStyle","RangeSelectorDefaults","RangeSelectorConstructor","chartDestroyEvents","axisMinFromRange","rangeOptions","getTrueRange","timeName","date","Date","basePeriod","set","getTime","_offsetMin","onChartAfterGetContainer","deferredYTDClick","clickButton","updateNames","setScale","getAxisMargins","extraTopMargin","alignTo","display","spacingBox","placed","onChartDestroy","iEnd","onChartGetMargins","rangeSelectorHeight","marginBottom","onChartRender","optionsRangeSelector","extraBottomMarginWas","extraTopMarginWas","RangeSelectorClass","minFromRange","RangeSelectorComposition","SVGElement","createElement","discardElement","objectEach","pad","pInt","RangeSelector","defaultButtons","initialButtonGroupWidth","baseXAxisOptions","rangeMin","minSetting","rangeSetting","ctx","ytdExtremes","_range","addOffsetMin","setSelected","forcedDataGrouping","frozenStates","preserveDataGrouping","getYTDExtremes","useUTC","_offsetMax","selectedIndex","rangeSelectorButton","selectedOption","blurInputs","minInput","maxInput","blur","computeButtonRange","updateButtonStates","actualRange","hasNoData","hasVisibleSeries","ytdMin","ytdMax","selectedExists","button","offsetRange","isSelected","isTooGreatRange","isTooSmallRange","state","isYTDButNotSelected","isAllButAlreadyShowingAll","isSameRange","disable","select","setState","disabled","fixedTimes","offsetMin","offsetMax","getInputValue","input","defaultInputDateParser","setInputValue","inputTime","dateBox","minDateBox","maxDateBox","hcTimeAttr","getAttribute","updatedTime","previousTime","setAttribute","inputTypeFormats","setInputExtremes","showInput","inputGroup","isTextInput","_d","_e","_f","border","offsetWidth","offsetHeight","hideInput","inputDate","str","split","join","isSafari","lastIndexOf","getTimezoneOffset","parts","UTC","drawInput","div","chartStyle","isMin","updateExtremes","chartAxis","label","on","focus","preferredInputType","some","char","boxShadow","textAlign","fontFamily","onfocus","onblur","doc","activeElement","keyDown","onchange","onkeypress","keyCode","onkeydown","onkeyup","getPosition","buttonTop","inputTop","now","startOfYear","ts","inputsZIndex","renderButtons","parentNode","insertBefore","minElems","minLabel","maxElems","maxLabel","x_1","getBBox","alignElements","buttonGroup","isMS","currentButtonIndex","zoomText","paddingLeft","paddingRight","textContent","textStr","callDefaultEvent","buttonEvents","click","isActive","hover","navButtonOptions","exporting","navigation","getXOffsetForExportButton","titleCollision","positionButtons","xOffsetForExportButton_1","alignButtonGroup","hasLoaded","xOffsetForExportButton","handleCollision","alignTranslateY","alignAttr","groupHeight","marginTop","buttonLeft","maxButtonWidth","buttonWidth","bBox","groupsOverlap","buttonGroupWidth","inputGroupX","alignOptions","inputGroupWidth","buttonGroupX","moveInputsDown","collapseButtons","expandButtons","userButtonTheme","getAttribs","hasActiveButton","showDropdown","hideDropdown","hasVisibleDropdown","rangeSelectorGroup","yPosition","buttonPositionY","inputPositionY","subtitle","rSelector","HTMLElement","OrdinalAxis","timeUnits","normalizedInterval","positions","closestDistance","findHigherRanks","segmentPositions","hasCrossedHigherRank","outsideMax","higherRanks","tickPixelIntervalOption","lastGroupPosition","posLength","shift","unitRange","translatedArr","distances","itemToRemove","translated","lastTranslated","medianDistance","distance","index2val","ordinalPositions","localMin","old","localA","pixelVal","getExtendedPositions","getIndexOfPoint","mantissa","leftNeighbour","rightNeighbour","getIndexInArray","findIndexOf","percent","onAxisFoundExtremes","mouseIsDown","onAxisAfterSetScale","isOrdinal","onAxisInitialAxisTranslation","beforeSetTickPositions","tickInterval","postProcessTickInterval","onChartPan","originalEvent","panning","runBase","mouseDownX","hoverPoints","overscrollPointsRange","movedUnits","translationSlope","extendedOrdinalPositions","extendedAxis","index2val_1","val2lin_1","trimmedRange","searchAxisLeft","searchAxisRight","onSeriesUpdatedData","toIndex","ordinalIndex","ordinalLength","length_2","originalPositionsReference","diff","approximateIndexOffset","ordinal2lin","uniqueOrdinalPositions","dist","minIndex","maxIndex","useOrdinal","adjustOrdinalExtremesPoints","isBoosted","distanceBetweenPoint_1","takeOrdinalPosition","unshift","pop","forceOrdinal","getOverscrollPositions","sortedArray","indirectSearch","fakeAxis","grouping","fakeSeries","noop","getProcessedData","processData","median","ordinalArray","firstPointX","firstPointVal","hasPointsInside","plotX","ordinalPointPixelInterval","shiftIndex","extraRange","ordinalSlope","extendStatics","__extends","setPrototypeOf","__proto__","Array","p","TypeError","String","__","create","_super","HLCPoint","plotClose","tooltip","stickyTracking","HLCSeriesDefaults","ColumnSeries","HLCSeries","extendStem","halfStrokeWidth","getPointPath","graphic","crispCorr","crispX","shapeArgs","yBottom","plotHigh","drawSinglePoint","plotY","pointAttribs","getClassName","drawPoints","attribs","toYData","names","map","charAt","tooltipPos","directTouch","pointAttrToOptions","registerSeriesType","OHLCPoint","plotOpen","resolveUpColor","upColor","resolveColor","getZone","zone","OHLCSeriesDefaults","onSeriesAfterSetOptions","useOhlcData","onSeriesInit","eventOptions","OHLCSeries","_args","CandlestickSeriesDefaults","CandlestickSeries","isUp","upLineColor","stateOptions","reversedYAxis","points_1","topBox","bottomBox","hasTopWhisker","hasBottomWhisker","isNew","shadow","ColumnPoint","FlagsPoint","ttBelow","isValid","hasNewShapeType","shape","symbolKey","allowOverlapX","stackDistance","fillColor","fontWeight","FlagsSymbols","modifiedMembers","flag","w","h","anchorX","anchorY","circle","createPinSymbol","labelX","startSeg","endSeg","labelY","SVGRendererClass","RendererClass","OnSeriesComposition","columnProto","stableSort","getPlotBox","onSeries","leftPoint","lastX","rightPoint","distanceRatio","optionsOnSeries","onData","onKey","pointXOffset","barW","substr","state_1","_loop_1","p0_1","p3_1","p1_1","controlPoints","p2_1","calculateCoord","t","tMin","tMax","tMid","xMid","stackIndex","seriesProto_1","FlagsSeriesDefaults","R","distribute","wrap","FlagsSeries","setClip","outsideRight","centered","optionsY","boxesMap","boxes","useHTML","markerGroup","maxDistance_1","box","point_1","plotX_1","graphic_1","proceed","drawTracker","unbindMouseOver","raised","points_3","otherPoint","points_2","clip","sharedClipKey","sharedClips","forceCrop","invertible","noSharedTooltip","sorted","trackerGroups","buildKDTree","getOptions","getDefaultAxisOptions","overflow","showLastLabel","categories","getForcedAxisOptions","StockChart","callback","xAxisOptions","yAxisOptions","crosshairs","createAxis","onAxisAfterDrawCrosshair","cross","posx","posy","limit","log","logarithmic","tickInside","tickPosition","snap","crossLabel","formatOption","formatFormat","lin2log","labelAlign","colorIndex","labelGroup","borderWidth","formatter","isInside","isPointInside","crossBox","right","onAxisAfterHideCrosshair","onAxisAutoLabelAlign","panes","_labelPanes","labelOptions","side","onAxisDestroy","onAxisGetPlotLinePath","x1","y1","x2","y2","axes2","uniqueAxes","transVal","isLinked","linkedParent","axisLeft","axisTop","result","translatedValue","force","acrossPanes","otherColl","opt","axes2_1","A","axis2","unique","axes_1","uniqueAxes_1","transB","uniqueAxes_2","crispPolyLine","onSeriesSetOptions","overrides","radius","seriesForceCropping","svgRendererCrispPolyLine","forceCropping","stockChart","c","Renderer","SVGRenderer"],"mappings":"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"}