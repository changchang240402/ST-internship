{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * Hollow Candlestick series type for Highcharts Stock\n *\n * (c) 2010-2021 Karol Kolodziej\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/hollowcandlestick', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/HollowCandlestick/HollowCandlestickPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var CandlestickSeries = SeriesRegistry.seriesTypes.candlestick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        var HollowCandlestickPoint = /** @class */ (function (_super) {\n            __extends(HollowCandlestickPoint, _super);\n            function HollowCandlestickPoint() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                _this.series = void 0;\n                return _this;\n                /* eslint-enable valid-jsdoc */\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * Update class name if needed.\n             * @private\n             * @function Highcharts.seriesTypes.hollowcandlestick#getClassName\n             */\n            HollowCandlestickPoint.prototype.getClassName = function () {\n                var className = _super.prototype.getClassName.apply(this);\n                var point = this, index = point.index, currentPoint = point.series.hollowCandlestickData[index];\n                if (!currentPoint.isBullish && currentPoint.trendDirection === 'up') {\n                    className += '-bearish-up';\n                }\n                return className;\n            };\n            return HollowCandlestickPoint;\n        }(CandlestickSeries.prototype.pointClass));\n        /* *\n         *\n         *  Class Namespace\n         *\n         * */\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HollowCandlestickPoint;\n    });\n    _registerModule(_modules, 'Series/HollowCandlestick/HollowCandlestickSeries.js', [_modules['Series/HollowCandlestick/HollowCandlestickPoint.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Core/Axis/Axis.js']], function (HollowCandlestickPoint, SeriesRegistry, U, Axis) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        var CandlestickSeries = SeriesRegistry.seriesTypes.candlestick;\n        var addEvent = U.addEvent, merge = U.merge;\n        /* *\n         *\n         *  Code\n         *\n         * */\n        /**\n         * The hollowcandlestick series.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.hollowcandlestick\n         *\n         * @augments Highcharts.seriesTypes.candlestick\n         */\n        var HollowCandlestickSeries = /** @class */ (function (_super) {\n            __extends(HollowCandlestickSeries, _super);\n            function HollowCandlestickSeries() {\n                /* *\n                 *\n                 * Static properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this, arguments) || this;\n                /* *\n                 *\n                 * Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.hollowCandlestickData = [];\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n                /* eslint-disable valid-jsdoc */\n            }\n            /* *\n             *\n             * Functions\n             *\n             * */\n            /**\n             * Iterate through all points and get their type.\n             * @private\n             *\n             * @function Highcharts.seriesTypes.hollowcandlestick#getPriceMovement\n             *\n             *\n             */\n            HollowCandlestickSeries.prototype.getPriceMovement = function () {\n                var series = this, \n                // procesed and grouped data\n                processedYData = series.allGroupedData || series.yData, hollowCandlestickData = this.hollowCandlestickData;\n                if (!hollowCandlestickData.length &&\n                    processedYData &&\n                    processedYData.length) {\n                    // First point is allways bullish (transparent).\n                    hollowCandlestickData.push({\n                        isBullish: true,\n                        trendDirection: 'up'\n                    });\n                    for (var i = 1; i < processedYData.length; i++) {\n                        var dataPoint = processedYData[i], previousDataPoint = processedYData[i - 1];\n                        hollowCandlestickData.push(series.isBullish(dataPoint, previousDataPoint));\n                    }\n                }\n            };\n            /**\n             * Return line color based on candle type.\n             * @private\n             *\n             * @function Highcharts.seriesTypes.hollowcandlestick#getLineColor\n             *\n             * @param {string} trendDirection\n             * Type of candle direction (bearish/bullish)(down/up).\n             *\n             * @return {ColorType}\n             * Line color\n             */\n            HollowCandlestickSeries.prototype.getLineColor = function (trendDirection) {\n                var series = this;\n                // Return line color based on trend direction\n                return trendDirection === 'up' ?\n                    series.options.upColor || \"#06b535\" /* Palette.positiveColor */ :\n                    series.options.color || \"#f21313\" /* Palette.negativeColor */;\n            };\n            /**\n             * Return fill color based on candle type.\n             * @private\n             *\n             * @function Highcharts.seriesTypes.hollowcandlestick#getPointFill\n             *\n             * @param {HollowcandleInfo} hollowcandleInfo\n             *        Information about the current candle.\n             *\n             * @return {ColorType}\n             * Point fill color\n             */\n            HollowCandlestickSeries.prototype.getPointFill = function (hollowcandleInfo) {\n                var series = this;\n                // Return fill color only for bearish candles.\n                if (hollowcandleInfo.isBullish) {\n                    return 'transparent';\n                }\n                return hollowcandleInfo.trendDirection === 'up' ?\n                    series.options.upColor || \"#06b535\" /* Palette.positiveColor */ :\n                    series.options.color || \"#f21313\" /* Palette.negativeColor */;\n            };\n            /**\n             * @private\n             * @function Highcarts.seriesTypes.hollowcandlestick#init\n             */\n            HollowCandlestickSeries.prototype.init = function () {\n                _super.prototype.init.apply(this, arguments);\n                this.hollowCandlestickData = [];\n            };\n            /**\n             * Check if the candle is bearish or bullish. For bullish one, return true.\n             * For bearish, return string depending on the previous point.\n             *\n             * @function Highcharts.seriesTypes.hollowcandlestick#isBullish\n             *\n             * @param {Array<(number)>} dataPoint\n             * Current point which we calculate.\n             *\n             * @param {Array<(number)>} previousDataPoint\n             * Previous point.\n             */\n            HollowCandlestickSeries.prototype.isBullish = function (dataPoint, previousDataPoint) {\n                return {\n                    // Compare points' open and close value.\n                    isBullish: dataPoint[0] <= dataPoint[3],\n                    // For bearish candles.\n                    trendDirection: dataPoint[3] < previousDataPoint[3] ? 'down' : 'up'\n                };\n            };\n            /**\n             * Add color and fill attribute for each point.\n             *\n             * @private\n             *\n             * @function Highcharts.seriesTypes.hollowcandlestick#pointAttribs\n             *\n             * @param {HollowCandlestickPoint} point\n             * Point to which we are adding attributes.\n             *\n             * @param {StatesOptionsKey} state\n             * Current point state.\n             */\n            HollowCandlestickSeries.prototype.pointAttribs = function (point, state) {\n                var attribs = _super.prototype.pointAttribs.call(this, point, state), stateOptions;\n                var index = point.index, hollowcandleInfo = this.hollowCandlestickData[index];\n                attribs.fill = this.getPointFill(hollowcandleInfo) || attribs.fill;\n                attribs.stroke = this.getLineColor(hollowcandleInfo.trendDirection) ||\n                    attribs.stroke;\n                // Select or hover states\n                if (state) {\n                    stateOptions = this.options.states[state];\n                    attribs.fill = stateOptions.color || attribs.fill;\n                    attribs.stroke = stateOptions.lineColor || attribs.stroke;\n                    attribs['stroke-width'] =\n                        stateOptions.lineWidth || attribs['stroke-width'];\n                }\n                return attribs;\n            };\n            /**\n             * A hollow candlestick chart is a style of financial chart used to\n             * describe price movements over time.\n             *\n             * @sample stock/demo/hollow-candlestick/\n             *         Hollow Candlestick chart\n             *\n             * @extends      plotOptions.candlestick\n             * @product      highstock\n             * @requires     modules/hollowcandlestick\n             * @optionparent plotOptions.hollowcandlestick\n             */\n            HollowCandlestickSeries.defaultOptions = merge(CandlestickSeries.defaultOptions, {\n                /**\n                 * The fill color of the candlestick when the current\n                 * close is lower than the previous one.\n                 *\n                 * @sample stock/plotoptions/hollow-candlestick-color/\n                 *     Custom colors\n                 * @sample {highstock} highcharts/css/hollow-candlestick/\n                 *         Colors in styled mode\n                 *\n                 * @type    {ColorType}\n                 * @product highstock\n                 */\n                color: \"#f21313\" /* Palette.negativeColor */,\n                dataGrouping: {\n                    groupAll: true,\n                    groupPixelWidth: 10\n                },\n                /**\n                 * The color of the line/border of the hollow candlestick when\n                 * the current close is lower than the previous one.\n                 *\n                 * @sample stock/plotoptions/hollow-candlestick-color/\n                 *     Custom colors\n                 * @sample {highstock} highcharts/css/hollow-candlestick/\n                 *         Colors in styled mode\n                 *\n                 * @type    {ColorType}\n                 * @product highstock\n                 */\n                lineColor: \"#f21313\" /* Palette.negativeColor */,\n                /**\n                 * The fill color of the candlestick when the current\n                 * close is higher than the previous one.\n                 *\n                 * @sample stock/plotoptions/hollow-candlestick-color/\n                 *     Custom colors\n                 * @sample {highstock} highcharts/css/hollow-candlestick/\n                 *         Colors in styled mode\n                 *\n                 * @type    {ColorType}\n                 * @product highstock\n                 */\n                upColor: \"#06b535\" /* Palette.positiveColor */,\n                /**\n                 * The color of the line/border of the hollow candlestick when\n                 * the current close is higher than the previous one.\n                 *\n                 * @sample stock/plotoptions/hollow-candlestick-color/\n                 *     Custom colors\n                 * @sample {highstock} highcharts/css/hollow-candlestick/\n                 *         Colors in styled mode\n                 *\n                 * @type    {ColorType}\n                 * @product highstock\n                 */\n                upLineColor: \"#06b535\" /* Palette.positiveColor */\n            });\n            return HollowCandlestickSeries;\n        }(CandlestickSeries));\n        // Force to recalculate the hollowcandlestick data set after updating data.\n        addEvent(HollowCandlestickSeries, 'updatedData', function () {\n            if (this.hollowCandlestickData.length) {\n                this.hollowCandlestickData.length = 0;\n            }\n        });\n        // After processing and grouping the data,\n        // check if the candle is bearish or bullish.\n        // Required for further calculation.\n        addEvent(Axis, 'postProcessData', function () {\n            var axis = this, series = axis.series;\n            series.forEach(function (series) {\n                if (series.is('hollowcandlestick')) {\n                    var hollowcandlestickSeries = series;\n                    hollowcandlestickSeries.getPriceMovement();\n                }\n            });\n        });\n        /* *\n         *\n         *  Class Prototype\n         *\n         * */\n        HollowCandlestickSeries.prototype.pointClass = HollowCandlestickPoint;\n        SeriesRegistry.registerSeriesType('hollowcandlestick', HollowCandlestickSeries);\n        /* *\n         *\n         * Default Export\n         *\n         * */\n        /* *\n         *\n         * API Options\n         *\n         * */\n        /**\n         * A `hollowcandlestick` series. If the [type](#series.candlestick.type)\n         * option is not specified, it is inherited from [chart.type](\n         * #chart.type).\n         *\n         * @type      {*}\n         * @extends   series,plotOptions.hollowcandlestick\n         * @excluding dataParser, dataURL, marker\n         * @product   highstock\n         * @apioption series.hollowcandlestick\n         */\n        /**\n         * An array of data points for the series. For the `hollowcandlestick` series\n         * type, points can be given in the following ways:\n         *\n         * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n         *    to `x,open,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length 4.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 7, 2, 0, 4],\n         *        [1, 1, 4, 2, 8],\n         *        [2, 3, 3, 9, 3]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.hollowcandlestick.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        open: 9,\n         *        high: 2,\n         *        low: 4,\n         *        close: 6,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        open: 1,\n         *        high: 4,\n         *        low: 7,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n         * @extends   series.candlestick.data\n         * @excluding y\n         * @product   highstock\n         * @apioption series.hollowcandlestick.data\n         */\n        ''; // adds doclets above to transpilat\n\n        return HollowCandlestickSeries;\n    });\n    _registerModule(_modules, 'masters/modules/hollowcandlestick.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","SeriesRegistry","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","TypeError","String","__","constructor","create","_super","HollowCandlestickPoint","_this","arguments","series","getClassName","className","index","point","currentPoint","hollowCandlestickData","isBullish","trendDirection","CandlestickSeries","seriesTypes","candlestick","pointClass","U","Axis","addEvent","merge","HollowCandlestickSeries","data","options","points","getPriceMovement","processedYData","allGroupedData","yData","length","push","i","dataPoint","previousDataPoint","getLineColor","upColor","color","getPointFill","hollowcandleInfo","init","pointAttribs","state","stateOptions","attribs","fill","stroke","states","lineColor","lineWidth","defaultOptions","dataGrouping","groupAll","groupPixelWidth","upLineColor","axis","forEach","is","hollowcandlestickSeries","registerSeriesType"],"mappings":"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"}