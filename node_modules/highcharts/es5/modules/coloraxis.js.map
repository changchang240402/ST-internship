{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.2.0 (2023-10-30)\n *\n * ColorAxis module\n *\n * (c) 2012-2021 Pawel Potaczek\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/color-axis', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxisComposition.js', [_modules['Core/Color/Color.js'], _modules['Core/Utilities.js']], function (Color, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var addEvent = U.addEvent, extend = U.extend, merge = U.merge, pick = U.pick, splat = U.splat;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var ColorAxisComposition;\n        (function (ColorAxisComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Constants\n             *\n             * */\n            var composedMembers = [];\n            /* *\n             *\n             *  Variables\n             *\n             * */\n            var ColorAxisConstructor;\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(ColorAxisClass, ChartClass, FxClass, LegendClass, SeriesClass) {\n                if (!ColorAxisConstructor) {\n                    ColorAxisConstructor = ColorAxisClass;\n                }\n                if (U.pushUnique(composedMembers, ChartClass)) {\n                    var chartProto = ChartClass.prototype;\n                    chartProto.collectionsWithUpdate.push('colorAxis');\n                    chartProto.collectionsWithInit.colorAxis = [\n                        chartProto.addColorAxis\n                    ];\n                    addEvent(ChartClass, 'afterGetAxes', onChartAfterGetAxes);\n                    wrapChartCreateAxis(ChartClass);\n                }\n                if (U.pushUnique(composedMembers, FxClass)) {\n                    var fxProto = FxClass.prototype;\n                    fxProto.fillSetter = wrapFxFillSetter;\n                    fxProto.strokeSetter = wrapFxStrokeSetter;\n                }\n                if (U.pushUnique(composedMembers, LegendClass)) {\n                    addEvent(LegendClass, 'afterGetAllItems', onLegendAfterGetAllItems);\n                    addEvent(LegendClass, 'afterColorizeItem', onLegendAfterColorizeItem);\n                    addEvent(LegendClass, 'afterUpdate', onLegendAfterUpdate);\n                }\n                if (U.pushUnique(composedMembers, SeriesClass)) {\n                    extend(SeriesClass.prototype, {\n                        optionalAxis: 'colorAxis',\n                        translateColors: seriesTranslateColors\n                    });\n                    extend(SeriesClass.prototype.pointClass.prototype, {\n                        setVisible: pointSetVisible\n                    });\n                    addEvent(SeriesClass, 'afterTranslate', onSeriesAfterTranslate, { order: 1 });\n                    addEvent(SeriesClass, 'bindAxes', onSeriesBindAxes);\n                }\n            }\n            ColorAxisComposition.compose = compose;\n            /**\n             * Extend the chart getAxes method to also get the color axis.\n             * @private\n             */\n            function onChartAfterGetAxes() {\n                var _this = this;\n                var options = this.options;\n                this.colorAxis = [];\n                if (options.colorAxis) {\n                    options.colorAxis = splat(options.colorAxis);\n                    options.colorAxis.map(function (axisOptions) { return (new ColorAxisConstructor(_this, axisOptions)); });\n                }\n            }\n            /**\n             * Add the color axis. This also removes the axis' own series to prevent\n             * them from showing up individually.\n             * @private\n             */\n            function onLegendAfterGetAllItems(e) {\n                var _this = this;\n                var colorAxes = this.chart.colorAxis || [], destroyItem = function (item) {\n                    var i = e.allItems.indexOf(item);\n                    if (i !== -1) {\n                        // #15436\n                        _this.destroyItem(e.allItems[i]);\n                        e.allItems.splice(i, 1);\n                    }\n                };\n                var colorAxisItems = [], options, i;\n                colorAxes.forEach(function (colorAxis) {\n                    options = colorAxis.options;\n                    if (options && options.showInLegend) {\n                        // Data classes\n                        if (options.dataClasses && options.visible) {\n                            colorAxisItems = colorAxisItems.concat(colorAxis.getDataClassLegendSymbols());\n                            // Gradient legend\n                        }\n                        else if (options.visible) {\n                            // Add this axis on top\n                            colorAxisItems.push(colorAxis);\n                        }\n                        // If dataClasses are defined or showInLegend option is not set\n                        // to true, do not add color axis' series to legend.\n                        colorAxis.series.forEach(function (series) {\n                            if (!series.options.showInLegend || options.dataClasses) {\n                                if (series.options.legendType === 'point') {\n                                    series.points.forEach(function (point) {\n                                        destroyItem(point);\n                                    });\n                                }\n                                else {\n                                    destroyItem(series);\n                                }\n                            }\n                        });\n                    }\n                });\n                i = colorAxisItems.length;\n                while (i--) {\n                    e.allItems.unshift(colorAxisItems[i]);\n                }\n            }\n            /**\n             * @private\n             */\n            function onLegendAfterColorizeItem(e) {\n                if (e.visible && e.item.legendColor) {\n                    e.item.legendItem.symbol.attr({\n                        fill: e.item.legendColor\n                    });\n                }\n            }\n            /**\n             * Updates in the legend need to be reflected in the color axis. (#6888)\n             * @private\n             */\n            function onLegendAfterUpdate(e) {\n                var _a;\n                (_a = this.chart.colorAxis) === null || _a === void 0 ? void 0 : _a.forEach(function (colorAxis) {\n                    colorAxis.update({}, e.redraw);\n                });\n            }\n            /**\n             * Calculate and set colors for points.\n             * @private\n             */\n            function onSeriesAfterTranslate() {\n                if (this.chart.colorAxis &&\n                    this.chart.colorAxis.length ||\n                    this.colorAttribs) {\n                    this.translateColors();\n                }\n            }\n            /**\n             * Add colorAxis to series axisTypes.\n             * @private\n             */\n            function onSeriesBindAxes() {\n                var axisTypes = this.axisTypes;\n                if (!axisTypes) {\n                    this.axisTypes = ['colorAxis'];\n                }\n                else if (axisTypes.indexOf('colorAxis') === -1) {\n                    axisTypes.push('colorAxis');\n                }\n            }\n            /**\n             * Set the visibility of a single point\n             * @private\n             * @function Highcharts.colorPointMixin.setVisible\n             * @param {boolean} visible\n             */\n            function pointSetVisible(vis) {\n                var point = this, method = vis ? 'show' : 'hide';\n                point.visible = point.options.visible = Boolean(vis);\n                // Show and hide associated elements\n                ['graphic', 'dataLabel'].forEach(function (key) {\n                    if (point[key]) {\n                        point[key][method]();\n                    }\n                });\n                this.series.buildKDTree(); // rebuild kdtree #13195\n            }\n            ColorAxisComposition.pointSetVisible = pointSetVisible;\n            /**\n             * In choropleth maps, the color is a result of the value, so this needs\n             * translation too\n             * @private\n             * @function Highcharts.colorSeriesMixin.translateColors\n             */\n            function seriesTranslateColors() {\n                var series = this, points = this.data.length ? this.data : this.points, nullColor = this.options.nullColor, colorAxis = this.colorAxis, colorKey = this.colorKey;\n                points.forEach(function (point) {\n                    var value = point.getNestedProperty(colorKey), color = point.options.color || (point.isNull || point.value === null ?\n                        nullColor :\n                        (colorAxis && typeof value !== 'undefined') ?\n                            colorAxis.toColor(value, point) :\n                            point.color || series.color);\n                    if (color && point.color !== color) {\n                        point.color = color;\n                        if (series.options.legendType === 'point' &&\n                            point.legendItem &&\n                            point.legendItem.label) {\n                            series.chart.legend.colorizeItem(point, point.visible);\n                        }\n                    }\n                });\n            }\n            /**\n             * @private\n             */\n            function wrapChartCreateAxis(ChartClass) {\n                var superCreateAxis = ChartClass.prototype.createAxis;\n                ChartClass.prototype.createAxis = function (type, options) {\n                    var chart = this;\n                    if (type !== 'colorAxis') {\n                        return superCreateAxis.apply(chart, arguments);\n                    }\n                    var axis = new ColorAxisConstructor(chart, merge(options.axis, {\n                        index: chart[type].length,\n                        isX: false\n                    }));\n                    chart.isDirtyLegend = true;\n                    // Clear before 'bindAxes' (#11924)\n                    chart.axes.forEach(function (axis) {\n                        axis.series = [];\n                    });\n                    chart.series.forEach(function (series) {\n                        series.bindAxes();\n                        series.isDirtyData = true;\n                    });\n                    if (pick(options.redraw, true)) {\n                        chart.redraw(options.animation);\n                    }\n                    return axis;\n                };\n            }\n            /**\n             * Handle animation of the color attributes directly.\n             * @private\n             */\n            function wrapFxFillSetter() {\n                this.elem.attr('fill', color(this.start).tweenTo(color(this.end), this.pos), void 0, true);\n            }\n            /**\n             * Handle animation of the color attributes directly.\n             * @private\n             */\n            function wrapFxStrokeSetter() {\n                this.elem.attr('stroke', color(this.start).tweenTo(color(this.end), this.pos), void 0, true);\n            }\n        })(ColorAxisComposition || (ColorAxisComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ColorAxisComposition;\n    });\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxisDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A color axis for series. Visually, the color\n         * axis will appear as a gradient or as separate items inside the\n         * legend, depending on whether the axis is scalar or based on data\n         * classes.\n         *\n         * For supported color formats, see the\n         * [docs article about colors](https://www.highcharts.com/docs/chart-design-and-style/colors).\n         *\n         * A scalar color axis is represented by a gradient. The colors either\n         * range between the [minColor](#colorAxis.minColor) and the\n         * [maxColor](#colorAxis.maxColor), or for more fine grained control the\n         * colors can be defined in [stops](#colorAxis.stops). Often times, the\n         * color axis needs to be adjusted to get the right color spread for the\n         * data. In addition to stops, consider using a logarithmic\n         * [axis type](#colorAxis.type), or setting [min](#colorAxis.min) and\n         * [max](#colorAxis.max) to avoid the colors being determined by\n         * outliers.\n         *\n         * When [dataClasses](#colorAxis.dataClasses) are used, the ranges are\n         * subdivided into separate classes like categories based on their\n         * values. This can be used for ranges between two values, but also for\n         * a true category. However, when your data is categorized, it may be as\n         * convenient to add each category to a separate series.\n         *\n         * Color axis does not work with: `sankey`, `sunburst`, `dependencywheel`,\n         * `networkgraph`, `wordcloud`, `venn`, `gauge` and `solidgauge` series\n         * types.\n         *\n         * Since v7.2.0 `colorAxis` can also be an array of options objects.\n         *\n         * See [the Axis object](/class-reference/Highcharts.Axis) for\n         * programmatic access to the axis.\n         *\n         * @sample       {highcharts} highcharts/coloraxis/custom-color-key\n         *               Column chart with color axis\n         * @sample       {highcharts} highcharts/coloraxis/horizontal-layout\n         *               Horizontal layout\n         * @sample       {highmaps} maps/coloraxis/dataclasscolor\n         *               With data classes\n         * @sample       {highmaps} maps/coloraxis/mincolor-maxcolor\n         *               Min color and max color\n         *\n         * @extends      xAxis\n         * @excluding    alignTicks, allowDecimals, alternateGridColor, breaks,\n         *               categories, crosshair, dateTimeLabelFormats, height, left,\n         *               lineWidth, linkedTo, maxZoom, minRange, minTickInterval,\n         *               offset, opposite, pane, plotBands, plotLines,\n         *               reversedStacks, scrollbar, showEmpty, title, top, width,\n         *               zoomEnabled\n         * @product      highcharts highstock highmaps\n         * @type         {*|Array<*>}\n         * @optionparent colorAxis\n         */\n        var colorAxisDefaults = {\n            /**\n             * Whether to allow decimals on the color axis.\n             * @type      {boolean}\n             * @default   true\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.allowDecimals\n             */\n            /**\n             * Determines how to set each data class' color if no individual\n             * color is set. The default value, `tween`, computes intermediate\n             * colors between `minColor` and `maxColor`. The other possible\n             * value, `category`, pulls colors from the global or chart specific\n             * [colors](#colors) array.\n             *\n             * @sample {highmaps} maps/coloraxis/dataclasscolor/\n             *         Category colors\n             *\n             * @type       {string}\n             * @default    tween\n             * @product    highcharts highstock highmaps\n             * @validvalue [\"tween\", \"category\"]\n             * @apioption  colorAxis.dataClassColor\n             */\n            /**\n             * An array of data classes or ranges for the choropleth map. If\n             * none given, the color axis is scalar and values are distributed\n             * as a gradient between the minimum and maximum colors.\n             *\n             * @sample {highmaps} maps/demo/data-class-ranges/\n             *         Multiple ranges\n             *\n             * @sample {highmaps} maps/demo/data-class-two-ranges/\n             *         Two ranges\n             *\n             * @type      {Array<*>}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.dataClasses\n             */\n            /**\n             * The layout of the color axis. Can be `'horizontal'` or `'vertical'`.\n             * If none given, the color axis has the same layout as the legend.\n             *\n             * @sample highcharts/coloraxis/horizontal-layout/\n             *         Horizontal color axis layout with vertical legend\n             *\n             * @type      {string|undefined}\n             * @since     7.2.0\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.layout\n             */\n            /**\n             * The color of each data class. If not set, the color is pulled\n             * from the global or chart-specific [colors](#colors) array. In\n             * styled mode, this option is ignored. Instead, use colors defined\n             * in CSS.\n             *\n             * @sample {highmaps} maps/demo/data-class-two-ranges/\n             *         Explicit colors\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.dataClasses.color\n             */\n            /**\n             * The start of the value range that the data class represents,\n             * relating to the point value.\n             *\n             * The range of each `dataClass` is closed in both ends, but can be\n             * overridden by the next `dataClass`.\n             *\n             * @type      {number}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.dataClasses.from\n             */\n            /**\n             * The name of the data class as it appears in the legend.\n             * If no name is given, it is automatically created based on the\n             * `from` and `to` values. For full programmatic control,\n             * [legend.labelFormatter](#legend.labelFormatter) can be used.\n             * In the formatter, `this.from` and `this.to` can be accessed.\n             *\n             * @sample {highmaps} maps/coloraxis/dataclasses-name/\n             *         Named data classes\n             *\n             * @sample {highmaps} maps/coloraxis/dataclasses-labelformatter/\n             *         Formatted data classes\n             *\n             * @type      {string}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.dataClasses.name\n             */\n            /**\n             * The end of the value range that the data class represents,\n             * relating to the point value.\n             *\n             * The range of each `dataClass` is closed in both ends, but can be\n             * overridden by the next `dataClass`.\n             *\n             * @type      {number}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.dataClasses.to\n             */\n            /** @ignore-option */\n            lineWidth: 0,\n            /**\n             * Padding of the min value relative to the length of the axis. A\n             * padding of 0.05 will make a 100px axis 5px longer.\n             *\n             * @product highcharts highstock highmaps\n             */\n            minPadding: 0,\n            /**\n             * The maximum value of the axis in terms of map point values. If\n             * `null`, the max value is automatically calculated. If the\n             * `endOnTick` option is true, the max value might be rounded up.\n             *\n             * @sample {highmaps} maps/coloraxis/gridlines/\n             *         Explicit min and max to reduce the effect of outliers\n             *\n             * @type      {number}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.max\n             */\n            /**\n             * The minimum value of the axis in terms of map point values. If\n             * `null`, the min value is automatically calculated. If the\n             * `startOnTick` option is true, the min value might be rounded\n             * down.\n             *\n             * @sample {highmaps} maps/coloraxis/gridlines/\n             *         Explicit min and max to reduce the effect of outliers\n             *\n             * @type      {number}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.min\n             */\n            /**\n             * Padding of the max value relative to the length of the axis. A\n             * padding of 0.05 will make a 100px axis 5px longer.\n             *\n             * @product highcharts highstock highmaps\n             */\n            maxPadding: 0,\n            /**\n             * Color of the grid lines extending from the axis across the\n             * gradient.\n             *\n             * @sample {highmaps} maps/coloraxis/gridlines/\n             *         Grid lines demonstrated\n             *\n             * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product   highcharts highstock highmaps\n             */\n            gridLineColor: \"#ffffff\" /* Palette.backgroundColor */,\n            /**\n             * The width of the grid lines extending from the axis across the\n             * gradient of a scalar color axis.\n             *\n             * @sample {highmaps} maps/coloraxis/gridlines/\n             *         Grid lines demonstrated\n             *\n             * @product highcharts highstock highmaps\n             */\n            gridLineWidth: 1,\n            /**\n             * The interval of the tick marks in axis units. When `null`, the\n             * tick interval is computed to approximately follow the\n             * `tickPixelInterval`.\n             *\n             * @type      {number}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.tickInterval\n             */\n            /**\n             * If [tickInterval](#colorAxis.tickInterval) is `null` this option\n             * sets the approximate pixel interval of the tick marks.\n             *\n             * @product highcharts highstock highmaps\n             */\n            tickPixelInterval: 72,\n            /**\n             * Whether to force the axis to start on a tick. Use this option\n             * with the `maxPadding` option to control the axis start.\n             *\n             * @product highcharts highstock highmaps\n             */\n            startOnTick: true,\n            /**\n             * Whether to force the axis to end on a tick. Use this option with\n             * the [maxPadding](#colorAxis.maxPadding) option to control the\n             * axis end.\n             *\n             * @product highcharts highstock highmaps\n             */\n            endOnTick: true,\n            /** @ignore */\n            offset: 0,\n            /**\n             * The triangular marker on a scalar color axis that points to the\n             * value of the hovered area. To disable the marker, set\n             * `marker: null`.\n             *\n             * @sample {highmaps} maps/coloraxis/marker/\n             *         Black marker\n             *\n             * @declare Highcharts.PointMarkerOptionsObject\n             * @product highcharts highstock highmaps\n             */\n            marker: {\n                /**\n                 * Animation for the marker as it moves between values. Set to\n                 * `false` to disable animation. Defaults to `{ duration: 50 }`.\n                 *\n                 * @type    {boolean|Partial<Highcharts.AnimationOptionsObject>}\n                 * @product highcharts highstock highmaps\n                 */\n                animation: {\n                    /** @internal */\n                    duration: 50\n                },\n                /** @internal */\n                width: 0.01,\n                /**\n                 * The color of the marker.\n                 *\n                 * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @product highcharts highstock highmaps\n                 */\n                color: \"#999999\" /* Palette.neutralColor40 */\n            },\n            /**\n             * The axis labels show the number for each tick.\n             *\n             * For more live examples on label options, see [xAxis.labels in the\n             * Highcharts API.](/highcharts#xAxis.labels)\n             *\n             * @extends xAxis.labels\n             * @product highcharts highstock highmaps\n             */\n            labels: {\n                distance: 8,\n                /**\n                 * How to handle overflowing labels on horizontal color axis. If set\n                 * to `\"allow\"`, it will not be aligned at all. By default it\n                 * `\"justify\"` labels inside the chart area. If there is room to\n                 * move it, it will be aligned to the edge, else it will be removed.\n                 *\n                 * @validvalue [\"allow\", \"justify\"]\n                 * @product    highcharts highstock highmaps\n                 */\n                overflow: 'justify',\n                rotation: 0\n            },\n            /**\n             * The color to represent the minimum of the color axis. Unless\n             * [dataClasses](#colorAxis.dataClasses) or\n             * [stops](#colorAxis.stops) are set, the gradient starts at this\n             * value.\n             *\n             * If dataClasses are set, the color is based on minColor and\n             * maxColor unless a color is set for each data class, or the\n             * [dataClassColor](#colorAxis.dataClassColor) is set.\n             *\n             * @sample {highmaps} maps/coloraxis/mincolor-maxcolor/\n             *         Min and max colors on scalar (gradient) axis\n             * @sample {highmaps} maps/coloraxis/mincolor-maxcolor-dataclasses/\n             *         On data classes\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product highcharts highstock highmaps\n             */\n            minColor: \"#e6e9ff\" /* Palette.highlightColor10 */,\n            /**\n             * The color to represent the maximum of the color axis. Unless\n             * [dataClasses](#colorAxis.dataClasses) or\n             * [stops](#colorAxis.stops) are set, the gradient ends at this\n             * value.\n             *\n             * If dataClasses are set, the color is based on minColor and\n             * maxColor unless a color is set for each data class, or the\n             * [dataClassColor](#colorAxis.dataClassColor) is set.\n             *\n             * @sample {highmaps} maps/coloraxis/mincolor-maxcolor/\n             *         Min and max colors on scalar (gradient) axis\n             * @sample {highmaps} maps/coloraxis/mincolor-maxcolor-dataclasses/\n             *         On data classes\n             *\n             * @type    {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @product highcharts highstock highmaps\n             */\n            maxColor: \"#0022ff\" /* Palette.highlightColor100 */,\n            /**\n             * Color stops for the gradient of a scalar color axis. Use this in\n             * cases where a linear gradient between a `minColor` and `maxColor`\n             * is not sufficient. The stops is an array of tuples, where the\n             * first item is a float between 0 and 1 assigning the relative\n             * position in the gradient, and the second item is the color.\n             *\n             * @sample highcharts/coloraxis/coloraxis-stops/\n             *         Color axis stops\n             * @sample highcharts/coloraxis/color-key-with-stops/\n             *         Color axis stops with custom colorKey\n             * @sample {highmaps} maps/demo/heatmap/\n             *         Heatmap with three color stops\n             *\n             * @type      {Array<Array<number,Highcharts.ColorString>>}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.stops\n             */\n            /**\n             * The pixel length of the main tick marks on the color axis.\n             */\n            tickLength: 5,\n            /**\n             * The type of interpolation to use for the color axis. Can be\n             * `linear` or `logarithmic`.\n             *\n             * @sample highcharts/coloraxis/logarithmic-with-emulate-negative-values/\n             *         Logarithmic color axis with extension to emulate negative\n             *         values\n             *\n             * @type      {Highcharts.ColorAxisTypeValue}\n             * @default   linear\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.type\n             */\n            /**\n             * Whether to reverse the axis so that the highest number is closest\n             * to the origin. Defaults to `false` in a horizontal legend and\n             * `true` in a vertical legend, where the smallest value starts on\n             * top.\n             *\n             * @type      {boolean}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.reversed\n             */\n            /**\n             * @product   highcharts highstock highmaps\n             * @excluding afterBreaks, pointBreak, pointInBreak\n             * @apioption colorAxis.events\n             */\n            /**\n             * Fires when the legend item belonging to the colorAxis is clicked.\n             * One parameter, `event`, is passed to the function.\n             *\n             * @type      {Function}\n             * @product   highcharts highstock highmaps\n             * @apioption colorAxis.events.legendItemClick\n             */\n            /**\n             * Whether to display the colorAxis in the legend.\n             *\n             * @sample highcharts/coloraxis/hidden-coloraxis-with-3d-chart/\n             *         Hidden color axis with 3d chart\n             *\n             * @see [heatmap.showInLegend](#series.heatmap.showInLegend)\n             *\n             * @since   4.2.7\n             * @product highcharts highstock highmaps\n             */\n            showInLegend: true\n        };\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return colorAxisDefaults;\n    });\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxisLike.js', [_modules['Core/Color/Color.js'], _modules['Core/Utilities.js']], function (Color, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var color = Color.parse;\n        var merge = U.merge;\n        /* *\n         *\n         *  Namespace\n         *\n         * */\n        var ColorAxisLike;\n        (function (ColorAxisLike) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initialize defined data classes.\n             * @private\n             */\n            function initDataClasses(userOptions) {\n                var axis = this, chart = axis.chart, legendItem = axis.legendItem = axis.legendItem || {}, options = axis.options, userDataClasses = userOptions.dataClasses || [];\n                var dataClass, dataClasses, colorCount = chart.options.chart.colorCount, colorCounter = 0, colors;\n                axis.dataClasses = dataClasses = [];\n                legendItem.labels = [];\n                for (var i = 0, iEnd = userDataClasses.length; i < iEnd; ++i) {\n                    dataClass = userDataClasses[i];\n                    dataClass = merge(dataClass);\n                    dataClasses.push(dataClass);\n                    if (!chart.styledMode && dataClass.color) {\n                        continue;\n                    }\n                    if (options.dataClassColor === 'category') {\n                        if (!chart.styledMode) {\n                            colors = chart.options.colors || [];\n                            colorCount = colors.length;\n                            dataClass.color = colors[colorCounter];\n                        }\n                        dataClass.colorIndex = colorCounter;\n                        // Loop back to zero\n                        colorCounter++;\n                        if (colorCounter === colorCount) {\n                            colorCounter = 0;\n                        }\n                    }\n                    else {\n                        dataClass.color = color(options.minColor).tweenTo(color(options.maxColor), iEnd < 2 ? 0.5 : i / (iEnd - 1) // #3219\n                        );\n                    }\n                }\n            }\n            ColorAxisLike.initDataClasses = initDataClasses;\n            /**\n             * Create initial color stops.\n             * @private\n             */\n            function initStops() {\n                var axis = this, options = axis.options, stops = axis.stops = options.stops || [\n                    [0, options.minColor || ''],\n                    [1, options.maxColor || '']\n                ];\n                for (var i = 0, iEnd = stops.length; i < iEnd; ++i) {\n                    stops[i].color = color(stops[i][1]);\n                }\n            }\n            ColorAxisLike.initStops = initStops;\n            /**\n             * Normalize logarithmic values.\n             * @private\n             */\n            function normalizedValue(value) {\n                var axis = this, max = axis.max || 0, min = axis.min || 0;\n                if (axis.logarithmic) {\n                    value = axis.logarithmic.log2lin(value);\n                }\n                return 1 - ((max - value) /\n                    ((max - min) || 1));\n            }\n            ColorAxisLike.normalizedValue = normalizedValue;\n            /**\n             * Translate from a value to a color.\n             * @private\n             */\n            function toColor(value, point) {\n                var axis = this;\n                var dataClasses = axis.dataClasses;\n                var stops = axis.stops;\n                var pos, from, to, color, dataClass, i;\n                if (dataClasses) {\n                    i = dataClasses.length;\n                    while (i--) {\n                        dataClass = dataClasses[i];\n                        from = dataClass.from;\n                        to = dataClass.to;\n                        if ((typeof from === 'undefined' || value >= from) &&\n                            (typeof to === 'undefined' || value <= to)) {\n                            color = dataClass.color;\n                            if (point) {\n                                point.dataClass = i;\n                                point.colorIndex = dataClass.colorIndex;\n                            }\n                            break;\n                        }\n                    }\n                }\n                else {\n                    pos = axis.normalizedValue(value);\n                    i = stops.length;\n                    while (i--) {\n                        if (pos > stops[i][0]) {\n                            break;\n                        }\n                    }\n                    from = stops[i] || stops[i + 1];\n                    to = stops[i + 1] || from;\n                    // The position within the gradient\n                    pos = 1 - (to[0] - pos) / ((to[0] - from[0]) || 1);\n                    color = from.color.tweenTo(to.color, pos);\n                }\n                return color;\n            }\n            ColorAxisLike.toColor = toColor;\n        })(ColorAxisLike || (ColorAxisLike = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return ColorAxisLike;\n    });\n    _registerModule(_modules, 'Core/Axis/Color/ColorAxis.js', [_modules['Core/Axis/Axis.js'], _modules['Core/Axis/Color/ColorAxisComposition.js'], _modules['Core/Axis/Color/ColorAxisDefaults.js'], _modules['Core/Axis/Color/ColorAxisLike.js'], _modules['Core/Legend/LegendSymbol.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Axis, ColorAxisComposition, ColorAxisDefaults, ColorAxisLike, LegendSymbol, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n            var extendStatics = function (d, b) {\n                extendStatics = Object.setPrototypeOf ||\n                    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n                    function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                if (typeof b !== \"function\" && b !== null)\n                    throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var Series = SeriesRegistry.series;\n        var extend = U.extend, fireEvent = U.fireEvent, isArray = U.isArray, isNumber = U.isNumber, merge = U.merge, pick = U.pick;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ColorAxis object for inclusion in gradient legends.\n         *\n         * @class\n         * @name Highcharts.ColorAxis\n         * @augments Highcharts.Axis\n         *\n         * @param {Highcharts.Chart} chart\n         * The related chart of the color axis.\n         *\n         * @param {Highcharts.ColorAxisOptions} userOptions\n         * The color axis options for initialization.\n         */\n        var ColorAxis = /** @class */ (function (_super) {\n            __extends(ColorAxis, _super);\n            /* *\n             *\n             *  Constructors\n             *\n             * */\n            /**\n             * @private\n             */\n            function ColorAxis(chart, userOptions) {\n                var _this = _super.call(this, chart, userOptions) || this;\n                // Prevents unnecessary padding with `hc-more`\n                _this.beforePadding = false;\n                _this.chart = void 0;\n                _this.coll = 'colorAxis';\n                _this.dataClasses = void 0;\n                _this.options = void 0;\n                _this.stops = void 0;\n                _this.visible = true;\n                _this.init(chart, userOptions);\n                return _this;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            ColorAxis.compose = function (ChartClass, FxClass, LegendClass, SeriesClass) {\n                ColorAxisComposition.compose(ColorAxis, ChartClass, FxClass, LegendClass, SeriesClass);\n            };\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Initializes the color axis.\n             *\n             * @function Highcharts.ColorAxis#init\n             *\n             * @param {Highcharts.Chart} chart\n             * The related chart of the color axis.\n             *\n             * @param {Highcharts.ColorAxisOptions} userOptions\n             * The color axis options for initialization.\n             */\n            ColorAxis.prototype.init = function (chart, userOptions) {\n                var axis = this;\n                var legend = chart.options.legend || {}, horiz = userOptions.layout ?\n                    userOptions.layout !== 'vertical' :\n                    legend.layout !== 'vertical', visible = userOptions.visible;\n                var options = merge(ColorAxis.defaultColorAxisOptions, userOptions, {\n                    showEmpty: false,\n                    title: null,\n                    visible: legend.enabled && visible !== false\n                });\n                axis.side = userOptions.side || horiz ? 2 : 1;\n                axis.reversed = userOptions.reversed || !horiz;\n                axis.opposite = !horiz;\n                _super.prototype.init.call(this, chart, options, 'colorAxis');\n                // Super.init saves the extended user options, now replace it with the\n                // originals\n                this.userOptions = userOptions;\n                if (isArray(chart.userOptions.colorAxis)) {\n                    chart.userOptions.colorAxis[this.index] = userOptions;\n                }\n                // Prepare data classes\n                if (userOptions.dataClasses) {\n                    axis.initDataClasses(userOptions);\n                }\n                axis.initStops();\n                // Override original axis properties\n                axis.horiz = horiz;\n                axis.zoomEnabled = false;\n            };\n            /**\n             * Returns true if the series has points at all.\n             *\n             * @function Highcharts.ColorAxis#hasData\n             *\n             * @return {boolean}\n             * True, if the series has points, otherwise false.\n             */\n            ColorAxis.prototype.hasData = function () {\n                return !!(this.tickPositions || []).length;\n            };\n            /**\n             * Override so that ticks are not added in data class axes (#6914)\n             * @private\n             */\n            ColorAxis.prototype.setTickPositions = function () {\n                if (!this.dataClasses) {\n                    return _super.prototype.setTickPositions.call(this);\n                }\n            };\n            /**\n             * Extend the setOptions method to process extreme colors and color stops.\n             * @private\n             */\n            ColorAxis.prototype.setOptions = function (userOptions) {\n                var axis = this;\n                _super.prototype.setOptions.call(this, userOptions);\n                axis.options.crosshair = axis.options.marker;\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.setAxisSize = function () {\n                var axis = this;\n                var symbol = axis.legendItem && axis.legendItem.symbol;\n                var chart = axis.chart;\n                var legendOptions = chart.options.legend || {};\n                var x, y, width, height;\n                if (symbol) {\n                    this.left = x = symbol.attr('x');\n                    this.top = y = symbol.attr('y');\n                    this.width = width = symbol.attr('width');\n                    this.height = height = symbol.attr('height');\n                    this.right = chart.chartWidth - x - width;\n                    this.bottom = chart.chartHeight - y - height;\n                    this.len = this.horiz ? width : height;\n                    this.pos = this.horiz ? x : y;\n                }\n                else {\n                    // Fake length for disabled legend to avoid tick issues\n                    // and such (#5205)\n                    this.len = (this.horiz ?\n                        legendOptions.symbolWidth :\n                        legendOptions.symbolHeight) || ColorAxis.defaultLegendLength;\n                }\n            };\n            /**\n             * Override the getOffset method to add the whole axis groups inside the\n             * legend.\n             * @private\n             */\n            ColorAxis.prototype.getOffset = function () {\n                var axis = this;\n                var group = axis.legendItem && axis.legendItem.group;\n                var sideOffset = axis.chart.axisOffset[axis.side];\n                if (group) {\n                    // Hook for the getOffset method to add groups to this parent\n                    // group\n                    axis.axisParent = group;\n                    // Call the base\n                    _super.prototype.getOffset.call(this);\n                    var legend_1 = this.chart.legend;\n                    // Adds `maxLabelLength` needed for label padding corrections done\n                    // by `render()` and `getMargins()` (#15551).\n                    legend_1.allItems.forEach(function (item) {\n                        if (item instanceof ColorAxis) {\n                            item.drawLegendSymbol(legend_1, item);\n                        }\n                    });\n                    legend_1.render();\n                    this.chart.getMargins(true);\n                    // First time only\n                    if (!axis.added) {\n                        axis.added = true;\n                        axis.labelLeft = 0;\n                        axis.labelRight = axis.width;\n                    }\n                    // Reset it to avoid color axis reserving space\n                    axis.chart.axisOffset[axis.side] = sideOffset;\n                }\n            };\n            /**\n             * Create the color gradient.\n             * @private\n             */\n            ColorAxis.prototype.setLegendColor = function () {\n                var axis = this;\n                var horiz = axis.horiz;\n                var reversed = axis.reversed;\n                var one = reversed ? 1 : 0;\n                var zero = reversed ? 0 : 1;\n                var grad = horiz ? [one, 0, zero, 0] : [0, zero, 0, one]; // #3190\n                axis.legendColor = {\n                    linearGradient: {\n                        x1: grad[0],\n                        y1: grad[1],\n                        x2: grad[2],\n                        y2: grad[3]\n                    },\n                    stops: axis.stops\n                };\n            };\n            /**\n             * The color axis appears inside the legend and has its own legend symbol.\n             * @private\n             */\n            ColorAxis.prototype.drawLegendSymbol = function (legend, item) {\n                var _a;\n                var axis = this, legendItem = item.legendItem || {}, padding = legend.padding, legendOptions = legend.options, labelOptions = axis.options.labels, itemDistance = pick(legendOptions.itemDistance, 10), horiz = axis.horiz, width = pick(legendOptions.symbolWidth, horiz ? ColorAxis.defaultLegendLength : 12), height = pick(legendOptions.symbolHeight, horiz ? 12 : ColorAxis.defaultLegendLength), labelPadding = pick(\n                // @todo: This option is not documented, nor implemented when\n                // vertical\n                legendOptions.labelPadding, horiz ? 16 : 30);\n                this.setLegendColor();\n                // Create the gradient\n                if (!legendItem.symbol) {\n                    legendItem.symbol = this.chart.renderer.symbol('roundedRect', 0, legend.baseline - 11, width, height, { r: (_a = legendOptions.symbolRadius) !== null && _a !== void 0 ? _a : 3 }).attr({\n                        zIndex: 1\n                    }).add(legendItem.group);\n                }\n                // Set how much space this legend item takes up\n                legendItem.labelWidth = (width +\n                    padding +\n                    (horiz ?\n                        itemDistance :\n                        pick(labelOptions.x, labelOptions.distance) +\n                            this.maxLabelLength));\n                legendItem.labelHeight = height + padding + (horiz ? labelPadding : 0);\n            };\n            /**\n             * Fool the legend.\n             * @private\n             */\n            ColorAxis.prototype.setState = function (state) {\n                this.series.forEach(function (series) {\n                    series.setState(state);\n                });\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.setVisible = function () {\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.getSeriesExtremes = function () {\n                var axis = this;\n                var series = axis.series;\n                var colorValArray, colorKey, colorValIndex, pointArrayMap, calculatedExtremes, cSeries, i = series.length, yData, j;\n                this.dataMin = Infinity;\n                this.dataMax = -Infinity;\n                while (i--) { // x, y, value, other\n                    cSeries = series[i];\n                    colorKey = cSeries.colorKey = pick(cSeries.options.colorKey, cSeries.colorKey, cSeries.pointValKey, cSeries.zoneAxis, 'y');\n                    pointArrayMap = cSeries.pointArrayMap;\n                    calculatedExtremes = cSeries[colorKey + 'Min'] &&\n                        cSeries[colorKey + 'Max'];\n                    if (cSeries[colorKey + 'Data']) {\n                        colorValArray = cSeries[colorKey + 'Data'];\n                    }\n                    else {\n                        if (!pointArrayMap) {\n                            colorValArray = cSeries.yData;\n                        }\n                        else {\n                            colorValArray = [];\n                            colorValIndex = pointArrayMap.indexOf(colorKey);\n                            yData = cSeries.yData;\n                            if (colorValIndex >= 0 && yData) {\n                                for (j = 0; j < yData.length; j++) {\n                                    colorValArray.push(pick(yData[j][colorValIndex], yData[j]));\n                                }\n                            }\n                        }\n                    }\n                    // If color key extremes are already calculated, use them.\n                    if (calculatedExtremes) {\n                        cSeries.minColorValue = cSeries[colorKey + 'Min'];\n                        cSeries.maxColorValue = cSeries[colorKey + 'Max'];\n                    }\n                    else {\n                        var cExtremes = Series.prototype.getExtremes.call(cSeries, colorValArray);\n                        cSeries.minColorValue = cExtremes.dataMin;\n                        cSeries.maxColorValue = cExtremes.dataMax;\n                    }\n                    if (typeof cSeries.minColorValue !== 'undefined') {\n                        this.dataMin =\n                            Math.min(this.dataMin, cSeries.minColorValue);\n                        this.dataMax =\n                            Math.max(this.dataMax, cSeries.maxColorValue);\n                    }\n                    if (!calculatedExtremes) {\n                        Series.prototype.applyExtremes.call(cSeries);\n                    }\n                }\n            };\n            /**\n             * Internal function to draw a crosshair.\n             *\n             * @function Highcharts.ColorAxis#drawCrosshair\n             *\n             * @param {Highcharts.PointerEventObject} [e]\n             *        The event arguments from the modified pointer event, extended with\n             *        `chartX` and `chartY`\n             *\n             * @param {Highcharts.Point} [point]\n             *        The Point object if the crosshair snaps to points.\n             *\n             * @emits Highcharts.ColorAxis#event:afterDrawCrosshair\n             * @emits Highcharts.ColorAxis#event:drawCrosshair\n             */\n            ColorAxis.prototype.drawCrosshair = function (e, point) {\n                var axis = this, legendItem = axis.legendItem || {}, plotX = point && point.plotX, plotY = point && point.plotY, axisPos = axis.pos, axisLen = axis.len;\n                var crossPos;\n                if (point) {\n                    crossPos = axis.toPixels(point.getNestedProperty(point.series.colorKey));\n                    if (crossPos < axisPos) {\n                        crossPos = axisPos - 2;\n                    }\n                    else if (crossPos > axisPos + axisLen) {\n                        crossPos = axisPos + axisLen + 2;\n                    }\n                    point.plotX = crossPos;\n                    point.plotY = axis.len - crossPos;\n                    _super.prototype.drawCrosshair.call(this, e, point);\n                    point.plotX = plotX;\n                    point.plotY = plotY;\n                    if (axis.cross &&\n                        !axis.cross.addedToColorAxis &&\n                        legendItem.group) {\n                        axis.cross\n                            .addClass('highcharts-coloraxis-marker')\n                            .add(legendItem.group);\n                        axis.cross.addedToColorAxis = true;\n                        if (!axis.chart.styledMode &&\n                            typeof axis.crosshair === 'object') {\n                            axis.cross.attr({\n                                fill: axis.crosshair.color\n                            });\n                        }\n                    }\n                }\n            };\n            /**\n             * @private\n             */\n            ColorAxis.prototype.getPlotLinePath = function (options) {\n                var axis = this, left = axis.left, pos = options.translatedValue, top = axis.top;\n                // crosshairs only\n                return isNumber(pos) ? // pos can be 0 (#3969)\n                    (axis.horiz ? [\n                        ['M', pos - 4, top - 6],\n                        ['L', pos + 4, top - 6],\n                        ['L', pos, top],\n                        ['Z']\n                    ] : [\n                        ['M', left, pos],\n                        ['L', left - 6, pos + 6],\n                        ['L', left - 6, pos - 6],\n                        ['Z']\n                    ]) :\n                    _super.prototype.getPlotLinePath.call(this, options);\n            };\n            /**\n             * Updates a color axis instance with a new set of options. The options are\n             * merged with the existing options, so only new or altered options need to\n             * be specified.\n             *\n             * @function Highcharts.ColorAxis#update\n             *\n             * @param {Highcharts.ColorAxisOptions} newOptions\n             * The new options that will be merged in with existing options on the color\n             * axis.\n             *\n             * @param {boolean} [redraw]\n             * Whether to redraw the chart after the color axis is altered. If doing\n             * more operations on the chart, it is a good idea to set redraw to `false`\n             * and call {@link Highcharts.Chart#redraw} after.\n             */\n            ColorAxis.prototype.update = function (newOptions, redraw) {\n                var axis = this, chart = axis.chart, legend = chart.legend;\n                this.series.forEach(function (series) {\n                    // Needed for Axis.update when choropleth colors change\n                    series.isDirtyData = true;\n                });\n                // When updating data classes, destroy old items and make sure new\n                // ones are created (#3207)\n                if (newOptions.dataClasses && legend.allItems || axis.dataClasses) {\n                    axis.destroyItems();\n                }\n                _super.prototype.update.call(this, newOptions, redraw);\n                if (axis.legendItem && axis.legendItem.label) {\n                    axis.setLegendColor();\n                    legend.colorizeItem(this, true);\n                }\n            };\n            /**\n             * Destroy color axis legend items.\n             * @private\n             */\n            ColorAxis.prototype.destroyItems = function () {\n                var axis = this, chart = axis.chart, legendItem = axis.legendItem || {};\n                if (legendItem.label) {\n                    chart.legend.destroyItem(axis);\n                }\n                else if (legendItem.labels) {\n                    for (var _i = 0, _a = legendItem.labels; _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        chart.legend.destroyItem(item);\n                    }\n                }\n                chart.isDirtyLegend = true;\n            };\n            //   Removing the whole axis (#14283)\n            ColorAxis.prototype.destroy = function () {\n                this.chart.isDirtyLegend = true;\n                this.destroyItems();\n                _super.prototype.destroy.apply(this, [].slice.call(arguments));\n            };\n            /**\n             * Removes the color axis and the related legend item.\n             *\n             * @function Highcharts.ColorAxis#remove\n             *\n             * @param {boolean} [redraw=true]\n             *        Whether to redraw the chart following the remove.\n             */\n            ColorAxis.prototype.remove = function (redraw) {\n                this.destroyItems();\n                _super.prototype.remove.call(this, redraw);\n            };\n            /**\n             * Get the legend item symbols for data classes.\n             * @private\n             */\n            ColorAxis.prototype.getDataClassLegendSymbols = function () {\n                var axis = this, chart = axis.chart, legendItems = (axis.legendItem &&\n                    axis.legendItem.labels ||\n                    []), legendOptions = chart.options.legend, valueDecimals = pick(legendOptions.valueDecimals, -1), valueSuffix = pick(legendOptions.valueSuffix, '');\n                var getPointsInDataClass = function (i) {\n                    return axis.series.reduce(function (points, s) {\n                        points.push.apply(points, s.points.filter(function (point) {\n                            return point.dataClass === i;\n                        }));\n                        return points;\n                    }, []);\n                };\n                var name;\n                if (!legendItems.length) {\n                    axis.dataClasses.forEach(function (dataClass, i) {\n                        var from = dataClass.from, to = dataClass.to, numberFormatter = chart.numberFormatter;\n                        var vis = true;\n                        // Assemble the default name. This can be overridden\n                        // by legend.options.labelFormatter\n                        name = '';\n                        if (typeof from === 'undefined') {\n                            name = '< ';\n                        }\n                        else if (typeof to === 'undefined') {\n                            name = '> ';\n                        }\n                        if (typeof from !== 'undefined') {\n                            name += numberFormatter(from, valueDecimals) + valueSuffix;\n                        }\n                        if (typeof from !== 'undefined' && typeof to !== 'undefined') {\n                            name += ' - ';\n                        }\n                        if (typeof to !== 'undefined') {\n                            name += numberFormatter(to, valueDecimals) + valueSuffix;\n                        }\n                        // Add a mock object to the legend items\n                        legendItems.push(extend({\n                            chart: chart,\n                            name: name,\n                            options: {},\n                            drawLegendSymbol: LegendSymbol.rectangle,\n                            visible: true,\n                            isDataClass: true,\n                            // Override setState to set either normal or inactive\n                            // state to all points in this data class\n                            setState: function (state) {\n                                for (var _i = 0, _a = getPointsInDataClass(i); _i < _a.length; _i++) {\n                                    var point = _a[_i];\n                                    point.setState(state);\n                                }\n                            },\n                            // Override setState to show or hide all points in this\n                            // data class\n                            setVisible: function () {\n                                this.visible = vis = axis.visible = !vis;\n                                var affectedSeries = [];\n                                for (var _i = 0, _a = getPointsInDataClass(i); _i < _a.length; _i++) {\n                                    var point = _a[_i];\n                                    point.setVisible(vis);\n                                    if (affectedSeries.indexOf(point.series) === -1) {\n                                        affectedSeries.push(point.series);\n                                    }\n                                }\n                                chart.legend.colorizeItem(this, vis);\n                                affectedSeries.forEach(function (series) {\n                                    fireEvent(series, 'afterDataClassLegendClick');\n                                });\n                            }\n                        }, dataClass));\n                    });\n                }\n                return legendItems;\n            };\n            /* *\n             *\n             *  Static Properties\n             *\n             * */\n            ColorAxis.defaultColorAxisOptions = ColorAxisDefaults;\n            ColorAxis.defaultLegendLength = 200;\n            /**\n             * @private\n             */\n            ColorAxis.keepProps = [\n                'legendItem'\n            ];\n            return ColorAxis;\n        }(Axis));\n        extend(ColorAxis.prototype, ColorAxisLike);\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        // Properties to preserve after destroy, for Axis.update (#5881, #6025).\n        Array.prototype.push.apply(Axis.keepProps, ColorAxis.keepProps);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Color axis types\n         *\n         * @typedef {\"linear\"|\"logarithmic\"} Highcharts.ColorAxisTypeValue\n         */\n        ''; // detach doclet above\n\n        return ColorAxis;\n    });\n    _registerModule(_modules, 'masters/modules/coloraxis.src.js', [_modules['Core/Globals.js'], _modules['Core/Axis/Color/ColorAxis.js']], function (Highcharts, ColorAxis) {\n\n        var G = Highcharts;\n        G.ColorAxis = ColorAxis;\n        ColorAxis.compose(G.Chart, G.Fx, G.Legend, G.Series);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","Color","U","ColorAxisComposition","color","parse","addEvent","extend","merge","pick","splat","ColorAxisConstructor","composedMembers","onChartAfterGetAxes","_this","options","colorAxis","map","axisOptions","onLegendAfterGetAllItems","e","i","colorAxes","chart","destroyItem","item","allItems","indexOf","splice","colorAxisItems","forEach","showInLegend","dataClasses","visible","concat","getDataClassLegendSymbols","push","series","legendType","points","point","length","unshift","onLegendAfterColorizeItem","legendColor","legendItem","symbol","attr","fill","onLegendAfterUpdate","_a","update","redraw","onSeriesAfterTranslate","colorAttribs","translateColors","onSeriesBindAxes","axisTypes","pointSetVisible","vis","method","Boolean","key","buildKDTree","seriesTranslateColors","data","nullColor","colorKey","value","getNestedProperty","isNull","toColor","label","legend","colorizeItem","wrapFxFillSetter","elem","start","tweenTo","end","pos","wrapFxStrokeSetter","compose","ColorAxisClass","ChartClass","FxClass","LegendClass","SeriesClass","pushUnique","superCreateAxis","chartProto","prototype","collectionsWithUpdate","collectionsWithInit","addColorAxis","createAxis","type","arguments","axis","index","isX","isDirtyLegend","axes","bindAxes","isDirtyData","animation","fxProto","fillSetter","strokeSetter","optionalAxis","pointClass","setVisible","order","lineWidth","minPadding","maxPadding","gridLineColor","gridLineWidth","tickPixelInterval","startOnTick","endOnTick","offset","marker","duration","width","labels","distance","overflow","rotation","minColor","maxColor","tickLength","ColorAxisLike","initDataClasses","userOptions","dataClass","colors","userDataClasses","colorCount","colorCounter","iEnd","styledMode","dataClassColor","colorIndex","initStops","stops","normalizedValue","max","min","logarithmic","log2lin","from","to","Axis","ColorAxisDefaults","LegendSymbol","SeriesRegistry","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","call","TypeError","String","__","constructor","create","Series","fireEvent","isArray","isNumber","ColorAxis","_super","beforePadding","coll","init","horiz","layout","defaultColorAxisOptions","showEmpty","title","enabled","side","reversed","opposite","zoomEnabled","hasData","tickPositions","setTickPositions","setOptions","crosshair","setAxisSize","x","y","height","legendOptions","left","top","right","chartWidth","bottom","chartHeight","len","symbolWidth","symbolHeight","defaultLegendLength","getOffset","group","sideOffset","axisOffset","axisParent","legend_1","drawLegendSymbol","render","getMargins","added","labelLeft","labelRight","setLegendColor","one","zero","grad","linearGradient","x1","y1","x2","y2","padding","labelOptions","itemDistance","labelPadding","renderer","baseline","r","symbolRadius","zIndex","add","labelWidth","maxLabelLength","labelHeight","setState","state","getSeriesExtremes","colorValArray","colorValIndex","pointArrayMap","calculatedExtremes","cSeries","yData","j","dataMin","Infinity","dataMax","pointValKey","zoneAxis","minColorValue","maxColorValue","cExtremes","getExtremes","Math","applyExtremes","drawCrosshair","crossPos","plotX","plotY","axisPos","axisLen","toPixels","cross","addedToColorAxis","addClass","getPlotLinePath","translatedValue","newOptions","destroyItems","_i","destroy","slice","remove","name","legendItems","valueDecimals","valueSuffix","getPointsInDataClass","reduce","s","filter","numberFormatter","rectangle","isDataClass","affectedSeries","keepProps","G","Chart","Fx","Legend"],"mappings":"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"}