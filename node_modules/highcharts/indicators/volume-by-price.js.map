{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2021 Paweł Dalek\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/volume-by-price', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/VBP/VBPPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        const { sma: { prototype: { pointClass: SMAPoint } } } = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class VBPPoint extends SMAPoint {\n            // Required for destroying negative part of volume\n            destroy() {\n                // @todo: this.negativeGraphic doesn't seem to be used anywhere\n                if (this.negativeGraphic) {\n                    this.negativeGraphic = this.negativeGraphic.destroy();\n                }\n                super.destroy.apply(this, arguments);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return VBPPoint;\n    });\n    _registerModule(_modules, 'Stock/Indicators/VBP/VBPIndicator.js', [_modules['Stock/Indicators/VBP/VBPPoint.js'], _modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Core/Chart/StockChart.js']], function (VBPPoint, A, H, SeriesRegistry, U, StockChart) {\n        /* *\n         *\n         *  (c) 2010-2021 Paweł Dalek\n         *\n         *  Volume By Price (VBP) indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { animObject } = A;\n        const { noop } = H;\n        const { column: { prototype: columnProto }, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { addEvent, arrayMax, arrayMin, correctFloat, defined, error, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const abs = Math.abs;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils\n        /**\n         * @private\n         */\n        function arrayExtremesOHLC(data) {\n            const dataLength = data.length;\n            let min = data[0][3], max = min, i = 1, currentPoint;\n            for (; i < dataLength; i++) {\n                currentPoint = data[i][3];\n                if (currentPoint < min) {\n                    min = currentPoint;\n                }\n                if (currentPoint > max) {\n                    max = currentPoint;\n                }\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Volume By Price (VBP) series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.vbp\n         *\n         * @augments Highcharts.Series\n         */\n        class VBPIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.negWidths = void 0;\n                this.options = void 0;\n                this.points = void 0;\n                this.posWidths = void 0;\n                this.priceZones = void 0;\n                this.rangeStep = void 0;\n                this.volumeDataArray = void 0;\n                this.zoneStarts = void 0;\n                this.zoneLinesSVG = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init(chart, options) {\n                const indicator = this;\n                // series.update() sends data that is not necessary\n                // as everything is calculated in getValues(), #17007\n                delete options.data;\n                super.init.apply(indicator, arguments);\n                // Only after series are linked add some additional logic/properties.\n                const unbinder = addEvent(StockChart, 'afterLinkSeries', function () {\n                    // Protection for a case where the indicator is being updated,\n                    // for a brief moment the indicator is deleted.\n                    if (indicator.options) {\n                        const params = indicator.options.params, baseSeries = indicator.linkedParent, volumeSeries = chart.get(params.volumeSeriesID);\n                        indicator.addCustomEvents(baseSeries, volumeSeries);\n                    }\n                    unbinder();\n                }, {\n                    order: 1\n                });\n                return indicator;\n            }\n            // Adds events related with removing series\n            addCustomEvents(baseSeries, volumeSeries) {\n                const indicator = this, toEmptyIndicator = () => {\n                    indicator.chart.redraw();\n                    indicator.setData([]);\n                    indicator.zoneStarts = [];\n                    if (indicator.zoneLinesSVG) {\n                        indicator.zoneLinesSVG = indicator.zoneLinesSVG.destroy();\n                    }\n                };\n                // If base series is deleted, indicator series data is filled with\n                // an empty array\n                indicator.dataEventsToUnbind.push(addEvent(baseSeries, 'remove', function () {\n                    toEmptyIndicator();\n                }));\n                // If volume series is deleted, indicator series data is filled with\n                // an empty array\n                if (volumeSeries) {\n                    indicator.dataEventsToUnbind.push(addEvent(volumeSeries, 'remove', function () {\n                        toEmptyIndicator();\n                    }));\n                }\n                return indicator;\n            }\n            // Initial animation\n            animate(init) {\n                const series = this, inverted = series.chart.inverted, group = series.group, attr = {};\n                if (!init && group) {\n                    const position = inverted ? series.yAxis.top : series.xAxis.left;\n                    if (inverted) {\n                        group['forceAnimate:translateY'] = true;\n                        attr.translateY = position;\n                    }\n                    else {\n                        group['forceAnimate:translateX'] = true;\n                        attr.translateX = position;\n                    }\n                    group.animate(attr, extend(animObject(series.options.animation), {\n                        step: function (val, fx) {\n                            series.group.attr({\n                                scaleX: Math.max(0.001, fx.pos)\n                            });\n                        }\n                    }));\n                }\n            }\n            drawPoints() {\n                const indicator = this;\n                if (indicator.options.volumeDivision.enabled) {\n                    indicator.posNegVolume(true, true);\n                    columnProto.drawPoints.apply(indicator, arguments);\n                    indicator.posNegVolume(false, false);\n                }\n                columnProto.drawPoints.apply(indicator, arguments);\n            }\n            // Function responsible for dividing volume into positive and negative\n            posNegVolume(initVol, pos) {\n                const indicator = this, signOrder = pos ?\n                    ['positive', 'negative'] :\n                    ['negative', 'positive'], volumeDivision = indicator.options.volumeDivision, pointLength = indicator.points.length;\n                let posWidths = [], negWidths = [], i = 0, pointWidth, priceZone, wholeVol, point;\n                if (initVol) {\n                    indicator.posWidths = posWidths;\n                    indicator.negWidths = negWidths;\n                }\n                else {\n                    posWidths = indicator.posWidths;\n                    negWidths = indicator.negWidths;\n                }\n                for (; i < pointLength; i++) {\n                    point = indicator.points[i];\n                    point[signOrder[0] + 'Graphic'] = point.graphic;\n                    point.graphic = point[signOrder[1] + 'Graphic'];\n                    if (initVol) {\n                        pointWidth = point.shapeArgs.width;\n                        priceZone = indicator.priceZones[i];\n                        wholeVol = priceZone.wholeVolumeData;\n                        if (wholeVol) {\n                            posWidths.push(pointWidth / wholeVol * priceZone.positiveVolumeData);\n                            negWidths.push(pointWidth / wholeVol * priceZone.negativeVolumeData);\n                        }\n                        else {\n                            posWidths.push(0);\n                            negWidths.push(0);\n                        }\n                    }\n                    point.color = pos ?\n                        volumeDivision.styles.positiveColor :\n                        volumeDivision.styles.negativeColor;\n                    point.shapeArgs.width = pos ?\n                        indicator.posWidths[i] :\n                        indicator.negWidths[i];\n                    point.shapeArgs.x = pos ?\n                        point.shapeArgs.x :\n                        indicator.posWidths[i];\n                }\n            }\n            translate() {\n                const indicator = this, options = indicator.options, chart = indicator.chart, yAxis = indicator.yAxis, yAxisMin = yAxis.min, zoneLinesOptions = indicator.options.zoneLines, priceZones = (indicator.priceZones);\n                let yBarOffset = 0, volumeDataArray, maxVolume, primalBarWidth, barHeight, barHeightP, oldBarHeight, barWidth, pointPadding, chartPlotTop, barX, barY;\n                columnProto.translate.apply(indicator);\n                const indicatorPoints = indicator.points;\n                // Do translate operation when points exist\n                if (indicatorPoints.length) {\n                    pointPadding = options.pointPadding < 0.5 ?\n                        options.pointPadding :\n                        0.1;\n                    volumeDataArray = indicator.volumeDataArray;\n                    maxVolume = arrayMax(volumeDataArray);\n                    primalBarWidth = chart.plotWidth / 2;\n                    chartPlotTop = chart.plotTop;\n                    barHeight = abs(yAxis.toPixels(yAxisMin) -\n                        yAxis.toPixels(yAxisMin + indicator.rangeStep));\n                    oldBarHeight = abs(yAxis.toPixels(yAxisMin) -\n                        yAxis.toPixels(yAxisMin + indicator.rangeStep));\n                    if (pointPadding) {\n                        barHeightP = abs(barHeight * (1 - 2 * pointPadding));\n                        yBarOffset = abs((barHeight - barHeightP) / 2);\n                        barHeight = abs(barHeightP);\n                    }\n                    indicatorPoints.forEach(function (point, index) {\n                        barX = point.barX = point.plotX = 0;\n                        barY = point.plotY = (yAxis.toPixels(priceZones[index].start) -\n                            chartPlotTop -\n                            (yAxis.reversed ?\n                                (barHeight - oldBarHeight) :\n                                barHeight) -\n                            yBarOffset);\n                        barWidth = correctFloat(primalBarWidth *\n                            priceZones[index].wholeVolumeData / maxVolume);\n                        point.pointWidth = barWidth;\n                        point.shapeArgs = indicator.crispCol.apply(// eslint-disable-line no-useless-call\n                        indicator, [barX, barY, barWidth, barHeight]);\n                        point.volumeNeg = priceZones[index].negativeVolumeData;\n                        point.volumePos = priceZones[index].positiveVolumeData;\n                        point.volumeAll = priceZones[index].wholeVolumeData;\n                    });\n                    if (zoneLinesOptions.enabled) {\n                        indicator.drawZones(chart, yAxis, indicator.zoneStarts, zoneLinesOptions.styles);\n                    }\n                }\n            }\n            getExtremes() {\n                const prevCompare = this.options.compare, prevCumulative = this.options.cumulative;\n                let ret;\n                // Temporarily disable cumulative and compare while getting the extremes\n                if (this.options.compare) {\n                    this.options.compare = void 0;\n                    ret = super.getExtremes();\n                    this.options.compare = prevCompare;\n                }\n                else if (this.options.cumulative) {\n                    this.options.cumulative = false;\n                    ret = super.getExtremes();\n                    this.options.cumulative = prevCumulative;\n                }\n                else {\n                    ret = super.getExtremes();\n                }\n                return ret;\n            }\n            getValues(series, params) {\n                const indicator = this, xValues = series.processedXData, yValues = series.processedYData, chart = indicator.chart, ranges = params.ranges, VBP = [], xData = [], yData = [], volumeSeries = chart.get(params.volumeSeriesID);\n                // Checks if base series exists\n                if (!series.chart) {\n                    error('Base series not found! In case it has been removed, add ' +\n                        'a new one.', true, chart);\n                    return;\n                }\n                // Checks if volume series exists and if it has data\n                if (!volumeSeries ||\n                    !volumeSeries.processedXData.length) {\n                    const errorMessage = volumeSeries && !volumeSeries.processedXData.length ?\n                        ' does not contain any data.' :\n                        ' not found! Check `volumeSeriesID`.';\n                    error('Series ' +\n                        params.volumeSeriesID + errorMessage, true, chart);\n                    return;\n                }\n                // Checks if series data fits the OHLC format\n                const isOHLC = isArray(yValues[0]);\n                if (isOHLC && yValues[0].length !== 4) {\n                    error('Type of ' +\n                        series.name +\n                        ' series is different than line, OHLC or candlestick.', true, chart);\n                    return;\n                }\n                // Price zones contains all the information about the zones (index,\n                // start, end, volumes, etc.)\n                const priceZones = indicator.priceZones = indicator.specifyZones(isOHLC, xValues, yValues, ranges, volumeSeries);\n                priceZones.forEach(function (zone, index) {\n                    VBP.push([zone.x, zone.end]);\n                    xData.push(VBP[index][0]);\n                    yData.push(VBP[index][1]);\n                });\n                return {\n                    values: VBP,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            // Specifing where each zone should start ans end\n            specifyZones(isOHLC, xValues, yValues, ranges, volumeSeries) {\n                const indicator = this, rangeExtremes = (isOHLC ? arrayExtremesOHLC(yValues) : false), zoneStarts = indicator.zoneStarts = [], priceZones = [];\n                let lowRange = rangeExtremes ?\n                    rangeExtremes.min :\n                    arrayMin(yValues), highRange = rangeExtremes ?\n                    rangeExtremes.max :\n                    arrayMax(yValues), i = 0, j = 1;\n                // If the compare mode is set on the main series, change the VBP\n                // zones to fit new extremes, #16277.\n                const mainSeries = indicator.linkedParent;\n                if (!indicator.options.compareToMain &&\n                    mainSeries.dataModify) {\n                    lowRange = mainSeries.dataModify.modifyValue(lowRange);\n                    highRange = mainSeries.dataModify.modifyValue(highRange);\n                }\n                if (!defined(lowRange) || !defined(highRange)) {\n                    if (this.points.length) {\n                        this.setData([]);\n                        this.zoneStarts = [];\n                        if (this.zoneLinesSVG) {\n                            this.zoneLinesSVG = this.zoneLinesSVG.destroy();\n                        }\n                    }\n                    return [];\n                }\n                const rangeStep = indicator.rangeStep =\n                    correctFloat(highRange - lowRange) / ranges;\n                zoneStarts.push(lowRange);\n                for (; i < ranges - 1; i++) {\n                    zoneStarts.push(correctFloat(zoneStarts[i] + rangeStep));\n                }\n                zoneStarts.push(highRange);\n                const zoneStartsLength = zoneStarts.length;\n                //    Creating zones\n                for (; j < zoneStartsLength; j++) {\n                    priceZones.push({\n                        index: j - 1,\n                        x: xValues[0],\n                        start: zoneStarts[j - 1],\n                        end: zoneStarts[j]\n                    });\n                }\n                return indicator.volumePerZone(isOHLC, priceZones, volumeSeries, xValues, yValues);\n            }\n            // Calculating sum of volume values for a specific zone\n            volumePerZone(isOHLC, priceZones, volumeSeries, xValues, yValues) {\n                const indicator = this, volumeXData = volumeSeries.processedXData, volumeYData = volumeSeries.processedYData, lastZoneIndex = priceZones.length - 1, baseSeriesLength = yValues.length, volumeSeriesLength = volumeYData.length;\n                let previousValue, startFlag, endFlag, value, i;\n                // Checks if each point has a corresponding volume value\n                if (abs(baseSeriesLength - volumeSeriesLength)) {\n                    // If the first point don't have volume, add 0 value at the\n                    // beggining of the volume array\n                    if (xValues[0] !== volumeXData[0]) {\n                        volumeYData.unshift(0);\n                    }\n                    // If the last point don't have volume, add 0 value at the end\n                    // of the volume array\n                    if (xValues[baseSeriesLength - 1] !==\n                        volumeXData[volumeSeriesLength - 1]) {\n                        volumeYData.push(0);\n                    }\n                }\n                indicator.volumeDataArray = [];\n                priceZones.forEach(function (zone) {\n                    zone.wholeVolumeData = 0;\n                    zone.positiveVolumeData = 0;\n                    zone.negativeVolumeData = 0;\n                    for (i = 0; i < baseSeriesLength; i++) {\n                        startFlag = false;\n                        endFlag = false;\n                        value = isOHLC ? yValues[i][3] : yValues[i];\n                        previousValue = i ?\n                            (isOHLC ?\n                                yValues[i - 1][3] :\n                                yValues[i - 1]) :\n                            value;\n                        // If the compare mode is set on the main series,\n                        // change the VBP zones to fit new extremes, #16277.\n                        const mainSeries = indicator.linkedParent;\n                        if (!indicator.options.compareToMain &&\n                            mainSeries.dataModify) {\n                            value = mainSeries.dataModify.modifyValue(value);\n                            previousValue = mainSeries.dataModify\n                                .modifyValue(previousValue);\n                        }\n                        // Checks if this is the point with the\n                        // lowest close value and if so, adds it calculations\n                        if (value <= zone.start && zone.index === 0) {\n                            startFlag = true;\n                        }\n                        // Checks if this is the point with the highest\n                        // close value and if so, adds it calculations\n                        if (value >= zone.end && zone.index === lastZoneIndex) {\n                            endFlag = true;\n                        }\n                        if ((value > zone.start || startFlag) &&\n                            (value < zone.end || endFlag)) {\n                            zone.wholeVolumeData += volumeYData[i];\n                            if (previousValue > value) {\n                                zone.negativeVolumeData += volumeYData[i];\n                            }\n                            else {\n                                zone.positiveVolumeData += volumeYData[i];\n                            }\n                        }\n                    }\n                    indicator.volumeDataArray.push(zone.wholeVolumeData);\n                });\n                return priceZones;\n            }\n            // Function responsoble for drawing additional lines indicating zones\n            drawZones(chart, yAxis, zonesValues, zonesStyles) {\n                const indicator = this, renderer = chart.renderer, leftLinePos = 0, rightLinePos = chart.plotWidth, verticalOffset = chart.plotTop;\n                let zoneLinesSVG = indicator.zoneLinesSVG, zoneLinesPath = [], verticalLinePos;\n                zonesValues.forEach(function (value) {\n                    verticalLinePos = yAxis.toPixels(value) - verticalOffset;\n                    zoneLinesPath = zoneLinesPath.concat(chart.renderer.crispLine([[\n                            'M',\n                            leftLinePos,\n                            verticalLinePos\n                        ], [\n                            'L',\n                            rightLinePos,\n                            verticalLinePos\n                        ]], zonesStyles.lineWidth));\n                });\n                // Create zone lines one path or update it while animating\n                if (zoneLinesSVG) {\n                    zoneLinesSVG.animate({\n                        d: zoneLinesPath\n                    });\n                }\n                else {\n                    zoneLinesSVG = indicator.zoneLinesSVG =\n                        renderer\n                            .path(zoneLinesPath)\n                            .attr({\n                            'stroke-width': zonesStyles.lineWidth,\n                            'stroke': zonesStyles.color,\n                            'dashstyle': zonesStyles.dashStyle,\n                            'zIndex': indicator.group.zIndex + 0.1\n                        })\n                            .add(indicator.group);\n                }\n            }\n        }\n        /**\n         * Volume By Price indicator.\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/volume-by-price\n         *         Volume By Price indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/volume-by-price\n         * @optionparent plotOptions.vbp\n         */\n        VBPIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * The number of price zones.\n                 */\n                ranges: 12,\n                /**\n                 * The id of volume series which is mandatory. For example using\n                 * OHLC data, volumeSeriesID='volume' means the indicator will be\n                 * calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume'\n            },\n            /**\n             * The styles for lines which determine price zones.\n             */\n            zoneLines: {\n                /**\n                 * Enable/disable zone lines.\n                 */\n                enabled: true,\n                /**\n                 * Specify the style of zone lines.\n                 *\n                 * @type    {Highcharts.CSSObject}\n                 * @default {\"color\": \"#0A9AC9\", \"dashStyle\": \"LongDash\", \"lineWidth\": 1}\n                 */\n                styles: {\n                    /** @ignore-option */\n                    color: '#0A9AC9',\n                    /** @ignore-option */\n                    dashStyle: 'LongDash',\n                    /** @ignore-option */\n                    lineWidth: 1\n                }\n            },\n            /**\n             * The styles for bars when volume is divided into positive/negative.\n             */\n            volumeDivision: {\n                /**\n                 * Option to control if volume is divided.\n                 */\n                enabled: true,\n                styles: {\n                    /**\n                     * Color of positive volume bars.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    positiveColor: 'rgba(144, 237, 125, 0.8)',\n                    /**\n                     * Color of negative volume bars.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    negativeColor: 'rgba(244, 91, 91, 0.8)'\n                }\n            },\n            // To enable series animation; must be animationLimit > pointCount\n            animationLimit: 1000,\n            enableMouseTracking: false,\n            pointPadding: 0,\n            zIndex: -1,\n            crisp: true,\n            dataGrouping: {\n                enabled: false\n            },\n            dataLabels: {\n                allowOverlap: true,\n                enabled: true,\n                format: 'P: {point.volumePos:.2f} | N: {point.volumeNeg:.2f}',\n                padding: 0,\n                style: {\n                    /** @internal */\n                    fontSize: '0.5em'\n                },\n                verticalAlign: 'top'\n            }\n        });\n        extend(VBPIndicator.prototype, {\n            nameBase: 'Volume by Price',\n            nameComponents: ['ranges'],\n            calculateOn: {\n                chart: 'render',\n                xAxis: 'afterSetExtremes'\n            },\n            pointClass: VBPPoint,\n            markerAttribs: noop,\n            drawGraph: noop,\n            getColumnMetrics: columnProto.getColumnMetrics,\n            crispCol: columnProto.crispCol\n        });\n        SeriesRegistry.registerSeriesType('vbp', VBPIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Volume By Price (VBP)` series. If the [type](#series.vbp.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.vbp\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL, compare, compareBase, compareStart\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/volume-by-price\n         * @apioption series.vbp\n         */\n        ''; // to include the above in the js output\n\n        return VBPIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/volume-by-price.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","SeriesRegistry","sma","prototype","pointClass","SMAPoint","seriesTypes","destroy","negativeGraphic","arguments","VBPPoint","A","H","U","StockChart","animObject","noop","column","columnProto","SMAIndicator","addEvent","arrayMax","arrayMin","correctFloat","defined","error","extend","isArray","merge","abs","Math","VBPIndicator","constructor","data","negWidths","options","points","posWidths","priceZones","rangeStep","volumeDataArray","zoneStarts","zoneLinesSVG","init","chart","indicator","unbinder","params","baseSeries","linkedParent","volumeSeries","get","volumeSeriesID","addCustomEvents","order","toEmptyIndicator","redraw","setData","dataEventsToUnbind","push","animate","series","inverted","group","attr","position","yAxis","top","xAxis","left","translateY","translateX","animation","step","val","fx","scaleX","max","pos","drawPoints","volumeDivision","enabled","posNegVolume","initVol","signOrder","pointLength","length","i","pointWidth","priceZone","wholeVol","point","graphic","shapeArgs","width","wholeVolumeData","positiveVolumeData","negativeVolumeData","color","styles","positiveColor","negativeColor","x","translate","yAxisMin","min","zoneLinesOptions","zoneLines","yBarOffset","maxVolume","primalBarWidth","barHeight","barHeightP","oldBarHeight","barWidth","pointPadding","chartPlotTop","barX","barY","indicatorPoints","plotWidth","plotTop","toPixels","forEach","index","plotX","plotY","start","reversed","crispCol","volumeNeg","volumePos","volumeAll","drawZones","getExtremes","ret","prevCompare","compare","prevCumulative","cumulative","getValues","xValues","processedXData","yValues","processedYData","ranges","VBP","xData","yData","errorMessage","isOHLC","name","specifyZones","zone","end","values","rangeExtremes","arrayExtremesOHLC","dataLength","currentPoint","lowRange","highRange","j","mainSeries","compareToMain","dataModify","modifyValue","zoneStartsLength","volumePerZone","previousValue","startFlag","endFlag","value","volumeXData","volumeYData","lastZoneIndex","baseSeriesLength","volumeSeriesLength","unshift","zonesValues","zonesStyles","renderer","rightLinePos","verticalOffset","zoneLinesPath","verticalLinePos","concat","crispLine","lineWidth","d","dashStyle","zIndex","add","defaultOptions","period","animationLimit","enableMouseTracking","crisp","dataGrouping","dataLabels","allowOverlap","format","padding","style","fontSize","verticalAlign","nameBase","nameComponents","calculateOn","markerAttribs","drawGraph","getColumnMetrics","registerSeriesType"],"mappings":"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"}