{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * Indicator series type for Highcharts Stock\n *\n * (c) 2010-2021 Sebastian Bochan\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/atr', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/ATR/ATRIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function accumulateAverage(points, xVal, yVal, i) {\n            const xValue = xVal[i], yValue = yVal[i];\n            points.push([xValue, yValue]);\n        }\n        /**\n         * @private\n         */\n        function getTR(currentPoint, prevPoint) {\n            const pointY = currentPoint, prevY = prevPoint, HL = pointY[1] - pointY[2], HCp = typeof prevY === 'undefined' ? 0 : Math.abs(pointY[1] - prevY[3]), LCp = typeof prevY === 'undefined' ? 0 : Math.abs(pointY[2] - prevY[3]), TR = Math.max(HL, HCp, LCp);\n            return TR;\n        }\n        /**\n         * @private\n         */\n        function populateAverage(points, xVal, yVal, i, period, prevATR) {\n            const x = xVal[i - 1], TR = getTR(yVal[i - 1], yVal[i - 2]), y = (((prevATR * (period - 1)) + TR) / period);\n            return [x, y];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ATR series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.atr\n         *\n         * @augments Highcharts.Series\n         */\n        class ATRIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.points = void 0;\n                this.options = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, xValue = xVal[0], yValue = yVal[0], points = [[xValue, yValue]], ATR = [], xData = [], yData = [];\n                let point, i, prevATR = 0, range = 1, TR = 0;\n                if ((xVal.length <= period) ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = 1; i <= yValLen; i++) {\n                    accumulateAverage(points, xVal, yVal, i);\n                    if (period < range) {\n                        point = populateAverage(points, xVal, yVal, i, period, prevATR);\n                        prevATR = point[1];\n                        ATR.push(point);\n                        xData.push(point[0]);\n                        yData.push(point[1]);\n                    }\n                    else if (period === range) {\n                        prevATR = TR / (i - 1);\n                        ATR.push([xVal[i - 1], prevATR]);\n                        xData.push(xVal[i - 1]);\n                        yData.push(prevATR);\n                        range++;\n                    }\n                    else {\n                        TR += getTR(yVal[i - 1], yVal[i - 2]);\n                        range++;\n                    }\n                }\n                return {\n                    values: ATR,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Average true range indicator (ATR). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/atr\n         *         ATR indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/atr\n         * @optionparent plotOptions.atr\n         */\n        ATRIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0 // unused index, do not inherit (#15362)\n            }\n        });\n        SeriesRegistry.registerSeriesType('atr', ATRIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `ATR` series. If the [type](#series.atr.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.atr\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/atr\n         * @apioption series.atr\n         */\n        ''; // to include the above in the js output\n\n        return ATRIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/atr.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","SeriesRegistry","U","sma","SMAIndicator","seriesTypes","isArray","merge","getTR","currentPoint","prevPoint","HL","pointY","HCp","Math","abs","prevY","LCp","max","ATRIndicator","constructor","arguments","data","points","options","getValues","series","params","period","xVal","xData","yVal","yData","yValLen","length","xValue","yValue","ATR","point","i","prevATR","range","TR","accumulateAverage","push","populateAverage","x","values","defaultOptions","index","registerSeriesType"],"mappings":"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"}