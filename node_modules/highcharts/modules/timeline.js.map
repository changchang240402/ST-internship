{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.2.0 (2023-10-30)\n *\n * Timeline series\n *\n * (c) 2010-2021 Highsoft AS\n * Author: Daniel Studencki\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/timeline', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/Timeline/TimelinePoint.js', [_modules['Core/Series/Point.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Point, SeriesRegistry, U) {\n        /* *\n         *\n         *  Timeline Series.\n         *\n         *  (c) 2010-2021 Highsoft AS\n         *\n         *  Author: Daniel Studencki\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { line: { prototype: { pointClass: LinePoint } }, pie: { prototype: { pointClass: PiePoint } } } = SeriesRegistry.seriesTypes;\n        const { defined, isNumber, merge, objectEach, pick } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class TimelinePoint extends LinePoint {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.options = void 0;\n                this.series = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            alignConnector() {\n                const point = this, series = point.series, dataLabel = point.dataLabel, connector = dataLabel.connector, dlOptions = (dataLabel.options || {}), connectorWidth = dlOptions.connectorWidth || 0, chart = point.series.chart, bBox = connector.getBBox(), plotPos = {\n                    x: bBox.x + (dataLabel.translateX || 0),\n                    y: bBox.y + (dataLabel.translateY || 0)\n                };\n                // Include a half of connector width in order to run animation,\n                // when connectors are aligned to the plot area edge.\n                if (chart.inverted) {\n                    plotPos.y -= connectorWidth / 2;\n                }\n                else {\n                    plotPos.x += connectorWidth / 2;\n                }\n                const isVisible = chart.isInsidePlot(plotPos.x, plotPos.y);\n                connector[isVisible ? 'animate' : 'attr']({\n                    d: point.getConnectorPath()\n                });\n                connector.addClass('highcharts-color-' + point.colorIndex);\n                if (!series.chart.styledMode) {\n                    connector.attr({\n                        stroke: dlOptions.connectorColor || point.color,\n                        'stroke-width': dlOptions.connectorWidth,\n                        opacity: dataLabel[defined(dataLabel.newOpacity) ? 'newOpacity' : 'opacity']\n                    });\n                }\n            }\n            drawConnector() {\n                const point = this, { dataLabel, series } = point;\n                if (dataLabel) {\n                    if (!dataLabel.connector) {\n                        dataLabel.connector = series.chart.renderer\n                            .path(point.getConnectorPath())\n                            .attr({\n                            zIndex: -1\n                        })\n                            .add(dataLabel);\n                    }\n                    if (point.series.chart.isInsidePlot(// #10507\n                    dataLabel.x || 0, dataLabel.y || 0)) {\n                        point.alignConnector();\n                    }\n                }\n            }\n            getConnectorPath() {\n                const { plotX = 0, plotY = 0, series, dataLabel } = this, chart = series.chart, xAxisLen = series.xAxis.len, inverted = chart.inverted, direction = inverted ? 'x2' : 'y2';\n                if (dataLabel) {\n                    const targetDLPos = dataLabel.targetPosition, negativeDistance = ((dataLabel.alignAttr || dataLabel)[direction[0]] <\n                        series.yAxis.len / 2);\n                    let coords = {\n                        x1: plotX,\n                        y1: plotY,\n                        x2: plotX,\n                        y2: isNumber(targetDLPos.y) ? targetDLPos.y : dataLabel.y\n                    };\n                    // Recalculate coords when the chart is inverted.\n                    if (inverted) {\n                        coords = {\n                            x1: plotY,\n                            y1: xAxisLen - plotX,\n                            x2: targetDLPos.x || dataLabel.x,\n                            y2: xAxisLen - plotX\n                        };\n                    }\n                    // Subtract data label width or height from expected coordinate so\n                    // that the connector would start from the appropriate edge.\n                    if (negativeDistance) {\n                        coords[direction] += dataLabel[inverted ? 'width' : 'height'] || 0;\n                    }\n                    // Change coordinates so that they will be relative to data label.\n                    objectEach(coords, (_coord, i) => {\n                        coords[i] -= (dataLabel.alignAttr || dataLabel)[i[0]];\n                    });\n                    return chart.renderer.crispLine([\n                        ['M', coords.x1, coords.y1],\n                        ['L', coords.x2, coords.y2]\n                    ], dataLabel.options?.connectorWidth || 0);\n                }\n                return [];\n            }\n            init() {\n                const point = super.init.apply(this, arguments);\n                point.name = pick(point.name, 'Event');\n                point.y = 1;\n                return point;\n            }\n            isValid() {\n                return this.options.y !== null;\n            }\n            setState() {\n                const proceed = super.setState;\n                // Prevent triggering the setState method on null points.\n                if (!this.isNull) {\n                    proceed.apply(this, arguments);\n                }\n            }\n            setVisible(visible, redraw) {\n                const point = this, series = point.series;\n                redraw = pick(redraw, series.options.ignoreHiddenPoint);\n                PiePoint.prototype.setVisible.call(point, visible, false);\n                // Process new data\n                series.processData();\n                if (redraw) {\n                    series.chart.redraw();\n                }\n            }\n            applyOptions(options, x) {\n                options = Point.prototype.optionsToObject.call(this, options);\n                this.userDLOptions = merge(this.userDLOptions, options.dataLabels);\n                return super.applyOptions(options, x);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TimelinePoint;\n    });\n    _registerModule(_modules, 'Series/Timeline/TimelineSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  Timeline Series.\n         *\n         *  (c) 2010-2021 Highsoft AS\n         *\n         *  Author: Daniel Studencki\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The timeline series presents given events along a drawn line.\n         *\n         * @sample highcharts/series-timeline/alternate-labels\n         *         Timeline series\n         * @sample highcharts/series-timeline/inverted\n         *         Inverted timeline\n         * @sample highcharts/series-timeline/datetime-axis\n         *         With true datetime axis\n         *\n         * @extends      plotOptions.line\n         * @excluding    animationLimit, boostThreshold, connectEnds, connectNulls,\n         *               cropThreshold, dashStyle, findNearestPointBy,\n         *               getExtremesFromAll, negativeColor, pointInterval,\n         *               pointIntervalUnit, pointPlacement, pointStart,\n         *               softThreshold, stacking, step, threshold, turboThreshold,\n         *               zoneAxis, zones, dataSorting, boostBlending\n         * @product      highcharts\n         * @since        7.0.0\n         * @requires     modules/timeline\n         * @optionparent plotOptions.timeline\n         */\n        const TimelineSeriesDefaults = {\n            colorByPoint: true,\n            stickyTracking: false,\n            ignoreHiddenPoint: true,\n            /**\n             * @ignore\n             */\n            legendType: 'point',\n            /**\n             * Pixel width of the graph line.\n             */\n            lineWidth: 4,\n            tooltip: {\n                headerFormat: '<span style=\"color:{point.color}\">\\u25CF</span> ' +\n                    '<span style=\"font-size: 0.8em\"> {point.key}</span><br/>',\n                pointFormat: '{point.description}'\n            },\n            states: {\n                hover: {\n                    lineWidthPlus: 0\n                }\n            },\n            /**\n             * @declare Highcharts.TimelineDataLabelsOptionsObject\n             */\n            dataLabels: {\n                enabled: true,\n                allowOverlap: true,\n                /**\n                 * Whether to position data labels alternately. For example, if\n                 * [distance](#plotOptions.timeline.dataLabels.distance)\n                 * is set equal to `100`, then data labels will be positioned\n                 * alternately (on both sides of the point) at a distance of 100px.\n                 *\n                 * @sample {highcharts} highcharts/series-timeline/alternate-disabled\n                 *         Alternate disabled\n                 */\n                alternate: true,\n                backgroundColor: \"#ffffff\" /* Palette.backgroundColor */,\n                borderWidth: 1,\n                borderColor: \"#999999\" /* Palette.neutralColor40 */,\n                borderRadius: 3,\n                color: \"#333333\" /* Palette.neutralColor80 */,\n                /**\n                 * The color of the line connecting the data label to the point.\n                 * The default color is the same as the point's color.\n                 *\n                 * In styled mode, the connector stroke is given in the\n                 * `.highcharts-data-label-connector` class.\n                 *\n                 * @sample {highcharts} highcharts/series-timeline/connector-styles\n                 *         Custom connector width and color\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @apioption plotOptions.timeline.dataLabels.connectorColor\n                 */\n                /**\n                 * The width of the line connecting the data label to the point.\n                 *\n                 * In styled mode, the connector stroke width is given in the\n                 * `.highcharts-data-label-connector` class.\n                 *\n                 * @sample {highcharts} highcharts/series-timeline/connector-styles\n                 *         Custom connector width and color\n                 */\n                connectorWidth: 1,\n                /**\n                 * A pixel value defining the distance between the data label and\n                 * the point. Negative numbers puts the label on top of the point in a\n                 * non-inverted chart. Defaults to 100 for horizontal and 20 for\n                 * vertical timeline (`chart.inverted: true`).\n                 */\n                distance: void 0,\n                // eslint-disable-next-line jsdoc/require-description\n                /**\n                 * @type    {Highcharts.TimelineDataLabelsFormatterCallbackFunction}\n                 * @default function () {\n                 *   let format;\n                 *\n                 *   if (!this.series.chart.styledMode) {\n                 *       format = '<span style=\"color:' + this.point.color +\n                 *           '\">● </span>';\n                 *   } else {\n                 *       format = '<span class=\"highcharts-color-' +\n                 *          this.point.colorIndex + '\">● </span>';\n                 *   }\n                 *   format += '<span>' + (this.key || '') + '</span><br/>' +\n                 *       (this.point.label || '');\n                 *   return format;\n                 * }\n                 */\n                formatter: function () {\n                    let format;\n                    if (!this.series.chart.styledMode) {\n                        format = '<span style=\"color:' + this.point.color +\n                            '\">● </span>';\n                    }\n                    else {\n                        format = '<span class=\"highcharts-color-' +\n                            this.point.colorIndex + '\">● </span>';\n                    }\n                    format += '<span class=\"highcharts-strong\">' +\n                        (this.key || '') + '</span><br/>' +\n                        (this.point.label || '');\n                    return format;\n                },\n                style: {\n                    /** @internal */\n                    textOutline: 'none',\n                    /** @internal */\n                    fontWeight: 'normal',\n                    /** @internal */\n                    fontSize: '0.8em'\n                },\n                /**\n                 * Shadow options for the data label.\n                 *\n                 * @type {boolean|Highcharts.CSSObject}\n                 */\n                shadow: false,\n                /**\n                 * @type      {number}\n                 * @apioption plotOptions.timeline.dataLabels.width\n                 */\n                verticalAlign: 'middle'\n            },\n            marker: {\n                enabledThreshold: 0,\n                symbol: 'square',\n                radius: 6,\n                lineWidth: 2,\n                height: 15\n            },\n            showInLegend: false,\n            colorKey: 'x',\n            legendSymbol: 'rectangle'\n        };\n        /**\n         * The `timeline` series. If the [type](#series.timeline.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.timeline\n         * @excluding animationLimit, boostThreshold, connectEnds, connectNulls,\n         *            cropThreshold, dashStyle, dataParser, dataURL, findNearestPointBy,\n         *            getExtremesFromAll, negativeColor, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointStart, softThreshold,\n         *            stacking, stack, step, threshold, turboThreshold, zoneAxis, zones,\n         *            dataSorting, boostBlending\n         * @product   highcharts\n         * @requires  modules/timeline\n         * @apioption series.timeline\n         */\n        /**\n         * An array of data points for the series. For the `timeline` series type,\n         * points can be given with three general parameters, `name`, `label`,\n         * and `description`:\n         *\n         * Example:\n         *\n         * ```js\n         * series: [{\n         *    type: 'timeline',\n         *    data: [{\n         *        name: 'Jan 2018',\n         *        label: 'Some event label',\n         *        description: 'Description to show in tooltip'\n         *    }]\n         * }]\n         * ```\n         * If all points additionally have the `x` values, and xAxis type is set to\n         * `datetime`, then events are laid out on a true time axis, where their\n         * placement reflects the actual time between them.\n         *\n         * @sample {highcharts} highcharts/series-timeline/alternate-labels\n         *         Alternate labels\n         * @sample {highcharts} highcharts/series-timeline/datetime-axis\n         *         Real time intervals\n         *\n         * @type      {Array<*>}\n         * @extends   series.line.data\n         * @excluding marker, y\n         * @product   highcharts\n         * @apioption series.timeline.data\n         */\n        /**\n         * The name of event.\n         *\n         * @type      {string}\n         * @product   highcharts\n         * @apioption series.timeline.data.name\n         */\n        /**\n         * The label of event.\n         *\n         * @type      {string}\n         * @product   highcharts\n         * @apioption series.timeline.data.label\n         */\n        /**\n         * The description of event. This description will be shown in tooltip.\n         *\n         * @type      {string}\n         * @product   highcharts\n         * @apioption series.timeline.data.description\n         */\n        ''; // adds doclets above to transpiled file\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return TimelineSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/Timeline/TimelineSeries.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Series/Timeline/TimelinePoint.js'], _modules['Series/Timeline/TimelineSeriesDefaults.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, TimelinePoint, TimelineSeriesDefaults, U) {\n        /* *\n         *\n         *  Timeline Series.\n         *\n         *  (c) 2010-2021 Highsoft AS\n         *\n         *  Author: Daniel Studencki\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { column: ColumnSeries, line: LineSeries } = SeriesRegistry.seriesTypes;\n        const { addEvent, arrayMax, arrayMin, defined, extend, merge, pick } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The timeline series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.timeline\n         *\n         * @augments Highcharts.Series\n         */\n        class TimelineSeries extends LineSeries {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.points = void 0;\n                this.userOptions = void 0;\n                this.visibilityMap = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            alignDataLabel(point, dataLabel, _options, _alignTo) {\n                const series = this, isInverted = series.chart.inverted, visiblePoints = series.visibilityMap.filter((point) => !!point), visiblePointsCount = series.visiblePointsCount || 0, pointIndex = visiblePoints.indexOf(point), isFirstOrLast = (!pointIndex || pointIndex === visiblePointsCount - 1), dataLabelsOptions = series.options.dataLabels, userDLOptions = point.userDLOptions || {}, \n                // Define multiplier which is used to calculate data label\n                // width. If data labels are alternate, they have two times more\n                // space to adapt (excepting first and last ones, which has only\n                // one and half), than in case of placing all data labels side\n                // by side.\n                multiplier = dataLabelsOptions.alternate ?\n                    (isFirstOrLast ? 1.5 : 2) :\n                    1, availableSpace = Math.floor(series.xAxis.len / visiblePointsCount), pad = dataLabel.padding;\n                let distance, targetDLWidth, styles;\n                // Adjust data label width to the currently available space.\n                if (point.visible) {\n                    distance = Math.abs(userDLOptions.x || point.options.dataLabels.x);\n                    if (isInverted) {\n                        targetDLWidth = ((distance - pad) * 2 - ((point.itemHeight || 0) / 2));\n                        styles = {\n                            width: pick(dataLabelsOptions.style?.width, `${series.yAxis.len * 0.4}px`),\n                            // Apply ellipsis when data label height is exceeded.\n                            textOverflow: (dataLabel.width || 0) / targetDLWidth *\n                                (dataLabel.height || 0) / 2 > availableSpace *\n                                multiplier ?\n                                'ellipsis' : 'none'\n                        };\n                    }\n                    else {\n                        styles = {\n                            width: (userDLOptions.width ||\n                                dataLabelsOptions.width ||\n                                availableSpace * multiplier - (pad * 2)) + 'px'\n                        };\n                    }\n                    dataLabel.css(styles);\n                    if (!series.chart.styledMode) {\n                        dataLabel.shadow(dataLabelsOptions.shadow);\n                    }\n                }\n                super.alignDataLabel.apply(series, arguments);\n            }\n            bindAxes() {\n                const series = this;\n                super.bindAxes();\n                // Initially set the linked xAxis type to category.\n                if (!series.xAxis.userOptions.type) {\n                    series.xAxis.categories = series.xAxis.hasNames = true;\n                }\n            }\n            distributeDL() {\n                const series = this, dataLabelsOptions = series.options.dataLabels, inverted = series.chart.inverted;\n                let visibilityIndex = 1;\n                if (dataLabelsOptions) {\n                    const distance = pick(dataLabelsOptions.distance, inverted ? 20 : 100);\n                    for (const point of series.points) {\n                        const defaults = {\n                            [inverted ? 'x' : 'y']: dataLabelsOptions.alternate && visibilityIndex % 2 ?\n                                -distance : distance\n                        };\n                        if (inverted) {\n                            defaults.align = (dataLabelsOptions.alternate && visibilityIndex % 2) ? 'right' : 'left';\n                        }\n                        point.options.dataLabels = merge(defaults, point.userDLOptions);\n                        visibilityIndex++;\n                    }\n                }\n            }\n            generatePoints() {\n                super.generatePoints();\n                const series = this, points = series.points;\n                for (let i = 0, iEnd = points.length; i < iEnd; ++i) {\n                    points[i].applyOptions({\n                        x: series.xData[i]\n                    }, series.xData[i]);\n                }\n            }\n            getVisibilityMap() {\n                const series = this, map = (series.data.length ?\n                    series.data :\n                    series.userOptions.data || []).map((point) => (point && point.visible !== false && !point.isNull ?\n                    point :\n                    false));\n                return map;\n            }\n            getXExtremes(xData) {\n                const series = this, filteredData = xData.filter((_x, i) => (series.points[i].isValid() &&\n                    series.points[i].visible));\n                return {\n                    min: arrayMin(filteredData),\n                    max: arrayMax(filteredData)\n                };\n            }\n            init() {\n                const series = this;\n                super.init.apply(series, arguments);\n                series.eventsToUnbind.push(addEvent(series, 'afterTranslate', function () {\n                    let lastPlotX, closestPointRangePx = Number.MAX_VALUE;\n                    for (const point of series.points) {\n                        // Set the isInside parameter basing also on the real point\n                        // visibility, in order to avoid showing hidden points\n                        // in drawPoints method.\n                        point.isInside = point.isInside && point.visible;\n                        // New way of calculating closestPointRangePx value, which\n                        // respects the real point visibility is needed.\n                        if (point.visible && !point.isNull) {\n                            if (defined(lastPlotX)) {\n                                closestPointRangePx = Math.min(closestPointRangePx, Math.abs(point.plotX - lastPlotX));\n                            }\n                            lastPlotX = point.plotX;\n                        }\n                    }\n                    series.closestPointRangePx = closestPointRangePx;\n                }));\n                // Distribute data labels before rendering them. Distribution is\n                // based on the 'dataLabels.distance' and 'dataLabels.alternate'\n                // property.\n                series.eventsToUnbind.push(addEvent(series, 'drawDataLabels', function () {\n                    // Distribute data labels basing on defined algorithm.\n                    series.distributeDL(); // @todo use this scope for series\n                }));\n                series.eventsToUnbind.push(addEvent(series, 'afterDrawDataLabels', function () {\n                    let dataLabel; // @todo use this scope for series\n                    // Draw or align connector for each point.\n                    for (const point of series.points) {\n                        dataLabel = point.dataLabel;\n                        if (dataLabel) {\n                            // Within this wrap method is necessary to save the\n                            // current animation params, because the data label\n                            // target position (after animation) is needed to align\n                            // connectors.\n                            dataLabel.animate = function (params) {\n                                if (this.targetPosition) {\n                                    this.targetPosition = params;\n                                }\n                                return this.renderer.Element.prototype\n                                    .animate.apply(this, arguments);\n                            };\n                            // Initialize the targetPosition field within data label\n                            // object. It's necessary because there is need to know\n                            // expected position of specific data label, when\n                            // aligning connectors. This field is overrided inside\n                            // of SVGElement.animate() wrapped  method.\n                            if (!dataLabel.targetPosition) {\n                                dataLabel.targetPosition = {};\n                            }\n                            point.drawConnector();\n                        }\n                    }\n                }));\n                series.eventsToUnbind.push(addEvent(series.chart, 'afterHideOverlappingLabel', function () {\n                    for (const p of series.points) {\n                        if (p.dataLabel &&\n                            p.dataLabel.connector &&\n                            p.dataLabel.oldOpacity !== p.dataLabel.newOpacity) {\n                            p.alignConnector();\n                        }\n                    }\n                }));\n            }\n            markerAttribs(point, state) {\n                const series = this, seriesMarkerOptions = series.options.marker, pointMarkerOptions = point.marker || {}, symbol = (pointMarkerOptions.symbol || seriesMarkerOptions.symbol), width = pick(pointMarkerOptions.width, seriesMarkerOptions.width, series.closestPointRangePx), height = pick(pointMarkerOptions.height, seriesMarkerOptions.height);\n                let seriesStateOptions, pointStateOptions, radius = 0;\n                // Call default markerAttribs method, when the xAxis type\n                // is set to datetime.\n                if (series.xAxis.dateTime) {\n                    return super.markerAttribs(point, state);\n                }\n                // Handle hover and select states\n                if (state) {\n                    seriesStateOptions =\n                        seriesMarkerOptions.states[state] || {};\n                    pointStateOptions = pointMarkerOptions.states &&\n                        pointMarkerOptions.states[state] || {};\n                    radius = pick(pointStateOptions.radius, seriesStateOptions.radius, radius + (seriesStateOptions.radiusPlus || 0));\n                }\n                point.hasImage = (symbol && symbol.indexOf('url') === 0);\n                const attribs = {\n                    x: Math.floor(point.plotX) - (width / 2) - (radius / 2),\n                    y: point.plotY - (height / 2) - (radius / 2),\n                    width: width + radius,\n                    height: height + radius\n                };\n                return (series.chart.inverted) ? {\n                    y: (attribs.x && attribs.width) &&\n                        series.xAxis.len - attribs.x - attribs.width,\n                    x: attribs.y && attribs.y,\n                    width: attribs.height,\n                    height: attribs.width\n                } : attribs;\n            }\n            processData() {\n                const series = this;\n                let visiblePoints = 0, i;\n                series.visibilityMap = series.getVisibilityMap();\n                // Calculate currently visible points.\n                for (const point of series.visibilityMap) {\n                    if (point) {\n                        visiblePoints++;\n                    }\n                }\n                series.visiblePointsCount = visiblePoints;\n                for (i = 0; i < series.xData.length; i++) {\n                    series.yData[i] = 1;\n                }\n                super.processData.call(this, arguments);\n                return;\n            }\n        }\n        TimelineSeries.defaultOptions = merge(LineSeries.defaultOptions, TimelineSeriesDefaults);\n        extend(TimelineSeries.prototype, {\n            // Use a group of trackers from TrackerMixin\n            drawTracker: ColumnSeries.prototype.drawTracker,\n            pointClass: TimelinePoint,\n            trackerGroups: ['markerGroup', 'dataLabelsGroup']\n        });\n        SeriesRegistry.registerSeriesType('timeline', TimelineSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Declarations\n         *\n         * */\n        /**\n         * Callback JavaScript function to format the data label as a string. Note that\n         * if a `format` is defined, the format takes precedence and the formatter is\n         * ignored.\n         *\n         * @callback Highcharts.TimelineDataLabelsFormatterCallbackFunction\n         *\n         * @param {Highcharts.PointLabelObject|Highcharts.TimelineDataLabelsFormatterContextObject} this\n         *        Data label context to format\n         *\n         * @return {number|string|null|undefined}\n         *         Formatted data label text\n         */\n        /**\n         * @interface Highcharts.TimelineDataLabelsFormatterContextObject\n         * @extends Highcharts.PointLabelObject\n         */ /**\n        * @name Highcharts.TimelineDataLabelsFormatterContextObject#key\n        * @type {string|undefined}\n        */ /**\n        * @name Highcharts.TimelineDataLabelsFormatterContextObject#point\n        * @type {Highcharts.Point}\n        */ /**\n        * @name Highcharts.TimelineDataLabelsFormatterContextObject#series\n        * @type {Highcharts.Series}\n        */\n        ''; // dettach doclets above\n\n        return TimelineSeries;\n    });\n    _registerModule(_modules, 'masters/modules/timeline.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","Point","SeriesRegistry","U","line","prototype","pointClass","LinePoint","pie","PiePoint","seriesTypes","defined","isNumber","merge","objectEach","pick","constructor","arguments","options","series","alignConnector","point","dataLabel","connector","dlOptions","connectorWidth","chart","bBox","getBBox","plotPos","x","translateX","y","translateY","inverted","isVisible","isInsidePlot","d","getConnectorPath","addClass","colorIndex","styledMode","attr","stroke","connectorColor","color","opacity","newOpacity","drawConnector","renderer","zIndex","add","plotX","plotY","xAxisLen","xAxis","len","direction","targetDLPos","targetPosition","negativeDistance","alignAttr","yAxis","coords","x1","y1","x2","y2","_coord","i","crispLine","init","name","isValid","setState","proceed","isNull","setVisible","visible","redraw","ignoreHiddenPoint","call","processData","applyOptions","optionsToObject","userDLOptions","dataLabels","colorByPoint","stickyTracking","legendType","lineWidth","tooltip","headerFormat","pointFormat","states","hover","lineWidthPlus","enabled","allowOverlap","alternate","backgroundColor","borderWidth","borderColor","borderRadius","distance","formatter","key","label","style","textOutline","fontWeight","fontSize","shadow","verticalAlign","marker","enabledThreshold","symbol","radius","height","showInLegend","colorKey","legendSymbol","TimelinePoint","TimelineSeriesDefaults","column","ColumnSeries","LineSeries","addEvent","arrayMax","arrayMin","extend","TimelineSeries","data","points","userOptions","visibilityMap","alignDataLabel","_options","_alignTo","targetDLWidth","styles","isInverted","visiblePoints","filter","visiblePointsCount","pointIndex","indexOf","dataLabelsOptions","multiplier","isFirstOrLast","availableSpace","Math","floor","pad","padding","abs","itemHeight","width","textOverflow","css","bindAxes","type","categories","hasNames","distributeDL","visibilityIndex","defaults","align","generatePoints","iEnd","length","xData","getVisibilityMap","map","getXExtremes","filteredData","_x","min","max","eventsToUnbind","push","lastPlotX","closestPointRangePx","Number","MAX_VALUE","isInside","animate","params","Element","p","oldOpacity","markerAttribs","state","seriesMarkerOptions","pointMarkerOptions","seriesStateOptions","dateTime","pointStateOptions","radiusPlus","hasImage","attribs","yData","defaultOptions","drawTracker","trackerGroups","registerSeriesType"],"mappings":"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"}