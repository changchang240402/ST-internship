{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.2.0 (2023-10-30)\n *\n * HeikinAshi series type for Highcharts Stock\n *\n * (c) 2010-2021 Karol Kolodziej\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/heikinashi', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/HeikinAshi/HeikinAshiPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { candlestick: { prototype: { pointClass: CandlestickPoint } }, hlc: { prototype: { pointClass: HLCPoint } } } = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class HeikinAshiPoint extends CandlestickPoint {\n            constructor() {\n                super(...arguments);\n                // clone inheritence\n                this.resolveColor = HLCPoint.prototype.resolveColor;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HeikinAshiPoint;\n    });\n    _registerModule(_modules, 'Series/HeikinAshi/HeikinAshiSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An HeikinAshi series is a style of financial chart used to describe price\n         * movements over time. It displays open, high, low and close values per\n         * data point.\n         *\n         * @sample stock/demo/heikinashi/\n         *         Heikin Ashi series\n         *\n         * @extends      plotOptions.candlestick\n         * @product      highstock\n         * @requires     modules/heikinashi\n         * @optionparent plotOptions.heikinashi\n         */\n        const HeikinAshiDefaults = {\n            dataGrouping: {\n                groupAll: true\n            }\n        };\n        /**\n         * A `heikinashi` series. If the [type](#series.heikinashi.type)\n         * option is not specified, it is inherited from [chart.type](\n         * #chart.type).\n         *\n         * @type      {*}\n         * @extends   series,plotOptions.heikinashi\n         * @excluding dataParser, dataURL, marker\n         * @product   highstock\n         * @requires  modules/heikinashi\n         * @apioption series.heikinashi\n         */\n        /**\n         * An array of data points for the series. For the `heikinashi` series\n         * type, points can be given in the following ways:\n         *\n         * 1. An array of arrays with 5 or 4 values. In this case, the values correspond\n         *    to `x,open,high,low,close`. If the first value is a string, it is applied\n         *    as the name of the point, and the `x` value is inferred. The `x` value can\n         *    also be omitted, in which case the inner arrays should be of length 4.\n         *    Then the `x` value is automatically calculated, either starting at 0 and\n         *    incremented by 1, or from `pointStart` and `pointInterval` given in the\n         *    series options.\n         *    ```js\n         *    data: [\n         *        [0, 7, 2, 0, 4],\n         *        [1, 1, 4, 2, 8],\n         *        [2, 3, 3, 9, 3]\n         *    ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.heikinashi.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *    data: [{\n         *        x: 1,\n         *        open: 9,\n         *        high: 2,\n         *        low: 4,\n         *        close: 6,\n         *        name: \"Point2\",\n         *        color: \"#00FF00\"\n         *    }, {\n         *        x: 1,\n         *        open: 1,\n         *        high: 4,\n         *        low: 7,\n         *        close: 7,\n         *        name: \"Point1\",\n         *        color: \"#FF00FF\"\n         *    }]\n         *    ```\n         *\n         * @type      {Array<Array<(number|string),number,number,number>|Array<(number|string),number,number,number,number>|*>}\n         * @extends   series.candlestick.data\n         * @excluding y\n         * @product   highstock\n         * @apioption series.heikinashi.data\n         */\n        ''; // adds doclets above to transpilat\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HeikinAshiDefaults;\n    });\n    _registerModule(_modules, 'Series/HeikinAshi/HeikinAshiSeries.js', [_modules['Series/HeikinAshi/HeikinAshiPoint.js'], _modules['Series/HeikinAshi/HeikinAshiSeriesDefaults.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (HeikinAshiPoint, HeikinAshiSeriesDefaults, SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { candlestick: CandlestickSeries } = SeriesRegistry.seriesTypes;\n        const { addEvent, merge } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const composedMembers = [];\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * After processing and grouping the data, calculate how the heikeinashi data\n         * set should look like.\n         * @private\n         */\n        function onAxisPostProcessData() {\n            const series = this.series;\n            series.forEach((series) => {\n                if (series.is('heikinashi')) {\n                    const heikinashiSeries = series;\n                    heikinashiSeries.heikiashiData.length = 0;\n                    heikinashiSeries.getHeikinashiData();\n                }\n            });\n        }\n        /**\n         * Assign heikinashi data into the points.\n         * @private\n         * @todo move to HeikinAshiPoint class\n         */\n        function onHeikinAshiSeriesAfterTranslate() {\n            const series = this, points = series.points, heikiashiData = series.heikiashiData, cropStart = series.cropStart || 0;\n            // Reset the proccesed data.\n            series.processedYData.length = 0;\n            // Modify points.\n            for (let i = 0; i < points.length; i++) {\n                const point = points[i], heikiashiDataPoint = heikiashiData[i + cropStart];\n                point.open = heikiashiDataPoint[0];\n                point.high = heikiashiDataPoint[1];\n                point.low = heikiashiDataPoint[2];\n                point.close = heikiashiDataPoint[3];\n                series.processedYData.push([point.open, point.high, point.low, point.close]);\n            }\n        }\n        /**\n         * Force to recalculate the heikinashi data set after updating data.\n         * @private\n         */\n        function onHeikinAshiSeriesUpdatedData() {\n            if (this.heikiashiData.length) {\n                this.heikiashiData.length = 0;\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Heikin Ashi series.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.heikinashi\n         *\n         * @augments Highcharts.Series\n         */\n        class HeikinAshiSeries extends CandlestickSeries {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.heikiashiData = [];\n                this.options = void 0;\n                this.points = void 0;\n                this.yData = void 0;\n                this.processedYData = void 0;\n            }\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            static compose(SeriesClass, AxisClass, ..._args) {\n                CandlestickSeries.compose(SeriesClass);\n                if (U.pushUnique(composedMembers, AxisClass)) {\n                    addEvent(AxisClass, 'postProcessData', onAxisPostProcessData);\n                }\n                if (U.pushUnique(composedMembers, HeikinAshiSeries)) {\n                    addEvent(HeikinAshiSeries, 'afterTranslate', onHeikinAshiSeriesAfterTranslate);\n                    addEvent(HeikinAshiSeries, 'updatedData', onHeikinAshiSeriesUpdatedData);\n                }\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Calculate data set for the heikinashi series before creating the points.\n             * @private\n             */\n            getHeikinashiData() {\n                const series = this, processedYData = series.allGroupedData || series.yData, heikiashiData = series.heikiashiData;\n                if (!heikiashiData.length && processedYData && processedYData.length) {\n                    // Cast to `any` in order to avoid checks before calculation.\n                    // Adding null doesn't change anything.\n                    const firstPoint = processedYData[0];\n                    // Modify the first point.\n                    this.modifyFirstPointValue(firstPoint);\n                    // Modify other points.\n                    for (let i = 1; i < processedYData.length; i++) {\n                        const dataPoint = processedYData[i], previousDataPoint = heikiashiData[i - 1];\n                        this.modifyDataPoint(dataPoint, previousDataPoint);\n                    }\n                }\n                series.heikiashiData = heikiashiData;\n            }\n            /**\n             * @private\n             */\n            init() {\n                super.init.apply(this, arguments);\n                this.heikiashiData = [];\n            }\n            /**\n             * Calculate and modify the first data point value.\n             * @private\n             * @param {Array<(number)>} dataPoint\n             *        Current data point.\n             */\n            modifyFirstPointValue(dataPoint) {\n                const open = (dataPoint[0] +\n                    dataPoint[1] +\n                    dataPoint[2] +\n                    dataPoint[3]) / 4, close = (dataPoint[0] + dataPoint[3]) / 2;\n                this.heikiashiData.push([open, dataPoint[1], dataPoint[2], close]);\n            }\n            /**\n             * Calculate and modify the data point's value.\n             * @private\n             * @param {Array<(number)>} dataPoint\n             *        Current data point.\n             * @param {Array<(number)>} previousDataPoint\n             *        Previous data point.\n             */\n            modifyDataPoint(dataPoint, previousDataPoint) {\n                const newOpen = (previousDataPoint[0] + previousDataPoint[3]) / 2, newClose = (dataPoint[0] +\n                    dataPoint[1] +\n                    dataPoint[2] +\n                    dataPoint[3]) / 4, newHigh = Math.max(dataPoint[1], newClose, newOpen), newLow = Math.min(dataPoint[2], newClose, newOpen);\n                // Add new points to the array in order to properly calculate extremes.\n                this.heikiashiData.push([newOpen, newHigh, newLow, newClose]);\n            }\n        }\n        HeikinAshiSeries.defaultOptions = merge(CandlestickSeries.defaultOptions, HeikinAshiSeriesDefaults);\n        /* *\n         *\n         *  Class Prototype\n         *\n         * */\n        HeikinAshiSeries.prototype.pointClass = HeikinAshiPoint;\n        SeriesRegistry.registerSeriesType('heikinashi', HeikinAshiSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return HeikinAshiSeries;\n    });\n    _registerModule(_modules, 'masters/modules/heikinashi.src.js', [_modules['Core/Globals.js'], _modules['Series/HeikinAshi/HeikinAshiSeries.js']], function (Highcharts, HeikinAshiSeries) {\n\n        const G = Highcharts;\n        HeikinAshiSeries.compose(G.Series, G.Axis);\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","SeriesRegistry","candlestick","prototype","pointClass","CandlestickPoint","hlc","HLCPoint","seriesTypes","constructor","arguments","resolveColor","dataGrouping","groupAll","HeikinAshiPoint","HeikinAshiSeriesDefaults","U","CandlestickSeries","addEvent","merge","composedMembers","onAxisPostProcessData","series","forEach","is","heikinashiSeries","heikiashiData","length","getHeikinashiData","onHeikinAshiSeriesAfterTranslate","points","cropStart","processedYData","i","point","heikiashiDataPoint","open","high","low","close","push","onHeikinAshiSeriesUpdatedData","HeikinAshiSeries","data","options","yData","compose","SeriesClass","AxisClass","_args","pushUnique","allGroupedData","firstPoint","modifyFirstPointValue","dataPoint","previousDataPoint","modifyDataPoint","init","newOpen","newClose","newHigh","Math","max","newLow","min","defaultOptions","registerSeriesType","G","Series","Axis"],"mappings":"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"}