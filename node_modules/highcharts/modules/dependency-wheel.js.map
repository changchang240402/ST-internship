{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highcharts JS v11.2.0 (2023-10-30)\n *\n * Dependency wheel module\n *\n * (c) 2010-2021 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/dependency-wheel', ['highcharts', 'highcharts/modules/sankey'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Series/DependencyWheel/DependencyWheelPoint.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  Dependency wheel module\n         *\n         *  (c) 2018-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sankey: { prototype: { pointClass: SankeyPoint } } } = SeriesRegistry.seriesTypes;\n        const { pInt, wrap } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class DependencyWheelPoint extends SankeyPoint {\n            constructor() {\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                super(...arguments);\n                this.angle = void 0;\n                this.fromNode = void 0;\n                this.index = void 0;\n                this.linksFrom = void 0;\n                this.linksTo = void 0;\n                this.options = void 0;\n                this.series = void 0;\n                this.shapeArgs = void 0;\n                this.toNode = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Return a text path that the data label uses.\n             * @private\n             */\n            getDataLabelPath(label) {\n                const point = this, renderer = point.series.chart.renderer, shapeArgs = point.shapeArgs, upperHalf = point.angle < 0 || point.angle > Math.PI, start = shapeArgs.start || 0, end = shapeArgs.end || 0;\n                // First time\n                if (!point.dataLabelPath) {\n                    // Destroy the path with the label\n                    wrap(label, 'destroy', function (proceed) {\n                        if (point.dataLabelPath) {\n                            point.dataLabelPath = point.dataLabelPath.destroy();\n                        }\n                        return proceed.call(this);\n                    });\n                    // Subsequent times\n                }\n                else {\n                    point.dataLabelPath = point.dataLabelPath.destroy();\n                    delete point.dataLabelPath;\n                }\n                // All times\n                point.dataLabelPath = renderer\n                    .arc({\n                    open: true,\n                    longArc: Math.abs(Math.abs(start) - Math.abs(end)) < Math.PI ? 0 : 1\n                })\n                    .attr({\n                    x: shapeArgs.x,\n                    y: shapeArgs.y,\n                    r: ((shapeArgs.r || 0) + pInt(label.options?.distance || 0)),\n                    start: (upperHalf ? start : end),\n                    end: (upperHalf ? end : start),\n                    clockwise: +upperHalf\n                })\n                    .add(renderer.defs);\n                return point.dataLabelPath;\n            }\n            isValid() {\n                // No null points here\n                return true;\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DependencyWheelPoint;\n    });\n    _registerModule(_modules, 'Series/DependencyWheel/DependencyWheelSeriesDefaults.js', [], function () {\n        /* *\n         *\n         *  Dependency wheel module\n         *\n         *  (c) 2018-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A dependency wheel chart is a type of flow diagram, where all nodes are laid\n         * out in a circle, and the flow between the are drawn as link bands.\n         *\n         * @sample highcharts/demo/dependency-wheel/\n         *         Dependency wheel\n         *\n         * @extends      plotOptions.sankey\n         * @exclude      dataSorting, nodeAlignment\n         * @since        7.1.0\n         * @product      highcharts\n         * @requires     modules/dependency-wheel\n         * @optionparent plotOptions.dependencywheel\n         */\n        const DependencyWheelSeriesDefaults = {\n            /**\n             * Distance between the data label and the center of the node.\n             *\n             * @type      {number}\n             * @default   0\n             * @apioption plotOptions.dependencywheel.dataLabels.distance\n             */\n            /**\n             * A format string for data labels of the links between nodes. Available\n             * variables are the same as for `formatter`.\n             *\n             * @see [nodeFormat](#nodeFormat) for formatting node labels\n             *\n             * @apioption plotOptions.dependencywheel.dataLabels.format\n             */\n            /**\n             * Callback to format data labels of the links between nodes. The `format`\n             * option takes precedence over the `formatter` option.\n             *\n             * @see [nodeFormatter](#nodeFormatter) for formatting node labels\n             *\n             * @apioption plotOptions.dependencywheel.dataLabels.formatter\n             */\n            /**\n             * The format string specifying what to show for nodes in the sankey\n             * diagram. By default the nodeFormatter returns `{point.name}`. Available\n             * variables are the same as for `nodeFormatter`.\n             *\n             * @apioption plotOptions.dependencywheel.dataLabels.nodeFormat\n             */\n            /**\n             * Callback to format data labels of nodes in the dependency wheel. The\n             * `nodeFormat` option takes precedence over the `nodeFormatter` option.\n             *\n             * @apioption plotOptions.dependencywheel.dataLabels.nodeFormatter\n             */\n            /**\n             * Size of the wheel in pixel or percent relative to the canvas space.\n             *\n             * @type      {number|string}\n             * @default   100%\n             * @apioption plotOptions.dependencywheel.size\n             */\n            /**\n             * The center of the wheel relative to the plot area. Can be\n             * percentages or pixel values. The default behaviour is to\n             * center the wheel inside the plot area.\n             *\n             * @type    {Array<number|string|null>}\n             * @default [null, null]\n             * @product highcharts\n             */\n            center: [null, null],\n            curveFactor: 0.6,\n            /**\n             * The start angle of the dependency wheel, in degrees where 0 is up.\n             */\n            startAngle: 0,\n            dataLabels: {\n                textPath: {\n                    /**\n                     * Enable or disable `textPath` option for link's or marker's data\n                     * labels.\n                     *\n                     * @type      {boolean}\n                     * @default   false\n                     * @since     7.1.0\n                     * @apioption plotOptions.series.dataLabels.textPath.enabled\n                     */\n                    enabled: false,\n                    attributes: {\n                        /**\n                        * Text path shift along its y-axis.\n                        *\n                        * @type      {Highcharts.SVGAttributes}\n                        * @default   5\n                        * @since     7.1.0\n                        * @apioption plotOptions.dependencywheel.dataLabels.textPath.attributes.dy\n                        */\n                        dy: 5\n                    }\n                }\n            }\n        };\n        /**\n         * A `dependencywheel` series. If the [type](#series.dependencywheel.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dependencywheel\n         * @exclude   dataSorting\n         * @product   highcharts\n         * @requires  modules/sankey\n         * @requires  modules/dependency-wheel\n         * @apioption series.dependencywheel\n         */\n        /**\n         * A collection of options for the individual nodes. The nodes in a dependency\n         * diagram are auto-generated instances of `Highcharts.Point`, but options can\n         * be applied here and linked by the `id`.\n         *\n         * @extends   series.sankey.nodes\n         * @type      {Array<*>}\n         * @product   highcharts\n         * @excluding offset\n         * @apioption series.dependencywheel.nodes\n         */\n        /**\n         * An array of data points for the series. For the `dependencywheel` series\n         * type, points can be given in the following way:\n         *\n         * An array of objects with named values. The following snippet shows only a\n         * few settings, see the complete options set below. If the total number of data\n         * points exceeds the series' [turboThreshold](#series.area.turboThreshold),\n         * this option is not available.\n         *\n         *  ```js\n         *     data: [{\n         *         from: 'Category1',\n         *         to: 'Category2',\n         *         weight: 2\n         *     }, {\n         *         from: 'Category1',\n         *         to: 'Category3',\n         *         weight: 5\n         *     }]\n         *  ```\n         *\n         * @type      {Array<Array<string,string,number>|*>}\n         * @extends   series.sankey.data\n         * @product   highcharts\n         * @excluding outgoing, dataLabels\n         * @apioption series.dependencywheel.data\n         */\n        /**\n         * Individual data label for each node. The options are the same as\n         * the ones for [series.dependencywheel.dataLabels](#series.dependencywheel.dataLabels).\n         *\n         * @apioption series.dependencywheel.nodes.dataLabels\n         */\n        ''; // keeps doclets above separate\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DependencyWheelSeriesDefaults;\n    });\n    _registerModule(_modules, 'Series/DependencyWheel/DependencyWheelSeries.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Series/DependencyWheel/DependencyWheelPoint.js'], _modules['Series/DependencyWheel/DependencyWheelSeriesDefaults.js'], _modules['Core/Globals.js'], _modules['Series/Sankey/SankeyColumnComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (A, DependencyWheelPoint, DependencyWheelSeriesDefaults, H, SankeyColumnComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  Dependency wheel module\n         *\n         *  (c) 2018-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { animObject } = A;\n        const { deg2rad } = H;\n        const { pie: PieSeries, sankey: SankeySeries } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dependencywheel\n         *\n         * @augments Highcharts.seriesTypes.sankey\n         */\n        class DependencyWheelSeries extends SankeySeries {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = void 0;\n                this.options = void 0;\n                this.nodeColumns = void 0;\n                this.nodes = void 0;\n                this.points = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            animate(init) {\n                const series = this;\n                if (!init) {\n                    const duration = animObject(series.options.animation).duration, step = (duration / 2) / series.nodes.length;\n                    let i = 0;\n                    for (const point of series.nodes) {\n                        const graphic = point.graphic;\n                        if (graphic) {\n                            graphic.attr({ opacity: 0 });\n                            setTimeout(() => {\n                                if (point.graphic) {\n                                    point.graphic.animate({ opacity: 1 }, { duration: step });\n                                }\n                            }, step * i++);\n                        }\n                    }\n                    for (const point of series.points) {\n                        const graphic = point.graphic;\n                        if (!point.isNode && graphic) {\n                            graphic.attr({ opacity: 0 })\n                                .animate({\n                                opacity: 1\n                            }, series.options.animation);\n                        }\n                    }\n                }\n            }\n            createNode(id) {\n                const node = super.createNode(id);\n                /**\n                 * Return the sum of incoming and outgoing links.\n                 * @private\n                 */\n                node.getSum = () => (node.linksFrom\n                    .concat(node.linksTo)\n                    .reduce((acc, link) => (acc + link.weight), 0));\n                /**\n                 * Get the offset in weight values of a point/link.\n                 * @private\n                 */\n                node.offset = (point) => {\n                    const otherNode = (link) => (link.fromNode === node ?\n                        link.toNode :\n                        link.fromNode);\n                    let offset = 0, links = node.linksFrom.concat(node.linksTo), sliced;\n                    // Sort and slice the links to avoid links going out of each\n                    // node crossing each other.\n                    links.sort((a, b) => (otherNode(a).index - otherNode(b).index));\n                    for (let i = 0; i < links.length; i++) {\n                        if (otherNode(links[i]).index > node.index) {\n                            links = links.slice(0, i).reverse().concat(links.slice(i).reverse());\n                            sliced = true;\n                            break;\n                        }\n                    }\n                    if (!sliced) {\n                        links.reverse();\n                    }\n                    for (let i = 0; i < links.length; i++) {\n                        if (links[i] === point) {\n                            return offset;\n                        }\n                        offset += links[i].weight;\n                    }\n                };\n                return node;\n            }\n            /**\n             * Dependency wheel has only one column, it runs along the perimeter.\n             * @private\n             */\n            createNodeColumns() {\n                const series = this, columns = [SankeyColumnComposition.compose([], series)];\n                for (const node of series.nodes) {\n                    node.column = 0;\n                    columns[0].push(node);\n                }\n                return columns;\n            }\n            /**\n             * Translate from vertical pixels to perimeter.\n             * @private\n             */\n            getNodePadding() {\n                return this.options.nodePadding / Math.PI;\n            }\n            /**\n             * @ignore\n             * @todo Override the refactored sankey translateLink and translateNode\n             * functions instead of the whole translate function.\n             */\n            translate() {\n                const series = this, options = series.options, factor = 2 * Math.PI /\n                    (series.chart.plotHeight + series.getNodePadding()), center = series.getCenter(), startAngle = (options.startAngle - 90) * deg2rad, brOption = options.borderRadius, borderRadius = typeof brOption === 'object' ?\n                    brOption.radius : brOption;\n                super.translate();\n                for (const node of this.nodeColumns[0]) {\n                    // Don't render the nodes if sum is 0 #12453\n                    if (node.sum) {\n                        const shapeArgs = node.shapeArgs, centerX = center[0], centerY = center[1], r = center[2] / 2, innerR = r - options.nodeWidth, start = startAngle + factor * (shapeArgs.y || 0), end = startAngle +\n                            factor * ((shapeArgs.y || 0) + (shapeArgs.height || 0));\n                        // Middle angle\n                        node.angle = start + (end - start) / 2;\n                        node.shapeType = 'arc';\n                        node.shapeArgs = {\n                            x: centerX,\n                            y: centerY,\n                            r: r,\n                            innerR: innerR,\n                            start: start,\n                            end: end,\n                            borderRadius\n                        };\n                        node.dlBox = {\n                            x: centerX + Math.cos((start + end) / 2) * (r + innerR) / 2,\n                            y: centerY + Math.sin((start + end) / 2) * (r + innerR) / 2,\n                            width: 1,\n                            height: 1\n                        };\n                        // Draw the links from this node\n                        for (const point of node.linksFrom) {\n                            if (point.linkBase) {\n                                let curveFactor, distance;\n                                const corners = point.linkBase.map((top, i) => {\n                                    const angle = factor * top, x = Math.cos(startAngle + angle) * (innerR + 1), y = Math.sin(startAngle + angle) * (innerR + 1);\n                                    curveFactor = options.curveFactor || 0;\n                                    // The distance between the from and to node\n                                    // along the perimeter. This affect how curved\n                                    // the link is, so that links between neighbours\n                                    // don't extend too far towards the center.\n                                    distance = Math.abs(point.linkBase[3 - i] * factor - angle);\n                                    if (distance > Math.PI) {\n                                        distance = 2 * Math.PI - distance;\n                                    }\n                                    distance = distance * innerR;\n                                    if (distance < innerR) {\n                                        curveFactor *= (distance / innerR);\n                                    }\n                                    return {\n                                        x: centerX + x,\n                                        y: centerY + y,\n                                        cpX: centerX + (1 - curveFactor) * x,\n                                        cpY: centerY + (1 - curveFactor) * y\n                                    };\n                                });\n                                point.shapeArgs = {\n                                    d: [[\n                                            'M',\n                                            corners[0].x, corners[0].y\n                                        ], [\n                                            'A',\n                                            innerR, innerR,\n                                            0,\n                                            0,\n                                            1,\n                                            corners[1].x, corners[1].y\n                                        ], [\n                                            'C',\n                                            corners[1].cpX, corners[1].cpY,\n                                            corners[2].cpX, corners[2].cpY,\n                                            corners[2].x, corners[2].y\n                                        ], [\n                                            'A',\n                                            innerR, innerR,\n                                            0,\n                                            0,\n                                            1,\n                                            corners[3].x, corners[3].y\n                                        ], [\n                                            'C',\n                                            corners[3].cpX, corners[3].cpY,\n                                            corners[0].cpX, corners[0].cpY,\n                                            corners[0].x, corners[0].y\n                                        ]]\n                                };\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        DependencyWheelSeries.defaultOptions = merge(SankeySeries.defaultOptions, DependencyWheelSeriesDefaults);\n        extend(DependencyWheelSeries.prototype, {\n            orderNodes: false,\n            getCenter: PieSeries.prototype.getCenter\n        });\n        DependencyWheelSeries.prototype.pointClass = DependencyWheelPoint;\n        SeriesRegistry.registerSeriesType('dependencywheel', DependencyWheelSeries);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return DependencyWheelSeries;\n    });\n    _registerModule(_modules, 'masters/modules/dependency-wheel.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","SeriesRegistry","U","sankey","prototype","pointClass","SankeyPoint","seriesTypes","pInt","wrap","constructor","arguments","angle","fromNode","index","linksFrom","linksTo","options","series","shapeArgs","toNode","getDataLabelPath","label","point","renderer","chart","upperHalf","Math","PI","start","end","dataLabelPath","destroy","proceed","call","arc","open","longArc","abs","attr","x","y","r","distance","clockwise","add","defs","isValid","center","curveFactor","startAngle","dataLabels","textPath","enabled","attributes","dy","A","DependencyWheelPoint","DependencyWheelSeriesDefaults","H","SankeyColumnComposition","animObject","deg2rad","pie","PieSeries","SankeySeries","extend","merge","DependencyWheelSeries","data","nodeColumns","nodes","points","animate","init","duration","animation","step","length","i","graphic","opacity","setTimeout","isNode","createNode","id","node","getSum","concat","reduce","acc","link","weight","offset","otherNode","links","sliced","sort","a","b","slice","reverse","createNodeColumns","columns","compose","column","push","getNodePadding","nodePadding","translate","factor","plotHeight","getCenter","brOption","borderRadius","radius","sum","centerX","centerY","innerR","nodeWidth","height","shapeType","dlBox","cos","sin","width","linkBase","corners","map","top","cpX","cpY","d","defaultOptions","orderNodes","registerSeriesType"],"mappings":"AAAA;;;;;;;;CAQC,GACA,SAAUA,CAAO,EACV,AAAkB,UAAlB,OAAOC,QAAuBA,OAAOC,OAAO,EAC5CF,EAAQ,OAAU,CAAGA,EACrBC,OAAOC,OAAO,CAAGF,GACV,AAAkB,YAAlB,OAAOG,QAAyBA,OAAOC,GAAG,CACjDD,OAAO,sCAAuC,CAAC,aAAc,4BAA4B,CAAE,SAAUE,CAAU,EAG3G,OAFAL,EAAQK,GACRL,EAAQK,UAAU,CAAGA,EACdL,CACX,GAEAA,EAAQ,AAAsB,aAAtB,OAAOK,WAA6BA,WAAaC,KAAAA,EAEjE,EAAE,SAAUD,CAAU,EAClB,aACA,IAAIE,EAAWF,EAAaA,EAAWE,QAAQ,CAAG,CAAC,EACnD,SAASC,EAAgBC,CAAG,CAAEC,CAAI,CAAEC,CAAI,CAAEC,CAAE,EACnCH,EAAII,cAAc,CAACH,KACpBD,CAAG,CAACC,EAAK,CAAGE,EAAGE,KAAK,CAAC,KAAMH,GAEA,YAAvB,OAAOI,aACPC,OAAOC,aAAa,CAAC,IAAIF,YACrB,yBACA,CAAEG,OAAQ,CAAER,KAAMA,EAAMT,OAAQQ,CAAG,CAACC,EAAK,AAAC,CAAE,IAI5D,CACAF,EAAgBD,EAAU,iDAAkD,CAACA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUY,CAAc,CAAEC,CAAC,EAY/K,GAAM,CAAEC,OAAQ,CAAEC,UAAW,CAAEC,WAAYC,CAAW,CAAE,CAAE,CAAE,CAAGL,EAAeM,WAAW,CACnF,CAAEC,KAAAA,CAAI,CAAEC,KAAAA,CAAI,CAAE,CAAGP,EA8EvB,OAxEA,cAAmCI,EAC/BI,aAAc,CAMV,KAAK,IAAIC,WACT,IAAI,CAACC,KAAK,CAAG,KAAK,EAClB,IAAI,CAACC,QAAQ,CAAG,KAAK,EACrB,IAAI,CAACC,KAAK,CAAG,KAAK,EAClB,IAAI,CAACC,SAAS,CAAG,KAAK,EACtB,IAAI,CAACC,OAAO,CAAG,KAAK,EACpB,IAAI,CAACC,OAAO,CAAG,KAAK,EACpB,IAAI,CAACC,MAAM,CAAG,KAAK,EACnB,IAAI,CAACC,SAAS,CAAG,KAAK,EACtB,IAAI,CAACC,MAAM,CAAG,KAAK,CACvB,CAUAC,iBAAiBC,CAAK,CAAE,CACpB,IAAMC,EAAQ,IAAI,CAAEC,EAAWD,EAAML,MAAM,CAACO,KAAK,CAACD,QAAQ,CAAEL,EAAYI,EAAMJ,SAAS,CAAEO,EAAYH,EAAMX,KAAK,CAAG,GAAKW,EAAMX,KAAK,CAAGe,KAAKC,EAAE,CAAEC,EAAQV,EAAUU,KAAK,EAAI,EAAGC,EAAMX,EAAUW,GAAG,EAAI,EA+BpM,OA7BKP,EAAMQ,aAAa,EAWpBR,EAAMQ,aAAa,CAAGR,EAAMQ,aAAa,CAACC,OAAO,GACjD,OAAOT,EAAMQ,aAAa,EAV1BtB,EAAKa,EAAO,UAAW,SAAUW,CAAO,EAIpC,OAHIV,EAAMQ,aAAa,EACnBR,CAAAA,EAAMQ,aAAa,CAAGR,EAAMQ,aAAa,CAACC,OAAO,EAAC,EAE/CC,EAAQC,IAAI,CAAC,IAAI,CAC5B,GAQJX,EAAMQ,aAAa,CAAGP,EACjBW,GAAG,CAAC,CACLC,KAAM,CAAA,EACNC,QAASV,KAAKW,GAAG,CAACX,KAAKW,GAAG,CAACT,GAASF,KAAKW,GAAG,CAACR,IAAQH,KAAKC,EAAE,CAAG,EAAI,CACvE,GACKW,IAAI,CAAC,CACNC,EAAGrB,EAAUqB,CAAC,CACdC,EAAGtB,EAAUsB,CAAC,CACdC,EAAI,AAACvB,CAAAA,EAAUuB,CAAC,EAAI,CAAA,EAAKlC,EAAKc,EAAML,OAAO,EAAE0B,UAAY,GACzDd,MAAQH,EAAYG,EAAQC,EAC5BA,IAAMJ,EAAYI,EAAMD,EACxBe,UAAW,CAAClB,CAChB,GACKmB,GAAG,CAACrB,EAASsB,IAAI,EACfvB,EAAMQ,aAAa,AAC9B,CACAgB,SAAU,CAEN,MAAO,CAAA,CACX,CACJ,CAQJ,GACAzD,EAAgBD,EAAU,0DAA2D,EAAE,CAAE,WAkLrF,MAnJsC,CAqDlC2D,OAAQ,CAAC,KAAM,KAAK,CACpBC,YAAa,GAIbC,WAAY,EACZC,WAAY,CACRC,SAAU,CAUNC,QAAS,CAAA,EACTC,WAAY,CASRC,GAAI,CACR,CACJ,CACJ,CACJ,CAgEJ,GACAjE,EAAgBD,EAAU,kDAAmD,CAACA,CAAQ,CAAC,uCAAuC,CAAEA,CAAQ,CAAC,iDAAiD,CAAEA,CAAQ,CAAC,0DAA0D,CAAEA,CAAQ,CAAC,kBAAkB,CAAEA,CAAQ,CAAC,2CAA2C,CAAEA,CAAQ,CAAC,gCAAgC,CAAEA,CAAQ,CAAC,oBAAoB,CAAC,CAAE,SAAUmE,CAAC,CAAEC,CAAoB,CAAEC,CAA6B,CAAEC,CAAC,CAAEC,CAAuB,CAAE3D,CAAc,CAAEC,CAAC,EAY1gB,GAAM,CAAE2D,WAAAA,CAAU,CAAE,CAAGL,EACjB,CAAEM,QAAAA,CAAO,CAAE,CAAGH,EACd,CAAEI,IAAKC,CAAS,CAAE7D,OAAQ8D,CAAY,CAAE,CAAGhE,EAAeM,WAAW,CACrE,CAAE2D,OAAAA,CAAM,CAAEC,MAAAA,CAAK,CAAE,CAAGjE,CAa1B,OAAMkE,UAA8BH,EAChCvD,aAAc,CAMV,KAAK,IAAIC,WAMT,IAAI,CAAC0D,IAAI,CAAG,KAAK,EACjB,IAAI,CAACpD,OAAO,CAAG,KAAK,EACpB,IAAI,CAACqD,WAAW,CAAG,KAAK,EACxB,IAAI,CAACC,KAAK,CAAG,KAAK,EAClB,IAAI,CAACC,MAAM,CAAG,KAAK,CACvB,CAMAC,QAAQC,CAAI,CAAE,CAEV,GAAI,CAACA,EAAM,CACP,IAAMC,EAAWd,EAAW3C,AAFjB,IAAI,CAEoBD,OAAO,CAAC2D,SAAS,EAAED,QAAQ,CAAEE,EAAO,AAACF,EAAW,EAAKzD,AAF7E,IAAI,CAEgFqD,KAAK,CAACO,MAAM,CACvGC,EAAI,EACR,IAAK,IAAMxD,KAASL,AAJT,IAAI,CAIYqD,KAAK,CAAE,CAC9B,IAAMS,EAAUzD,EAAMyD,OAAO,CACzBA,IACAA,EAAQzC,IAAI,CAAC,CAAE0C,QAAS,CAAE,GAC1BC,WAAW,KACH3D,EAAMyD,OAAO,EACbzD,EAAMyD,OAAO,CAACP,OAAO,CAAC,CAAEQ,QAAS,CAAE,EAAG,CAAEN,SAAUE,CAAK,EAE/D,EAAGA,EAAOE,KAElB,CACA,IAAK,IAAMxD,KAASL,AAfT,IAAI,CAeYsD,MAAM,CAAE,CAC/B,IAAMQ,EAAUzD,EAAMyD,OAAO,AACzB,EAACzD,EAAM4D,MAAM,EAAIH,GACjBA,EAAQzC,IAAI,CAAC,CAAE0C,QAAS,CAAE,GACrBR,OAAO,CAAC,CACTQ,QAAS,CACb,EAAG/D,AArBA,IAAI,CAqBGD,OAAO,CAAC2D,SAAS,CAEnC,CACJ,CACJ,CACAQ,WAAWC,CAAE,CAAE,CACX,IAAMC,EAAO,KAAK,CAACF,WAAWC,GAqC9B,OAhCAC,EAAKC,MAAM,CAAG,IAAOD,EAAKvE,SAAS,CAC9ByE,MAAM,CAACF,EAAKtE,OAAO,EACnByE,MAAM,CAAC,CAACC,EAAKC,IAAUD,EAAMC,EAAKC,MAAM,CAAG,GAKhDN,EAAKO,MAAM,CAAG,AAACtE,IACX,IAAMuE,EAAY,AAACH,GAAUA,EAAK9E,QAAQ,GAAKyE,EAC3CK,EAAKvE,MAAM,CACXuE,EAAK9E,QAAQ,CACbgF,EAAS,EAAGE,EAAQT,EAAKvE,SAAS,CAACyE,MAAM,CAACF,EAAKtE,OAAO,EAAGgF,EAG7DD,EAAME,IAAI,CAAC,CAACC,EAAGC,IAAOL,EAAUI,GAAGpF,KAAK,CAAGgF,EAAUK,GAAGrF,KAAK,EAC7D,IAAK,IAAIiE,EAAI,EAAGA,EAAIgB,EAAMjB,MAAM,CAAEC,IAC9B,GAAIe,EAAUC,CAAK,CAAChB,EAAE,EAAEjE,KAAK,CAAGwE,EAAKxE,KAAK,CAAE,CACxCiF,EAAQA,EAAMK,KAAK,CAAC,EAAGrB,GAAGsB,OAAO,GAAGb,MAAM,CAACO,EAAMK,KAAK,CAACrB,GAAGsB,OAAO,IACjEL,EAAS,CAAA,EACT,KACJ,CAECA,GACDD,EAAMM,OAAO,GAEjB,IAAK,IAAItB,EAAI,EAAGA,EAAIgB,EAAMjB,MAAM,CAAEC,IAAK,CACnC,GAAIgB,CAAK,CAAChB,EAAE,GAAKxD,EACb,OAAOsE,EAEXA,GAAUE,CAAK,CAAChB,EAAE,CAACa,MAAM,AAC7B,CACJ,EACON,CACX,CAKAgB,mBAAoB,CAChB,IAAqBC,EAAU,CAAC3C,EAAwB4C,OAAO,CAAC,EAAE,CAAnD,IAAI,EAAyD,CAC5E,IAAK,IAAMlB,KAAQpE,AADJ,IAAI,CACOqD,KAAK,CAC3Be,EAAKmB,MAAM,CAAG,EACdF,CAAO,CAAC,EAAE,CAACG,IAAI,CAACpB,GAEpB,OAAOiB,CACX,CAKAI,gBAAiB,CACb,OAAO,IAAI,CAAC1F,OAAO,CAAC2F,WAAW,CAAGjF,KAAKC,EAAE,AAC7C,CAMAiF,WAAY,CACR,IAAqB5F,EAAUC,AAAhB,IAAI,CAAmBD,OAAO,CAAE6F,EAAS,EAAInF,KAAKC,EAAE,CAC9DV,CAAAA,AADU,IAAI,CACPO,KAAK,CAACsF,UAAU,CAAG7F,AADhB,IAAI,CACmByF,cAAc,EAAC,EAAI3D,EAAS9B,AADnD,IAAI,CACsD8F,SAAS,GAAI9D,EAAa,AAACjC,CAAAA,EAAQiC,UAAU,CAAG,EAAC,EAAKY,EAASmD,EAAWhG,EAAQiG,YAAY,CAAEA,EAAe,AAAoB,UAApB,OAAOD,EAC3LA,EAASE,MAAM,CAAGF,EAEtB,IAAK,IAAM3B,KADX,KAAK,CAACuB,YACa,IAAI,CAACvC,WAAW,CAAC,EAAE,EAElC,GAAIgB,EAAK8B,GAAG,CAAE,CACV,IAAMjG,EAAYmE,EAAKnE,SAAS,CAAEkG,EAAUrE,CAAM,CAAC,EAAE,CAAEsE,EAAUtE,CAAM,CAAC,EAAE,CAAEN,EAAIM,CAAM,CAAC,EAAE,CAAG,EAAGuE,EAAS7E,EAAIzB,EAAQuG,SAAS,CAAE3F,EAAQqB,EAAa4D,EAAU3F,CAAAA,EAAUsB,CAAC,EAAI,CAAA,EAAIX,EAAMoB,EACnL4D,EAAU,CAAA,AAAC3F,CAAAA,EAAUsB,CAAC,EAAI,CAAA,EAAMtB,CAAAA,EAAUsG,MAAM,EAAI,CAAA,CAAC,EAoBzD,IAAK,IAAMlG,KAlBX+D,EAAK1E,KAAK,CAAGiB,EAAQ,AAACC,CAAAA,EAAMD,CAAI,EAAK,EACrCyD,EAAKoC,SAAS,CAAG,MACjBpC,EAAKnE,SAAS,CAAG,CACbqB,EAAG6E,EACH5E,EAAG6E,EACH5E,EAAGA,EACH6E,OAAQA,EACR1F,MAAOA,EACPC,IAAKA,EACLoF,aAAAA,CACJ,EACA5B,EAAKqC,KAAK,CAAG,CACTnF,EAAG6E,EAAU1F,KAAKiG,GAAG,CAAC,AAAC/F,CAAAA,EAAQC,CAAE,EAAK,GAAMY,CAAAA,EAAI6E,CAAK,EAAK,EAC1D9E,EAAG6E,EAAU3F,KAAKkG,GAAG,CAAC,AAAChG,CAAAA,EAAQC,CAAE,EAAK,GAAMY,CAAAA,EAAI6E,CAAK,EAAK,EAC1DO,MAAO,EACPL,OAAQ,CACZ,EAEoBnC,EAAKvE,SAAS,EAC9B,GAAIQ,EAAMwG,QAAQ,CAAE,KACZ9E,EAAaN,EACjB,IAAMqF,EAAUzG,EAAMwG,QAAQ,CAACE,GAAG,CAAC,CAACC,EAAKnD,KACrC,IAAMnE,EAAQkG,EAASoB,EAAK1F,EAAIb,KAAKiG,GAAG,CAAC1E,EAAatC,GAAU2G,CAAAA,EAAS,CAAA,EAAI9E,EAAId,KAAKkG,GAAG,CAAC3E,EAAatC,GAAU2G,CAAAA,EAAS,CAAA,EAc1H,OAbAtE,EAAchC,EAAQgC,WAAW,EAAI,EAKrCN,CAAAA,EAAWhB,KAAKW,GAAG,CAACf,EAAMwG,QAAQ,CAAC,EAAIhD,EAAE,CAAG+B,EAASlG,EAAK,EAC3Ce,KAAKC,EAAE,EAClBe,CAAAA,EAAW,EAAIhB,KAAKC,EAAE,CAAGe,CAAO,EAEpCA,CAAAA,GAAsB4E,CAAK,EACZA,GACXtE,CAAAA,GAAgBN,EAAW4E,CAAM,EAE9B,CACH/E,EAAG6E,EAAU7E,EACbC,EAAG6E,EAAU7E,EACb0F,IAAKd,EAAU,AAAC,CAAA,EAAIpE,CAAU,EAAKT,EACnC4F,IAAKd,EAAU,AAAC,CAAA,EAAIrE,CAAU,EAAKR,CACvC,CACJ,EACAlB,CAAAA,EAAMJ,SAAS,CAAG,CACdkH,EAAG,CAAC,CACI,IACAL,CAAO,CAAC,EAAE,CAACxF,CAAC,CAAEwF,CAAO,CAAC,EAAE,CAACvF,CAAC,CAC7B,CAAE,CACC,IACA8E,EAAQA,EACR,EACA,EACA,EACAS,CAAO,CAAC,EAAE,CAACxF,CAAC,CAAEwF,CAAO,CAAC,EAAE,CAACvF,CAAC,CAC7B,CAAE,CACC,IACAuF,CAAO,CAAC,EAAE,CAACG,GAAG,CAAEH,CAAO,CAAC,EAAE,CAACI,GAAG,CAC9BJ,CAAO,CAAC,EAAE,CAACG,GAAG,CAAEH,CAAO,CAAC,EAAE,CAACI,GAAG,CAC9BJ,CAAO,CAAC,EAAE,CAACxF,CAAC,CAAEwF,CAAO,CAAC,EAAE,CAACvF,CAAC,CAC7B,CAAE,CACC,IACA8E,EAAQA,EACR,EACA,EACA,EACAS,CAAO,CAAC,EAAE,CAACxF,CAAC,CAAEwF,CAAO,CAAC,EAAE,CAACvF,CAAC,CAC7B,CAAE,CACC,IACAuF,CAAO,CAAC,EAAE,CAACG,GAAG,CAAEH,CAAO,CAAC,EAAE,CAACI,GAAG,CAC9BJ,CAAO,CAAC,EAAE,CAACG,GAAG,CAAEH,CAAO,CAAC,EAAE,CAACI,GAAG,CAC9BJ,CAAO,CAAC,EAAE,CAACxF,CAAC,CAAEwF,CAAO,CAAC,EAAE,CAACvF,CAAC,CAC7B,CAAC,AACV,CACJ,CAER,CAER,CACJ,CAcA,OAbA2B,EAAsBkE,cAAc,CAAGnE,EAAMF,EAAaqE,cAAc,CAAE5E,GAC1EQ,EAAOE,EAAsBhE,SAAS,CAAE,CACpCmI,WAAY,CAAA,EACZvB,UAAWhD,EAAU5D,SAAS,CAAC4G,SAAS,AAC5C,GACA5C,EAAsBhE,SAAS,CAACC,UAAU,CAAGoD,EAC7CxD,EAAeuI,kBAAkB,CAAC,kBAAmBpE,GAO9CA,CACX,GACA9E,EAAgBD,EAAU,0CAA2C,EAAE,CAAE,WAGzE,EACJ"}